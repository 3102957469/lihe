{"code":200,"data":[{"id":4486,"question":"家里放老鼠药闻着会中毒吗?","simplecontent":null,"content":"通常市面上常用的鼠药是敌鼠钠盐或者溴鼠隆、溴鼠灵等药物，此类药物属于经呼吸道和消化道双重吸收的药物，会让身体和老鼠造成毒副作用。但人如果闻到死老鼠的鼠药问题不大，此时会出现一定的不良反应，闻到死老鼠药时会出现头晕、头疼、迷糊、恶心、呕吐，甚至腹痛和腹泻等，都属于挥发性质鼠药对人体的不良刺激，需要到外界大量的呼吸新鲜空气，而且尽快离开中毒的环境。还应该服用一定的维生素C或者温清水促进利尿，可以快速将体内吸入的鼠药迅速从尿液中排出，以不至于对人体存在有害的作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-16 23:40:00","updateTime":"2021-06-16 23:40:00","isExist":null},{"id":4485,"question":"去胃火吃什么好?","simplecontent":null,"content":"病情分析：平时常吃的梨、冬瓜、黄瓜和苦瓜都有泻胃火的功效。胃火大的朋友可以通过多喝水和多吃富含水分的凉爽水果和蔬菜来改善。胃火过多的人会口干面热，多喝水可以缓解这些症状。另一种是吃富含水分的凉爽水果和蔬菜，如莴苣、梨、西瓜、西红柿、黄瓜等。身体及时补充水分后，胃火自然会熄灭。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-16 09:29:56","updateTime":"2021-06-16 09:29:56","isExist":null},{"id":4484,"question":"生疮吃什么好?","simplecontent":null,"content":"1、柿子\n\n患有口舌生疮，可以多吃柿子，因为柿子具有清热、泻火、润燥的作用，多食能够帮助改善病症，达到治疗的效果。\n\n2、西瓜皮\n\n患有此病也可以多食西瓜皮，因为西瓜皮具有清热、利小便的功效，多食也能辅助医治，促进疾病恢复。建议患者食用西瓜皮的时候，最好用西瓜皮做菜，或煎水代茶饮，效果会更好。\n\n3、西瓜\n\n西瓜的功效也很强大，不仅可以清热、泻火，还能止渴、利尿，多食对口舌生疮的治疗也有着很大的帮助。\n\n4、 绿豆\n\n绿豆具有清热解毒的功效，也很适合患者食用，多吃一些也能辅助医治，改善病症。\n\n5、苦瓜\n\n苦瓜是一种苦寒清热食物，对火热口疮治疗有着很好的疗效。在恢复期间患者可以多食，有益健康。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-16 09:18:39","updateTime":"2021-06-16 09:18:39","isExist":null},{"id":4483,"question":"玉米会上火吗?","simplecontent":null,"content":"病情分析：玉米吃多了会上火，但是只要不是每天吃就没有事。玉米性平味甘，具有调中开胃、益肺宁心、清湿热、利肝胆以及延缓衰老等功效。一般吃玉米是不会上火的。并且吃玉米还不会导致发胖，晚上吃还有安神定惊、助睡眠的功效。而且玉米中含有丰富的维生素C具有长寿和美容的作用。另外，玉米还有开胃、降血脂以及降低血清胆固醇的作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-16 09:15:22","updateTime":"2021-06-16 09:15:22","isExist":null},{"id":4482,"question":"阴囊炎前吃了什么?","simplecontent":null,"content":"萝卜加冬瓜，苦瓜炒蛋，生姜和酒，肥肉粽子，玉米","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-16 09:14:21","updateTime":"2021-06-16 09:14:21","isExist":null},{"id":4481,"question":"模仿软件?","simplecontent":null,"content":":没那么简单，大数据推荐算法各种等等，有时候模仿一个成功的产品很容易，但要再成功却很难","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-14 01:39:32","updateTime":"2021-06-14 01:39:32","isExist":null},{"id":4480,"question":"为啥高端包包质量不好?","simplecontent":null,"content":"这种包都会磨损，只不过有钱人买了搭配衣服的，不必给它加上神话光芒。对有钱人来说就是一个便宜的包而已啦，普通人量力而行。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-13 21:10:50","updateTime":"2021-06-13 21:10:50","isExist":null},{"id":4394,"question":"如何异步请求?","simplecontent":null,"content":"service层加上async，controller加上enabelasync","filterContent":null,"type":"java-springboot","status":1,"createTime":"2021-06-12 02:07:26","updateTime":"2021-06-12 02:07:26","isExist":null},{"id":4473,"question":"五芳斋粽子历史?","simplecontent":null,"content":"“五芳斋”得名于清道光年间，创始人姓沈，沈氏膝下生有五个女儿，分别取名玫芳、桂芳、莲芳、荷芳和芝芳，恰好和店里常用的原料在字面上有相通之处，街坊邻居就开玩笑地称他的店叫\"五芳斋\"。沈氏老板干脆将错就错，正式将店铺取名\"五芳斋\"。这就是五芳斋名字的由来。\n\n浙江五芳斋实业股份有限公司主要从事以糯米食品为主导的食品研发、生产和销售。公司在传承民族饮食文化的基础上不断创新，对明清两代极具盛名的“嘉湖细点”的制作工艺进行现代化改造，目前已形成以粽子为主导，集月饼、汤圆、糕点、蛋制品、其他米制品等食品为一体的产品群，拥有黑龙江优质稻米基地和江西野生箬叶基地，在嘉兴、成都建立了两大食品生产配送基地,并建立起覆盖全国的商贸、连锁门店、电商的全渠道营销网络。五芳斋号称“江南粽子大王\"。","filterContent":null,"type":"语言","status":1,"createTime":"2021-06-11 14:38:54","updateTime":"2021-06-11 14:38:55","isExist":null},{"id":4471,"question":"阿达帕林真的对痘痘有效果吗？","simplecontent":null,"content":"1 . 初次使用阿达帕林会刺激皮肤，皮肤敏感的人会出现刺痛、灼烧的情况。\n\n2 . 使用1-2周左右可能会出现脱皮、发红、紧绷、干燥。皮肤屏障功能特别好的人，也有可能用了一两周还是没啥反应，这并不代表药膏完全无效。\n\n3 .使用2-4周左右 副作用达到顶峰，皮肤可能会出现灼烧感、红斑，有爆痘现象；还有可能出现严重的脱皮，眼周和嘴巴周围会率先出现明显脱皮；阿达帕林对痘印有一定的作用，但也有可能出现把红痘印刺激成黑痘印的情况。\n\n4 . 使用不当可能出现“接触性皮炎”","filterContent":null,"type":"语言","status":1,"createTime":"2021-06-11 14:38:38","updateTime":"2021-06-11 14:38:38","isExist":null},{"id":4479,"question":"元帅和将军区别?","simplecontent":null,"content":"、级别不同\n\n元帅代表着军事上的最高统帅，一个国家里面如果同时有将军和元帅两个称号，元帅是肯定要大于将军的（指的是最高级别），比如我国成立之后就按战功大小评出了十大将军和十大元帅，十大将军非别是粟裕、徐海东、黄克诚、陈赓、谭政、肖劲光、张云逸、罗瑞卿、王树声、许光达。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-10 12:57:42","updateTime":"2021-06-10 12:57:42","isExist":null},{"id":4478,"question":"十大元帅和十大将军?","simplecontent":null,"content":"十大元帅是指1955年被授予中华人民共和国元帅军衔的十位军事家。他们分别是：朱德、彭德怀、林彪、刘伯承、贺龙、陈毅、罗荣桓、徐向前、聂荣臻、叶剑英。\n1955年9月27日，中央军委授予粟裕、徐海东、黄克诚、陈赓、谭政、肖劲光、张云逸、罗瑞卿、王树声、许光达10人大将军衔，后被人们称之为“十大大将”。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-10 12:56:15","updateTime":"2021-06-10 12:56:15","isExist":null},{"id":4477,"question":"大象为什么没有象牙?","simplecontent":null,"content":"还有这种说法，这倒没研究过！ // @华梦1T: 母象没有象牙，只有公象才有","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-09 19:12:02","updateTime":"2021-06-09 19:12:02","isExist":null},{"id":4476,"question":"铁头功?","simplecontent":null,"content":"相信科学，别迷信，人不可能练成铁头功的，经常练头皮可能会长老茧，只是头皮厚一点罢了，这种表演没有任何意义[吃鲸]，所谓大师其实就是个骗子。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-09 18:34:14","updateTime":"2021-06-09 18:34:14","isExist":null},{"id":4475,"question":"宋庆龄三姐妹?","simplecontent":null,"content":"两人是亲姐妹，关系非常好，虽然她们的政治立场不一样。当年，宋庆龄曾是国民党军统的暗杀目标，宋美龄知道后极力阻止，并给蒋介石以极大的压力，最后蒋介石不得不取消了行动。\n\n宋庆龄和宋美龄站在对立的角度上，宋庆龄看法就是跟随孙中山的，而三妹宋美龄特别反感马列主义思想，两者之前的政治看法有很大的不同。\n\n两人最后一面是一次家庭聚会，大姐宋霭龄要求不谈政治话题，之后就再也没有见过面，到最后抗战胜利后，宋美龄去了美国，到最后一直没有见过面。两个姐妹生活在地球的两端，是在那个时代个人信仰不同造成的，到死没有见过一面。\n\n\n\n扩展资料：\n\n宋美龄与宋蔼龄、宋庆龄并称为宋氏三姐妹，父亲为富商宋嘉澍。凭借孔、宋家族的强力支援与美国留学背景，活跃于政治、外交等领域，对近代中国历史与中美关系产生了深远的影响。宋美龄晚年长期定居美国，于北京时间2003年10月24日在美国纽约逝世，享年106岁。\n\n宋庆龄，伟大的爱国主义、民主主义、国际主义和共产主义战士，举世闻名的二十世纪的伟大女性。她青年时代追随孙中山，献身革命，在近七十年的革命生涯中，坚强不屈，矢志不移，英勇奋斗，始终坚定地和中国人民、中国共产党站在一起。\n\n为中国人民的解放事业，为妇女儿童的卫生保健和文化教育福利事业，为祖国统一以及保卫世界和平、促进人类的进步事业而殚精竭力，鞠躬尽瘁，做出了不可磨灭的贡献，受到中国人民、海外华人华侨的景仰和爱戴，也赢得国际友人的赞誉和热爱，并享有崇高的威望。\n\n参考资料：百度百科--宋庆龄\n\n参考资料：百度百科--宋美龄","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-08 13:17:20","updateTime":"2021-06-08 13:17:20","isExist":null},{"id":4474,"question":"驾驶证被吊销如何恢复?","simplecontent":null,"content":"驾照被吊销后，驾驶人要想恢复驾照的，需要重新参加科目一到科目四的考试，并且通过以后才能恢复驾驶证。但是如果驾驶人是因造成交通事故后逃逸的而被公安机关交通管理部门吊销机动车驾驶证的，终生不得重新取得机动车驾驶证。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-08 08:42:42","updateTime":"2021-06-08 08:42:42","isExist":null},{"id":353,"question":"每次开会提几个问题好","simplecontent":"","content":"目前进度如何\n还有哪些没完成\n什么时候可以对接我这边","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-07 09:20:18","updateTime":"2021-06-07 09:20:18","isExist":null},{"id":4472,"question":"龙井为什么没有小包装的?","simplecontent":null,"content":"呵，有小包装的，就是没有真空小包装的，因为，龙井茶与铁观音不一样，如果真空了，那龙井就断了碎了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-06 14:21:55","updateTime":"2021-06-06 14:21:55","isExist":null},{"id":4470,"question":"如何洗脸可以祛痘?","simplecontent":null,"content":"第一遍用温水洗，\n\n温水和洗面奶的作用\n\n能有效清除油脂；\n\n第二遍用冷水洗，\n\n收缩一夜舒张的毛孔。\n\n在一温一冷的作用下，\n\n可以有效控制毛孔粗大。\n\n即使在睡前洗脸，\n\n也要遵守这个方法。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-03 00:45:12","updateTime":"2021-06-03 00:45:12","isExist":null},{"id":4469,"question":"为什么我每天吃很多蔬菜水果，还是会长痘？","simplecontent":null,"content":"6.吃蔬菜水果的时候最好不要榨汁!因为喝果汁比吃水果容易多了，会快速摄入大量的糖，又没有纤维素增加饱腹感，总之能喝很多啦。吃两个苹果差不多就饱了，但是榨成汁还真是不够喝……","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-03 00:42:20","updateTime":"2021-06-03 00:42:20","isExist":null},{"id":4468,"question":"成年人每天吃多少肉才是适量?","simplecontent":null,"content":"一个人的饮食结构决定了一个人的身体健康状况。一般对健康的人来说。对身体有益的吃肉标准。一般是从事轻体力劳动男成年人在150克左右。女成年人130克左右。从事重体力劳动的男性成人在190克左右，女性成人在160克左右。我们应该在饮食结构中多以蔬菜水果谷类为主。要少油少盐少糖。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-03 00:40:02","updateTime":"2021-06-03 00:40:02","isExist":null},{"id":4467,"question":"水果糖分排行榜?","simplecontent":null,"content":"含糖量在4%—7%之间的水果：西瓜、草莓、白兰瓜等。　　\n\n含糖量在8%—10%之间的水果：梨、柠檬、樱桃、哈密瓜、葡萄、桃子、菠萝等。　　\n\n含糖量在9%—13%之间的水果：苹果、杏、无花果、橙子、柚子、荔枝等。　　\n\n含糖量在14%以上的水果：柿子、桂圆、香蕉、杨梅、石榴等。　\n\n含糖量<10%为低糖水果\n\n含糖量10%——20%为中糖水果\n\n含糖量>20%为高糖水果","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-03 00:36:29","updateTime":"2021-06-03 00:36:29","isExist":null},{"id":4466,"question":"椰子会上火吗?","simplecontent":null,"content":"椰子不是去火的。椰子汁虽说是温性的,但是椰汁中含有丰富的钾、镁等物质与细胞内液相似,它可以纠正脱水和电解","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-03 00:34:04","updateTime":"2021-06-03 00:34:04","isExist":null},{"id":4465,"question":"哪些水果长痘？橘子、荔枝、龙眼、榴莲、椰子、菠萝、桔子、石榴、桂圆、樱桃","simplecontent":null,"content":"1、橘子\n\n橘子是一种温性的水果，吃多了能导致上火。上火之后容易出现便秘等情况，便秘之后人体内毒素无法排出。\n\n2、樱桃\n\n樱桃是人们都非常喜欢吃的食物，在脸上有痘痘的时候不要吃樱桃。樱桃这种水果营养也是很丰富，如果皮肤没有痘痘多吃樱桃能美容去斑。但是如果脸部有痘痘，有的痘痘长的时间长会有破溃的现象，长痘痘本身是会有火的，上火体质要慎重的服食樱桃。\n\n另外荔枝、龙眼、榴莲、椰子、菠萝、桔子、石榴、桂圆这几种水果在脸上长痘痘的时候都不要服用，都会引起上火，导致便秘或者别的症状出现，使体内的毒素无法及时排出，让脸上的痘痘更加严重。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-03 00:32:27","updateTime":"2021-06-03 00:32:27","isExist":null},{"id":4464,"question":"5人或10人一组 核酸检测的混检技术咋理解?","simplecontent":null,"content":"河北新闻网讯（田泽阳）当前，石家庄和邢台市正在进行全员核酸检测。就核酸检测相关事宜，河北省疾病预防控制中心进行了科普。\n“混检”有两种模式。一种是在采样时，将几个人如5人或10人分别采样后，放至同一采样管中，这种模式也叫作“混合采样”或称“混采”，多数情况下采用这种模式；另一种则是在实验室检测时，将5人或10人的样本取相同体积混合在一起，也称“样本混合”。从科学角度讲，第一种“混采”模式，不会影响核酸检测的敏感性，后一种将样本混合检测的模式，对检测敏感性有一定的影响，但影响程度是已知的。\n十合一混采检测技术就是将采集自10个人的10支拭子样本集合于1个采集管中进行核酸检测，混检筛查中一旦发现阳性，将会立即通知相关部门对该混采管的10个受试者暂时单独隔离，并重新采集单管拭子进行复核，再确定这十个人当中到底哪一个是阳性；如果检测结果是阴性，意味着这十份样本全部都是阴性，混检的10个人都是安全的。这样最大限度地提高了检测效率，是符合规定的，结果也是准确的，不会出现漏检、错检等问题。\n混检大幅提升了核酸检测能力，使用这种结合模式，可使日检测能力在不增加人力物力的情况下，增加了10倍，可以多筛查、早确诊，争取早一分钟发现病人早一分钟隔离，减少传播，节约社会成本。随着国内防控经验的提高，这种模式已经成为目前新冠核酸检测中广泛使用的疫情防控筛查方法。早在2020年发生的新冠肺炎疫情防控工作中，多个地方将此方法用于全人群大范围的核酸检测工作，对于提高整体筛查效率，尽快尽早发现阳性病例具有重要作用。\n这次核酸检测是对于整个城市的全员检测，检测任务工作量大、时间紧，而采取混检最大的优势就是提高效率，因此， 在这次检测工作当中就采取了十合一混采检测技术。\n当然，在现场采样中，如采用“混采”，需要注意有序安排，如10人一组，每人持各自的条码，采样时每采一人，将该人条码贴至采样管上，这样就可有效地避免采样可能弄混的问题。分析过程中，如采用“样本混合”的混检方案，在混合10人样本时，也要注意样本混合过程中，可能存在的样本弄混问题。这提示我们居民朋友，在接受核酸检测采样时一定将自己的姓名、身份证号、现在地址、联系电话写清楚提供给采样人员。\n对于发热门诊有症状患者、密切接触者等高风险人群检测，一般都还是采用单采单检。对于低风险人群的筛查，在综合考虑时间人员成本的情况下优先选择“混检”。\n【来源：河","filterContent":null,"type":"语言","status":1,"createTime":"2021-06-02 12:27:24","updateTime":"2021-06-02 12:27:24","isExist":null},{"id":4457,"question":"孩子呛奶怎么办？1.伸手进入 2.拍打背部 3.送到医院  4.倒起来  错4","simplecontent":null,"content":"儿童呛奶，如果是轻微的症状，只是吐奶和溢奶，只要密切的观察孩子的呼吸情况就可以了。如果是大量的吐奶，需要将宝宝的脸侧向一边，以免这呕吐物误吸到气管。同时用手或者手帕伸入口腔，将口腔中的残留物，快速的清理，以避免形成气道的异物生产。\n\n严重的时候会出现颜面部的青紫和呼吸的不顺畅，更严重的会有窒息的表现，这些都会提示呕吐进入到了气管，形成了气道的异物。\n\n因此立刻把宝宝俯卧在这个大人的膝上或者是床上用力的拍打背部，使他能够咳出。如果这时候症状明显缓解了，就可以刺激一下宝宝，能够迅速的排异物。\n\n同时在上述的处理过程中，应该将宝宝快速地送往医院。让专科医生来进行体检，诊治，避免吸入性肺炎，或者是气道异物引起的呼吸困难，以及生命的危险。","filterContent":null,"type":"语言","status":1,"createTime":"2021-06-02 12:27:09","updateTime":"2021-06-02 12:27:10","isExist":null},{"id":4459,"question":"疫情严重地区？美国，巴西，印度","simplecontent":null,"content":"新冠肺炎是一个比较致命的疾病，疫情爆发至今，已导致全球2千多万人感染，数十万人死亡。从当前的疫情形势来看，不少国家疫情还未得到控制。另外，根据全世界疫情排名一览表显示，疫情最惨烈的国家是美国、印度、巴西等，","filterContent":null,"type":"语言","status":1,"createTime":"2021-06-02 12:27:06","updateTime":"2021-06-02 12:27:06","isExist":null},{"id":4463,"question":"核酸检测多久出结果?","simplecontent":null,"content":"病情分析：你好，做一个核酸检测，最快的话三个小时或者六个小时就可以取结果，在不同的时期，采用不同的标本进行检查，核酸检测出结果的时间也是不一样的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 12:25:38","updateTime":"2021-06-02 12:25:38","isExist":null},{"id":4462,"question":"新型冠状病毒阴性和阳性是什么意思？","simplecontent":null,"content":"是核酸的检查结果，说明感染和未感染到新型冠状病毒，一般情况下，新型冠状病毒阴性说明体内没有感染到新型冠状病毒，是正常的，该标本暂时没有出现，或者是以前也没有出现过新型冠状病毒。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 12:24:49","updateTime":"2021-06-02 12:24:49","isExist":null},{"id":4461,"question":"核酸检测难受?","simplecontent":null,"content":"病情分析：做核酸检测一般不会痛苦，核酸检测是对人体的鼻腔粘膜以及咽喉部提取标本，在操作的过程中可能会使患者出现恶心呕吐等咽喉部位不适感，不会出现痛苦的现象。只有在抽血的时候可能会出现疼痛感，但是这种疼痛感比较轻微，而且持续的时间也比较短暂。患者在进行核酸检测之前，一定不能抽烟以及喝酒，以免对检测结果产生影响。并且检测的前两个小时最好不要进食任何食物。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 12:23:55","updateTime":"2021-06-02 12:23:55","isExist":null},{"id":4447,"question":"胃火和肝火的区别?胃火是吃辛辣；肝火是情绪和吃酒油腻；胃火是口腔牙齿出血，口臭；肝火是易怒，眼干，口苦；","simplecontent":null,"content":"胃火和肝火的区别： 1、形成不同：\na、肝火的形成原因是情绪抑郁，肝气停滞，日久化火；饮食不节，大量饮酒或者过量食用油腻的食物，身体内产生湿热进而化为肝火；\nb、形成胃火的主要原因是过量食用辛辣和温热性质的食物，热停积在胃中而形成胃火；外感风热后治疗不及时引起热邪犯胃而导致胃火偏盛。 \n\n2、症状不同：肝火旺表现为眼干、易怒、口苦、胁肋疼痛等症状；胃火表现为口腔、牙龈出血，口臭等症状。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:52:20","updateTime":"2021-06-02 11:52:20","isExist":null},{"id":4448,"question":"广东台风什么时候?6月中旬","simplecontent":null,"content":"广东台风一般6月上中旬之后(历史平均6月27日)出现，10月上中旬(历史平均9月28日)结束，南海和西天平洋生成台风约26-28个)，进入南海海域约12个左右，其中登陆或严重广东省的台风5~7个(常年5.3个)。且有1—2个台风达到强台风或以上强度，并伴随有1—2次风暴潮灾害。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:49:51","updateTime":"2021-06-02 11:49:51","isExist":null},{"id":4450,"question":"鹦鹉鸟吃什么?黄谷","simplecontent":null,"content":"大多数鹦鹉主食树上或者地面上的植物果实、种子、坚果、浆果、嫩芽嫩枝等，兼食少量昆虫。也吃稻谷、粟子、碎玉米、黍和小米以及麻籽、葵花籽、花生米等。但油脂饲料不能喂得大多，否则会引起脱羽。\n\n青绿饲料是青菜、苹果等。青菜不能缺少，供应不足会产下不受精的卵，有时还会造成啄羽现象。冬季和繁殖季节可适当增加脂肪含量高的食物以提供足量的能量，但要防止得肥胖症。\n\n\n\n扩展资料：\n\n鹦鹉的品种不同寿命也不同，一般小型鹦鹉类7-20年，中大型鹦鹉平均寿命为30-60年，一些中型鹦鹉可以活到80岁左右，如葵花凤头鹦鹉、亚马逊鹦鹉、灰鹦鹉等。世界上最长寿的鸟就是一只鹦鹉，它是一只亚马逊鹦鹉，名叫詹米，生于英国利物浦1870年12月3日，死于1975年11月5日，享年105岁，是鸟类中的老寿星。\n\n人们喜欢美丽的鹦鹉，可以到鸟市和动物园去观看已被驯化和人工繁衍的鸟儿。大家都有责任保护它们，不要去购买鸟类贩子盗卖的野生鹦鹉。\n\n参考资料：鹦鹉-百度百科","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:49:40","updateTime":"2021-06-02 11:49:41","isExist":null},{"id":4451,"question":"中国哪里偷渡人多?越南，缅甸","simplecontent":null,"content":"越南、缅甸偷渡最多","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:49:08","updateTime":"2021-06-02 11:49:08","isExist":null},{"id":4454,"question":"为什么骗子那么多?大环境影响","simplecontent":null,"content":"一直关注新能源汽车，理想one改款车和下面两款非增程车型的新闻早就有了。厂家在新车上市之前，都会装傻。所以消费者要多看汽车新闻，目前的大环境你别指望商家有多少道德，不骗你就不错了。\n个人建议不急的话不要现在买新能源，两年以后，标配L3-L4级别自动驾驶，电池技术也更加成熟不香吗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:48:57","updateTime":"2021-06-02 11:48:58","isExist":null},{"id":4460,"question":"生三胎孩子？有质量生孩子，养不起，浪费时间和精力","simplecontent":null,"content":"父母要为孩子负责。要提倡有质量的生育，而不是越多越好。否则，生的不是孩子，而是劳工。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:32:05","updateTime":"2021-06-02 11:32:05","isExist":null},{"id":4458,"question":"中原是哪里？1河南 9.湖南","simplecontent":null,"content":"1、中原又称中土、中州、华夏，传统上是指洛阳至开封一带为中心的黄河中下游地区，大概是今天的河南省全境。\n\n2、广义上包括今河南省全部、山西省东南部、河北省南部、山东省西南部、安徽省北部、江苏省西北部等区域。用今天的话说，就是整个中部地区外加山东江苏的边边角角。而在与北方外族相对应时，中原又泛指中国。\n\n拓展资料\n中原，本意为“天下至中的原野”，是华夏文明和中华文明的发祥地，是华夏民族的摇篮，被视为天下中心。中原地区随着华夏民族的大融合以及中原文明的扩展而逐渐向外蔓延，扩大了以中原文化为核心的汉族和各民族之间的交流。文化比较先进的华夏民族以别于四夷而称中华。\n\n中原北、西、南三面有太行、伏牛、熊耳、外方、桐柏、大别诸山环抱，中部和东部是一望无际的华北平原，被誉为中华民族摇篮的黄河自西向东穿境而过。淮河水系和海河水系的主流以及长江水系的支流丹江也流经此地。中原自古为咽喉要地，被视为“中国之处而天下之枢”。\n\n\n\n\n中原，有广义与狭义之分。广义的“中原”是指包括河南省大部分地区以及河南邻近的安徽北部、河北省南部、山西省南部，陕西省东部及山东省西部各一部分在内的黄河中下游地区，这里是中华文明的发源地，是华夏民族的摇篮。狭义的“中原”专指河南。通常所说的“中原”是指狭义的“中原”，即代指河南。\n\n参考资料：中原_百度百科","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 11:10:55","updateTime":"2021-06-02 11:10:55","isExist":null},{"id":4456,"question":"农药百草枯和敌敌畏区别？1.除草剂 2.除虫剂 3.百枯草无药可救 4.敌敌畏有生命危险 (1234)","simplecontent":null,"content":"百草枯和敌敌畏两种药毒性都很强，均用于农作物的生产生活上，只不过百草枯是除草剂，用于除草，不过它对人体的毒性很强，如果人喝了百草枯，基本不能生还，无药可救。\n\n敌知畏是杀虫剂，用于给农作物杀虫，也有很强的毒性，防治病虫害效果比较好，人如果一旦吸入其气体或皮肤接触其溶液，危险性也非常大，如果口服，也会有致命的危险。\n\n下面看一下具体的应用范围：\n\n\n\n百草枯，可防除各种一年生杂草；对多年生杂草有强烈的杀伤作用。\n\n一般应用于：\n\n果园、桑园、茶园、胶园、林带使用：在杂草出齐，处于生旺盛期，每亩用20%水剂100-200毫升，兑水25公斤，均匀喷雾杂草茎叶，当杂草长到30cm以上时，用药量要加倍。\n\n\n2. 玉米、甘蔗、大豆等宽行作物田使用：可播前处理或播后苗前处理，也可在作物生长中后期，采用保护性定向喷雾防除行间杂草。播前或播后苗前处理，每亩用20%水剂75-200毫升，兑水25公斤喷雾防除已出土杂草。作物生长期，每亩用20%水剂100-200毫升，兑水25公斤，作行间保护性定向喷雾。\n\n敌敌畏：对咀嚼口器和刺吸口器的害虫都有效果。多用于蔬菜、果树和多种农田作物使用。\n\n\n\n可防治菜菜青虫、甘蓝夜蛾、菜叶蜂、菜蚜、斜纹夜蛾，烟青虫、粉虱、小菜蛾、、夜蛾、红蜘蛛等。\n\n敌敌畏喷洒后能快速分解，持效时间短，没有残留，可在作物收获前很短的时期内施用，以防治刺吸式口器和咀嚼式口器害虫，故适用于苹果、梨、葡萄等果树及蔬菜等上，一般收获前禁用期为7天左右。对高梁、玉米易发生药害，瓜类、豆类也较敏感，使用时应注意。\n\n\n\n注意，两种剧毒农药，在应用时一定要做好自身防护，以免中毒，另外，存放时也要标注好药品名称，而且要放在儿童够不到的地方，以免误喝引起中毒现象。\n\n以上是我对百草枯和敌敌畏不同用处的介绍，希望对您有帮助。\n\n敌敌畏又名DDVP，学名O,O-二甲基-O-(2,2-二氯乙烯基)磷酸酯， 有机磷杀虫剂的一种，分子式C 4H 7Cl 2O 4P。\n\n一种有机磷杀虫剂，工业产品均为无色至浅棕色液体，纯品沸点74℃（在133.322Pa下）挥发性大，室温下在水中溶解度1%，煤油中溶解度2%～3%，能溶于 有机溶剂，易水解，遇碱分解更快。\n\n毒性大，急性毒性 LD50值：对大白鼠经口为56～80mg/kg，经皮为75～210mg/kg。\n\n中毒症状\n\n（一）主因敌敌畏属 有机磷农药，广用于农作物杀虫，还有家庭灭蚊、蝇。多见吸入或误服或用来自杀而中毒。\n\n（二）主症头晕、头痛、恶心呕吐、腹痛、腹泻、流口水，瞳孔缩小、看东西模糊，大量出汗、呼吸困难。严重者，全身紧束感、胸部压缩感，肌肉跳动，动作不自主。发音不清，瞳孔缩小如针尖大或不等大，抽搐、口吐白沫、昏迷、大小便失禁，脉搏和呼吸都减慢，最后均停止。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 10:46:58","updateTime":"2021-06-02 10:46:58","isExist":null},{"id":4455,"question":"淮安在哪里？1.江苏省 2.浙江省  (1)","simplecontent":null,"content":"淮安位于江苏省中北部，江淮平原东部。地处长江三角洲地区，[1]是苏北重要中心城市，[2]南京都市圈紧密圈层城市，淮河生态经济带首提首推城市[3]，坐落于古淮河与京杭大运河交点，处在中国南北分界线“秦岭-淮河”线上，拥有中国第四大淡水湖洪泽湖，是全国文明城市[4]、国家历史文化名城、国家卫生城市、国家园林城市、国家环境保护模范城市、国家低碳试点城市、中国优秀旅游城市。为淮扬菜的主要发源地之一，是江淮流域古文化发源地之一。","filterContent":null,"type":"语言","status":0,"createTime":"2021-06-02 10:37:46","updateTime":"2021-06-02 10:37:46","isExist":null},{"id":3258,"question":"】线程5个状态流程是什么？新建、就绪、运行、阻塞、死亡","simplecontent":null,"content":"什么操作分别启动到5个状态？\n1.新建状态(New)： \n        当用new操作符创建一个线程时， 例如new Thread(r)，线程还没有开始运行，此时线程处在新建状态。 当一个线程处于新生状态时，程序还没有开始运行线程中的代码\n\n     2.就绪状态(Runnable)\n\n        一个新创建的线程并不自动开始运行，要执行线程，必须调用线程的start()方法。当线程对象调用start()方法即启动了线程，start()方法创建线程运行的系统资源，并调度线程运行run()方法。当start()方法返回后，线程就处于就绪状态。\n\n        处于就绪状态的线程并不一定立即运行run()方法，线程还必须同其他线程竞争CPU时间，只有获得CPU时间才可以运行线程。因为在单CPU的计算机系统中，不可能同时运行多个线程，一个时刻仅有一个线程处于运行状态。因此此时可能有多个线程处于就绪状态。对多个处于就绪状态的线程是由Java运行时系统的线程调度程序(thread scheduler)来调度的。\n\n    3.运行状态(Running)\n\n        当线程获得CPU时间后，它才进入运行状态，真正开始执行run()方法.\n可运行状态(runnable)的线程获得了cpu 时间片（timeslice） ，执行程序代码。\n\n    4. 阻塞状态(Blocked)\n\n        线程运行过程中，可能由于各种原因进入阻塞状态:\n        1>线程通过调用sleep方法进入睡眠状态；\n        2>线程调用一个在I/O上被阻塞的操作，即该操作在输入输出操作完成之前不会返回到它的调用者；\n        3>线程试图得到一个锁，而该锁正被其他线程持有；\n        4>线程在等待某个触发条件；\n        ......           \n\n        所谓阻塞状态是正在运行的线程没有运行结束，暂时让出CPU，这时其他处于就绪状态的线程就可以获得CPU时间，进入运行状态。\n\n    5. 死亡状态(Dead)\n\n        有两个原因会导致线程死亡：\n        1) run方法正常退出而自然死亡，\n        2) 一个未捕获的异常终止了run方法而使线程猝死。\n        为了确定线程在当前是否存活着（就是要么是可运行的，要么是被阻塞了），需要使用isAlive方法。如果是可运行或被阻塞，这个方法返回true； 如果线程仍旧是new状态且不是可运行的， 或者线程死亡了，则返回false.\n————————————————\n版权声明：本文为CSDN博主「peter_teng」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/peter_teng/article/details/10197785\n2.第一是创建状态。在生成线程对象，并没有调用该对象的start方法，这是线程处于创建状态。\n3.第二是就绪状态。当调用了线程对象的start方法之后，该线程就进入了就绪状态，但是此时线程调度程序还没有     把该线程设置为当前线程，此时处于就绪状态。在线程运行之后，从等待或者睡眠中回来之后，也会处于就绪状       态。\n4.第三是运行状态。线程调度程序将处于就绪状态的线程设置为当前线程，此时线程就进入了运行状态，开始运行run函数当中的代码。\n5.第四是阻塞状态。线程正在运行的时候，被暂停，通常是为了等待某个时间的发生(比如说某项资源就绪)之后再继续运行。sleep,suspend，wait等方法都可以导致线程阻塞。\n6.第五是死亡状态。如果一个线程的run方法执行结束或者调用stop方法后，该线程就会死亡。对于已经死亡的线程 ，无法再使用start方法令其进入就绪。","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:04:12","updateTime":"2021-06-01 23:04:13","isExist":null},{"id":3272,"question":"】创建线程池有哪几种方式？单线程、固定线程数、无限大线程数、定时执行","simplecontent":null,"content":"《单线程、固定线程数、无限大线程数、定时执行》\n①newSingleThreadExecutor\n单个线程的线程池，即线程池中每次只有一个线程工作，单线程串行执行任务\n②newFixedThreadExecutor(n)\n固定数量的线程池，没提交一个任务就是一个线程，直到达到线程池的最大数量，然后后面进入等待队列直到前面的任务完成才继续执行\n③newCacheThreadExecutor（推荐使用）\n可缓存线程池，当线程池大小超过了处理任务所需的线程，那么就会回收部分空闲（一般是60秒无执行）的线程，当有任务来时，又智能的添加新线程来执行。\n④newScheduleThreadExecutor\n大小无限制的线程池，支持定时和周期性的执行线程\n\n newCachedThreadPool\n创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。\n线程池为无限大，当执行第二个任务时第一个任务已经完成，会复用执行第一个任务的线程，而不用每次新建线程。\npublic static ExecutorService newCachedThreadPool() {\n    return new ThreadPoolExecutor(0, 2147483647, 60L, TimeUnit.SECONDS, new SynchronousQueue());\n}\n\nnewFixedThreadPool\n创建一个定长线程池，可控制线程最大并发数，超出的线程会在队列中等待。\npublic static ExecutorService newFixedThreadPool(int nThreads) {\n    return new ThreadPoolExecutor(nThreads, nThreads, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue());\n}\n\nnewSingleThreadExecutor\n创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行\npublic static ExecutorService newSingleThreadExecutor() {\n    return new Executors.FinalizableDelegatedExecutorService(new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue()));\n}\n\n newScheduledThreadPool\n创建一个定长线程池，支持定时及周期性任务执行\npublic static ScheduledExecutorService newScheduledThreadPool(int corePoolSize) {\n    return new ScheduledThreadPoolExecutor(corePoolSize);\n}\npublic ScheduledThreadPoolExecutor(int corePoolSize) {\n    super(corePoolSize, 2147483647, 10L, TimeUnit.MILLISECONDS, new ScheduledThreadPoolExecutor.DelayedWorkQueue());\n}\n\nDelayedWorkQueue类，这个类实现了从队列中延迟取节点\nhttps://www.baidu.com/link?url=qnyxUzUruVrX2idPLclRl976H9cWKuRlHOBYlqVSQmGDsoasfHoCXLWFFladu9hS0q-Pq5EKMFtRVm6-zEHrEK&wd=&eqid=8c72813a0000758f000000055e9fda12\n\nnewFixedThreadPool: 创建固定线程数量的线程池\nnewSingleThreadExecutor: 创建单一线程的池\nnewCachedThreadPool: 创建线程数量自动扩容, 自动销毁的线程池\nnewScheduledThreadPool: 创建支持计划任务的线程池","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:03:51","updateTime":"2021-06-01 23:03:52","isExist":null},{"id":3275,"question":"】线程池参数有哪些？核心、最大、空闲时间 、时间单位、队列 、拒绝","simplecontent":null,"content":"1 corePoolSize int 核心线程池大小 \n2 maximumPoolSize int 最大线程池大小 \n3 keepAliveTime long 线程最大空闲时间 \n4 unit TimeUnit 时间单位 \n5 workQueue BlockingQueue<Runnable> 线程等待队列 \n6 threadFactory ThreadFactory 线程创建工厂 \n7 handler RejectedExecutionHandler 拒绝策略\n\ncorePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()或者prestartCoreThread()方法，从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到corePoolSize后，就会把到达的任务放到缓存队列当中；\nmaximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；\nkeepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用，直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，keepAliveTime参数也会起作用，直到线程池中的线程数为0；\nworkQueue：一个阻塞队列，用来存储等待执行的任务，这个参数的选择也很重要，会对线程池的运行过程产生重大影响，一般来说，这里的阻塞队列有以下几种选择：","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:03:29","updateTime":"2021-06-01 23:03:30","isExist":null},{"id":3279,"question":"】Java 程序中怎么保证多线程的运行安全？Synchronized、Lock、concurrent","simplecontent":null,"content":"方法一：使用安全类，比如 Java. util. concurrent 下的类。\n方法二：使用自动锁 synchronized。\n方法三：使用手动锁 Lock。\n手动锁 Java 示例代码如下：\nLock lock = new ReentrantLock();\nlock. lock();\ntry {\n    System. out. println(\"获得锁\");\n} catch (Exception e) {\n    // TODO: handle exception\n} finally {\n    System. out. println(\"释放锁\");\n    lock. unlock();\n}","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:03:10","updateTime":"2021-06-01 23:03:11","isExist":null},{"id":3285,"question":"】可重入锁定义是什么？线程获取锁还可以再次获","simplecontent":null,"content":"《线程获取锁还可以再次获取》\n什么是 “可重入”，可重入就是说某个线程已经获得某个锁，可以再次获取锁而不会出现死锁。\nReentrantLock 和 synchronized 不一样，需要手动释放锁，所以使用 ReentrantLock的时候一定要手动释放锁，并且加锁次数和释放次数要一样\n\npackage com.test.reen;\n\n// 演示可重入锁是什么意思，可重入，就是可以重复获取相同的锁，synchronized和ReentrantLock都是可重入的\n// 可重入降低了编程复杂性\npublic class WhatReentrant {\n\tpublic static void main(String[] args) {\n\t\tnew Thread(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tsynchronized (this) {\n\t\t\t\t\tSystem.out.println(\"第1次获取锁，这个锁是：\" + this);\n\t\t\t\t\tint index = 1;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tsynchronized (this) {\n\t\t\t\t\t\t\tSystem.out.println(\"第\" + (++index) + \"次获取锁，这个锁是：\" + this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (index == 10) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}).start();\n\t}\n}\n————————————————\n// 演示可重入锁是什么意思\npublic class WhatReentrant2 {\n\tpublic static void main(String[] args) {\n\t\tReentrantLock lock = new ReentrantLock();\n\t\t\n\t\tnew Thread(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tlock.lock();\n\t\t\t\t\tSystem.out.println(\"第1次获取锁，这个锁是：\" + lock);\n\n\t\t\t\t\tint index = 1;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlock.lock();\n\t\t\t\tSystem.out.println(\"第\" + (++index) + \"次获取锁，这个锁是：\" + lock);\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tThread.sleep(new Random().nextInt(200));\n\t\t\t\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (index == 10) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tlock.unlock();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\t\t\t\t\tlock.unlock();\n\t\t\t\t}\n\t\t\t}\n\t\t}).start();\n\t}\n}","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:02:54","updateTime":"2021-06-01 23:02:54","isExist":null},{"id":3292,"question":"】Redis和多线程哪个更好？批量处理多线程更好","simplecontent":null,"content":"批量处理多线程更好","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:02:38","updateTime":"2021-06-01 23:02:38","isExist":null},{"id":3293,"question":"】什么是CAS？比较再交换","simplecontent":null,"content":"《比较再交换》\nCAS：Compare and Swap，即比较再交换。\njdk5增加了并发包java.util.concurrent.*,其下面的类使用CAS算法实现了区别于synchronouse同步锁的一种乐观锁。JDK 5之前Java语言是靠synchronized关键字保证同步的，这是一种独占锁，也是是悲观锁。\n\n4.什么是CAS？\n1、CAS（compare and swap）的缩写，中⽂文翻译成比较并交换。\n2、CAS 不通过JVM,直接利用java本地方JNI（Java Native Interface为JAVA本地调用）,直接调用CPU 的cmpxchg（是汇编指令）指令。\n3、利用CPU的CAS指令，同时借助JNI来完成Java的非阻塞算法,实现原子操作。其它原子操作都是利用类似的特性完成的。\n4、整个java.util.concurrent都是建⽴立在CAS之上的，因此对于synchronized阻塞算法，J.U.C在性能上有了很大的提升。\n5、CAS是项乐观锁技术，当多个线程尝试使用CAS同时更新同一个变量时，只有其中一个线程能更新变量的值，而其它\n线程都失败，失败的线程并不会被挂起，而是被告知这次竞争中失败，并可以再次尝试。\n1、使⽤CAS在线程冲突严重时，会⼤幅降低程序性能；CAS只适合于线程冲突较少的情况使⽤。\n2、synchronized在jdk1.6之后，已经改进优化。synchronized的底层实现主要依靠Lock-Free的队列，基本思路是⾃旋后阻塞，竞争切换后继续竞争锁，稍微牺牲了公平性，但获得了⾼吞吐量。在线程冲突较少的情况下，可以获得和CAS类似的性能；⽽线程冲突严重的情况下，性能远⾼于CAS。","filterContent":null,"type":"java-多线程","status":1,"createTime":"2021-06-01 23:02:29","updateTime":"2021-06-01 23:02:30","isExist":null},{"id":4401,"question":"什么是 spring boot？","simplecontent":null,"content":"《简化的开发框架，少配置》\nspring boot 是为 spring 服务的，是用来简化新 spring 应用的初始搭建以及开发过程的。\nspringboot就是Spring开源框架下的子项目，是Spring的一站式解决方案，主要是简化了spring的使用难度，降低了对配置文件的要求，使得开发人员能够更容易得上手。","filterContent":null,"type":"java-springboot","status":1,"createTime":"2021-06-01 23:01:58","updateTime":"2021-06-01 23:01:58","isExist":null},{"id":4453,"question":"退一赔三能退吗?","simplecontent":null,"content":"别动不动就买一赔三又不是假货，哪来的一赔三，能退货就不错了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-31 21:53:58","updateTime":"2021-05-31 21:53:58","isExist":null},{"id":4452,"question":"减肥轻断食的正确方法是怎么样的？","simplecontent":null,"content":"目前轻断食减肥法是非常流行的一种比较健康的减肥方法，此方法不仅可以帮助大家减肥，而且还可以调节亚健康的生活方式，是非常不错的减肥方法，那么，减肥轻断食的正确方法是怎样的呢？一起来看下面的介绍。\n\n减肥轻断食的正确方法是怎样的？轻断食也被大家称之为“间歇性断食”，其实这种方法就是在正常饮食的情况下，间隔性地少吃或者是不吃食物。目前，全球流行的轻断食主要有：\n\n１、隔日断食法：平时可以正常吃，但是要注意尽量避免吃热量较高的食物，然后再隔天食量降到25%~50%。\n\n２、5：2断食法：这是最常见的一种轻断食减肥法，方法也非常的简单，就是在一个礼拜当中有五天可以正常饮食，其他不连续的两天为断食日，在这两天期间可以把食量降到25%~30%。\n\n３果蔬汁断食法：果蔬汁断食法有很多女性减肥者比较青睐的一种方法，此方法的具体做法就是在三十天内选择不连续的2~5天断食，在这断食的几天当中，减肥者只可以喝白开水、果蔬汁和蔬菜汤，尤其要注意将每日摄入热量控制在300~500千卡。\n\n４、日内断食法：此方法不是很常用，具体的做法就是一天的十六个小时中不吃东西，其余8小时可以正常进食，但不可以暴饮暴食，尤其热量高，糖分高的食物不可以吃。\n\n以上为大家介绍了几种比较常见的减肥轻断食的正确方法，轻断食的好处有很多，不仅可以减轻体重，而且对人体健康也有一定的好处，建议大家可以根据自己的体质，在不同的季节定制适合的自己食谱，在轻断食减肥期间，还要配合多进行一些运动，尤其是有氧运动，比如跑步、快走、瑜伽等都是非常不错的选择，除此之外，还要保持充足的睡眠，这样对减肥也有帮助。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-31 17:56:56","updateTime":"2021-05-31 17:56:56","isExist":null},{"id":4449,"question":"下棋搞笑?","simplecontent":null,"content":"@y.：小伙子有些话不能乱说，里面是有忌讳的，你还小，不懂这里面的套路。有些话说出来，冥冥之中你的生活就会改变轨迹。看似简单的一句话，将会影响你的一生，水很深你把握不住。所以听叔一句劝，把这句话删了让我来评论","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 18:07:45","updateTime":"2021-05-28 18:07:45","isExist":null},{"id":4446,"question":"胃火旺怎么调理降低胃火的方法?","simplecontent":null,"content":"病情分析：身体出现胃火旺的情况，多由于饮食过度辛辣，或者是由于外感疾病入里化热造成的。治疗上首先可以通过食疗的方法进行治疗，可以多吃一些寒凉的水果蔬菜，比如西瓜、香瓜、梨等。如果病情比较严重，就可以口服一些清胃火的中成药，比如牛黄清胃丸、清胃黄连丸、大黄清胃丸、牛黄解毒丸等。此外，可以通过刺络放血或者是泻法针灸治疗，可以针刺大椎、内庭等穴位。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:30:45","updateTime":"2021-05-28 17:30:45","isExist":null},{"id":4445,"question":"嘴里有口臭怎么办 4个方法轻松去口臭?","simplecontent":null,"content":"口臭过重在与人近距离对话时会非常尴尬，所以发现自己又口臭时应该及时采取措施去除口臭，去除口臭的方法有很多，一方面需要保证口腔的清洁卫生，早晚刷牙以及饭后漱口，饮食上也要清淡，辛辣油腻食物要少吃或者不吃，另一方面口臭是身体不健康的一种表现，可能是某种疾病引起的，需要及时找出口臭的病因，然后对因治疗，这样才能彻底消除口臭。\n\n说起口臭很多人都非常烦恼，虽然不会威胁我们身体健康，但是平时我们讲话时一些难闻的气味从口中发出来自己和身旁的人都能闻得到，非常尴尬，会影响正常的人际交往。而引起口臭的原因是非常多的，例如有不良的饮食习惯、不重视口腔卫生清洁、有便秘、有一些口腔疾病等都会导致不同程度的口臭，所以我们想要去除口臭，需要了解原因，然后实施对因治疗，下面介绍嘴里有口臭怎么办?\n\n1、重视口腔清洁卫生\n\n人们嘴里有口臭可能是不重视个人卫生清洁所致，所以当出现口臭后要重视口腔清洁卫生，需要有良好刷牙习惯，做到早晚刷牙饭后漱口，及时将残留在牙齿中的食物残渣清除掉，避免病菌繁殖，减轻口臭的症状，另外口臭患者还可以多嚼嚼口香糖，嚼口香糖不但可以锻炼牙齿能力，还可以防止口腔细菌的感染。\n\n2、有良好的饮食习惯\n\n口臭的产生有时候与进食的食物有关，例如吃韭菜、大蒜、洋葱、花椒等食物的味道是非常大的，所以出现口臭后要远离这些食物，否则口臭症状会加重。饮食应该以清淡为主，平时也要多喝水，要多吃新鲜水果和杂粮以及各类谷物，油腻煎炸食物要远离，忌吸烟喝酒。\n\n3、及时消除胃火\n\n口臭的引起原因有很多，除了口腔卫生之外，胃火旺也会引起口臭。胃火旺会导致身体出现便秘、牙龈肿痛、口臭、痤疮、口舌生疮等一系列的症状，其中口臭是比较典型的。所以面对胃火旺引起的口臭我们需要先保证饮食清淡，然后可以服用牛黄解毒、霍香清胃胶囊等中成药来缓解口臭症状。\n\n4、消除口腔疾病\n\n口腔疾病有很多其中牙龈肿痛、龋齿、鹅口疮、牙龈炎、口腔溃疡、牙髓炎等疾病比较常见，这些疾病如果不及时治疗也会引起口臭，所以当发现自己的口臭是因为口腔疾病导致的需要及时治疗原发病，不要以口腔疾病只是小病，会导致非常严重的危害。\n\n嘴里有口臭怎么办?相信大家都有一个详细的了解，嘴里有口臭时不要着急，先了解清楚原因，然后再根据原因实施对症治疗，千万不能在没有了解原因的情况下乱用口气清新剂，会取得适得其反的效果。另外想要消除口臭保持良好的睡眠效果也是","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:29:56","updateTime":"2021-05-28 17:29:56","isExist":null},{"id":4444,"question":"多久需要清洁一次牙齿?","simplecontent":null,"content":"一般建议大家每隔半年到一年左右做一次超声波洗牙，做一次清洁牙齿的护理。\n\n无论是正常人群还是有牙龈炎，牙周炎的患者，半年到一年是必须要做一次超声波洗牙的。做超声波洗牙目的就是为了要预防或者是治疗牙龈炎、牙周炎、龋齿、口臭等等。\n\n因为大概半年到一年左右就会有比较多的比较明显的软垢，牙结石附着。如果没有清理就很有可能会加重原有的牙龈炎或牙周炎病变，引起严重口臭现象等等，所以需要定期的做超声波洗牙。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:29:06","updateTime":"2021-05-28 17:29:06","isExist":null},{"id":4443,"question":"智齿一般长在什么位置?","simplecontent":null,"content":"智齿基本上都长在嘴最后面的牙齿的位置上。从排序上说，如果说正中线第一个牙是一，则智齿位置是第八个牙，智齿也叫第三恒磨牙，一般在最后一个牙的后面。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:28:27","updateTime":"2021-05-28 17:28:27","isExist":null},{"id":4442,"question":"怎么判断是不是智齿?","simplecontent":null,"content":"如果想要判断新长出的牙齿是不是智齿，1、可以看萌出的时间。一般智齿萌出的时间在18-20岁，或者更以后的时间，其他的牙齿在12岁之前都已经萌出。2、可以数数。从正中向后数，如果是第八颗牙齿，就是智齿。如果自己还不能确定，想要确诊的建议到正规医院的口腔科进行检查，由医生判断是否是智齿。也可以拍摄曲面断层片，看一看智齿的位置和方向、全口一共有几颗智齿、它们是否可以都萌出到口腔当中、是否需要拔除。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:27:41","updateTime":"2021-05-28 17:27:41","isExist":null},{"id":4441,"question":"如何判断有没有长智齿？","simplecontent":null,"content":"第一个要根据他的年龄，第二口内看一看它长没长出来，第三需要拍片子。一般18岁之后才会长智齿，口内也可以数一数牙是不是长在了智齿的位置，看不见的话则可以拍片。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:27:17","updateTime":"2021-05-28 17:27:17","isExist":null},{"id":4440,"question":"长智齿会痛吗 智齿三种情况特别疼?","simplecontent":null,"content":"生活中有些人发现自己在成年之后，突然出现了智齿，成年之后长智齿其实有的时候也会非常的疼痛，特别是智齿呈现横向发展趋势的时候，会挤压到周边的牙齿，所以疼痛非常剧烈，再有就是牙齿可能会蜗居在牙肉里面，这种情况疼痛其实也非常厉害。\n\n提到智齿，可能我们都比较熟悉，生活中很多人都因为有智齿，牙齿比较疼痛。特别是人们在成年之后，长智齿的过程当中，会伴随特别剧烈的疼痛，会给人们的日常生活和饮食造成极大的影响，这主要是因为智齿萌发的空间比较窄小，他们很难正常的生长，所以，就会有疼痛感。这个临床上具体有以下这几种表现。\n\n1、智齿正常生长，人们会有牙龈被顶的那种疼痛感。但是从严格意义上来说，这并不是牙疼，人们稍微忍一忍就过去了。\n\n2、智齿横向生长，其他的牙齿都是直立向上长的，但是智齿常常会横行霸道，如果触碰到旁边的牙齿，那么自然牙齿就会特别疼痛，如果智齿是横向发展的，那么我们也应该趁早拔掉。\n\n3、智齿“蜗居”在牙肉里，有的时候人们根本就看不到，但仍然会觉得牙齿特别疼痛，这种情况我们也需要及时进行处理，大多情况下，医生也会建议直接拔掉。\n\n智齿的位置其实特别的特殊，会给人们的清洁和治疗带来极大的问题，所以智齿往往会引发牙周炎，牙髓炎等口腔疾病，让我们发现自己有智齿牙疼的时候，大家首先应该去医院治疗，针对这种情况，医生大多都会建议拔除智齿。\n\n在有智齿的时候，很多人会觉得这是一种智慧的表现，所以即便特别疼痛，自己还是忍耐着，但是如果因为智齿导致自己口腔当中出现了一些疾病，比如说牙周炎，牙髓炎等疾病的时候，那么就非常麻烦，并且长时间的疼痛也会极大的影响到人们的生活，所以在有智齿之后，大家还是要及时的去牙科进行治疗，一般情况下，我们在拔除智齿之后，这些不适的表现就会全部消失。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:26:20","updateTime":"2021-05-28 17:26:20","isExist":null},{"id":4439,"question":"智齿不一定要拔？","simplecontent":null,"content":"不一定，只有对那些有潜在性的或者可预见的危害的智齿建议拔掉，而对于正常萌出、没有任何损害的、还有行使功能的智齿不建议拔掉。可以通过拍片子看智齿的位置是否合适。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 17:25:20","updateTime":"2021-05-28 17:25:20","isExist":null},{"id":4438,"question":"张家界在哪里?","simplecontent":null,"content":"湖南","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:41:34","updateTime":"2021-05-28 12:41:34","isExist":null},{"id":4437,"question":"前几天小编在网上看到有网友提问为什么长寿之乡集中广西比较多？","simplecontent":null,"content":"是因为饮食环境好？有什么特色？有数据显示，关于长寿之乡统计确实主要集中在广西，广西的“中国长寿之乡”总数量位居全国首位。有专家表示，主要原因是广西地区的土壤和农产品中含硒元素。\n\n\n中国长寿之乡评定工作从2006年开始，第一届的普查时间从2007年至2013年。根据评定标准，长寿之乡广西一共占了12个，包括一个世界长寿之乡巴马。2013年，长寿之乡2.0的认定标准启动，其中有一项重要指标是，区域内当前存活百岁以上的老人从占总人口大于7/10万增加到10/10万人以上。\n\n根据升级版的标准，广西桂林阳朔、天等、富川、大新、宜州和大化6个县均符合条件，获得中国长寿之乡美称。巴马、凤山和大化3个县数据较高，位居广西长寿之乡前三。至今，广西一共有20个中国长寿之乡，广西有一共5个瑶族自治县就有4个长寿之乡。\n\n\n有一个神奇的现象，在广西20个长寿之乡中，红水河流域边沿的县份特别集中。红水河流经广西的10多个县，其中巴马、凤山、东兰、宜州、大化都已成为长寿之乡，占该河流经县份的一半。\n\n广西长寿之乡主要集中在两个区域，一个是以红水河流域为主的东巴凤长寿带，一个是森林覆盖率高的金秀昭平蒙山长寿带。为什么主要集中在这两个区域呢？广西的这两个区域的土壤和农产品含硒元素特别丰富，这个特点非常突出。\n\n\n有专家认为，长寿并不是由单一元素决定，受遗传、生态环境、生活方式、膳食结构等多方面影响。怎样才能长寿？根据老年学会调查，在百岁老人的长寿秘诀中，遗传基因占15%、社会因素占10%、医疗条件改善占8%、气候条件占7%，其余60%因素则取决于老人自身条件。\n\n\n查看网友的精彩评论","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:40:46","updateTime":"2021-05-28 12:40:46","isExist":null},{"id":4436,"question":"广西这个县被评为长寿之乡，百岁老人超过70位，原因很简单?","simplecontent":null,"content":"广西是个盛产百岁老人的地方，长寿之乡的数量占据全国近三分之一，位于南宁的马山县是主要代表。马山县百岁老人超过70位，长寿比率达到17%，远高于“中国长寿之乡”的认证标准。\n马山县为什么盛产长寿老人呢？带着疑问，我们来到了县里的诗画村落－小都百。\n\n小都百乡村旅游区就在乔老河旁边，距离南宁市区大约120公里，距离马山县城大约十公里。村落被青山绿水所包围，有种古人笔下“桃花源里人家”的意境。\n\n马山小都百是著名的“水车之乡”，村里到处都是水车元素，尤其是河里，大小水车不停转动，成为画里乡村最美的点缀。\n\n沿着步道往村内行走，一路上翠竹环绕，绿树成荫，河水碧绿，喀斯特峰林奇观与乡村美景互相映衬，景色美不胜收。到这里来游玩的游客不是很多，小村保留着相对原始、古朴、怡然的农家风情，生活在这里，有种隐居于世外的感觉。\n\n这里的传统建筑为白墙灰瓦的壮乡民居，新式建筑延续了这种风格，不过屋顶的瓦片换成了蓝色。\n旅游区环河、环山修有自行车道、景观亭和健康步道等，偶尔会有少量外地游客专程过来探秘 寻幽。\n\n因为植被茂盛，一走进小都百就感到心旷神怡，据当地人讲，这里的农民平日里的生活都很简单，没有太多高大上的追求，“平安是福”是主要生活理念。\n马山县的森林覆盖率达到62.95%，空气中的负离子含量比一般城市大约高出二十倍左右，是理想的避暑胜地，同时也是北方人喜欢的“避寒暖都”。\n\n负离子含量高，生态环境好是健康长寿的外在条件，生活节奏慢，知足常乐是内在条件。很多游客以为长寿有什么秘诀，到了小都百才知道原因如此简单。\n\n人性是贪婪的，想得到的越多，失去的越多，知足常乐，反而会有更大的收获。在山清水秀的小都百小住几天，散散步，骑骑单车，品品农家菜，多呼吸新鲜空气，给心灵放个假，感觉整个人都轻松了。\n我心安处便是家。喜欢这种恬静的小村落，喜欢烟雾缭绕的山水画图。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:40:04","updateTime":"2021-05-28 12:40:04","isExist":null},{"id":4435,"question":"中国长寿之乡?","simplecontent":null,"content":"广西-26个】宜州市、天峨县、巴马瑶族自治县、大化瑶族自治县、东兰县、凤山县、扶绥县、大新县、龙州县、天等县、富川瑶族自治县、昭平县、钟山县、永福县、阳朔县、恭城瑶族自治县、上林县、马山县、岑溪市、蒙山县、象州县、金秀瑶族自治县、凌云县、容县、东兴市、浦北县；【广东-8个】梅县区、大埔县、蕉岭县、丰顺县、三水区、连州市、徐闻县、信宜市；【河南-7个】夏邑县、永城市、宁陵县、民权县、淮阳县、封丘县、修武县；【山东-6个】文登区、乳山市、高密市、青州市、莱州市、单县；【江苏-5个】如皋市、如东县、启东市、溧阳市、太仓市；【贵州-5个】石阡县、印江土家族苗族自治县、赤水市、罗甸县、兴仁县；【浙江-5个】丽水市、仙居县、文成县、永嘉县、桐庐县；【四川-3个】都江堰市、彭山县、雁江区；【福建-3个】泉港区、诏安县、柘荣县；【海南-3个】文昌市、万宁市、澄迈县；【江西-2个】丰城市、铜鼓县；【安徽-1个】谯城区；【重庆-1个】江津区；【上海-1个】崇明区；【湖北-1个】钟祥市；【湖南-1个】麻阳县","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:38:20","updateTime":"2021-05-28 12:38:20","isExist":null},{"id":4434,"question":"新冠状病毒疫苗如何打?","simplecontent":null,"content":"打两次，第二次隔开28天","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:36:25","updateTime":"2021-05-28 12:36:25","isExist":null},{"id":4433,"question":"适合家养的十种鸟类？","simplecontent":null,"content":"　　1.八哥\n\n　　2.玄凤鹦鹉\n\n　　3.百灵鸟\n\n　　4.画眉\n\n　　5.金丝雀\n\n　　6.珍珠鸟\n\n　　7.文鸟\n\n　　8.虎皮鹦鹉\n\n　　9.黄鹂\n\n　　10.相思鸟","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:35:29","updateTime":"2021-05-28 12:35:29","isExist":null},{"id":4432,"question":"一、酒后驾车处罚？","simplecontent":null,"content":"饮酒后驾驶机动车的，处暂扣6个月机动车驾驶证，并处1000元以上2000元以下罚款。\n\n因饮酒后驾驶机动车被处罚，再次饮酒后驾驶机动车的，处10日以下拘留，并处1000元以上2000元以下罚款，吊销机动车驾驶证。\n\n饮酒后驾驶营运机动车的，处15日拘留，并处5000元罚款，吊销机动车驾驶证，5年内不得重新取得机动车驾驶证。\n\n二、醉酒驾车处罚\n\n醉酒驾驶机动车的，由公安机关交通管理部门约束至酒醒，吊销机动车驾驶证，依法追究刑事责任；五年内不得重新取得机动车驾驶证。\n\n\n\n扩展资料：\n\n避免方法\n\n避免酒后驾驶方法\n\n1.国家法律提供支援：国家提供酒后驾车相关限制管理法律条文，交通管理部门应借鉴国外方式对有酒驾记录人员实施强制安装防酒后驾驶系统。\n\n2.提供“酒后代驾”服务：餐饮娱乐场所为客人开设“酒后代驾”服务，或由政府开通“酒后代驾”服务专线。\n\n3.免收酒后过夜停车费：餐饮娱乐场所免收酒后客人的车辆过夜停车费，支持客人在酒后主动放弃驾驶。\n\n4.在酒标酒单上印制警示令：将“酒后不驾车”的宣传语、漫画等印在酒瓶的商标上及餐饮娱乐场所的酒水单上。\n\n5.履行社会服务令：除国家规定的处罚外，酒后驾车者还要到医院做义工。\n\n6.避免侥幸心理：消除人们“少喝酒不影响开车”的认识误区，剖析酒精对驾车者的影响和危害，警示人们放弃侥幸心理。\n\n7.配备“车德”卡：在每辆车上配一张“车德”卡，每次被查到酒驾就在“车德卡”上做一个记号，实现社会共同监督。\n\n8.录制亲情提示音：录下孩子童声“爸爸，喝酒别开车，我和妈妈在家等你”作为手机定时提醒录音，从晚上7时开始，每小时提醒1次。\n\n9.为醉酒者友情叫车：为醉酒者（不论是朋友还是陌生人）叫辆出租车。\n\n10.发挥车友会的作用：由车友俱乐部向全体车友发出倡议避免酒后驾车，车友之间互相监督。\n\n参考资料来源：百度百科-酒后驾驶","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-28 12:34:51","updateTime":"2021-05-28 12:34:51","isExist":null},{"id":4431,"question":"摩托车碟刹锁和U型锁哪个防盗性能更好？","simplecontent":null,"content":"碟刹锁是在有碟刹的车上防盗用的。由于碟刹锁安全易用，目前市面上用的人越来越多。但也有碟刹锁被破坏车辆被盗的情况，被破坏的锁多是小偷用钢锯锯断锁舌。\n\nU型锁，其包括一U型锁杆及一锁体，其锁体主要是于本体中装设一端部具旋块的锁芯，相对锁芯旋块两侧分别装置一可活动锁掣U型锁杆的锁掣件，于本体外侧固设一外壳体，本体内相对二锁掣件下方分别设一容置弹簧的容置槽，锁掣件以其底面的抵接杆直接抵靠弹簧侧端，使锁掣件锁掣U型锁杆，以旋块较大的作用平面推抵锁掣件侧端，而达成较佳的锁掣效果以及避免锁掣后晃动等功效。\n\n防范自行车、电动自行车和摩托车被偷盗，最重要的是克服麻痹思想，离开车子时注意不要嫌麻烦，随时随地锁车尤为重要，这也是防范车辆被盗最起码应该做到的。选择高质量的车锁，最好同时使用两种不同类型的车锁。虽然双锁并非就能完全防止被盗，但至少能给偷车贼造成点困难，让其知难而退，这样可以大大提高安全系数。\n\n不要乱扔乱放，最好将其与车锁在一个不能移动的物体上。因为即使再好的车锁对自行车来讲也并非绝对安全，特别是那些新型、高档和名牌自行车，采取扛走或整车拉走方法偷盗的案件时有发生，因此，如果有条件，首先要将车辆停放到有人看守、管理规范的停车场，那里是相对最安全的。\n\n\n\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-27 23:10:41","updateTime":"2021-05-27 23:10:41","isExist":null},{"id":4430,"question":"为什么大胜和大败表示的是一个意思?","simplecontent":null,"content":"大胜：取得了很大的胜利，强调的是己方，胜利的一方，如 我军大胜而归\n大败：对方被我方打败了，强调的是对方。失败的对象，如 敌军大败而回\n两者皆是我方胜利，只是强调的侧重点不一样，具体要结合语境体会，中文是形意语言，不同于欧美等形声语言。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-27 18:47:30","updateTime":"2021-05-27 18:47:30","isExist":null},{"id":4429,"question":"蓉城是哪个城市?","simplecontent":null,"content":"　　蓉城，又叫芙蓉城，来源于一种源产于我国西南地区的芙蓉花，而芙蓉花是成都的市花，所以蓉城指的便是成都。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-27 17:55:17","updateTime":"2021-05-27 17:55:17","isExist":null},{"id":4428,"question":"华南地区是哪里?","simplecontent":null,"content":"华南地区，简称华南，是中国七大地理分区之一，位于中国南部。包括广东省、广西壮族自治区、海南省、香港特别行政区、澳门特别行政区。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-27 10:31:26","updateTime":"2021-05-27 10:31:26","isExist":null},{"id":4427,"question":"如何反驳?","simplecontent":null,"content":"说白了，事后才想起如何反驳别人，是因为事中难以组织语言对别人进行反驳，或因为紧张导致大脑空白，或因为想反驳的点太多无从下口，或因为虽然感到不适但不知该如何反驳，从而需要经过一段时间的思考之后才能想通、捋顺。\n\n这是不少人都会遇到的问题，不要以为健谈的人就能避免这一情况。想要做到优雅地、不留漏洞地反驳，需要在最短的时间内弄明白自己为什么想反驳、自己该就什么点进行怎样的反驳。就这方面的能力，知乎上各个答主见仁见智，不过我认为大多都较为复杂，有些甚至给出密密麻麻的思维导图，而我要介绍的方法，不仅简单而且有效，如果读罢觉得颇有裨益，不妨点个赞~\n\n1.方法简介\n\n共有三个方法，第一种方法用于捋清反驳点，第二、三种方法用于迅速反驳或回应。\n\n第一种方法被我称为“定位判断法”，接下来经过我的分析你会发现，大多数你想要反驳的点，之所以会引起你反驳的欲望，是因为对方对于某件事情的定位与你的认知不符，通过“定位”这一概念可以帮助你迅速捋反驳的点。\n\n第二种方法被我称为“现实演绎法”，接下来经过我的分析你会发现，这是一个非常省力但是力量不减的反驳方法，其原理在于利用对方的理论在现实中进行演绎，使对方论调中与现实相矛盾的点自然浮现，而不需要自己组织过多的结构性语言。\n\n第三种方法被我称为“定位调整法”。在判断出对方的论调与现实相符的时候，自己应该如何回应？这种方法就是用于此种情况。\n\n好的，接下来我将举一些例子来说明。\n\n2.方法使用\n\n2.1当对方的论调与现实不一致\n\n当对方论调与现实不一致，或者说与你认为正确的现实不一致的时候，你会有一颗反驳的心，那么这个时候可以开始表演了。\n\nExm.1\n\n“你怎么才考上一所这么普通的211学校呀，你学习真的太差劲了！”\n\nstep1：使用定位判断法，弄明白这句话的什么地方让你有反驳感。不难发现，是“高考考上211学校”与“学习差劲”的定位出现差错，事实上，中国高考生有70%以上的学生甚至连一本都没法考上，因此怎么能把考上211学校定位为差劲的学习成绩呢？显然两者的定位是不匹配的。\n\nstep2：使用现实演绎法，既然明白是何处不匹配，那么不妨承认对方的观点，并顺着他的话语回答：“是呀，我也是这么觉得的。不过如果连我这样的成绩都叫做差劲，那么中国70%以上的高考生，他们甚至连一本都考不上，是不是他们就不能用差劲这个词来形容，而应该称为不配读书了呢？”","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-27 09:02:29","updateTime":"2021-05-27 09:02:29","isExist":null},{"id":4426,"question":"如何反驳别人?","simplecontent":null,"content":"1/6分步阅读\n听清楚别人说的是什么，这个是非常重要的，因为不管我们要怎么样去反驳别人我们只有听清楚别人说的是什么了之后，我们才能够根据自身的一些特点对别人的话进行反驳。\n\n\n2/6\n注意找漏洞，在听别人讲话的时候，我们最重要的就是听出别人话里的漏洞，也就是说，抓住别人的弱点，这样我们才可以利用别人的弱点来反驳对方的观点，而且这种反驳往往是比较有效的。\n\n\n怎样挽回死心的女友?99种方案快速挽回\n广告\n3/6\n引导对方发现自己的错误，也就是说在反驳的时候，最高明的一个办法是能够引导对方发现自己的一个错误，让对方亲口承认这是错的，这样的反驳方法是很不错的。\n\n\n逗女朋友开心的话题_拼多多精选好货限时特卖_领券拼单更优惠\n广告\n4/6\n避免说脏话，在反驳对方的观点的时候，要尽量避免说脏话，这样的话不管你说的话对不对，只要你说了脏话，在别人的眼中，都会认为是你的不对，所以一定不要讲脏话。\n\n\n缓解焦虑的放松方法_焦虑的症状有哪些\n广告\n5/6\n学会使用一些技巧，也就是说在反驳的时候没有必要正面去回答，我们可以比较婉转的去反驳对方，这样的效果有时候比直接说还要好，还能够更好的去反驳对方。\n\n\n6/6\n不要老是重复一句话，这样的话，两边僵持不下，是一种很尴尬的局面，所以最好是能够寻求创新，而不是一直去重复一些说过的观点，讲过的话。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-27 08:59:24","updateTime":"2021-05-27 08:59:24","isExist":null},{"id":4425,"question":"生菜有寄生虫吗?","simplecontent":null,"content":"生菜上面很多鼻涕虫蜗牛，爬过的地方都有寄生虫","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 18:39:23","updateTime":"2021-05-26 18:39:23","isExist":null},{"id":4424,"question":"链子锁安全还是U型锁安全？","simplecontent":null,"content":"U形锁好，比链锁要安全。因为构成链锁的金属是缠绕成的，虽然整体看着挺粗，但是单个要细一些，专业小偷能够比较容易弄断。你要知道现如今的小偷手段很是历害。\n\n当然U形啊，链子锁绑建筑物上又不影响小偷夹断链子，又不是夹断建筑物\n\n钥匙锁有质量很好的，比如某四节和某头鹰。密码锁没见过质量好的，小偷来了根本不撬直接咔就给剪断了……","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 16:34:57","updateTime":"2021-05-26 16:34:57","isExist":null},{"id":4423,"question":"用密码锁锁电动车还会被偷吗？","simplecontent":null,"content":"级别低的小偷普通的电机锁都打不开。\n高级的，开着面包车，打开后门把电动车往里面一装拉着就在，真的什么锁都没有用呀！{拉到窝点，什么锁打不开呀}\n唉……车真的丢了只能报警和用不文明的语言问候小偷的长辈们了！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 16:28:18","updateTime":"2021-05-26 16:28:18","isExist":null},{"id":4422,"question":"电动车用密码锁好用吗？安全性比U型锁强吗？","simplecontent":null,"content":"建议你两种都用。因为外观没有锁，很容易让人惦记，我的一开始就是电子锁，总有人想推走。再者加上U型锁就更保险了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 16:27:10","updateTime":"2021-05-26 16:27:10","isExist":null},{"id":4421,"question":"如何堵住锁芯?","simplecontent":null,"content":"方法有3种：\n\n将嚼软的泡泡糖塞在锁眼处，并找一条细铁丝将泡泡糖往锁眼深处带。这样，锁眼就被泡泡糖给堵住了。\n\n\n\n将520胶水倒入锁眼中，等凝固后即可堵住锁眼。\n\n将牙签折成几小段（大概就钥匙的一半长短），再用锤子将牙签锤进锁眼，直至将整个锁眼塞满牙签即可。\n\n扩展资料\n锁是一个汉字，读作suǒ，本意是指置于可启闭的器物上，以钥匙或暗码开启，引申义是用锁锁住、封闭。该文字在《大铁椎传》和《论衡·订鬼篇》等文献均有记载。\n\n参考资料\n锁-百度百科","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 16:17:11","updateTime":"2021-05-26 16:17:11","isExist":null},{"id":4420,"question":"锁芯被堵怎么办?","simplecontent":null,"content":"1、如果外漏的牙签多一点，可以用镊子试一试，一般情况可以夹出来。\n\n2、如果外漏的少，可以试一下用针或者锥子等尖一点的东西拨出来。\n\n3、牙签内滴一点油，火机引燃牙签。当牙签成灰烬就可以了。\n\n4、如果实在无法解决，只能找专业开锁人员了。例如更换锁芯等。\n\n5、也可以把锁砸开。\n\n6、找专业开锁人员，把整个锁拆下来，在进行维修。\n\n\n\n\n扩展资料：\n\n锁芯的注意事项：\n\n1、换防盗门的锁芯，特别要注意的就是，门的锁芯的尺寸大小，量好了之后再买同样大小的锁芯进行更换。如果尺寸没弄好，新买的锁芯就没办法安装。\n\n2、如果是找别人换锁芯，为了安全起见，避免别人私藏钥匙，在换锁的时候，一定要多加留心。\n\n3、购买锁芯时，检查产品的使用功能是否可靠、灵活、应选择两把以上的产品进行对照检查，特别是购买双向锁头产品时，必须用全部钥匙分别对内、外锁头进行试开关。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 16:16:25","updateTime":"2021-05-26 16:16:25","isExist":null},{"id":4419,"question":"现在高铁上允许带多箱牛奶吗？","simplecontent":null,"content":"您好，牛奶不属于铁路部门规定限量携带上车的物品。\n对于旅客可以免费携带上车的行李重量和外形，铁路部门有相应的规定：\n每名旅客免费携带品的重量和体积是：儿童（含免费儿童）10千克，外交人员35千克，其他旅客20千克。\n每件物品外部尺寸长、宽、高之和不超过160厘米，但乘坐动车组列车不超过130厘米。\n具体到牛奶来说，一袋或者一小盒大概是250克，按一箱12袋/盒考虑，也就是3千克，加上包装，不会超过4千克，也就是可以带5箱上车。\n只要保证总的重量不超过20千克就行。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:09:08","updateTime":"2021-05-26 11:09:08","isExist":null},{"id":4418,"question":"可以带食用油上高铁吗？","simplecontent":null,"content":"高铁上是可以带食用油的。\n火车都会通过安检程序，会检测出不能带上火车的物品，而食用油并不属于危险物品，因此是可以带上火车的。但火车有携带物品重量和昌都规定，大人最多携带20公斤，小孩10公斤，并且长宽高总和不得超过160厘米。扁担、标杆、塔尺等杆形物品的长度不得超过200厘米。\n旅客携带品由自己负责看管。每人免费携带品的重量和体积是：儿童(含免费儿童)10千克，外交人员35千克，其他旅客20千克。每件物品外部尺寸长、宽、高之和不超过160厘米，杆状物品不超过200厘米，但乘坐动车组列车不超过130厘米;重量不超过20千克。\n残疾人旅行时代步的折叠式轮椅可免费携带并不计入上述范围。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:08:22","updateTime":"2021-05-26 11:08:22","isExist":null},{"id":4417,"question":"狗狗能带上高铁吗?","simplecontent":null,"content":"狗狗是不能带上高铁的，如果主人要带狗狗出门，建议提前到高铁站咨询是否能够办理宠物托运业务，如果可以，主人需要提前带上狗狗的疫苗本、动物检疫合格证等证件到办理处进行托运。如果主人选择托运狗狗，还需要准备托运箱、适量饮水和食物，为了避免狗狗丢失，最好在托运箱上留下主人的信息。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:07:38","updateTime":"2021-05-26 11:07:38","isExist":null},{"id":4416,"question":"榴莲可以带上高铁吗?","simplecontent":null,"content":"榴莲是不能带上高铁的。\n\n据了解，妨碍公共卫生(包括有恶臭等异味)的物品，是不能带上火车的，其中就包括榴莲，还有臭豆腐什么的。\n\n有强烈刺激性气味的物品，或者带有异味的物品也不能携带，因此榴莲、臭豆腐不能带上高铁。\n\n\n\n扩展资料：\n\n《铁路进站乘车禁止和限制携带物品》，其中明确提到：“请勿携带以下危害列车运行安全或公共卫生的物品：可能干扰列车信号的强磁化物，有强烈刺激性气味的物品，有恶臭等异味的物品，活动物（导盲犬除外），可能妨碍公共卫生的物品，能够损坏或者污染车站、列车服务设施、设备、备品的物品。\n\n除了易燃易爆类、枪支弹药类、剧毒危险类物品，还有一部分常见物品也属于限制携带范畴：“限量携带以下物品：不超过20毫升的指甲油、去光剂、染发剂；不超过120毫升的冷烫精、摩丝、发胶、杀虫剂、空气清新剂等自喷压力容器；安全火柴2小盒；普通打火机2个。”\n\n此外，特别将家禽、宠物等“活动物”单独列出，但导盲犬除外。榴莲属于有异味食品，味道实在太大，不可以随身携带，否则会对大部分乘客造成困扰。\n\n另外，国际上几乎所有航班都严禁有刺激性、有恶臭的物品带上飞机，因此榴莲不能随身携带和托运。\n\n参考资料：火车网-榴莲能带上高铁吗","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:07:12","updateTime":"2021-05-26 11:07:12","isExist":null},{"id":4415,"question":"高铁禁止携带物品清单？","simplecontent":null,"content":"枪支、子弹类（含主要零部件）：\n①军用枪：手枪、步枪、冲锋枪、机枪、防暴枪等以及各类配用子弹。\n\n②民用枪：气枪、猎枪、运动枪、麻醉注射枪等以及各类配用子弹。\n\n③其他枪支：道具枪、发令枪、钢珠枪等。\n\n④上述物品的样品、仿制品。\n\n爆炸物品类：\n①弹药：炸弹、照明弹、燃烧弹、烟幕弹、信号弹、催泪弹、毒气弹、手雷、手榴弹等。\n\n②爆破器材：炸药、雷管、导火索、导爆索等。\n\n③烟火制品：礼花弹、烟花、鞭炮、摔炮、拉炮、砸炮、发令纸等各类烟花爆竹以及黑火药、烟火药、引火线等。\n\n④上述物品的仿制品。\n\n管制器具：\n①管制刀具：匕首、三棱刀（包括机械加工用的三棱刮刀）、带有自锁装置的弹簧刀以及其他类似的单刃、双刃刀等。\n\n②其他器具：警棍、催泪器、催泪枪、电击器、电击枪、防卫器、弓、弩等。\n\n易燃易爆物品：\n①压缩气体和液化气体：氢气、甲烷、乙烷、丁烷、天然气、乙烯、丙烯、乙炔（溶于介质的）、一氧化碳、液化石油气、氟利昂、氧气（供病人吸氧的袋装医用氧气除外）、水煤气等。\n\n②易燃液体：汽油、煤油、柴油、苯、乙醇（酒精）、丙酮、乙醚、油漆、稀料、松香油及含易燃溶剂的制品等。\n\n③易燃固体：红磷、闪光粉、固体酒精、赛璐珞、发泡剂H等。\n\n④自燃物品：黄磷、白磷、硝化纤维（含胶片）、油纸及其制品等。\n\n⑤遇湿易燃物品：金属钾、钠、锂、碳化钙（电石）、镁铝粉等。\n\n⑥氧化剂和有机过氧化物：高锰酸钾、氯酸钾、过氧化钠、过氧化钾、过氧化铅、过醋酸、双氧水等。\n\n毒害品：\n氰化物、砒霜、剧毒农药等剧毒化学品以及硒粉、苯酚等。\n腐蚀性物品：\n硫酸、盐酸、硝酸、氢氧化钠、氢氧化钾、蓄电池（含氢氧化钾固体、注有酸液或碱液的）、汞（水银）等。\n放射性物品：\n放射性同位素等。\n传染病病原体：\n乙肝病毒、炭疽杆菌、结核杆菌、艾滋病病毒等。\n其他：\n①其他危害列车运行安全的物品，如可能干扰列车信号的强磁化物、有强烈刺激性气味的物品、不能判明性质可能具有危险性的物品等。\n\n②国家法律、行政法规、规章规定的其他禁止携带、运输的物品。\n\nmaigoo小编提醒：违规携带上述物品，将依照国家法律法规的规定处理。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:06:16","updateTime":"2021-05-26 11:06:16","isExist":null},{"id":4414,"question":"高铁限带物品？","simplecontent":null,"content":"不超过20毫升的指甲油、去光剂、染发剂；\n不超过120毫升的冷烫精、摩丝、发胶、杀虫剂、空气清新剂等自喷压力容器；\n安全火柴2小盒；\n普通打火机2个。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:05:34","updateTime":"2021-05-26 11:05:34","isExist":null},{"id":4413,"question":"坐高铁可以带酒吗？","simplecontent":null,"content":"在铁路部门对携带物品的规定中，没有明确限制酒水的携带，但有所限制。首先散装酒是不可以携带乘车的，旅客可以携带封存完好的瓶装白酒上车。另外，乘客不能直接携带超过100毫升的酒精。并且在数量上也限制了只能携带20瓶酒。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-26 11:05:16","updateTime":"2021-05-26 11:05:16","isExist":null},{"id":4404,"question":"spring boot 核心配置文件是什么？","simplecontent":null,"content":"spring boot 核心的两个配置文件：\nbootstrap (. yml 或者 . properties)：boostrap 由父 ApplicationContext 加载的，比 applicaton 优先加载，且 boostrap 里面的属性不能被覆盖；\napplication (. yml 或者 . properties)：用于 spring boot 项目的自动化配置。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 08:14:10","updateTime":"2021-05-26 08:14:10","isExist":null},{"id":4412,"question":"AQS内部的数据结构与原理?","simplecontent":null,"content":"AQS内部实现了两个队列，一个同步队列，一个条件队列。\nQIMk8I.png\n同步队列的作用是：当线程获取资源失败之后，就进入同步队列的尾部保持自旋等待，不断判断自己是否是链表的头节点，如果是头节点，就不断参试获取资源，获取成功后则退出同步队列。\n条件队列是为Lock实现的一个基础同步器，并且一个线程可能会有多个条件队列，只有在使用了Condition才会存在条件队列。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:20:06","updateTime":"2021-05-26 01:20:06","isExist":null},{"id":4398,"question":"运行 Spring Boot 有哪几种方式？","simplecontent":null,"content":"1.打包用命令或者放到容器中运行\n2.用 Maven/Gradle 插件运行\n3.直接执行 main 方法运行","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4399,"question":"你如何理解 Spring Boot 中的 Starters？","simplecontent":null,"content":"Starters 理解为启动器，它包含了一系列可以集成到应用里面的依赖包，方便开发者快速集成 Spring 及其他技术，避免投入很多精力寻找依赖包或者代码的工作。\n\nSpring 的官方启动器都是以 spring-boot-starter- 命名的，代表了一个特定\n的应用类型。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4400,"question":"Spring Boot 的核心注解是哪个？它主要由哪几个注解组成的？","simplecontent":null,"content":"启动类上面的注解是 @Spring BootApplication，它也是 Spring Boot 的核心注解，主要组合包含了以下 3 个注解：\n\n@Spring BootConfiguration：组合了 @Configuration 注解，实现配置文件的功能。\n\n@EnableAutoConfiguration：打开自动配置的功能，也可以关闭某个\n自 动 配 置 的 选 项 ， 如 关 闭 数 据 源 自 动 配 置 功 能 ： @Spring BootApplication(exclude={ DataSourceAutoConfiguration.class })。\n@ComponentScan：Spring 组件扫描。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4402,"question":"SpringBoot的优点?","simplecontent":null,"content":"1、减少开发、测试时间和努力\n2、使用JavaConfig有助于避免使用XML\n3、避免大量的maven导入和各种版本冲突\n4、提供意见发展方法\n5、通过提供默认值快速开始开发\n6、没有单独的web服务器需要，这就意味着不再需要启动Tomcat、Glassfish或其他任何东西\n7、需要更少的配置，因为没有web.xml文件。只需添加用@Configuration注释的类，然后添加用@Bean注释的方法，Spring将自动加载对象并像以前一样对其进行管理。甚至可以将@Autowired添加到bean方法中，以使用Spring自动装入需要的依赖关系中","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4403,"question":"为什么要用 spring boot？","simplecontent":null,"content":"《配置少，监控，独立运行，上手快》\n配置简单\n独立运行\n自动装配\n无代码生成和 xml 配置\n提供应用监控\n易上手\n提升开发效率","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4405,"question":"spring boot 配置文件有哪几种类型？它们有什么区别？","simplecontent":null,"content":"配置文件有 . properties 格式和 . yml 格式，它们主要的区别是书法风格不同。\n. properties 配置如下：\nspring. RabbitM port=5672\n. yml 配置如下：\nspring:\n    RabbitMQ:\n        port: 5672\n. yml 格式不支持 @PropertySource 注解导入。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4406,"question":"spring boot 有哪些方式可以实现热部署？","simplecontent":null,"content":"使用 devtools 启动热部署，添加 devtools 库，在配置文件中把 spring. devtools. restart. enabled 设置为 true；\n使用 Intellij Idea 编辑器，勾上自动编译或手动重新编译。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4407,"question":"jpa 和 hibernate 有什么区别？？？？？？？？","simplecontent":null,"content":"jpa 全称 Java Persistence API，是 Java 持久化接口规范，hibernate 属于 jpa 的具体实现。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4408,"question":"SpringBoot常用的starter?","simplecontent":null,"content":"1、spring-boot-starter-web(嵌入Tomcat和web开发需要的servlet和jsp支持)\n2、spring-boot-starter-data-jpa(数据库支持)\n3、spring-boot-starter-data-Redis(Redis支持)\n4、spring-boot-starter-data-solr(solr搜索应用框架支持)\n5、mybatis-spring-boot-starter(第三方mybatis集成starter)\nSpringBoot自动配置原理：\n1、@EnableAutoConfiguration这个注解会\"猜\"你将如何配置spring，前提是你已经添加了jar依赖项，如果spring-boot-starter-web已经添加Tomcat和SpringMVC，这个注释就会自动假设您在开发一个web应用程序并添加相应的spring配置，会自动去maven中读取每个starter中的spring.factories文件，该文件里配置了所有需要被创建spring容器中bean\n2、在main方法中加上@SpringBootApplication和@EnableAutoConfiguration","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4409,"question":"SpringBoot starter工作原理?","simplecontent":null,"content":"1、SpringBoot在启动时扫描项目依赖的jar包，寻找包含spring.factories文件的jar\n2、根据spring.factories配置加载AutoConfigure\n3、根据@Conditional注解的条件，进行自动配置并将bean注入到Spring Context","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4410,"question":"使用httpclient调用远程接口设置超时?","simplecontent":null,"content":"客户端设置超时时间\n\n服务端\n\n客户端返回为null  不是500  但是服务器执行成功 插入数据库成功","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4411,"question":"常见注解?","simplecontent":null,"content":"一.mybatis\n\n 1 配置一对多查询和多对多查询的注解方式映射关系：\n @Results：声明映射关系的配置  Value属性接收 @Result的数组\n @Result：配置映射关系 \n  id属性（boolean）声明是否为主键配置 \n  Property属性对象中的属性名\n  Column属性查询的字段名\n\n二.spring\n\n2 创建当前对象交给spring容器管理的注解\n@Component(value=\"id标识\")\n@Controller(value=\"id标识\")  web层\n@Service(value=\"id标识\")     service层\n@Repository(value=\"id标识\")  dao层\n说明：需要配置到类上 Value属性指定唯一标识\n\n3 属性依赖注入的注解\n@Autowired\n说明：默认按照类型（接口）从容器中查找对象并注入 也可以以属性名作为唯一标识从容器中查找对象并注入\n@Qualifier(value=\"id标识\") Value属性可以按照id唯一标识注入\n@Value\n说明：注入基本数据类型数据 也可以注入被spring容器管理的properties文件中的内容\n\n4 生命周期相关的注解\n@Scope \n说明：对象的作用 Value属性（singleton|prototype）\n@PostConstruct \n说明：配置到方法上 用来配置初始化方法\n@PreDestory\n说明：配置到方法上 用来配置销毁方法\n\n\n5 使用配置类替换xml配置文件的注解\n@Configuration：声明配置类\n@ComponentScan: 开启包扫描\n@PropertySource：将properties配置文件交给spring容器管理\n@Import：引入其它的配置类\n@Bean : 配置到方法上，表明此方法的返回值交给spring容器管理\n\n6 springTest的相关注解\n@Runwith(SpringJunit4ClassRunner.class) 声明spring提供的类加载配置文件\n@ContextConfiguration 声明spring的配置信息 \nLocations属性xml配置文件  Classes属性配置类的字节码\n\n7 AOP相关的注解\n@Aspect 声明切面类\n@PonitCut 定义公共的切入点  配置到空方法上\nvalue属性切入点表达式  引用：方法名()\n配置通知类型：\n@Before 前置通知\n@AfterReturnint 后置通知\n@AfterThrowing  异常通知\n@After    最终通知\n@Around    环绕通知\n@EnableAspectJAutoProxy 开启对AOP注解的支持 用于纯注解使用\n\n8 事务相关的注解\n@Transactional 需要事务的类或者方法上使用配置事务\n@EnableTransactionManagement 纯注解使用 代表开启对注解事务的支持\n\n三.springmvc\n\n9  @RequestMapping(\"/user\") 做浏览的访问路径和当前方法的映射\n@RequestHeader 获取到请求头的信息\n@CookieValue  获取到cookie的jsessionID\n@RequestBody  配置到方法参数上，表明将json字符串转化为java对象\n@ResponseBody  配置到方法返回值，表明将对象转化为json字符串\n@RequestBody   配置到方法参数，表明将json字符串转化为对象\n@SessionAttributes(value = {\"username\"})  //代表当前类中的所有方法 只要是model对象操作了指定的参数 都会向session域中存一份\n@ModelAttribute(\"aaa\") 向Model中添加元素","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:20","updateTime":"2021-05-26 01:11:20","isExist":null},{"id":4385,"question":"Controller使用无注解接收参数?","simplecontent":null,"content":"在url使用Get和post可以的，但是在form-data只能用post可以，get不可以；","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4386,"question":"Controller接收参数的几种常用方式?","simplecontent":null,"content":"第一类：请求路径参数\n1、@PathVariable\n获取路径参数。即url/{id}这种形式。\n2、@RequestParam\n获取查询参数。即url?name=这种形式\n@GetMapping(\"/demo/{id}\")\npublic void demo(@PathVariable(name = \"id\") String id, @RequestParam(name = \"name\") String name) {\n    System.out.println(\"id=\"+id);\n    System.out.println(\"name=\"+name);\n}\n第二类：Body参数\n因为是POST请求，这里用Postman的截图结合代码说明\n1、@RequestBody\n@PostMapping(path = \"/demo1\")\npublic void demo1(@RequestBody Person person) {\n    System.out.println(person.toString());\n}\n2、无注解\n@PostMapping(path = \"/demo2\")\npublic void demo2(Person person) {\n    System.out.println(person.toString());\n}\n\n第三类：请求头参数以及Cookie\n1、@RequestHeader\n2、@CookieValue\n@GetMapping(\"/demo3\")\npublic void demo3(@RequestHeader(name = \"myHeader\") String myHeader,\n        @CookieValue(name = \"myCookie\") String myCookie) {\n    System.out.println(\"myHeader=\" + myHeader);\n    System.out.println(\"myCookie=\" + myCookie);\n}\n@GetMapping(\"/demo3\")\npublic void demo3(HttpServletRequest request) {\n    System.out.println(request.getHeader(\"myHeader\"));\n    for (Cookie cookie : request.getCookies()) {\n        if (\"myCookie\".equals(cookie.getName())) {\n            System.out.println(cookie.getValue());\n        }\n    }\n}","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4387,"question":"@Component和@Configuration作为配置类的差别?","simplecontent":null,"content":"@Configuration 中所有带 @Bean 注解的方法都会被动态代理，因此调用该方法返回的都是同一个实例。\n@Configuration 注解本质上还是 @Component，因此 <context:component-scan/> 或者 @ComponentScan 都能处理@Configuration 注解的类。\n\n@Component 注解并没有通过 cglib 来代理@Bean 方法的调用","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4388,"question":"springboot项目启动自动执行方法?","simplecontent":null,"content":"@Component\npublic class InitProject implements ApplicationRunner {\n    private static final Logger LOG = LoggerFactory.getLogger(InitProject.class);\n\n    @Override\n    public void run(ApplicationArguments args) throws Exception {\n        LOG.info(\"==========init project===========\");\n    }\n}","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4389,"question":"】springboot启动过程?主程序启动、进入run方法、配置参数和属性，获取监听器、刷新上下文","simplecontent":null,"content":"SpringBoot的启动主要是通过实例化SpringApplication来启动的，启动过程主要做了以下几件事情：配置属性、获取监听器，发布应用开始启动事件初、始化输入参数、配置环境，输出banner、创建上下文、预处理上下文、刷新上下文(加载tomcat容器)、再刷新上下文、发布应用已经启动事件、发布应用启动完成事件。\nhttps://jingyan.baidu.com/article/b7001fe154c2b54f7382dd2c.html\n1、新建module,在主程序类加入断点，启动springboot\n2、首先进入SpringAplication类run方法\n3、run方法新建SpringApplication对象\n4、SpringApplication对象的run方法，首先创建并启动计时监控类\n5、接着通过configureHeadlessProperty设置java.awt.headless的值\n6、接着调用getRunListeners创建所有spring监听器\n7、接着DefaultApplicationArguments初始化应用应用参数\n8、接着prepareEnvironment根据运行监听器和参数准备spring环境\n9、接着调用createApplicationContext方法创建应用上下文\n10、通过prepareContext准备应用上下文\n11、refreshContext方法刷新上下文\n12、调用stop方法停止计时监控器类\n13、调用started发布应用上下文启动完成事件\n14、callRunners方法执行所有runner运行器\n15、调用running发布应用上下文就绪事件\n16、最后返回应用上下文","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4390,"question":"spring boot启动器?","simplecontent":null,"content":"1）spring-boot-starter \n这是Spring Boot的核心启动器，包含了自动配置、日志和YAML。\n2）spring-boot-starter-actuator \n帮助监控和管理应用。\n3）spring-boot-starter-amqp \n通过spring-rabbit来支持AMQP协议（Advanced Message Queuing Protocol）。\n4）spring-boot-starter-aop \n支持面向方面的编程即AOP，包括spring-aop和AspectJ。\n5）spring-boot-starter-artemis \n通过Apache Artemis支持JMS的API（Java Message Service API）。\n6）spring-boot-starter-batch \n支持Spring Batch，包括HSQLDB数据库。\n7）spring-boot-starter-cache \n支持Spring的Cache抽象。\n8）spring-boot-starter-cloud-connectors \n支持Spring Cloud Connectors，简化了在像Cloud Foundry或Heroku这样的云平台上连接服务。\n9）spring-boot-starter-data-elasticsearch \n支持ElasticSearch搜索和分析引擎，包括spring-data-elasticsearch。\n10）spring-boot-starter-data-gemfire \n支持GemFire分布式数据存储，包括spring-data-gemfire。\n11）spring-boot-starter-data-jpa \n支持JPA（Java Persistence API），包括spring-data-jpa、spring-orm、Hibernate。\n12）spring-boot-starter-data-mongodb \n支持MongoDB数据，包括spring-data-mongodb。\n13）spring-boot-starter-data-rest \n通过spring-data-rest-webmvc，支持通过REST暴露Spring Data数据仓库。\n14）spring-boot-starter-data-solr \n支持Apache Solr搜索平台，包括spring-data-solr。\n15）spring-boot-starter-freemarker \n支持FreeMarker模板引擎。\n16）spring-boot-starter-groovy-templates \n支持Groovy模板引擎。\n17）spring-boot-starter-hateoas \n通过spring-hateoas支持基于HATEOAS的RESTful Web服务。\n18）spring-boot-starter-hornetq \n通过HornetQ支持JMS。\n19）spring-boot-starter-integration \n支持通用的spring-integration模块。\n20）spring-boot-starter-jdbc \n支持JDBC数据库。\n21）spring-boot-starter-jersey \n支持Jersey RESTful Web服务框架。\n22）spring-boot-starter-jta-atomikos \n通过Atomikos支持JTA分布式事务处理。\n23）spring-boot-starter-jta-bitronix \n通过Bitronix支持JTA分布式事务处理。\n24）spring-boot-starter-mail \n支持javax.mail模块。\n25）spring-boot-starter-mobile \n支持spring-mobile。\n26）spring-boot-starter-mustache \n支持Mustache模板引擎。\n27）spring-boot-starter-redis \n支持Redis键值存储数据库，包括spring-redis。\n28）spring-boot-starter-security \n支持spring-security。\n29）spring-boot-starter-social-facebook \n支持spring-social-facebook\n30）spring-boot-starter-social-linkedin \n支持pring-social-linkedin\n31）spring-boot-starter-social-twitter \n支持pring-social-twitter\n32）spring-boot-starter-test \n支持常规的测试依赖，包括JUnit、Hamcrest、Mockito以及spring-test模块。\n33）spring-boot-starter-thymeleaf \n支持Thymeleaf模板引擎，包括与Spring的集成。\n34）spring-boot-starter-velocity \n支持Velocity模板引擎。\n35）spring-boot-starter-web \nS支持全栈式Web开发，包括Tomcat和spring-webmvc。\n36）spring-boot-starter-websocket \n支持WebSocket开发。\n37）spring-boot-starter-ws \n支持Spring Web Services。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4391,"question":"Spring Boot 中的监视器是什么？","simplecontent":null,"content":"actuator","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4392,"question":"什么是Swagger？","simplecontent":null,"content":"可视化API","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4393,"question":"@requestBody注解的使用?","simplecontent":null,"content":"JSON字符串绑定到字符串","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4395,"question":"Springboot如何判断使用autowired还是resource?","simplecontent":null,"content":"1.类型 Qualifier（名称）没有返抛异常 2.名称 name，没有找到为null\n@Qualifier表示autowired是名称","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4396,"question":"GitHub是什么?","simplecontent":null,"content":"源码存储空间","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4397,"question":"Spring Boot 需要独立的容器运行吗？","simplecontent":null,"content":"可以不需要，内置了 Tomcat/Jetty 等容器。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:19","updateTime":"2021-05-26 01:11:19","isExist":null},{"id":4377,"question":"@RequestBody 和 @RequestParams 和@pathvariable同时使用?","simplecontent":null,"content":"@RequestMapping(value = \"/getAllUser24/{pageNo}\", method = {RequestMethod.GET,RequestMethod.POST})\npublic String getAllUser24(@PathVariable int pageNo,@RequestParam(\"str\") String str,@RequestBody  User user){\n    System.out.println(\"---------\"+str+\"-----\"+user.getUserName());\n    return str+\"-----\"+user.getUserName()+\"7777\"+pageNo;\n}\n\n\n@RequestParam和@RequestBody这两个注解是可以同时使用的。@RequestBody 接受的数据类型是 content-type:\"application/json\" ,传输的数据需要用JSON.stringify(data); 转换成字符串提交。\n@RequestParams 接受的是请求url 后面所携带的参数。\n\n\n并且get和post都可以使用","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4378,"question":"form-data与x-www-form-urlencoded的区别?","simplecontent":null,"content":"multipart/form-data：可以上传文件或者键值对，最后都会转化为一条消息\nx-www-form-urlencoded：只能上传键值对，而且键值对都是通过&间隔分开的\n他们都是只能接收psot的数据，如果在url和下面都赋值，在post两个都能接收，但是带url情况只能接收url后面的","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4379,"question":"Post的binary?","simplecontent":null,"content":"          相当于Content-Type:application/octet-stream,从字面意思得知，只可以上传二进制数据，通常用来上传文件，由于没有键值，所以，一次只能上传一个文件。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4380,"question":"Postman的raw作用?","simplecontent":null,"content":"            可以上传任意格式的文本，可以上传text、json、xml、html等","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4381,"question":"Postman的x-www-form-urlencoded作用?","simplecontent":null,"content":"最常见的 POST 提交数据的方式了\n 就是application/x-www-from-urlencoded,会将表单内的数据转换为键值对，比如,name=java&age = 23\n如果不设置 enctype 属性，那么最终就会以 application/x-www-form-urlencoded 方式提交数据。\n\n<form action=\"form_action.asp\" enctype=\"text/plain\">\n  <p>First name: <input type=\"text\" name=\"fname\" /></p>\n  <p>Last name: <input type=\"text\" name=\"lname\" /></p>\n  <input type=\"submit\" value=\"Submit\" />\n</form>","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4382,"question":"Postman的form-data请求格式?","simplecontent":null,"content":"post请求格式中的multipart/form-data格式。是基于post方法来传递数据的，并且其请求内容格式为Content-Type: multipart/form-data,用来指定请求内容的数据编码格式。既可以上传键值对，也可以上传文件","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4383,"question":" Content-Type类型有哪些?","simplecontent":null,"content":"multipart/form-data 请求中既可以携带文件，又可以携带参数。其中参数以键值对的方式传递，参数之间、参数与文件之间以 content-disposition 分隔；  可以使用@RequestParam和无注解\n\n\n2.application/x-www-form-urlencoded 只能上传参数，不能携带文件，参数通过 ?xxx=xxx&xxx=xxx的方式被组织在一起；可以使用@RequestParam和无注解\n\n3.application/json 只能上传参数，不能携带文件，参数不被特殊组织，保持原 JSON 字符串的形式。   使用@RequestBody ，@RequestBody 能处理 GET 和post方式的请求。但是只能放实体方式，不能使用@RequestBody string str这种方式，如果使用@RequestBody string str，接收的是格式是文本了，不是将userName弄出来\n{\n\t\"userName\":\"777\"\n}\n\n\n不管是get她还是post接收不了\n不管是ajax还是在url拼接还是在from表单插入都要判断是post还是get","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4384,"question":"根据 content-type接收数据?","simplecontent":null,"content":"请求的 content-type 来判断请求传递的参数是什么格式的\ncontent-type 是 application/json的 request 的 body 是 json 数据\ncontent-type 是 application/x-www-form-urlencoded的 request 是表单提交","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:18","updateTime":"2021-05-26 01:11:18","isExist":null},{"id":4365,"question":"】spring boot web服务响应缓慢的排查？本地环境 、线上数据库索引、添加日志和gc日志","simplecontent":null,"content":"　　使用spring boot搭建了一个web服务，部署在docker容器中。使用中出现了一个性能问题：多次接口请求中，偶尔会出现一次响应非常慢的情况。正常情况下接口的响应时间在10-20ms，偶尔会出现一次3s以上的响应。下面是自己的一个排查过程\n　　1、验证本地开发环境。\n　　首先考虑的是在本地开发环境中找出问题所在。经过测试，本地并未出现这个问题。\n　　2、数据库优化。\n　　考虑到本地开发环境和部署的版本使用的数据库不同。通过建立索引，查询优化等方案，对数据库的查询进行了优化。然而问题依旧。\n　　3、添加详细日志，定位问题\n　　首先考虑的是业务代码可能存在问题，通过分析日志，发现响应慢的并不是业务代码，而是spring boot框架中的代码。主要耗时在过滤器和拦截器中。\n　　4、添加gc日志\n　　考虑可能由于过一段时间会出现一次gc，接口也是偶尔出现一次响应慢的情况，猜测两者可能有关系。通过日志发现，响应慢的时候并不一定出现gc，并且每次gc的时间都很短，在ms级别。\n　　5、更换servlet容器\n　　spring boot内置了多个servlet容器，默认使用的是tomcat。从上面日志定位的情况来看，servlet容器可能是主要原因。把tomcat换成undertow之后，问题得以解决，响应时间都固定在10-20ms范围。\n　　6、为什么tomcat会出现这个问题，后续还需要分析","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4366,"question":"spring-boot-starter-*依赖介绍?","simplecontent":null,"content":"spring-boot-starter-*起步依赖是SpringBoot核心之处，它提供了Spring和相关技术提供一站式服务，让开发者不在关心Spring相关配置，简化了传统的依赖注入操作，当然开发者也可通过application.properties文件自定义配置。 \nSpringBoot常规启动都遵循类似的命名模式spring-boot-starter-*，其中*是一种指定类型的应用程序，如spring-boot-starter-web表示应用程序依赖SpringWeb相关内容。另外，SpringBoot支持第三方插件引用,第三方启动程序通常以项目的名称开始。例如，mybatis依赖插件引用为mybatis-spring-boot-starter。\n————————————————\n版权声明：本文为CSDN博主「导哥」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/jingtianyiyi/article/details/80529368","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4367,"question":"SpringBoot容器依赖?","simplecontent":null,"content":"名称\t描述\nspring-boot-starter-jetty\t使用Jetty作为嵌入式servlet容器。\nspring-boot-starter-reactor-netty\t使用reactor netty作为嵌入式反应性HTTP服务器。\nspring-boot-starter-tomcat\t使用tomcat作为嵌入式servlet容器。\nspring-boot-starter-undertow\t使用undertow作为嵌入式servlet容器。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4368,"question":"springboot有哪些spring-boot-starter（整合第三方组件）?","simplecontent":null,"content":"spring-boot-starter\t核心依赖，包括auto-configuration , logging和YAML。\nspring-boot-starter-activemq\t支持Apache ActiveMQ启动JMS消息。\nspring-boot-starter-amqp\t支持Spring AMQP与Rabbit MQ组件。\nspring-boot-starter-aop\t支持Spring AOP、AspectJ组件。\nspring-boot-starter-artemis\t支持Apache Artemis嵌入式消息服务。\nspring-boot-starter-batch\t支持Spring Batch，一款面向Spring的批处理框架。\nspring-boot-starter-cache\t支持spring的缓存技术。\nspring-boot-starter-cloud-connectors\t支持SpringCloud连接器。\nspring-boot-starter-data-jpa\t支持Hibernate的Spring JPA。\nspring-boot-starter-data-mongodb\t支持mongodb。\nspring-boot-starter-data-redis\t支持redis缓存。\nspring-boot-starter-data-solr\t支持solr,一款比Lucene更为丰富的查询语言，同时实现了可配置、可扩展，并对索引、搜索性能进行了优化的框架。\nspring-boot-starter-jdbc\t支持jdbc连接。\nspring-boot-starter-jersey\t使用JAX-RS和Jersey构建RESTful web应用程序的入门框架。\nspring-boot-starter-json\t支持json数据的读写操作。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4369,"question":"springboot 如何获取@bean?","simplecontent":null,"content":"从applicationcontext.getbeanDefiname。length循环","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4370,"question":"SpringBoot读取properties配置文件中的数据?","simplecontent":null,"content":"1、注解\n使用@Value注解读取\n读取properties配置文件时，默认读取的是application.properties。\napplication.properties：\ndemo.name=Name\ndemo.age=18\n如果@Value${}所包含的键名在application.properties配置文件中不存在的话，会抛出异常\n\n2.通过PropertiesLoaderUtils\n利用org.springframework.core.io.support包下的PropertiesLoaderUtils读取配置文件从而获得对应的配置信息\nPropertiesLoaderUtils.loadProperties(new EncodedResource(new ClassPathResource(location), \"UTF-8\"));\n将对应配置文件的信息填入location即可\n\n3 通过@PropertySource将属性映射给类的属性\n\n4 利用Environment (org.springframework.core.env.Environment)","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4371,"question":"Controller返回数据类型?","simplecontent":null,"content":"使用@Controller注解，返回对应的页面\n2.在方法上加上@ResponseBody注解，返回json格式的数据。\n@Controller\npublic class UserController {\n    @RequestMapping(\"/userLogin\")\n    public String userLogin(@Param(\"userName\") String userName){\n        return \"success\";//返回对应的名为success的页面\n    }\n \n    @RequestMapping(\"/getDepts\")\n    @ResponseBody\n    public List<Department> getDepts(){ //查找所有部门\n \n        List<Department> depts=userService.findAllDepts();\n        return depts;\n    }\n}","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4372,"question":"如果类使用controller，而方法里没有使用responsebody，使用postman请求会返回什么?","simplecontent":null,"content":"报404","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4373,"question":"返回页面有哪些方式?","simplecontent":null,"content":"需要注意的是，当使用@Controller 并且没有使用@ResponseBody时，无论如何controller方法（或成为handler）都将会会返回一个视图。\n 此时，如果返回值为string，那么返回值讲将作为视图名返回，\n 如果返回值为modelAndView,那么会从modelAndView中获取视图名称，如果modelAndView中没有视图名称，那么spring会将请求的action名称作为视图名称解析\n 如果handler返回类型为void,那么系统会将handler方法名作为视图名返回。\n 如果一个handler不需要返回值，使用@ResponseBody 注解，这个时候可以将返回null，或者直接使用void返回类型\n第一种：通过ModelAndView 返回\n通过这种新式返回数据时，spring会将你返回的modelAndView对象自动存放到pageContext中，这样一来在jsp页面就可以通过EL表达式取出；\n\n@RequestMapping(\"/mvtest\")\npublic ModelAndView modelAndViewTest() {\n\tModelAndView mv = new ModelAndView();\n\tmv.addObject(\"modelandviewmsg\", \"这是一条存放在modelAndView对象中的消息！\");\n\tmv.setViewName(\"index\");\n\treturn mv;\n}\n第二种：通过形参Model返回\n\n上面的ModelAndView看名字就可以知道包含两个部分，Model 和 View ,从controller代码也发现~spring同时也支持将model 和 view 分开，将model 放在controller 形参上，spring 也可以将他自动的放到pagContext中，这样，controller就只需要返回视图名称就行了。\n@RequestMapping(\"/modeltest\")\npublic String modelTest(Model model) {\n\tmodel.addAttribute(\"modelmsg\", \"也可以通过给controller方法设置一个Model形参，将响应内容放在\t  \tmodel中，<br />然后返回一个视图这样\");\n\treturn \"index\";\n}\n第三种：以通过形参map返回\n\n上面所说的ModelAndView 和 Model 返回方式实际上都是往pageContext中存入了一个map集合，spring boot 也支持直接给controller添加一个Map类形参，这样，所有存入到这个map中的数据同样也会自动存放到pageContext中；\n// controller代码\n@RequestMapping(\"/mapmodel\")\n\tpublic String modelTest(Map<String,Object> model) {\n\t\tmodel.put(\"mapmsg\", \"你好，Springboot,这是一条通过Map<String,Object> model返回页面的\t\t消息！\");\n\t\treturn \"index\";\n\t}\n第四种：以json形式返回\nspring boot 这么青大的东西当然也支持返回json数据了~只需要一个注解@responseBody就搞定，而且完全是自动配置，你甚至都不需要添加json依赖，应为spring boot y已经帮我们自动配置好了！\n// controller代码\n@RequestMapping(\"jsonTest\")\npublic @ResponseBody ModelBean jsonTest() {\n\tModelBean mb = new ModelBean();\n\tmb.setBeanmsg(\"这是一条json数据~~~\");\n\tmb.setBeanstatus(1);\n\treturn mb;\n}","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4374,"question":"Springboot启动注解?","simplecontent":null,"content":"@SpringBootApplication","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4375,"question":"requestbody只能有一个吗?","simplecontent":null,"content":"其实请求参数永远都是一个，因为一个request中只包含一个request body. ","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4376,"question":"requestbody和requestparam区别?","simplecontent":null,"content":"1，用来处理请求头Content-Type: 为 application/x-www-form-urlencoded编码的内容。（Http协议中，如果不指定Content-Type，则默认传递的参数就是application/x-www-form-urlencoded类型），get 方式中queryString的值，和post方式中 body data的值都会被Servlet接受到并转化到Request.getParameter()参数集中，所以@RequestParam可以获取的到。\n\nRequestParam可以接受简单类型的属性，也可以接受对象类型。 \n实质是将Request.getParameter() 中的Key-Value参数Map利用Spring的转化机制ConversionService配置，转化成参数接收对象或字段。\nget方法一般都是在url地址后面加上？参数=值&参数=值的形式调用，post是通过表单传递的。\n没有传递会报错。\n2.@RequestBody\n用来处理请求头Content-Type: 为 application/json编码的内容，明确的告诉服务器发送的内容是json。因为需要读取body中内容，所以只能接受post请求。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:17","updateTime":"2021-05-26 01:11:17","isExist":null},{"id":4354,"question":"】开启 Spring Boot 特性有哪几种方式？Parent、dependencies","simplecontent":null,"content":"1）继承spring-boot-starter-parent项目\n2）导入spring-boot-dependencies项目依赖","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4355,"question":"】Spring Boot 需要独立的容器运行吗？可以不需要，内置了 Tomcat/ Jetty 等容器。","simplecontent":null,"content":"可以不需要，内置了 Tomcat/ Jetty 等容器。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4356,"question":"】如何在 Spring Boot 启动的时候运行少量特定的代码？可以实现接口 ApplicationRunner 或者者 CommandLineRunner","simplecontent":null,"content":"可以实现接口 ApplicationRunner 或者者 CommandLineRunner，这两个接口实现方式一样，它们都只提供了一个 run 方法，","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4357,"question":"】Spring Boot 有哪几种读取配置的方式？@PropertySource,@Value,@Environment, @ConfigurationProperties","simplecontent":null,"content":"Spring Boot 可以通过 @PropertySource,@Value,@Environment, @ConfigurationProperties 来绑定变量，","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4358,"question":"】spring boot核心配置文件是什么？application.properties或者application.yml。","simplecontent":null,"content":"application.properties或者application.yml。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4359,"question":"】自动配置的原理是什么？加载配置的文件加载到ioc容器","simplecontent":null,"content":"@EnableAutoConfiguration实现自动配置，其内部实际上就是去加载MMETA-INF/spring.factories文件的信息，然后筛选出以@EnableAutoConfiguration为key的数据，加载到IOC容器中，实现自动配置。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4360,"question":"】SpringBoot核心注解有哪些?@SpringBootConfiguration、@EnableAutoConfiguration、@ComponentScan组成。2个configuration，标注当前类是配置类、自动为您配置很多东西、根据定义的扫描路径，把符合扫描规则的类装配到spring的bean容器","simplecontent":null,"content":"@SpringBootApplication，它主要由@SpringBootConfiguration、@EnableAutoConfiguration、@ComponentScan组成。\n\n@SpringBootConfiguration：继承自@Configuration，二者功能也一致，标注当前类是配置类。\n@EnableAutoConfiguration：这个注释启用了Spring Boot的自动配置功能，可以自动为您配置很多东西。\n@ComponentScan：根据定义的扫描路径，把符合扫描规则的类装配到spring的bean容器中\n自定扫描路径下边带有@Controller，@Service，@Repository，@Component注解加入spring容器\n通过includeFilters加入扫描路径下没有以上注解的类加入spring容器\n通过excludeFilters过滤出不用加入spring容器的类\n自定义增加了@Component注解的注解方式","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4361,"question":"】Spring Boot 还提供了其它的哪些 Starter？Web、jdbc、test、jpa/redis","simplecontent":null,"content":"Spring Boot 也提供了其它的启动器项目包括，包括用于开发特定类型应用程序的典型依赖项。\n\nspring-boot-starter-web-services - SOAP Web Services\n\nspring-boot-starter-web - Web 和 RESTful 应用程序\n\nspring-boot-starter-test - 单元测试和集成测试\n\nspring-boot-starter-jdbc - 传统的 JDBC\n\nspring-boot-starter-hateoas - 为服务添加 HATEOAS 功能\n\nspring-boot-starter-security - 使用 SpringSecurity 进行身份验证和授权\n\nspring-boot-starter-data-jpa - 带有 Hibeernate 的 Spring Data JPA\n\nspring-boot-starter-data-rest - 使用 Spring Data REST 公布简单的 REST 服务","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4362,"question":"】什么是 Spring Boot Stater ？启动器，自动获取配置进行启动","simplecontent":null,"content":"启动器是一套方便的依赖没描述符，它可以放在自己的程序中。你可以一站式的获取你所需要的 Spring 和相关技术，而不需要依赖描述符的通过示例代码搜索和复制黏贴的负载。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4363,"question":"】Spring Boot、Spring MVC 和 Spring 有什么区别？Spring是ioc和aop，springboot是自动配置和启动，mvc是模型视图控制层","simplecontent":null,"content":"SpringFramework 最重要的特征是依赖注入。所有 SpringModules 不是依赖注入就是 IOC 控制反转。\nSpring MVC 提供了一种分离式的方法来开发 Web 应用。通过运用像 DispatcherServelet，MoudlAndView 和 ViewResolver 等一些简单的概念，开发 Web 应用将会变的非常简单。\nSpring 和 SpringMVC 的问题在于需要配置大量的参数。\nSpring Boot 通过一个自动配置和启动的项来目解决这个问题。为了更快的构建产品就绪应用程序，Spring Boot 提供了一些非功能性特征。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4364,"question":"】Spring Boot Starter的工作原理？","simplecontent":null,"content":"// 1. Spring Boot 在启动时扫描项目所依赖的JAR包，寻找包含spring.factories文件的JAR\n\n// 2. 根据spring.factories配置加载AutoConfigure类\n\n// 3. 根据 @Conditional注解的条件，进行自动配置并将Bean注入Spring Context","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:16","updateTime":"2021-05-26 01:11:16","isExist":null},{"id":4342,"question":"】为什么要用SpringBoot？独立运行、配置简化、监控","simplecontent":null,"content":"Spring Boot 优点非常多，如：\n一、独立运行\nSpring Boot而且内嵌了各种servlet容器，Tomcat、Jetty等，现在不再需要打成war包部署到容器中， SpringBoot只要打成一个可执行的jar包就能独立运行，所有的依赖包都在一个jar包内。\n二、简化配置\nspring-boot-starter-web启动器自动依赖其他组件，简少了maven的配置。三、自动配置\nSpring  Boot能根据当前类路径下的类、jar包来自动配置bean，如添加一个spring-boot-starter-web启动器就能拥有web的功能，无需其他配置。\n四、无代码生成和XML配置\nSpring  Boot配置过程中无代码生成，也无需XML配置文件就能完成所有配置工作，这一切都是借助于条件注解完成的，这也是Spring4.x的核心功能之一。\n五、应用监控\nSpring   Boot提供一系列端点可以监控服务及应用，做健康检测。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4343,"question":"】运行Spring  Boot有哪几种方式？使用打包和启动命令、使用maven插件、执行main方法","simplecontent":null,"content":"1）打包用命令或者放到容器中运行\n2）用 Maven/Gradle 插件运行\n3）直接执行 main 方法运行","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4344,"question":"】如何使用Spring Boot实现异常处理？全局异常ControllerAdvice","simplecontent":null,"content":"Spring提供了一种使用ControllerAdvice处理异常的非常有用的方法。    我们通过实现一个\nControlerAdvice类，来处理控制器类抛出的所有异常。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4345,"question":"】你如何理解 Spring Boot 中的 Starters？不需要到处找示例代码和依赖包","simplecontent":null,"content":"Starters可以理解为启动器，它包含了一系列可以集成到应用里面的依赖包，你可以一站式集成 Spring 及其他技术，而不需要到处找示例代码和依赖包。如你想使用 Spring JPA 访问数据库，只要加入spring-boot-starter-data-jpa   启动器依赖就能使用了。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4346,"question":"】springboot常用的starter有哪些？","simplecontent":null,"content":"spring-boot-starter-web    嵌入tomcat和web开发需要servlet与jsp支持\nspring-boot-starter-data-jpa 数据库支持\nspring-boot-starter-data-redis redis数据库支持\nspring-boot-starter-data-solr  solr支持\nmybatis-spring-boot-starter   第三方的mybatis集成starter","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4347,"question":"】SpringBoot 实现热部署有哪几种方式？","simplecontent":null,"content":"主要有两种方式：\nSpring Loaded、Spring-boot-devtools","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4348,"question":"】如何理解 Spring Boot 配置加载顺序？Properties》YAML》系统环境变量？命令行参数","simplecontent":null,"content":"在 Spring Boot 里面，可以使用以下几种方式来加载配置。\n1）properties文件；\n2）YAML文件；\n3）系统环境变量；\n4）命令行参数； 等等……","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4349,"question":"]Spring Boot 的核心配置文件有哪几个？ application 和 bootstrap","simplecontent":null,"content":"spring Boot 的核心配置文件是 application 和 bootstrap 配置文件。\napplication 配置文件这个容易理解，主要用于 Spring Boot 项目的自动化配置。\nbootstrap  配置文件有以下几个应用场景。\n使用 Spring Cloud Config 配置中心时，这时需要在 bootstrap 配置文件中添加连接到配置中心的配置属性来加载外部配置中心的配置信息；\n一些固定的不能被覆盖的属性； 一些加密/解密的场景；","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4350,"question":"】如何集成 Spring Boot 和 ActiveMQ？spring-boot-starter-activemq","simplecontent":null,"content":"对于集成 Spring Boot 和 ActiveMQ，我们使用spring-boot-starter-activemq\n依赖关系。   它只需要很少的配置，并且不需要样板代码。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4351,"question":"】Spring Boot中的监视器是什么？","simplecontent":null,"content":"Spring boot actuator是spring启动框架中的重要功能之一。Spring boot监视器可帮助您访问生产环境中正在运行的应用程序的当前状态。\n        有几个指标必须在生产环境中进行检查和监控。即使一些外部应用程序可能正在使用这些服务来向相关人员触发警报消息。监视器模块公开了一组可直接作为HTTP URL访问的REST端点来检查状态。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4352,"question":"】如何在Spring Boot中禁用Actuator端点安全性？management.security.enabled = false","simplecontent":null,"content":"默认情况下，所有敏感的HTTP端点都是安全的，只有具有ACTUATOR角色的用户才能访问它们。安全性是使用标准的HttpServletRequest.isUserInRole方法实施的。 我们可以使用\nmanagement.security.enabled = false\n来禁用安全性。只有在执行机构端点在防火墙后访问时，才建议禁用安全性。\n\n】Spring Boot启动原理解析 ？\n1.启动类有3个主要注解\n@Configuration（@SpringBootConfiguration点开查看发现里面还是应用了@Configuration）\n@EnableAutoConfiguration\n@ComponentScan\n\nSpringBoot的项目启动类只有一个注解@SpringBootApplication和一个run方法。\n\nSpringBootApplication包含三个注解：包含了@SpringBootConfiguration（打开是@Configuration），@EnableAutoConfiguration，@ComponentScan注解。\n\n@Configuration：\nSpringBoot社区推荐使用基于JavaConfig的配置形式，所以，这里的启动类标注了@Configuration之后，本身其实也是一个IoC容器的配置类。\n\n任何一个标注了@Configuration的Java类定义都是一个JavaConfig配置类。\n任何一个标注了@Bean的方法，其返回值将作为一个bean定义注册到Spring的IoC容器，方法名将默认成该bean定义的id。\n\n@ComponentScan：\n1、@ComponentScan对应XML配置中的元素，@ComponentScan的功能其实就是自动扫描并加载符合条件的组件（比如@Component和@Repository等）或者bean定义，最终将这些bean定义加载到IoC容器中。\n2、我们可以通过basePackages等属性来细粒度的定制@ComponentScan自动扫描的范围，如果不指定，则默认Spring框架实现会从声明@ComponentScan所在类的package进行扫描。\n\n@EnableAutoConfiguration：\n（核心内容）看英文意思就是自动配置，概括一下就是，借助@Import的帮助，将所有符合自动配置条件的bean定义加载到IoC容器。\n\n通过EnableAutoConfiguration查看到元注解：EnableAutoConfigurationImportSelector，@EnableAutoConfiguration可以帮助SpringBoot应用将所有符合条件的@Configuration配置都加载到当前SpringBoot创建并使用的IoC容器。该配置模块的主要使用到了SpringFactoriesLoader。\n\na、SpringFactoriesLoader：\n\n1、SpringFactoriesLoader为Spring工厂加载器，该对象提供了loadFactoryNames方法，入参为factoryClass和classLoader即需要传入工厂类名称和对应的类加载器，方法会根据指定的classLoader，加载该类加器搜索路径下的指定文件，即spring.factories文件，传入的工厂类为接口，而文件中对应的类则是接口的实现类，或最终作为实现类。\n2、获取到这些实现类的类名后，loadFactoryNames方法返回类名集合，方法调用方得到这些集合后，再通过反射获取这些类的类对象、构造方法，最终生成实例。\n\nb、AutoConfigurationImportSelector：\n\n该类主要用selectImports方法：\n\n \n\n该方法在springboot启动流程——bean实例化前被执行，返回要实例化的类信息列表。如果获取到类信息，spring可以通过类加载器将类加载到jvm中，现在我们已经通过spring-boot的starter依赖方式依赖了我们需要的组件，那么这些组件的类信息在select方法中就可以被获取到。\n\n\n1、以上配置可以保证sqlSessionFactory、sqlSessionTemplate、dataSource等mybatis所需的组件均可被自动配置，@Configuration注解已经提供了Spring的上下文环境，所以以上组件的配置方式与Spring启动时通过mybatis.xml文件进行配置起到一个效果。\n\n2、只要一个基于SpringBoot项目的类路径下存在SqlSessionFactory.class, SqlSessionFactoryBean.class，并且容器中已经注册了dataSourceBean，就可以触发自动化配置，意思说我们只要在maven的项目中加入了mybatis所需要的若干依赖，就可以触发自动配置，但引入mybatis原生依赖的话，每集成一个功能都要去修改其自动化配置类，那就得不到开箱即用的效果了。所以Spring-boot为我们提供了统一的starter可以直接配置好相关的类，触发自动配置所需的依赖(mybatis)如下：\n\n<dependency>","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4353,"question":"】Spring Boot 的配置文件有哪几种格式？","simplecontent":null,"content":".properties 和 .yml，它们的区别主要是书写格式不同。\n1).properties\n2).yml\n另外，.yml 格式不支持@PropertySource注解导入配置。","filterContent":null,"type":"java-springboot","status":0,"createTime":"2021-05-26 01:11:15","updateTime":"2021-05-26 01:11:15","isExist":null},{"id":4336,"question":"高可用两种架构模式?","simplecontent":null,"content":"1.PSS\nPrimary + Secondary + Secondary模式，通过Primary和Secondary搭建的Replica Set\n2.PSA\nPrimary + Secondary + Arbiter模式，使用Arbiter搭建Replica Set","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:47","updateTime":"2021-05-26 01:09:47","isExist":null},{"id":4337,"question":"高可用选举机制?","simplecontent":null,"content":"复制集通过 replSetInitiate 命令或 rs.initiate() 命令进行初始化。\n初始化后各个成员间开始发送心跳消息，并发起 Primary 选举操作，获得大多数成员投票支持的节点，会成为 Primary，其余节点成为 Secondary。\n\n\n选主需要时间，在选主的过程中，复制集是没有主节点的，所有的成员都变成只读状态。\nMongoDB也是采用Bully算法选主，选主时，有资格成为主节点的副本节点就会向其他节点发起一个选举，希望别的节点选择其作为主节点。若赞成票过半则设置自己为主节点。有反对票时，保持自己为从节点。\n复制集中的其他成员在收到选主请求时，会判断发起节点的数据版本是否过低。如过低则投反对票。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:47","updateTime":"2021-05-26 01:09:47","isExist":null},{"id":4338,"question":"选举原则?","simplecontent":null,"content":"1.大多数\n假设复制集内投票成员（后续介绍）数量为 N，则大多数为 N/2 + 1，当复制集内存活成员数量不足大多数时，整个复制集将无法选举出 Primary，复制集将无法提供写服务，处于只读状态。\n2.","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:47","updateTime":"2021-05-26 01:09:47","isExist":null},{"id":4339,"question":"触发选举条件?","simplecontent":null,"content":"初始化一个副本集时。\n从库不能连接到主库(默认超过10s，可通过heartbeatTimeoutSecs参数控制)，由从库发起选举\n主库放弃primary 角色，比如执行rs.stepdown 命令","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:47","updateTime":"2021-05-26 01:09:47","isExist":null},{"id":4340,"question":"高可用数据同步?","simplecontent":null,"content":"Primary 与 Secondary 之间通过 oplog 来同步数据，Primary 上的写操作完成后，会向特殊的 local.oplog.rs 特殊集合写入一条 oplog，Secondary 不断的从 Primary 取新的 oplog 并应用。\n因 oplog 的数据会不断增加，local.oplog.rs 被设置成为一个 capped 集合，当容量达到配置上限时，会将最旧的数据删除掉。\n另外考虑到 oplog 在 Secondary 上可能重复应用，oplog 必须具有幂等性，即重复应用也会得到相同的结果。\n如下 oplog 的格式，包含 ts、h、op、ns、o 等字段。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:47","updateTime":"2021-05-26 01:09:47","isExist":null},{"id":4341,"question":"高可用和分片区别?","simplecontent":null,"content":"高可用主要指的是解决尽可能在不丢失数据的前提下不间断服务问题，由于redis是异步复制，因此不保证数据完全不丢失，在这个场景下并不实现动态横向扩容，只能进行纵向扩容，你只要加内存，启动redis，设置maxmemory即可。\n\n而分片（Sharding）主要指的是解决在线动态横向扩容缩容问题，当然为了稳定也进行高可用部署配置，即包含成对的主从关系。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:47","updateTime":"2021-05-26 01:09:47","isExist":null},{"id":4318,"question":"】如何添加索引？使用db.collection.createIndex()在集合中创建一个索引","simplecontent":null,"content":"使用db.collection.createIndex()在集合中创建一个索引","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4319,"question":"】mongodb是否支持事务?","simplecontent":null,"content":"　　MongoDB 4.0的新特性——事务（Transactions）：MongoDB 是不支持事务的，因此开发者在需要用到事务的时候，不得不借用其他工具，在业务代码层面去弥补数据库的不足。\n事务和会话(Sessions)关联，一个会话同一时刻只能开启一个事务操作，当一个会话断开，这个会话中的事务也会结束。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4320,"question":"如何执行事务/加锁?","simplecontent":null,"content":"  mongodb没有使用传统的锁或者复杂的带回滚的事务,因为它设计的宗旨是轻量,快速以及可预计的高性能.可以把它类比成mysql mylsam的自动提交模式.通过精简对事务的支持,性能得到了提升,特别是在一个可能会穿过多个服务器的系统里.","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4321,"question":"更新操作会立刻fsync到磁盘?","simplecontent":null,"content":"  不会,磁盘写操作默认是延迟执行的.写操作可能在两三秒(默认在60秒内)后到达磁盘，通过 syncPeriodSecs 启动参数，可以进行配置.例如,如果一秒内数据库收到一千个对一个对象递增的操作,仅刷新磁盘一次.","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4322,"question":"MongoDB的优势有哪些？","simplecontent":null,"content":"面向集合(Collection)和文档(document)的存储，以JSON格式的文档保存数据。\n高性能，支持Document中嵌入Document减少了数据库系统上的I/O操作以及具有完整的索引支持，支持快速查询\n高效的传统存储方式：支持二进制数据及大型对象\n高可用性，数据复制集，MongoDB 数据库支持服务器之间的数据复制来提供自动故障转移（automatic failover）\n高可扩展性，分片(sharding)将数据分布在多个数据中心,MongoDB支持基于分片键创建数据区域.\n丰富的查询功能, 聚合管道(Aggregation Pipeline)、全文搜索(Text Search)以及地理空间查询(Geospatial Queries)\n支持多个存储引擎,WiredTiger存储引、In-Memory存储引擎","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4323,"question":"MongoDB 支持哪些数据类型?","simplecontent":null,"content":"java类似数据类型：\n类型\t解析\nString\t字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的\nInteger\t整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位\nDouble\t双精度浮点值。用于存储浮点值\nBoolean\t布尔值。用于存储布尔值（真/假）\nArrays\t用于将数组或列表或多个值存储为一个键\nDatetime\t记录文档修改或添加的具体时间\n\nMongoDB特有数据类型：\n类型\t解析\nObjectId\t用于存储文档 id,ObjectId是基于分布式主键的实现MongoDB分片也可继续使用\nMin/Max Keys\t将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比\nCode\t用于在文档中存储 JavaScript代码\nRegular Expression\t用于在文档中存储正则表达式\nBinary Data\t二进制数据。用于存储二进制数据\nNull\t用于创建空值\nObject\t用于内嵌文档\nhttps://segmentfault.com/a/1190000020895012?utm_source=tag-newest","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4324,"question":"Mongodb配置?","simplecontent":null,"content":"spring.data.mongodb.database=alert\nspring.data.mongodb.uri=mongodb://root:Root_123@192.168.0.61:27017/admin","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4325,"question":"什么是集合Collection、文档Document,以及与关系型数据库术语类比。?","simplecontent":null,"content":"集合Collection位于单独的一个数据库MongoDB 文档Document集合，它类似关系型数据库（RDBMS）中的表Table。一个集合Collection内的多个文档Document可以有多个不同的字段。通常情况下，集合Collection中的文档Document有着相同含义。\n文档Document由key-value构成。文档Document是动态模式,这说明同一集合里的文档不需要有相同的字段和结构。类似于关系型数据库中table中的每一条记录。\n与关系型数据库术语类比","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4326,"question":"mongodb中的文档、集合和数据库概念?","simplecontent":null,"content":"1. 文档是mongodb中的基本单元，相当于rdb中的一条记录，通常以json格式显示，以bson格式进行存储；\n2. 集合相当于rdb中的表，这里的表没有模式定义；\n3. mongodb的每个实例可以包含多个数据库，每个数据库有自己的集合和权限；\n\n一、文档\n\n多个键值对的有序存放在一起就是文档。\n\n文档中的值可以是字符串，数值类型，还可以是其它的文档；\n\n键是字符串，键可以是任意UTF-8字符；\n\n键不能含有\\0空字符，空字符表示结束；\n\n.和$作为保留字，不能作为键名称中的字符；\n\n_下划线也不建议作为键名称中的字符；\n\n默认区分大小写；\n\n文档中不允许重复的键；\n\n二、集合\n\n集合就是一组文档\n\n集合名不能是空字符串“”\n\n集合名不能含有\\0空字符\n\n集合名不能以system开头\n\n集合名不能含有$\n\n集合通常以.分开，划分子集合；\n\n三、数据库\n\n多个集合组成一个数据库，或者一个数据库包含多个实例。\n\n一个实例可以包含多个数据库\n\n一台机器可以启动多个实例，通过指定不同的数据位置，端口号进行区分；\n\n命名必须是utf-8字符，最长64个字符\n\n命名不能包含.,$,/,\\和\\0等字符，不能作为文件名的字符都不允许作为数据库名。\n\n命名应全部小写。\n\n系统保留数据库：\n\nadmin,是root数据库，添加用户到该数据库中。\n\nlocal,该库中的数据不会被复制。\n\nconfig，分片时，在内部使用，保存分片信息。\n\n把数据库名和集合名放在一起，用.符号隔开，形成命名空间。命令空间长度不超过121个字符。\n————————————————\n版权声明：本文为CSDN博主「liaomingwu」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/liaomingwu/article/details/85526160","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4327,"question":"MySQL和mongodb的区别?","simplecontent":null,"content":"MySQL和MongoDB两者都是免费开源的数据库。MySQL和MongoDB有许多基本差别包括数据的表示(data representation)，查询，关系，事务，schema的设计和定义，标准化(normalization)，速度和性能。\n通过比较MySQL和MongoDB，实际上我们是在比较关系型和非关系型数据库，即数据存储结构不同。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4328,"question":"分析器在MongoDB中的作用是什么?","simplecontent":null,"content":"MongoDB中包括了一个可以显示数据库中每个操作性能特点的数据库分析器。通过这个分析器你可以找到比预期慢的查询(或写操作);利用这一信息，比如，可以确定是否需要添加索引。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4329,"question":"mongodb和redis区别以及选择原因?","simplecontent":null,"content":"选择原因：\n架构简单\n没有复杂的连接\n深度查询能力,MongoDB支持动态查询。\n容易调试\n容易扩展\n不需要转化/映射应用对象到数据库对象\n使用内部内存作为存储工作区,以便更快的存取数据。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4330,"question":"索引类型有哪些？","simplecontent":null,"content":"单字段索引(Single Field Indexes)\n复合索引(Compound Indexes)\n多键索引(Multikey Indexes)\n全文索引(text Indexes)\nHash 索引(Hash Indexes)\n通配符索引(Wildcard Index)\n2dsphere索引(2dsphere Indexes)","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4331,"question":"MongoDB在A:{B,C}上建立索引，查询A:{B,C}和A:{C,B}都会使用索引吗？","simplecontent":null,"content":"　由于MongoDB索引使用B-tree树原理，只会在A:{B,C}上使用索引 ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4332,"question":"NoSQL数据库的类型?","simplecontent":null,"content":"例如：MongoDB, Cassandra, CouchDB, Hypertable, Redis, Riak, Neo4j, HBASE, Couchbase, MemcacheDB, RevenDB and Voldemort are the examples of NoSQL databases.详细阅读。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4333,"question":"mongodb高可用架构?","simplecontent":null,"content":"MongoDB通过复制集(Replica Set)来实现高可用\n\nMongodb复制集由一组Mongod实例（进程）组成，包含一个Primary节点和多个Secondary节点。\nMongodb Driver（客户端）的所有数据都写入Primary，Secondary从Primary同步写入的数据，以保持复制集内所有成员存储相同的数据集，实现数据的高可用。\n\n复制集提供了数据的冗余备份，并在多个服务器上存储数据副本，提高了数据的可用性， 并可以保证数据的安全性。\n复制还允许您从硬件故障和服务中断中恢复数据。\n\n主节点负责所有的写操作，从节点同步主节点的数据。仲裁节点不维护数据集，只参与选主过程。\nMongoDB是通过oplog来实现复制集间的数据同步。当主节点完成写操作后，从节点会检查自己的local数据上的oplog集合，找出最近一条记录的时间戳。然后查询主节点上的oplog集合，找出大于此时间戳的记录。最后将这些oplog查到到本地集合中并执行oplog中的操作。\nMongoDB实例每个两秒就会向其他成员发送一个心跳包来判断其他成员的存活状态。如果复制集的主节点不可用了，那么系统就会触发一次选主。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4334,"question":"】高可用使用场景？副本、读写分离","simplecontent":null,"content":"数据冗余，用做故障恢复使用，当发生硬件故障或者其它原因造成的宕机时，可以使用副本进行恢复。\n读写分离，读的请求分流到副本上，减轻主节点的读压力。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4335,"question":"副本集角色?","simplecontent":null,"content":"主节点（Primary）\n接收所有的写请求，然后把修改同步到所有Secondary。一个Replica Set只能有一个Primary节点，当Primary挂掉后，其他Secondary或者Arbiter节点会重新选举出来一个主节点。\n默认读请求也是发到Primary节点处理的，可以通过修改客户端连接配置以支持读取Secondary节点。\n\n副本节点（Secondary）\n与主节点保持同样的数据集。当主节点挂掉的时候，参与选主。\n\n仲裁者（Arbiter）\n不保有数据，不参与选主，只进行选主投票。使用Arbiter可以减轻数据存储的硬件需求，Arbiter几乎没什么大的硬件资源需求，但重要的一点是，在生产环境下它和其他数据节点不要部署在同一台机器上。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:46","updateTime":"2021-05-26 01:09:46","isExist":null},{"id":4303,"question":"18Q：如果一个分片（Shard）停止或很慢的时候，发起一个查询会怎样？","simplecontent":null,"content":"如果一个分片停止了，除非查询设置了 “Partial” 选项，否则查询会返回一个错误。如果一个分片响应很慢，MongoDB 会等待它的响应。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4304,"question":"MongoDB复制集?","simplecontent":null,"content":"","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4305,"question":"MongoDB副本集实现高可用的原理?","simplecontent":null,"content":" MongoDB 使用了其复制(Replica Set)方案，实现自动容错机制为高可用提供了基础。目前，MongoDB 支持两种复制模式：\nMaster / Slave ，主从复制，角色包括 Master 和 Slave 。\nReplica Set ，复制集复制，角色包括 Primary 和 Secondary 以及 Arbiter 。(生产环境必选)","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4306,"question":"什么是master或primary？","simplecontent":null,"content":" 副本集只能有一个主节点能够确认写入操作来接收所有写操作，并记录其操作日志中的数据集的所有更改(记录在oplog中)。在集群中，当主节点（master）失效，Secondary节点会变为master","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4307,"question":"什么是Slave或Secondary？","simplecontent":null,"content":" 复制主节点的oplog并将oplog记录的操作应用于其数据集，如果主节点宕机了，将从符合条件的从节点选举选出新的主节点。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4308,"question":"什么是Arbiter？","simplecontent":null,"content":" 仲裁节点不维护数据集。 仲裁节点的目的是通过响应其他副本集节点的心跳和选举请求来维护副本集中的仲裁","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4309,"question":"复制集节点类型有哪些？","simplecontent":null,"content":"优先级0型(Priority 0)节点\n隐藏型(Hidden)节点\n延迟型(Delayed)节点\n投票型(Vote)节点以及不可投票节点","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4310,"question":"启用备份故障恢复需要多久?","simplecontent":null,"content":"  从备份数据库声明主数据库宕机到选出一个备份数据库作为新的主数据库将花费10到30秒时间.这期间在主数据库上的操作将会失败–包括写入和强一致性读取(strong consistent read)操作.然而,你还能在第二数据库上执行最终一致性查询(eventually consistent query)(在slaveok模式下),即使在这段时间里.\nMongoDB复制详解分析可查看文章MongoDB系列-解决面试中可能遇到的MongoDB复制集（replica set）问题","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4311,"question":"raft选举过程，投票规则？","simplecontent":null,"content":"选举过程：\n  当系统启动好之后，初始选举后系统由1个Leader和若干个Follower角色组成。然后突然由于某个异常原因，Leader服务出现了异常，导致Follower角色检测到和Leader的上次RPC更新时间超过给定阈值时间时。此时Follower会认为Leader服务已出现异常，然后它将会发起一次新的Leader选举行为，同时将自身的状态从Follower切换为Candidate身份。随后请求其它Follower投票选择自己。\n投票规则：\n当一个候选人获得了同一个任期号内的大多数选票，就成为领导人。\n每个节点最多在一个任期内投出一张选票。并且按照先来先服务的原则。\n一旦候选人赢得选举，立刻成为领导，并发送心跳维持权威，同时阻止新领导人的诞生","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4312,"question":"在哪些场景使用MongoDB?","simplecontent":null,"content":"规则： 如果业务中存在大量复杂的事务逻辑操作，则不要用MongoDB数据库；在处理非结构化 / 半结构化的大数据使用MongoDB，操作的数据类型为动态时也使用MongoDB，比如：\n内容管理系统，切面数据、日志记录\n移动端Apps：O2O送快递骑手、快递商家的信息（包含位置信息）\n数据管理，监控数据","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4313,"question":"MongoDB支持主键外键关系吗?","simplecontent":null,"content":"默认MongoDB不支持主键和外键关系。 用Mongodb本身的API需要硬编码才能实现外键关联，不够直观且难度较大","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4314,"question":"你可以在MongoDB中实现主键-外键关系吗？","simplecontent":null,"content":"我们可以通过将一个文档嵌入另一个文档来实现主键-外键关系。例如：地址文档可以嵌入客户文档中。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4315,"question":"MongoDB使用BSON表示文档结构是真的吗？","simplecontent":null,"content":"是。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4316,"question":"BSON和json区别?","simplecontent":null,"content":"BSON目前主要用于MongoDB中，是mongoDB的数据存储格式，BSON基于JSON格式，选择JSON进行改造的原因主要是JSON的通用性及JSON的schemaless的特性。\n　　BSON主要实现下面三点：\n　　1、更快的遍历速度\n　  对json格式来说，太大的json结构会导致数据遍历非常慢。在json中，要跳过一个文档进行数据读取，需要对此文档进行扫描才行，需要进行麻烦的数据结构匹配，比如括号的匹配。 \n　　而bson对json的一大改进就是，它会将json的每一个元素的长度存在元素的头部，这样你只需要读取到元素长度就能直接seek到指定的点上进行读取了。\n　　2、操作更简易\n　  对json来说，数据存储是无类型的，比如你要修改基本一个值，从9到10，由于从一个字符变成了两个，所以可能其后面的所有内容都需要往后移一位才可以。 \n　　而使用bson，你可以指定这个列为数字列，那么无论数字从9长到10还是100，我们都只是在存储数字的那一位上进行修改，不会导致数据总长变大。 \n　　当然，在mongoDB中，如果数字从整形增大到长整型，还是会导致数据总长变大的。\n　　3、增加了额外的数据类型\n　  json是一个很方便的数据交换格式，但是其类型比较有限。 \n　　bson在其基础上增加了“byte array”数据类型。这使得二进制的存储不再需要先base64转换后再存成json，大大减少了计算开销和数据大小。 \n\n　数据结构上json是按字符串存储，bson是按结构存储。\n　　存储空间上 bson>json\n　　操作速度上 bson>json。比如，遍历查找：json需要扫字符串，而bson可以直接利用预先在字符串前面的字符串长度直接定位。\n　　修改上json要因为字符串长度的改变而大动大移，bson的话因为是按结构存储，因此还是占用同样的存储空间，不需要移动。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4317,"question":"在MongoDb中什么是索引?","simplecontent":null,"content":"索引用于高效的执行查询,没有索引的MongoDB将扫描整个集合中的所有文档,这种扫描效率很低,需要处理大量\n的数据.\n    索引是一种特殊的数据结构,将一小块数据集合保存为容易遍历的形式.索引能够存储某种特殊字段或字段集的值,并按照索引指定的方式将字段值进行排序.\n ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:45","updateTime":"2021-05-26 01:09:45","isExist":null},{"id":4283,"question":"】Mongodb连接数据库？getDatabase","simplecontent":null,"content":" MongoClient mongoClient = new MongoClient(\"localhost\",27017);//连接到 mongodb 服务\n MongoDatabase mongoDatabase= mongoClient.getDatabase(\"mymong\");//连接到数据库","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4284,"question":"】什么是MongoDB?","simplecontent":null,"content":"文档数据库、存储bson数据\nMongoDB是一个文档数据库，提供好的性能，领先的非关系型数据库。采用BSON存储文档数据。\nBSON（）是一种类json的一种二进制形式的存储格式，简称Binary JSON.\n相对于json多了date类型和二进制数组。\n ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4285,"question":"】MongoDB的优势有哪些？查询快、存储量手打，复杂数据json","simplecontent":null,"content":"面向文档的存储：以 JSON 格式的文档保存数据。\n任何属性都可以建立索引。\n复制以及高可扩展性。\n自动分片。\n丰富的查询功能。\n快速的即时更新。\n ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4286,"question":"MongoDB和关系型数据库术语对比图?","simplecontent":null,"content":" ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4287,"question":"什么是非关系型数据库?","simplecontent":null,"content":"　　非关系型数据库的显著特点是不使用SQL作为查询语言，数据存储不需要特定的表格模式。\n ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4288,"question":"为什么用MOngoDB？","simplecontent":null,"content":"架构简单\n没有复杂的连接\n深度查询能力,MongoDB支持动态查询。\n容易调试\n容易扩展\n不需要转化/映射应用对象到数据库对象\n使用内部内存作为存储工作区,以便更快的存取数据。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4289,"question":"】在哪些场景使用MongoDB？物流信息、导入数据情况、队列生产和消费的信息","simplecontent":null,"content":"大数据\n内容管理系统\n移动端Apps\n数据管理","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4290,"question":"monogodb 中的分片什么?","simplecontent":null,"content":"分片是将数据水平切分到不同的物理节点。当应用数据越来越大的时候，数据量也会越来越大。当数据量增长\n时，单台机器有可能无法存储数据或可接受的读取写入吞吐量。利用分片技术可以添加更多的机器来应对数据量增加\n以及读写操作的要求。\n\n1，机器的磁盘不够用了。使用分片解决磁盘空间的问题。2，单个mongod已经不能满足写数据的性能要求。通过分片让写压力分散到各个分片上面，使用分片服务器自身的资源。3，想把大量数据放到内存里提高性能。和上面一样，通过分片使用分片服务器自身的资源。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4291,"question":"分片原理?","simplecontent":null,"content":" 分片（sharding）是指将数据库拆分，将其分散在不同的机器上的过程。将数据分散到不同的机器上，不需要功能强大的服务器就可以存储更多的数据和处理更大的负载。基本思想就是将集合（数据表水平切分）切成小块，这些块分散到若干片里，每个片只负责总数据的一部分，最后通过一个均衡器来对各个分片进行均衡（数据迁移）。通过一个名为mongos的路由进程进行操作，mongos知道数据和片的对应关系（通过配置服务器）。大部分使用场景都是解决磁盘空间的问题，对于写入有可能会变差（+++里面的说明+++），查询则尽量避免跨分片查询。使用分片的时机","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4292,"question":"分片流程?","simplecontent":null,"content":"MongoDB通过分片键（Shard Keys）对集合进行划分。每个分片集合只能有一个分片键,分片后分片键不可修改。目前支持两种分片策略，范围分片和hash分片。一旦分片键选择完成，数据就以 数据块（chunk） 为单位（默认64MB）根据分片键分散到后端1或多个分片上。mongos记录每个块中的数据量，达到某个阈值，就检查是否需要拆分块。如拆分块，mongos更新config server的块元数据,config server诞生新块，修改旧块的范围(拆分点)。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4293,"question":"分片后查询?","simplecontent":null,"content":"查询时，查询请求不包含shard key，则mongos必须将查询分发到所有的shard，然后合并查询结果返回给客户端。查询请求包含shard key，则直接根据shard key计算出需要查询的chunk，向对应的shard发送查询请求。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4294,"question":"分片后插入?","simplecontent":null,"content":"插入时，必须包含shard key，mongos根据shard key算出文档应该存储到哪个chunk，然后将写请求发送到chunk所在的shard。更新、删除请求的查询条件必须包含shard key或者_id，如果是包含shard key，则直接路由到指定的chunk，如果只包含_id，则需将请求发送至所有的shard。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4295,"question":"分片效果?","simplecontent":null,"content":"  分片很好的解决了单台服务器磁盘空间、内存、cpu等硬件资源的限制问题，把数据水平拆分出去，降低单节点的访问压力。每个分片都是一个独立的数据库，所有的分片组合起来构成一个逻辑上的完整的数据库。因此，分片机制降低了每个分片的数据操作量及需要存储的数据量，达到多台服务器来应对不断增加的负载和数据的效果。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4296,"question":"分片需要做什么?","simplecontent":null,"content":"MongoDB分片时，需要引入路由服务器（mongos）和配置服务器（config servers）。配置服务器是一个独立的mongod进程，保存集群和分片的元数据，即各分片包含了哪些数据的信息。路由服务器起到一个路由的功能，供程序连接。本身不保存数据，在启动时从配置服务器加载集群信息。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4297,"question":"NoSQL数据库可分为4种基本类型：?","simplecontent":null,"content":"1.键值存储NoSQL数据库\n2.文档存储NoSQL数据库\n3.列存储NoSQL数据库\n4.图基NoSQL数据库","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4298,"question":"分片角色?","simplecontent":null,"content":"① 配置服务器。是一个独立的mongod进程，保存集群和分片的元数据，即各分片包含了哪些数据的信息。最先开始建立，启用日志功能。像启动普通的mongod一样启动配置服务器，指定configsvr选项。不需要太多的空间和资源，配置服务器的1KB空间相当于真是数据的200MB。保存的只是数据的分布表。当服务不可用，则变成只读，无法分块、迁移数据。\n② 路由服务器。即mongos，起到一个路由的功能，供程序连接。本身不保存数据，在启动时从配置服务器加载集群信息，开启mongos进程需要知道配置服务器的地址，指定configdb选项。\n③ 分片服务器。是一个独立普通的mongod进程，保存数据信息。可以是一个副本集也可以是单独的一台服务器。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4299,"question":"分片(Shard)和复制(replication)是怎样工作的?","simplecontent":null,"content":" 每一个分片(shard)是一个分区数据的逻辑集合。分片可能由单一服务器或者集群组成，我们推荐为每一个分片(shard)使用集群。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4300,"question":"15Q：如果块移动操作(moveChunk)失败了，我需要手动清除部分转移的文档吗?","simplecontent":null,"content":" 不需要，移动操作是一致(consistent)并且是确定性的(deterministic)。\n一次失败后，移动操作会不断重试。\n当完成后，数据只会出现在新的分片里(shard)","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4301,"question":"16Q：数据在什么时候才会扩展到多个分片(Shard)里?","simplecontent":null,"content":" MongoDB 分片是基于区域(range)的。所以一个集合(collection)中的所有的对象都被存放到一个块(chunk)中,默认块的大小是 64Mb。当数据容量超过64 Mb，才有可能实施一个迁移，只有当存在不止一个块的时候，才会有多个分片获取数据的选项。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4302,"question":"17Q：更新一个正在被迁移的块（Chunk）上的文档时会发生什么？","simplecontent":null,"content":" 更新操作会立即发生在旧的块（Chunk）上，然后更改才会在所有权转移前复制到新的分片上。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:44","updateTime":"2021-05-26 01:09:44","isExist":null},{"id":4266,"question":"Mongotemplate模糊查询?","simplecontent":null,"content":"Pattern pattern=Pattern.compile(\"^.*\"+pattern_name+\".*$\", Pattern.CASE_INSENSITIVE);\n            criatira.orOperator(Criteria.where(\"name\").regex(pattern),\n                    Criteria.where(\"sex\").regex(pattern),\n                    Criteria.where(\"age\").regex(pattern),\n                    Criteria.where(\"class\").regex(pattern));","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4267,"question":"Mongodb修改字段?","simplecontent":null,"content":"//更新\npublic int update() {\n\tQuery query = new Query(); \n\tquery.addCriteria(Criteria.where(\"_id\").is(1));  //_id区分引号 \"1\"和1\n\tUpdate update = Update.update(\"name\", \"zzzzz\");\n//\tWriteResult upsert = mongoTemplate.updateMulti(query, update, \"userList\"); //查询到的全部更新\n//\tWriteResult upsert = mongoTemplate.updateFirst(query, update, \"userList\"); //查询更新第一条\n\tWriteResult upsert = mongoTemplate.upsert(query, update, \"userList\");      //有则更新，没有则新增\n\treturn upsert.getN();       //返回执行的条数\n\t}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4268,"question":"Mogodb流程?","simplecontent":null,"content":"添加驱动==>连接到服务==>连接到数据库==>选择集合==>对集合进行CRUD操作","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4269,"question":"】Mongodb操作流程？创建数据库，创建文档，插入数据","simplecontent":null,"content":"连接mongodb，连接数据库，创建文档，文档放入list集合，","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4270,"question":"创建集合?","simplecontent":null,"content":"mongoDatabase.createCollection(\"test\");//创建集合test ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4271,"question":"获取集合?","simplecontent":null,"content":"MongoCollection collection = mongoDatabase.getCollection(\"test\");\n//获取集合\nMongoCollection<Document> collection = MongoDBUtil.getConnect().getCollection(\"user\");","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4272,"question":"创建文档?","simplecontent":null,"content":"Document document = new Document(\"name\",\"张三\")\n.append(\"sex\", \"男\")\n.append(\"age\", 18);","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4273,"question":"插入多个文档进集合?","simplecontent":null,"content":"（以list插入）\nList documents = newArrayList(); \ndocuments.add(document); \ncollection.insertMany(documents); ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4274,"question":"插入一个文档进集合?","simplecontent":null,"content":"（以Document插入）\n  //获取数据库连接对象\n  MongoDatabase mongoDatabase = MongoDBUtil.getConnect();\n  //获取集合\n  MongoCollection<Document> collection = mongoDatabase.getCollection(\"user\");\n  //要插入的数据\n  Document document = new Document(\"name\",\"张三\") .append(\"sex\", \"男\").append(\"age\", 18);\n  //插入一个文档\n  collection.insertOne(document);","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4275,"question":"检索所有文档?","simplecontent":null,"content":"FindIterable findIterable= collection.find();\nMongoCursor mongoCursor = findIterable.iterator();\nwhile(mongoCursor.hasNext()){\nSystem.out.println(mongoCursor.next());\n }","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4276,"question":"取出查询到的第一个文档?","simplecontent":null,"content":"@Test\npublic void findTest(){\n  //获取数据库连接对象\n  MongoDatabase mongoDatabase = MongoDBUtil.getConnect();\n  //获取集合\n  MongoCollection<Document> collection = mongoDatabase.getCollection(\"user\");\n  //查找集合中的所有文档\n  FindIterable findIterable = collection.find();\n  //取出查询到的第一个文档\n  Document document = (Document) findIterable.first();\n  //打印输出\n  System.out.println(document);\n}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4277,"question":"根据过滤器查询文档?","simplecontent":null,"content":"//指定查询过滤器查询\n@Test\npublic void FilterfindTest(){\n  //获取数据库连接对象\n  MongoDatabase mongoDatabase = MongoDBUtil.getConnect();\n  //获取集合\n  MongoCollection<Document> collection = mongoDatabase.getCollection(\"user\");\n  //指定查询过滤器\n  Bson filter = Filters.eq(\"name\", \"张三\");\n  //指定查询过滤器查询\n  FindIterable findIterable = collection.find(filter);\n  MongoCursor cursor = findIterable.iterator();\n  while (cursor.hasNext()) {\n    System.out.println(cursor.next());\n  }\n}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4278,"question":"获取文档信息放入实体集合?","simplecontent":null,"content":"将文档信息封装成对象：\nList userList = newArrayList();\nUser user =null;\nwhile(mongoCursor.hasNext()){\n    user = newUser();\n   user.setName(mongoCursor.next().getString(\"Name\"));\n    user.setAge(mongoCursor.next().getInteger(\"Age\"));\nuser.setAddr(mongoCursor.next().getString(\"Addr\"))        \nuserList.add(user);\n  }","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4279,"question":"更新修改单个文档?","simplecontent":null,"content":"MongoDatabase mongoDatabase = MongoDBUtil.getConnect();\n  //获取集合\n  MongoCollection<Document> collection = mongoDatabase.getCollection(\"user\");\n  //修改过滤器\n  Bson filter = Filters.eq(\"name\", \"张三\");\n  //指定修改的更新文档\n  Document document = new Document(\"$set\", new Document(\"age\", 100));\n  //修改单个文档\n  collection.updateOne(filter, document);\n        \n //检索查看结果  \n         FindIterable<Document> findIterable = collection.find();  \n         MongoCursor<Document> mongoCursor = findIterable.iterator();  \n         while(mongoCursor.hasNext()){  \n            System.out.println(mongoCursor.next());  \n         } ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4280,"question":"修改多个文档?","simplecontent":null,"content":" MongoDatabase mongoDatabase = MongoDBUtil.getConnect();\n  //获取集合\n  MongoCollection<Document> collection = mongoDatabase.getCollection(\"user\");\n  //修改过滤器\n  Bson filter = Filters.eq(\"name\", \"张三\");\n  //指定修改的更新文档\n  Document document = new Document(\"$set\", new Document(\"age\", 100));\n  //修改多个文档\n  collection.updateMany(filter, document);","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4281,"question":"删除第一个文档?","simplecontent":null,"content":"（在集合collection下删除）\n//删除符合条件的第一个文档  \n         collection.deleteOne(Filters.eq(\"Age\",30));  \n         //删除所有符合条件的文档  \n         collection.deleteMany (Filters.eq(\"Age\",30));","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4282,"question":"Mongodb输入账号密码连接数据库?","simplecontent":null,"content":"            //连接到MongoDB服务 如果是远程连接可以替换“localhost”为服务器所在IP地址 \n            //ServerAddress()两个参数分别为服务器地址和端口 \n            ServerAddress serverAddress = new ServerAddress(\"localhost\",27017); \n            List addrs = new ArrayList(); \n            addrs.add(serverAddress); \n              \n            //MongoCredential.createScramSha1Credential()三个参数分别为用户名数据库名称密码 \nMongoCredential credential = MongoCredential.createScramSha1Credential(\"username\", \"databaseName\", \"password\".toCharArray()); \n            Listcredentials = new ArrayList(); \n            credentials.add(credential); \n             \n            //通过连接认证获取MongoDB连接 \n            MongoClient mongoClient = new MongoClient(addrs,credentials); \n             \n            //连接到数据库 \n            MongoDatabase mongoDatabase = mongoClient.getDatabase(\"databaseName\"); ","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:43","updateTime":"2021-05-26 01:09:43","isExist":null},{"id":4245,"question":"】MongoDB 索引？提高查询的效率，否则全文档扫描","simplecontent":null,"content":"索引通常能够极大的提高查询的效率，如果没有索引，MongoDB在读取数据时必须扫描集合中的每个文件并选取那些符合查询条件的记录。\n这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。\n索引是特殊的数据结构，索引存储在一个易于遍历读取的数据集合中，索引是对数据库表中一列或多列的值进行排序的一种结构","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4246,"question":"】创建索引方法？>db.col.createIndex({\"title\":1})，title是索引字段，1 为指定按升序创建索引","simplecontent":null,"content":"createIndex()方法基本语法格式如下所示：\n>db.collection.createIndex(keys, options)\n语法中 Key 值为你要创建的索引字段，1 为指定按升序创建索引，如果你想按降序来创建索引指定为 -1 即可。\n>db.col.createIndex({\"title\":1})\ndb.values.createIndex({open: 1, close: 1}, {background: true})","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4247,"question":"】索引比较重要参数？权重、唯一索引、是否阻塞其它数据库操作","simplecontent":null,"content":"权重、唯一索引、是否阻塞其它数据库操作","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4248,"question":"】排序 方法？sort()","simplecontent":null,"content":"在 MongoDB 中使用 sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。\nsort()方法基本语法如下所示：\n>db.COLLECTION_NAME.find().sort({KEY:1})","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4249,"question":"】MongoDB 复制（副本集）流程？同步数据到其它服务器","simplecontent":null,"content":"MongoDB复制是将数据同步在多个服务器的过程。\n复制提供了数据的冗余备份，并在多个服务器上存储数据副本，提高了数据的可用性， 并可以保证数据的安全性。\n复制还允许您从硬件故障和服务中断中恢复数据。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4250,"question":"】MongoDB 复制（副本集）作用？可用性增加、故障可恢复","simplecontent":null,"content":"保障数据的安全性\n数据高可用性 (24*7)\n灾难恢复\n无需停机维护（如备份，重建索引，压缩）\n分布式读取数据","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4251,"question":"】MongoDB复制原理？主节点操作oplog，从节点定期轮询主节点获取这些操作","simplecontent":null,"content":"mongodb的复制至少需要两个节点。其中一个是主节点，负责处理客户端请求，其余的都是从节点，负责复制主节点上的数据。\nmongodb各个节点常见的搭配方式为：一主一从、一主多从。\n主节点记录在其上的所有操作oplog，从节点定期轮询主节点获取这些操作，然后对自己的数据副本执行这些操作，从而保证从节点的数据与主节点一致。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4252,"question":"】数据大连增加怎么办？垂直和水平缩放","simplecontent":null,"content":"垂直扩展涉及增加单个服务器的容量，例如使用更强大的CPU，添加更多RAM或增加存储空间量。可用技术的局限性可能会限制单个机器对于给定工作负载而言足够强大。此外，基于云的提供商基于可用的硬件配置具有硬性上限。结果，垂直缩放有实际的最大值。\n水平扩展涉及划分系统数据集并加载多个服务器，添加其他服务器以根据需要增加容量。虽然单个机器的总体速度或容量可能不高，但每台机器处理整个工作负载的子集，可能提供比单个高速大容量服务器更高的效率。扩展部署容量只需要根据需要添加额外的服务器，这可能比单个机器的高端硬件的总体成本更低。权衡是基础架构和部署维护的复杂性增加。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4253,"question":"】为什么使用分片？单机器存储不足，性能降低","simplecontent":null,"content":"复制所有的写入操作到主节点\n延迟的敏感数据会在主节点查询\n单个副本集限制在12个节点\n当请求量巨大时会出现内存不足。\n本地磁盘不足\n垂直扩展价格昂贵\n\n1，机器的磁盘不够用了。使用分片解决磁盘空间的问题。2，单个mongod已经不能满足写数据的性能要求。通过分片让写压力分散到各个分片上面，使用分片服务器自身的资源。3，想把大量数据放到内存里提高性能。和上面一样，通过分片使用分片服务器自身的资源。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4254,"question":"】如何分片？分片键来划分，3个分片分别根据分片策略存储不同数据，三个分片都是可以存储","simplecontent":null,"content":"过在多台机器上分割数据，使得数据库系统能存储和处理更多的数据\n在部署之前先明白片键的意义，一个好的片键对分片至关重要。片键必须是一个索引，数据根据这个片键进行拆分分散。通过sh.shardCollection加会自动创建索引。一个自增的片键对写入和数据均匀分布就不是很好，因为自增的片键总会在一个分片上写入，后续达到某个阀值可能会写到别的分片。但是按照片键查询会非常高效。随机片键对数据的均匀分布效果很好。注意尽量避免在多个分片上进行查询。在所有分片上查询，mongos会对结果进行归并排序。\n配置服务器是一个普通的mongod进程，所以只需要新开一个实例即可。配置服务器必须开启1个或则3个\n配置服务器。是一个独立的mongod进程，保存集群和分片的元数据，即各分片包含了哪些数据的信息。最先开始建立，启用日志功能。像启动普通的mongod一样启动配置服务器，指定configsvr选项。不需要太多的空间和资源，配置服务器的1KB空间相当于真是数据的200MB。保存的只是数据的分布表。 \n② 路由服务器。即mongos，起到一个路由的功能，供程序连接。本身不保存数据，在启动时从配置服务器加载集群信息，开启mongos进程需要知道配置服务器的地址，指定configdb选项。 \n③ 分片服务器。是一个独立普通的mongod进程，保存数据信息。可以是一个副本集也可以是单独的一台服务器。\n{\n路由服务器不保存数据，把日志记录一下即可。\n\n}\n部署环境：3台机子\nA：配置(3)、路由1、分片1；\nB：分片2，路由2；\nC：分片3","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4255,"question":"】分片策略？范围（突然某节点数据很多）和hash（范围查询很差）","simplecontent":null,"content":"范围（突然某节点数据很多）和hash（范围查询很差）","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4256,"question":"】可视化工具?Robo","simplecontent":null,"content":"Robo","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4257,"question":"】查询条件？使用Criteria","simplecontent":null,"content":"Query query = new Query();\nquery.addCriteria(Criteria.where(\"name\").is(\"Neo\"));\n\n\n查询年龄小于 < 30 并 > 20 的用户\nQuery query = new Query();\nquery.addCriteria(Criteria.where(\"age\").lt(30).gt(20));\n\n\n查询以N开头的名字\nQuery query = new Query();\nquery.addCriteria(Criteria.where(\"name\").regex(\"^N\"));\n\nQuery query = new Query();\nquery.addCriteria(Criteria.where(\"name\").regex(\"o$\"));\n\n包含\n Query query = new Query();\n   query.addCriteria(Criteria.where(\"favoriteBooks\").in(favoriteBook));","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4258,"question":"自增?","simplecontent":null,"content":"Query query = new Query();\n   Update update = new Update().inc(\"age\", 1);\n   mongoTemplate.findAndModify(query, update, Person.class);;}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4259,"question":"Springboot和mongodb结合?","simplecontent":null,"content":"使用mongoTemplate\nmongoTemplate.updateFirst操作：修改第一条\nmongoTemplate.updateMulti操作：修改符合条件的所有\nthis.mongoTemplate.upsert操作：修改时如果不存在则添加.\n\n\nBook book=newBook（）；              \nbook.setCreateTime(new Date());\nmongoTemplate.save(book);\n\n查询所有List<Book> List =mongoTemplate.findAll(Book.class);\n\n根据id查询\nQuery query = new Query(Criteria.where(\"_id\").is(id));\nBook  book =mongoTemplate.findOne(query, Book.class);\n\n\nQuery query = new Query(Criteria.where(\"_id\").is(book.getId()));\n  Update update = new Update()\n.set(\"publish\", book.getPublish())\n                .set(\"info\", book.getInfo())\n                .set(\"updateTime\", new Date());\n        //updateFirst 更新查询返回结果集的第一条\n        mongoTemplate.updateFirst(query, update, Book.class);\n        //updateMulti 更新查询返回结果集的全部//        mongoTemplate.updateMulti(query,update,Book.class);\n        //upsert 更新对象不存在则去添加//        mongoTemplate.upsert(query,update,Book.class);\n\n\n删除对象mongoTemplate.remove(book);\n \n根据id删除\nQuery query = new Query(Criteria.where(\"_id\").is(id));\n        return mongoTemplate.findOne(query, Book.class);\n      mongoTemplate.remove(book);\n\nhttps://www.jianshu.com/p/a2dcc02e2767","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4260,"question":"mongoTemplate插入数据和修改数据?","simplecontent":null,"content":"Query qry1 = new Query();\nqry1.addCriteria(Criteria.where(\"type\").is(1)\n        .and(\"valid\").is(\"Y\")\n        .and(\"sku\").is(mp.get(\"sku\").toString())\n        .and(\"govpur_company_code\").is(mp.get(\"govpur_company_code\").toString()));\nArrayList<MessagePush> list = (ArrayList)this.findAll(qry1,MessagePush.class);\nif (list.size() > 0) {\n    for (int j = 0; j < list.size(); j++) {\n        MessagePush mpj = list.get(j);\n        Query q = new Query(Criteria.where(\"id\").is(mpj.getId()));\n        Update update = Update.update(\"valid\", \"N\");\n        this.findAndUpdate(q, update, MessagePush.class);\n    }\n}\n\npublic <T> T findAndUpdate(Query qry, Update update, T entity) {\n    return (T)this.mongoTemplate.findAndModify(qry, update, (Class)entity);\n}\n\n// 先查询，如果没有符合条件的，会执行插入，插入的值是查询值 ＋ 更新值\n目的是为了减少重复的","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4261,"question":"mongoTemplate插入数据?","simplecontent":null,"content":"List<SysUser> userList = new ArrayList<>();\nuserList.add(new SysUser(11,\"1\",\"白小飞\",\"18888888888\"));\nuserList.add(new SysUser(9,\"1\",\"白敬亭\",\"13333333333\"));\nmongoTemplate.insert(userList, \"userList\");\n\nSysUser sysUser = new SysUser(12,\"1\",\"黄小飞\",\"18888888888\");\nmongoTemplate.insert(sysUser, \"userList\");","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4262,"question":"Inset和save区别?","simplecontent":null,"content":"插入重复数据\n\ninsert: 若新增数据的主键已经存在，则会抛 org.springframework.dao.DuplicateKeyException 异常提示主键重复，不保存当前数据。\n\nsave: 若新增数据的主键已经存在，则会对当前已经存在的数据进行修改操作。\n\n批操作\n\ninsert: 可以一次性插入一整个列表，而不用进行遍历操作，效率相对较高。\n\nsave: 需要遍历列表，进行一个个的插入。","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4263,"question":"Mongotemplate查询单个数据?","simplecontent":null,"content":"//查询单个数据\n\tpublic SysUser findMongo() {\n\t\tPattern pattern = Pattern.compile(\"^.*8$\",Pattern.CASE_INSENSITIVE);\n\t\tQuery query = new Query(Criteria.where(\"phone\").regex(pattern));\n\t\tSysUser findOne = mongoTemplate.findOne(query,SysUser.class,\"userList\");\n\t\treturn findOne;\n\t}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4264,"question":"Mongotemplate查询多个数据?","simplecontent":null,"content":"//查询多个数据\n\tpublic List<SysUser> findListMongo() {\n\t\t//模糊查询以 ^开始 以$结束 .*相当于Mysql中的%\n\t\tPattern pattern = Pattern.compile(\"^1.*$\",Pattern.CASE_INSENSITIVE);\n\t\tQuery query = new Query(Criteria.where(\"phone\").regex(pattern));\n//\t\tQuery query = new Query(Criteria.where(\"status\").is(\"1\"));\n//\t\tquery.with(new Sort(Direction.DESC,\"phone\"));  //按手机号码倒序\n\t\t List<SysUser> findList = mongoTemplate.find(query,SysUser.class,\"userList\");\n\t\treturn findList;\n\t}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4265,"question":"Mongotemplate多个条件查询?","simplecontent":null,"content":"//多个条件查询(格式2)\npublic List<SysUser> findList2(){\n\tCriteria criteria = new Criteria();\n\tcriteria.and(\"name\").is(\"秦岚\");\n\tcriteria.and(\"phone\").is(\"12222222222\");\n\tQuery query = new Query(criteria);\n\tList<SysUser> findList = mongoTemplate.find(query, SysUser.class,\"userList\");\n\treturn findList;\n}","filterContent":null,"type":"java-mongodb","status":0,"createTime":"2021-05-26 01:09:42","updateTime":"2021-05-26 01:09:42","isExist":null},{"id":4233,"question":"RocketMQ特性?","simplecontent":null,"content":"顺序性 \n消息过滤 \n消息持久化 \n消息回溯 \n大量消息堆积 \n定时消息 \n消息重试","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4234,"question":"RocketMQ高可用?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4235,"question":"RocketMQ分布式事务?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4236,"question":"RocketMQ有哪些坑?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4237,"question":"RocketMQ的namesrv全挂掉是否影响通信?","simplecontent":null,"content":"RocketMQ队列中的消息有序，能否保证消费者消费也有序\n\n必须是顺序消费才可以，并行消费无法做到有序。是否受网络影响，顺序消费也有可能无序，待测","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4238,"question":"RocketMQ怎么设置消息是从Master消费还是从Slaver消费。Master和Slaver同时在线，消息是否会从Master消费一遍，然后再从Slaver消费一遍？","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4239,"question":"RocketMQ默认端口是多少?","simplecontent":null,"content":"namesrv默认端口9876，broker默认端口10911，VIP默认端口10909，每个broker启动后默认占用两个端口10911和10913或10912和10914\n\nRocketMQ同一台机，启动多个生产者实例或多个消费者实例，需要设置不同的实例名称\n\nRocketMQ无论何种情况（发送到单个队列，顺序消费或并行消费；或者发送到多个队列，顺序消费或者并行消费），延时/定时消息总是迟于非延时/非定时消息到达broker，延时/定时消息是在延时/定时时间过后才被投放到broker，也即延时/定时消息不会影响非延时/非定时消息到达broker。如果等待所有消息全部到达broker之后，才启动消费者，这个延时/定时是否还有意义？\n\nRocketMQ在不考虑网络影响的情况下，只有将同一ID的消息发送到同一队列上，并且消费端使用顺序消费，才能保证消息被顺序消费。即生产者不使用MessageQueueSelector或者消费者不使用MessageListenerOrderly的任何一种情况出现都不能保证消息被顺序消费，考虑网络影响的情况待测。\n\nRocketMQ消费端消息ack是ack到本地队列，然后由本地队列登记后，再5秒钟间隔上报到broker？\n\n经测试：调大上报时间，本地ack之后（返回CONSUME_SUCCESS，且#Diff > 0），立即停掉消费端，过许久，发现仍#Diff > 0，证明消费端确实还没有上报ack进度给broker；重启消费端之后，因#Diff > 0，消息又被重新消费了一次，证明之前broker确实没收到ack，也由此可证明消费端ack是先ack到本地队列，停掉消费端，本地队列的所有信息都没有了，也就因此迟迟不会将#Diff变为0。\n————————————————\n版权声明：本文为CSDN博主「多隆」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/huayushuangfei/article/details/80866642","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4240,"question":"】RocketMQ消息重复消费场景及解决办法？幂等性校验","simplecontent":null,"content":"出现超时重试的情况，还有就是系统频繁迭代，经常重启系统更新的场景，也会出现消息重复消费\n生产者端发送重复的消息到RocketMQ中其实问题不大，消息只是在RocketMQ中重复了，并没有影响到系统的数据，我们只需要在最后修改数据库的时候，保证好幂等性即可\n\n既然在消费者做幂等性的方案都不是特别靠谱，那就再在消费者端来做吧\n消息的消费，最后都对应的是数据库的操作，只要在消息消费的时候，判断一下数据库中是否已经消费过了这条消息，就可以保证幂等性了，例如使用唯一索引，保证一条消息只被消费一次。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4241,"question":"】producer如何保证消息不丢失？同步阻塞式发送、事务消息的投递方式","simplecontent":null,"content":"《同步阻塞式发送、事务消息的投递方式》\n1.默认情况下，可以通过同步的方式阻塞式的发送，check SendStatus，状态是OK，表示消息一定成功的投递到了Broker，状态超时或者失败，则会触发默认的2次重试。此方法的发送结果，可能Broker存储成功了，也可能没成功\n\n2.采取事务消息的投递方式，并不能保证消息100%投递成功到了Broker，但是如果消息发送Ack失败的话，此消息会存储在CommitLog当中，但是对ConsumerQueue是不可见的。可以在日志中查看到这条异常的消息，严格意义上来讲，也并没有完全丢失\n\n3.RocketMQ支持 日志的索引，如果一条消息发送之后超时，也可以通过查询日志的API，来check是否在Broker存储成功","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4242,"question":"】broker如何保证消息不丢失?持久化、同步复制、同步刷盘","simplecontent":null,"content":"《持久化、同步复制、同步刷盘》\n1.消息支持持久化到Commitlog里面，即使宕机后重启，未消费的消息也是可以加载出来的\n\n2.Broker自身支持同步刷盘、异步刷盘的策略，可以保证接收到的消息一定存储在本地的内存中\n\n3.Broker集群支持 1主N从的策略，支持同步复制和异步复制的方式，同步复制可以保证即使Master 磁盘崩溃，消息仍然不会丢失\ncunmser如何保证消息不丢失\n1.Consumer自身维护一个持久化的offset（对应MessageQueue里面的min offset），标记已经成功消费或者已经成功发回到broker的消息下标\n\n2.如果Consumer消费失败，那么它会把这个消息发回给Broker，发回成功后，再更新自己的offset\n\n3.如果Consumer消费失败，发回给broker时，broker挂掉了，那么Consumer会定时重试这个操作\n\n4.如果Consumer和broker一起挂了，消息也不会丢失，因为consumer 里面的offset是定时持久化的，重启之后，继续拉取offset之前的消息到本地","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4243,"question":"】如何保证消费顺序性?同一个功能消息放入同一条queue","simplecontent":null,"content":"《同一个功能消息放入同一条queue》\n但是同一条queue里面，RocketMQ的确是能保证FIFO的。那么要做到顺序消息，应该怎么实现呢——把消息确保投递到同一条queue。\n下面用订单进行示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。\nProducer端保证发送消息有序，且发送到同一个队列。\n2.consumer端保证消费同一个队列。\n\n/ RocketMQ通过MessageQueueSelector中实现的算法来确定消息发送到哪一个队列上\n// RocketMQ默认提供了两种MessageQueueSelector实现：随机/Hash\n// 当然你可以根据业务实现自己的MessageQueueSelector来决定消息按照何种策略发送到消息队列中\nSendResult sendResult = producer.send(msg, new MessageQueueSelector() {\n    @Override\n    public MessageQueue select(List<MessageQueue> mqs, Message msg, Object arg) {\n        Integer id = (Integer) arg;\n        int index = id % mqs.size();\n        return mqs.get(index);\n    }\n}, orderId);\n通过运行结果可以看出生产者发送的消息会根据MessageQueueSelector实现的算法来选择一个队列，那么相同的策orderId消息自然是发送到了同一个队列，那么在消费的时候也会被一起消费。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4244,"question":"】如果消费端收到两条一样的信息，怎么处理呢？幂等性验证","simplecontent":null,"content":"《幂等性验证》\n消费端处理消息的业务逻辑保持幂等性\n保证每条消息都有唯一编号且保证消息处理成功与去重表的日志同时出现\n\n第1条的原理是，只要保持幂等性，不管来多少条重复消息，最后处理的结果都一样。第2条原理就是利用一张日志表来记录已经处理成功的msgId，如果新到的msgId已经在日志表中，那么就不再处理这条消息。\n第1条解决方案，很明显应该在消费端实现，不属于消息系统要实现的功能。第2条可以消息系统实现，也可以业务端实现。正常情况下出现重复消息的概率其实很小，如果由消息系统来实现的话，肯定会对消息系统的吞吐量和高可用有影响，所以最好还是由业务端自己处理消息重复的问题，这也是RocketMQ不解决消息重复的问题的原因。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:51","updateTime":"2021-05-26 01:08:51","isExist":null},{"id":4216,"question":"】rocketmq消费模式?集群（单一机消费）和广播（全同消费）","simplecontent":null,"content":"1.集群消费  队列被其中一个消费，其它不会消费了\n2.广播消费\"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4217,"question":"】怎么保证MQ消息不丢失？product（同步阻塞发送、事务投递，重试），broke（持久化、同步刷盘、同步复制），consumer（持久化，offset手动确认，重试）","simplecontent":null,"content":"生产端：可以指定发送次数，失败后 异常处理\n消费端：重试-进行重新消费问题（注意幂等性问题，数据库或者分布式锁） 。 一般指定次数。超过限制则记录 日志表 进行人工补偿机制\nproducer如何保证消息不丢失\n1.默认情况下，可以通过同步的方式阻塞式的发送，check SendStatus，状态是OK，表示消息一定成功的投递到了Broker，状态超时或者失败，则会触发默认的2次重试。此方法的发送结果，可能Broker存储成功了，也可能没成功\n\n2.采取事务消息的投递方式，并不能保证消息100%投递成功到了Broker，但是如果消息发送Ack失败的话，此消息会存储在CommitLog当中，但是对ConsumerQueue是不可见的。可以在日志中查看到这条异常的消息，严格意义上来讲，也并没有完全丢失\n\n3.RocketMQ支持 日志的索引，如果一条消息发送之后超时，也可以通过查询日志的API，来check是否在Broker存储成功\n\nbroker如何保证消息不丢失\n1.消息支持持久化到Commitlog里面，即使宕机后重启，未消费的消息也是可以加载出来的\n\n2.Broker自身支持同步刷盘、异步刷盘的策略，可以保证接收到的消息一定存储在本地的内存中\n\n3.Broker集群支持 1主N从的策略，支持同步复制和异步复制的方式，同步复制可以保证即使Master 磁盘崩溃，消息仍然不会丢失\n\ncunmser如何保证消息不丢失\n1.Consumer自身维护一个持久化的offset（对应MessageQueue里面的min offset），标记已经成功消费或者已经成功发回到broker的消息下标\n\n2.如果Consumer消费失败，那么它会把这个消息发回给Broker，发回成功后，再更新自己的offset\n\n3.如果Consumer消费失败，发回给broker时，broker挂掉了，那么Consumer会定时重试这个操作\n\n4.如果Consumer和broker一起挂了，消息也不会丢失，因为consumer 里面的offset是定时持久化的，重启之后，继续拉取offset之前的消息到本地\n\n生产者把消息从Producer生产出来，经过网络发送给Broker端(生产阶段)：在这个阶段我们常用的保障手段就是，当Broker收到消息后给Producer一个确认响应（就是大家常说的ACK），如果Producer没有收到正确的响应，Producer直到收到Broker的确认响应后才会停止重试消息发送。这里需要注意的点是，根据自己业务场景有时候要对ACK做一些处理，消息队列大都提供了自动ACK，再需要手动确认ACK的时候我们需要关闭掉这一默认设置。还有就是需要在我们的代码处做好异常处理，尤其要注意在异步发送的回调中检查发送结果。这一就可以保证消息队列在这个阶段数据不会丢失。\nBroker收到来自Producer的消息，持久化到磁盘（存储阶段）：在这个阶段只要Broker正常工作基本上都能序列化正常，但是在集群化的Broker中发生概率还是比较高的。因此我们要对刷盘机制根据情况做一些调整，在单节点的情况下，我们可以设置当Broker接收到消息后先刷盘，当刷盘成功后再给Producer成功响应。这样即使Broker宕机，由于消息已经写入磁盘，重启后会继续处理，这里就会引入一个新的问题我们接下来会说到（消息重复）。例如设置RocketMQ中flushDiskType=SYNC_FLUSH（同步刷盘）\n消费者通过网络，从Broker上读取消息（消费阶段）：在这个阶段我们需要注意的一定要当消费者处理完你自身业务逻辑后给Broker发送消费确认。否则当你收到消息就给Broker确认消费，此时Broker认为消费者消费成功，将消息从Broker队列中移除，当本地逻辑处理异常时就很有可能丢掉这个消息。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4218,"question":"】RocketMQ消息何时删除？在每天4点删除超过48小时的文件或者当磁盘水位线达到75%。","simplecontent":null,"content":"在RocketMQ中存在多个消费组时，消费者只记录自己的消费位置offset，那么过消息啥时候过期？过期后啥时候删除？怎么删除呢？前面在《什么是消息模型？》中我们说到了RocketMQ通过一个主题包含多个队列的方式实现并行生产与消费，并且一个队列给每个消费者提供offset标示消费位置。我们知道它的消息是顺序写在在一个叫CommitLog的文件中，然后会把里面的消息分发对应到主题上的多个Consume Queue，消费端根据offset跳过历史记录按次序获取每个Queue上最新的历史记录。默认情况下CommitLog在每天4点删除超过48小时的文件或者当磁盘水位线达到75%。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4219,"question":"那你们线上系统是有哪些技术挑战，为什么必须要在系统里引入消息中间件?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4220,"question":"】为什么不用RocketMQ或者是Kafka?可靠性、性能、队列、重试、顺序消费","simplecontent":null,"content":"数据可靠性\n\nRocketMQ支持异步实时刷盘，同步刷盘，同步Replication，异步Replication\nKafka只支持异步刷盘，异步Replication\nRocketMQ的同步刷盘在单机可靠性比Kafka高，不会因为操作系统崩溃，导致数据丢失。同步Replication比异步Replication可靠，数据完全无单点。Kafka在主机宕机，备机自动切换，由于异步Replication导致数据丢失。如果主机重启，与现在的主机产生数据冲突。\n\n性能     \nKafka的TPS高，不稳定\nKafkaTPS高因为producer将多个消息合并，批量发向broker。这里会有一些问题，缓存过多消息，gc是个问题；producer发送消息到broker，向业务返回成功，但是producer宕机，导致消息丢失；producer分布式系统，且每台机器是多线程发送，单个producer产生的数据量有限；发送消息单一功能，缓存可由上层业务完成。\n\n单机支持的队列数\n\nKafka单机超过64个队列，发送消息响应时间随着队列越多越长\nRocketMQ单机支持最高5万个队列，Load不会明显变化\n实时性\n\nKafka短轮询，实时性取决轮询间隔时间\nRocketMQ长轮询，消息投递延时通常在几毫秒\n失败重试\n\n Kafka消费失败不支持重试\nRocketMQ消费失败支持定时重试，每次重试间隔时间顺延\n\n消息顺序\nKafka消息顺序，broker宕机，产生消息乱序\nRocketMQ消息顺序，broker宕机，不会乱序\n定时消息\n\nKafka不支持\nRocketMQ支持，指定毫秒级别的延时时间\n分布式式事物\n\nKafka不支持\nRocketMQ支持\n消息查询\n\nKafka不支持\nRocketMQ支持根据message id和消息内容查询\n消息回溯\n\nKafka理论支持\nRocketMQ按照时间支持，精确到毫秒\n消费并行度\n\nKafka消费并行度与分区数一致\nRocketMQ顺序消费和Kafka一样，乱序取决consumer的线程数\n消息轨迹\n\nKafka不支持\nRocketMQ支持\nbroker消息过滤\n\nKafka不支持\nRocketMQ根据message tag或者任意形式过滤","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4221,"question":"】怎么保证消息中间件的高可用性，避免消息中间件故障后引发系统整体故障?看broker是性能还是可靠性，broker主要是集群双主双从，是否启用同步刷盘和同步双写复制（性能）","simplecontent":null,"content":"NameServer：因为NameServer是无状态的，所以只需要直接用集群 部署，只要由一台NameServer可用，那么集群就整体可用。\nBroker：实际存储消息的服务，服务不可用可能导致消息丢失推荐使用两主两从以上的集群配置此外Broker的主从配置有同步双写和异步双写，同步双写保证消息不会丢失，异步复制性能高，但是如果发现断电等瞬时故障导致主从同时宕机可能会丢失几条消息。正常情况异步复制一台机器发生故障不会丢失数据。\n\nBroker\n推荐使用双主双从，异步复制。对应配置文件：conf/2m-2s-async/目录下。如果偏向性能，则使用异步刷盘（数据落盘模式），异步复制（主从同步模式）。如果偏向消息高可靠，不在乎性能，则使用同步刷盘，同步双写。如果需求居中，则推荐异步刷盘，同步双写。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4222,"question":"你们怎么保证投递出去的消息只有一条且仅仅一条，不会出现重复的数据?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4223,"question":"如果消费了重复的消息怎么保证数据的准确性?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4224,"question":"你们线上业务用消息中间件的时候，是否需要保证消息的顺序性?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4225,"question":"如果不需要保证消息顺序，为什么不需要?假如我有一个场景要保证消息的顺序，你们应该如何保证?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4226,"question":"】下游消费系统如果宕机了，几百万条消息积压，此时怎么处理?限制发送端业务逻辑是否合理，进行批量发送或者发送多个主题上或者放在不同分区queue上（相同queue只能被一个消费者消费）；新增消费者，增加应急队列，在消费者消费不完情况发送到应急队列里；需要查看是否有无限重发的消息或者有进入死锁的程序","simplecontent":null,"content":"过多的数据积压不仅占用磁盘空间，还会影响MQ性能\n其实对于一个原本正常的消息系统来说消息积压，只会出现两种情况：要么生产者消息数量增加导致的积压；要么就是消费者消费变慢导致的消息积压。对于一个消息队列我们肯定在上线前就预估好，单节点最大承受流量与系统目前最大峰值流量的数据，一般情况下消息队列收发性能是远大于业务处理性能的，一旦出现的话问题也很显而易见：要么就是流量突然增加，要么就是业务逻辑异常。我能应该从三个方面来查找问题：\n生产端：一般当生产端发生积压（Broker正常的情况下）就要查看你的业务逻辑是否有异常的耗时步骤导致的。是否需要改并行化操作等。\nBroker端：当Broker端发生积压我们首先要查看，消息队列内存使用情况，如果有分区的的话还得看每个分区积压的消息数量差异。当每个分区的消息积压数据量相对均匀的话，我们大致可以认为是流量激增。需要在消费端做优化，或者同时需要增加Broker节点（相当于存储扩容），如果分区加压消息数量差异很大的话（有的队列满了，有的队列可能还是空闲状态），我们这时候就要检查我们的路由转发规则是否合理，\n消费端：在使用消息队列的时候大部分的问题都出在消费端，当消费速度小于生产速度很快就会出现积压，导致消息延迟，以至于丢失。这里需要重点说明一点的是，当消费速度小于生产速度的时候，仅增加消费者是没有用处的，因为多个消费者在同一个分区上实际是单线程资源竞争关系（当然还有一些冒险的单队列多消费者并行方式就是：消费者接到消息就ack成功再去处理业务逻辑，这样你就要承受消息丢失的代价），我们需要同时增加Broker上的分区数量才能解决这一问题。\n那么上面我们说到消息积压的问题所在，那么遇到这样问题我们怎么能够快速的解决呢？我们需要查看是否有无限重发的消息或者有进入死锁的程序等等，当确定是流量激增的话，我们需要评估是否需要增加资源还是通过限流的方式解决，当短时间大量消息需要处理时，在资源允许的情况下，我们可以新启一批消费者与消息队列，将原来的消费者中的消息直接作为生产者转发到临时应急队列中，这样大概率的能够快速解决消息积压。与其事后处理不如我们在设计之初就要把积压考虑进来，对于数据量非常大，但是实时性要求不高的场景，可以设计出批量消息发送，当队列积累到一定阀值再做批量消费消费，这里需要注意的就是重复消费带来的影响，设计不好就是一场灾难。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4227,"question":"你们线上是否遇到过消息积压的生产故障?如果没遇到过，你考虑一下如何应对?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4228,"question":"如果让你来动手实现一个分布式消息中间件，整体架构你会如何设计实现?","simplecontent":null,"content":"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4229,"question":"】为什么使用消息队列？解耦、异步、削峰","simplecontent":null,"content":"解耦\n看这么个场景。A 系统发送数据到 BCD 三个系统，通过接口调用发送。如果 E 系统也要这个数据呢？那如果 C 系统现在不需要了呢？A 系统负责人几乎崩溃......\n这个场景中，A 系统跟其它各种乱七八糟的系统严重耦合，A 系统产生一条比较关键的数据，很多系统都需要 A 系统将这个数据发送过来。A 系统要时时刻刻考虑 BCDE 四个系统如果挂了该咋办？要不要重发，要不要把消息存起来？头发都白了啊！\n如果使用 MQ，A 系统产生一条数据，发送到 MQ 里面去，哪个系统需要数据自己去 MQ 里面消费。如果新系统需要数据，直接从 MQ 里消费即可；如果某个系统不需要这条数据了，就取消对 MQ 消息的消费即可。这样下来，A 系统压根儿不需要去考虑要给谁发送数据，不需要维护这个代码，也不需要考虑人家是否调用成功、失败超时等情况。\n总结：通过一个 MQ，Pub/Sub 发布订阅消息这么一个模型，A 系统就跟其它系统彻底解耦了。\n面试技巧：你需要去考虑一下你负责的系统中是否有类似的场景，就是一个系统或者一个模块，调用了多个系统或者模块，互相之间的调用很复杂，维护起来很麻烦。但是其实这个调用是不需要直接同步调用接口的，如果用 MQ 给它异步化解耦，也是可以的，你就需要去考虑在你的项目里，是不是可以运用这个 MQ 去进行系统的解耦。在简历中体现出来这块东西，用 MQ 作解耦。\n异步\n再来看一个场景，A 系统接收一个请求，需要在自己本地写库，还需要在 BCD 三个系统写库，自己本地写库要 3ms，BCD 三个系统分别写库要 300ms、450ms、200ms。最终请求总延时是 3 + 300 + 450 + 200 = 953ms，接近 1s，用户感觉搞个什么东西，慢死了慢死了。用户通过浏览器发起请求，等待个 1s，这几乎是不可接受的。\n一般互联网类的企业，对于用户直接的操作，一般要求是每个请求都必须在 200 ms 以内完成，对用户几乎是无感知的。\n如果使用 MQ，那么 A 系统连续发送 3 条消息到 MQ 队列中，假如耗时 5ms，A 系统从接受一个请求到返回响应给用户，总时长是 3 + 5 = 8ms，对于用户而言，其实感觉上就是点个按钮，8ms 以后就直接返回了，爽！网站做得真好，真快！\n削峰\n每天 0:00 到 12:00，A 系统风平浪静，每秒并发请求数量就 50 个。结果每次一到 12:00 ~ 13:00 ，每秒并发请求数量突然会暴增到 5k+ 条。但是系统是直接基于 MySQL的，大量的请求涌入 MySQL，每秒钟对 MySQL 执行约 5k 条 SQL。\n一般的 MySQL，扛到每秒 2k 个请求就差不多了，如果每秒请求到 5k 的话，可能就直接把 MySQL 给打死了，导致系统崩溃，用户也就没法再使用系统了。\n但是高峰期一过，到了下午的时候，就成了低峰期，可能也就 1w 的用户同时在网站上操作，每秒中的请求数量可能也就 50 个请求，对整个系统几乎没有任何的压力。\n如果使用 MQ，每秒 5k 个请求写入 MQ，A 系统每秒钟最多处理 2k 个请求，因为 MySQL 每秒钟最多处理 2k 个。A 系统从 MQ 中慢慢拉取请求，每秒钟就拉取 2k 个请求，不要超过自己每秒能处理的最大请求数量就 ok，这样下来，哪怕是高峰期的时候，A 系统也绝对不会挂掉。而 MQ 每秒钟 5k 个请求进来，就 2k 个请求出去，结果就导致在中午高峰期（1 个小时），可能有几十万甚至几百万的请求积压在 MQ 中。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4230,"question":"】消息队列有什么缺点？可用性降低、不能保证一致性","simplecontent":null,"content":"优点上面已经说了，就是在特殊场景下有其对应的好处，解耦、异步、削峰。\n缺点有以下几个：\n系统可用性降低\n系统引入的外部依赖越多，越容易挂掉。本来你就是 A 系统调用 BCD 三个系统的接口就好了，人 ABCD 四个系统好好的，没啥问题，你偏加个 MQ 进来，万一 MQ 挂了咋整，MQ 一挂，整套系统崩溃的，你不就完了？\n系统复杂度提高\n硬生生加个 MQ 进来，你怎么保证消息没有重复消费？怎么处理消息丢失的情况？怎么保证消息传递的顺序性？头大头大，问题一大堆，痛苦不已。\n一致性问题\nA 系统处理完了直接返回成功了，人都以为你这个请求就成功了；但是问题是，要是 BCD 三个系统那里，BD 两个系统写库成功了，结果 C 系统写库失败了，咋整？你这数据就不一致了。\n所以消息队列实际是一种非常复杂的架构，你引入它有很多好处，但是也得针对它带来的坏处做各种额外的技术方案和架构来规避掉，做好之后，你会发现，妈呀，系统复杂度提升了一个数量级，也许是复杂了 10 倍。但是关键时刻，用，还是得用的。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4231,"question":"】Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点？RocketMQ和Kafka 10万、ActiveMQ、RabbitMQ是万级","simplecontent":null,"content":"《RocketMQ和Kafka 10万、ActiveMQ、RabbitMQ是万级》\n特性 ActiveMQ RabbitMQ RocketMQ Kafka 单机吞吐量 万级，比 RocketMQ、Kafka 低一个数量级 同 ActiveMQ 10 万级，支撑高吞吐 10 万级，高吞吐，一般配合大数据类的系统来进行实时数据计算、日志采集等场景 topic 数量对吞吐量的影响 topic 可以达到几百/几千的级别，吞吐量会有较小幅度的下降，这是 RocketMQ 的一大优势，在同等机器下，可以支撑大量的 topic topic 从几十到几百个时候，吞吐量会大幅度下降，在同等机器下，Kafka 尽量保证 topic 数量不要过多，如果要支撑大规模的 topic，需要增加更多的机器资源 时效性 ms 级 微秒级，这是 RabbitMQ 的一大特点，延迟最低 ms 级 延迟在 ms 级以内 可用性 高，基于主从架构实现高可用 同 ActiveMQ 非常高，分布式架构 非常高，分布式，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用 消息可靠性 有较低的概率丢失数据 基本不丢 经过参数优化配置，可以做到 0 丢失 同 RocketMQ 功能支持 MQ 领域的功能极其完备 基于 erlang 开发，并发能力很强，性能极好，延时很低 MQ 功能较为完善，还是分布式的，扩展性好 功能较为简单，主要支持简单的 MQ 功能，在大数据领域的实时计算以及日志采集被大规模使用 综上，各种对比之后，有如下建议：\n一般的业务系统要引入 MQ，最早大家都用 ActiveMQ，但是现在确实大家用的不多了，没经过大规模吞吐量场景的验证，社区也不是很活跃，所以大家还是算了吧，我个人不推荐用这个了；\n后来大家开始用 RabbitMQ，但是确实 erlang 语言阻止了大量的 Java 工程师去深入研究和掌控它，对公司而言，几乎处于不可控的状态，但是确实人家是开源的，比较稳定的支持，活跃度也高；\n不过现在确实越来越多的公司，会去用 RocketMQ，确实很不错（阿里出品），但社区可能有突然黄掉的风险，对自己公司技术实力有绝对自信的，推荐用 RocketMQ，否则回去老老实实用 RabbitMQ 吧，人家有活跃的开源社区，绝对不会黄。\n所以中小型公司，技术实力较为一般，技术挑战不是特别高，用 RabbitMQ 是不错的选择；大型公司，基础架构研发实力较强，用 RocketMQ 是很好的选择。\n如果是大数据领域的实时计算、日志采集等场景，用 Kafka 是业内标准的，绝对没问题，社区活跃度很高，绝对不会黄，何况几乎是全世界这个领域的事实性规范。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4232,"question":"】RocketMQ队列消费谨记？一个消费者可以消费多个队列，但一个队列只能由一个消费者消费","simplecontent":null,"content":"一个消费者可以消费多个队列，但一个队列只能由一个消费者消费","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:50","updateTime":"2021-05-26 01:08:50","isExist":null},{"id":4198,"question":"】Pull和push有哪些队列支持？Kafka只有pull，而其它都有","simplecontent":null,"content":"springboot集成的rabbitmq封装的就是push模式","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4199,"question":"】push和pull模式不同适用场景？看消费业务时间和数据量的大小","simplecontent":null,"content":"对于服务端生产消息数据比较大时，而消费端处理比较复杂，消费能力相对较低时，这种情况就适用pull模式。\n对于数据实时性要求高的场景，就比较适用与push模式。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4200,"question":"】Push的例子？rabbitmq","simplecontent":null,"content":"rabbitmq","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4201,"question":"】Push的优缺点？及时、消费者消费不及时阻塞导致服务挂了，需要限流","simplecontent":null,"content":"push优点\n服务端主动推送给客户端，及时性很高\npush缺点：\n1.当客户端消费能力远低于服务端生产能力，那么一旦服务端推送大量消息到客户端时，就会导致客户端消息堆积，处理缓慢，甚至服务崩溃。（那么如何解决这个问题呢？需要mq提供流控制，也就是依据客户端消费能力做流控。比如rabbitmq设置Qos，限制消费数量。）\n2.服务端需要维护每次传输状态，以防消息传递失败进行重试。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4202,"question":"】pull模式的优缺点？自己拿数据，不需要重试，需要设置拿取数据的间隔时间","simplecontent":null,"content":"pull模式优点：\n1.客户端可以依据自己的消费能力进行消费\n2.传输失败时不需要重试，反正数据还在服务端。\npull模式缺点：\n1.主动到服务端拉取消息。这个拉取消息的间隔需要设置好，不太好设置。间隔太短，对服务器请求压力过大。间隔时间过长，那么必然会造成一部分数据的延迟。（也有一些解决方案，间隔时间指数级增长，5ms，10ms，20ms，40ms，80ms。。。然后再回到5ms，一定程度上解决，但是如果在41ms时来了数据，那么到80ms就有40ms左右的时间延迟。另外在腾讯的CMQ里有一套长轮询的解决方案，就是取数据时要是没有数据可消费，不是直接返回而是连接等待，一直有数据来了再返回）","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4203,"question":"】Pull的例子？kafka","simplecontent":null,"content":"kafka","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4204,"question":"】消息中间件push和pull模式？都是消费模式，pull是客户端、push是服务器","simplecontent":null,"content":"MQ的消费模式分两种：push和pull。\n所谓push就是服务端主动推送消息给客户端，而pull则是客户端需要主动到服务端取数据","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4205,"question":"】ActiveMQ、RocketMQ、RabbitMQ、Kafka区别？小型和大型公司，是否开源维护复杂程度、吞吐量、开源语言是什么、","simplecontent":null,"content":"(1)中小型软件公司，建议选RabbitMQ.一方面，erlang语言天生具备高并发的特性，而且他的管理界面用起来十分方便。正所谓，成也萧何，败也萧何！他的弊端也在这里，虽然RabbitMQ是开源的，然而国内有几个能定制化开发erlang的程序员呢？所幸，RabbitMQ的社区十分活跃，可以解决开发过程中遇到的bug，这点对于中小型公司来说十分重要。不考虑rocketmq和kafka的原因是，一方面中小型软件公司不如互联网公司，数据量没那么大，选消息中间件，应首选功能比较完备的，所以kafka排除。不考虑rocketmq的原因是，rocketmq是阿里出品，如果阿里放弃维护rocketmq，中小型公司一般抽不出人来进行rocketmq的定制化开发，因此不推荐。\n(2)大型软件公司，根据具体使用在rocketMq和kafka之间二选一。一方面，大型软件公司，具备足够的资金搭建分布式环境，也具备足够大的数据量。针对rocketMQ,大型软件公司也可以抽出人手对rocketMQ进行定制化开发，毕竟国内有能力改JAVA源码的人，还是相当多的。至于kafka，根据业务场景选择，如果有日志采集功能，肯定是首选kafka了。具体该选哪个，看使用场景。\n\n1.】ActiveMQ特点？吞吐万级，维护少，很少用于高并发\n优点\n 单机吞吐量：万级\n topic数量都吞吐量的影响：\n 时效性：ms级\n 可用性：高，基于主从架构实现高可用性\n 消息可靠性：有较低的概率丢失数据\n 功能支持：MQ领域的功能极其完备\n缺点:\n官方社区现在对ActiveMQ 5.x维护越来越少，较少在大规模吞吐的场景中使用。\n2.】Kafka特点？批量可达百万/s,pull控制消费流量并且只消费一次；宕机会乱序消费，不支持重试，队列超过64会响应变慢\n号称大数据的杀手锏，谈到大数据领域内的消息传输，则绕不开Kafka，这款为大数据而生的消息中间件，以其百万级TPS的吞吐量名声大噪，迅速成为大数据领域的宠儿，在数据采集、传输、存储的过程中发挥着举足轻重的作用。\nApache Kafka它最初由LinkedIn公司基于独特的设计实现为一个分布式的提交日志系统( a distributed commit log)，之后成为Apache项目的一部分。\n目前已经被LinkedIn，Uber, Twitter, Netflix等大公司所采纳。\n优点\n 性能卓越，单机写入TPS约在百万条/秒，最大的优点，就是吞吐量高。\n 时效性：ms级\n 可用性：非常高，kafka是分布式的，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用\n 消费者采用Pull方式获取消息, 消息有序, 通过控制能够保证所有消息被消费且仅被消费一次;\n 有优秀的第三方Kafka Web管理界面Kafka-Manager；\n 在日志领域比较成熟，被多家公司和多个开源项目使用；\n 功能支持：功能较为简单，主要支持简单的MQ功能，在大数据领域的实时计算以及日志采集被大规模使用\n缺点：\n Kafka单机超过64个队列/分区，Load会发生明显的飙高现象，队列越多，load越高，发送消息响应时间变长\n 使用短轮询方式，实时性取决于轮询间隔时间；\n 消费失败不支持重试；\n 支持消息顺序，但是一台代理宕机后，就会产生消息乱序；\n 社区更新较慢；\n3.】RabbitMQ特点？万级，社区活跃，但源码难懂\nRabbitMQ 2007年发布，是一个在AMQP(高级消息队列协议)基础上完成的，可复用的企业消息系统，是当前最主流的消息中间件之一。\nRabbitMQ优点：\n 由于erlang语言的特性，mq 性能较好，高并发；\n 吞吐量到万级，MQ功能比较完备  \n 健壮、稳定、易用、跨平台、支持多种语言、文档齐全；\n 开源提供的管理界面非常棒，用起来很好用  \n 社区活跃度高；\nRabbitMQ缺点：\n erlang开发，很难去看懂源码，基本职能依赖于开源社区的快速维护和修复bug，不利于做二次开发和维护。\n RabbitMQ确实吞吐量会低一些，这是因为他做的实现机制比较重。  \n 需要学习比较复杂的接口和协议，学习和维护成本较高。\n4.】RocketMQ特点？十万级别，可靠，可大量堆积；但是代码迁移麻烦\nRocketMQ出自 阿里公司的开源产品，用 Java 语言实现，在设计时参考了 Kafka，并做出了自己的一些改进。\nRocketMQ在阿里集团被广泛应用在订单，交易，充值，流计算，消息推送，日志流式处理，binglog分发等场景。\nRocketMQ优点：\n 单机吞吐量：十万级\n 可用性：非常高，分布式架构\n 消息可靠性：经过参数优化配置，消息可以做到0丢失\n 功能支持：MQ功能较为完善，还是分布式的，扩展性好\n 支持10亿级别的消息堆积，不会因为堆积导致性能下降\n 源码是java，我们可以自己阅读源码，定制自己公司的MQ，可以掌控 \nRocketMQ缺点：\n 支持的客户端语言不多，目前是java及c++，其中c++不成熟；\n 社区活跃度一般\n 没有在 mq 核心中去实现JMS等接口，有些系统要迁移需要修改大量代码 \n1.】Kafka？高吞吐量，pull模式，日志场景\nKafka主要特点是基于Pull的模式来处理消息消费，追求高吞吐量，一开始的目的就是用于日志收集和传输，适合产生大量数据的互联网服务的数据收集业务。\n大型公司建议可以选用，如果有日志采集功能，肯定是首选kafka了。\n2.】RocketMQ？可靠性，金融业务\n天生为金融互联网领域而生，对于可靠性要求很高的场景，尤其是电商里面的订单扣款，以及业务削峰，在大量交易涌入时，后端可能无法及时处理的情况。\nRoketMQ在稳定性上可能更值得信赖，这些业务场景在阿里双11已经经历了多次考验，如果你的业务有上述并发场景，建议可以选择RocketMQ。\n3.】RabbitMQ？社区活跃解决问题但不利于开发，语言难懂，大型公司使用\nRabbitMQ :结合erlang语言本身的并发优势，性能较好，社区活跃度也比较高，但是不利于做二次开发和维护。不过，RabbitMQ的社区十分活跃，可以解决开发过程中遇到的bug。\n如果你的数据量没有那么大，小公司优先选择功能比较完备的RabbitMQ。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4206,"question":"】group和topic区别是什么？组和主题（订阅和发布）","simplecontent":null,"content":"GroupName\n    和现实世界中一样，RocketMQ中也有组的概念。代表具有相同角色的生产者组合或消费者组合，称为生产者组或消费者组。\n    作用是在集群HA的情况下，一个生产者down之后，本地事务回滚后，可以继续联系该组下的另外一个生产者实例，不至于导致业务走不下去。在消费者组中，可以实现消息消费的负载均衡和消息容错目标。\n    另外，有了GroupName，在集群下，动态扩展容量很方便。只需要在新加的机器中，配置相同的GroupName。启动后，就立即能加入到所在的群组中，参与消息生产或消费。\n    在Producer中使用GroupName：\n  Topic是生产者在发送消息和消费者在拉取消息的类别。Topic与生产者和消费者之间的关系非常松散。具体来说，一个Topic可能有0个，一个或多个生产者向它发送消息；相反，一个生产者可以发送不同类型Topic的消息。类似的，消费者组可以订阅一个或多个主题，只要该组的实例保持其订阅一致即可。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4207,"question":"】Topic和Queue定义是什么？Topic是队列，Queue是类似分区（不可见或者不可以在代码设置的）","simplecontent":null,"content":"RocketMQ的Topic/Queue和JMS中的Topic/Queue概念有一定的差异，JMS中所有消费者都会消费一个Topic消息的副本，而Queue中消息只会被一个消费者消费；但到了RocketMQ中Topic只代表普通的消息队列，而Queue是组成Topic的更小单元，集群消费模式下一个消费者只消费该Topic中部分Queue中的消息，当一个消费者开启广播模式时则会消费该Topic下所有Queue中的消息。Topic和Queue的具体关系","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4208,"question":"】Topic和tag区别？一级分类和二级分类","simplecontent":null,"content":"1、Topic：消息主题，通过 Topic 对不同的业务消息进行分类。\n2、Tag：消息标签，用来进一步区分某个 Topic 下的消息分类，消息队列 RocketMQ 允许消费者按照 Tag 对消息进行过滤，确保消费者最终只消费到他关注的消息类型。\nTopic 与 Tag 都是业务上用来归类的标识，区分在于 Topic 是一级分类，而 Tag 可以说是二级分类，关系如图所示。\n1、消息类型是否一致：如普通消息，事务消息，定时消息，顺序消息，不同的消息类型使用不同的 Topic，无法通过 Tag 进行区分。\n2、业务是否相关联：没有直接关联的消息，如淘宝交易消息，京东物流消息使用不同的 Topic 进行区分；而同样是天猫交易消息，电器类订单、女装类订单、化妆品类订单的消息可以用 Tag 进行区分。\n3、消息优先级是否一致：如同样是物流消息，盒马必须小时内送达，天猫超市 24 小时内送达，淘宝物流则相对会会慢一些，不同优先级的消息用不同的 Topic 进行区分。\n4、消息量级是否相当：有些业务消息虽然量小但是实时性要求高，如果跟某些万亿量级的消息使用同一个 Topic，则有可能会因为过长的等待时间而『饿死』，此时需要将不同量级的消息进行拆分，使用不同的 Topic。\n\n示例：\n以天猫交易平台为例，订单消息，支付消息属于不同业务类型的消息，分别创建 Topic_Order 和 Topic_Pay，其中订单消息根据商品品类以不同的 Tag 再进行细分，如电器类、男装类、女装类、化妆品类，最后他们都被各个不同的系统所接收。\n通过合理的使用 Topic 和 Tag，可以让业务结构清晰，更可以提高效率。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4209,"question":"】消息队列提交事务成功，但是队列挂了怎么办?在service丢出异常，进行回滚","simplecontent":null,"content":"在service丢出异常，进行回滚","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4210,"question":"消息队列如何保证2个系统出现异常会回滚?","simplecontent":null,"content":"体统接口定时会查机制，没问题删除记录，有问题回退操作","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4211,"question":"】RocketMQ 消息模型？发布/订阅和点对点","simplecontent":null,"content":"发布/订阅和点对点","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4212,"question":"】如何保证rocketmq消费的幂等性？message传递全局唯一的key","simplecontent":null,"content":"在生产端发送消息的时候，message可以传递key，这个key必须是全局唯一的（可以是时间毫秒数），这样消费端在消费的时候可以看是否有改key的成功消费结果。如果有直接反馈成功结果给broker，如果没有继续消费。或者在消息中有唯一性的业务主键，这样可以使用业务主键而不使用key来保证不重复消费。","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4213,"question":"】rocketmq如何保证顺序消费？消息放入同一个topic和同一个queue，消费也是同一个","simplecontent":null,"content":"消息放入同一个队列（不是topic），消费者监听Orderly\nrocketmq可以严格的保证消息有序。但这个顺序，不是全局顺序，只是分区（queue）顺序。要全局顺序只能一个分区。\n之所以出现你这个场景看起来不是顺序的，是因为发送消息的时候，消息发送默认是会采用轮询的方式发送到不通的queue（分区）\n而消费端消费的时候，是会分配到多个queue的，多个queue是同时拉取提交消费。\n但是同一条queue里面，RocketMQ的确是能保证FIFO的。那么要做到顺序消息，应该怎么实现呢——把消息确保投递到同一条queue。\n下面用订单进行示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。\n你说对了，就是投递到同一个broker的同一个queue，同时也只能被一个消费者消费，queue已经是分片的最小单位，不能再分了。有新的消费者或者新的broker加入会重新调整queue负载\n消息有序是指一类消息消费时，能按照发生的顺序来消费。例如：一个订单产生三个消息：订单创建，订单付款，订单完成。消费时，要按照这个顺序消费才有意义。\nRocketMQ采用局部顺序一致性的机制，为我们实现了单个队列中消息的有序性，意思就是，如果我们要保证消息的有序性，必须把一组消息（如上面的订单消息）放到同一个队列中，然后由消费者进行消费。\n对于高并发的场景，RocketMQ给我们的解决方案就是按照业务划分不同的队列，然后进行消息的处理即可。\n\n但是同一条queue里面，RocketMQ的确是能保证FIFO的。那么要做到顺序消息，应该怎么实现呢——把消息确保投递到同一条queue。\n下面用订单进行示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。\nrocketmq消息生产端示例代码如下：\n\n/**\n * Producer，发送顺序消息\n */\npublic class Producer {\n    \n    public static void main(String[] args) throws IOException {\n        try {\n            DefaultMQProducer producer = new DefaultMQProducer(\"please_rename_unique_group_name\");\n \n            producer.setNamesrvAddr(\"10.11.11.11:9876;10.11.11.12:9876\");\n \n            producer.start();\n \n            String[] tags = new String[] { \"TagA\", \"TagC\", \"TagD\" };\n            \n            // 订单列表\n            List<OrderDemo> orderList =  new Producer().buildOrders();\n            \n            Date date = new Date();\n            SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n            String dateStr = sdf.format(date);\n            for (int i = 0; i < 10; i++) {\n                // 加个时间后缀\n                String body = dateStr + \" Hello RocketMQ \" + orderList.get(i);\n     Message msg = new Message(\"TopicTestjjj\", tags[i % tags.length], \"KEY\" + i, body.getBytes());\n                SendResult sendResult = producer.send(msg, new MessageQueueSelector() {\n                    @Override\n                    public MessageQueue select(List<MessageQueue> mqs, Message msg, Object arg) {\n                        Long id = (Long) arg;\n                        long index = id % mqs.size();\n                        return mqs.get((int)index);\n                    }\n                }, orderList.get(i).getOrderId());//订单id\n \n                System.out.println(sendResult + \", body:\" + body);\n            }\n            \n            producer.shutdown();\n \n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        System.in.read();\n    }\n    \n    /**\n     * 生成模拟订单数据 \n     */\n    private List<OrderDemo> buildOrders() {\n        List<OrderDemo> orderList = new ArrayList<OrderDemo>();\n \n        OrderDemo orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111039L);\n        orderDemo.setDesc(\"创建\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111065L);\n        orderDemo.setDesc(\"创建\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111039L);\n        orderDemo.setDesc(\"付款\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103117235L);\n        orderDemo.setDesc(\"创建\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111065L);\n        orderDemo.setDesc(\"付款\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103117235L);\n        orderDemo.setDesc(\"付款\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111065L);\n        orderDemo.setDesc(\"完成\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111039L);\n        orderDemo.setDesc(\"推送\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103117235L);\n        orderDemo.setDesc(\"完成\");\n        orderList.add(orderDemo);\n        \n        orderDemo = new OrderDemo();\n        orderDemo.setOrderId(15103111039L);\n        orderDemo.setDesc(\"完成\");\n        orderList.add(orderDemo);\n        \n        return orderList;\n    }\n输出：\n\n从图中红色框可以看出，orderId等于15103111039的订单被顺序放入queueId等于7的队列。queueOffset同时在顺序增长。\n发送时有序，接收（消费）时也要有序，才能保证顺序消费。如下这段代码演示了普通消费（非有序消费）的实现方式。\n/**\n * 顺序消息消费，带事务方式（应用可控制Offset什么时候提交）\n */\npublic class ConsumerInOrder {\n \n    public static void main(String[] args) throws MQClientException {\n        DefaultMQPushConsumer consumer = new DefaultMQPushConsumer(\"please_rename_unique_group_name_3\");\n        consumer.setNamesrvAddr(\"10.11.11.11:9876;10.11.11.12:9876\");\n        /**\n         * 设置Consumer第一次启动是从队列头部开始消费还是队列尾部开始消费<br>\n         * 如果非第一次启动，那么按照上次消费的位置继续消费\n         */\n        consumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_FIRST_OFFSET);\n \n        consumer.subscribe(\"TopicTestjjj\", \"TagA || TagC || TagD\");\n \n        consumer.registerMessageListener(new MessageListenerOrderly() {\n \n            Random random = new Random();\n \n            @Override\n            public ConsumeOrderlyStatus consumeMessage(List<MessageExt> msgs, ConsumeOrderlyContext context) {\n                context.setAutoCommit(true);\n                System.out.print(Thread.currentThread().getName() + \" Receive New Messages: \" );\n                for (MessageExt msg: msgs) {\n                    System.out.println(msg + \", content:\" + new String(msg.getBody()));\n                }\n                try {\n                    //模拟业务逻辑处理中...\n                    TimeUnit.SECONDS.sleep(random.nextInt(10));\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return ConsumeOrderlyStatus.SUCCESS;\n            }\n        });\n \n        consumer.start();\n \n        System.out.println(\"Consumer Started.\");\n    }\n}\n输出：\n\nMessageListenerOrderly能够保证顺序消费，从图中我们也看到了期望的结果。图中的输出是只启动了一个消费者时的输出，看起来订单号还是混在一起，但是每组订单号之间是有序的。因为消息发送时被分配到了三个队列（参见前面生产者输出日志），那么这三个队列的消息被这唯一消费者消费。\n\n如果启动2个消费者呢？那么其中一个消费者对应消费2个队列，另一个消费者对应消费剩下的1个队列。\n\n如果启动3个消费者呢？那么每个消费者都对应消费1个队列，订单号就区分开了。输出变为这样：\n\n消费者1输出：\n\n消费者2输出：\n\n消费者3输出：\n\n很完美，有木有？！\n\n按照这个示例，把订单号取了做了一个取模运算再丢到selector中，selector保证同一个模的都会投递到同一条queue。即： 相同订单号的--->有相同的模--->有相同的queue。最后就会类似这样：\n\n总结：\n\nrocketmq的顺序消息需要满足2点：\n\n1.Producer端保证发送消息有序，且发送到同一个队列。\n2.consumer端保证消费同一个队列。\n\nhttps://www.jianshu.com/p/244258271b70","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4214,"question":"rocketmq获取消息的拉取模式?","simplecontent":null,"content":"\"推模式：发送者将消息发送到Broker，Broker主动推送订阅的消费者。 \n拉模式：发送者将消息发送到Broker，消费者自发的向Broker拉取消息。\"","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4215,"question":"】rocketmq的topic和队列?","simplecontent":null,"content":"默认1个topic有4个队列","filterContent":null,"type":"java-RocketMQ","status":0,"createTime":"2021-05-26 01:08:49","updateTime":"2021-05-26 01:08:49","isExist":null},{"id":4186,"question":"Consumer消费Partition的分配策略?","simplecontent":null,"content":"Kafka提供的两种分配策略： range和roundrobin，由参数partition.assignment.strategy指定，默认是range策略。\n当以下事件发生时，Kafka 将会进行一次分区分配：\n\n同一个 Consumer Group 内新增消费者\n消费者离开当前所属的Consumer Group，包括shuts down 或 crashes\n订阅的主题新增分区\n将分区的所有权从一个消费者移到另一个消费者称为重新平衡（rebalance），如何rebalance就涉及到本文提到的分区分配策略。\n下面我们将详细介绍 Kafka 内置的两种分区分配策略。本文假设我们有个名为 T1 的主题，其包含了10个分区，然后我们有两个消费者（C1，C2）\n来消费这10个分区里面的数据，而且 C1 的 num.streams = 1，C2 的 num.streams = 2。\nRange strategy\n\nRange策略是对每个主题而言的，首先对同一个主题里面的分区按照序号进行排序，并对消费者按照字母顺序进行排序。在我们的例子里面，排完序的分区将会是0, 1, 2, 3, 4, 5, 6, 7, 8, 9；消费者线程排完序将会是C1-0, C2-0, C2-1。然后将partitions的个数除于消费者线程的总数来决定每个消费者线程消费几个分区。如果除不尽，那么前面几个消费者线程将会多消费一个分区。在我们的例子里面，我们有10个分区，3个消费者线程， 10 / 3 = 3，而且除不尽，那么消费者线程 C1-0 将会多消费一个分区，所以最后分区分配的结果看起来是这样的：\nC1-0 将消费 0, 1, 2, 3 分区\nC2-0 将消费 4, 5, 6 分区\nC2-1 将消费 7, 8, 9 分区\n假如我们有11个分区，那么最后分区分配的结果看起来是这样的：\nC1-0 将消费 0, 1, 2, 3 分区\nC2-0 将消费 4, 5, 6, 7 分区\nC2-1 将消费 8, 9, 10 分区\n假如我们有2个主题(T1和T2)，分别有10个分区，那么最后分区分配的结果看起来是这样的：\nC1-0 将消费 T1主题的 0, 1, 2, 3 分区以及 T2主题的 0, 1, 2, 3分区\nC2-0 将消费 T1主题的 4, 5, 6 分区以及 T2主题的 4, 5, 6分区\nC2-1 将消费 T1主题的 7, 8, 9 分区以及 T2主题的 7, 8, 9分区\n可以看出，C1-0 消费者线程比其他消费者线程多消费了2个分区，这就是Range strategy的一个很明显的弊端。\n\nRoundRobin strategy（轮询 策略）\n\n使用RoundRobin策略有两个前提条件必须满足：\n同一个Consumer Group里面的所有消费者的num.streams必须相等；\n每个消费者订阅的主题必须相同。\n所以这里假设前面提到的2个消费者的num.streams = 2。RoundRobin策略的工作原理：将所有主题的分区组成 TopicAndPartition 列表，然后对 TopicAndPartition 列表按照 hashCode 进行排序\n最后按照round-robin风格将分区分别分配给不同的消费者线程。\n\n在这个的例子里面，假如按照 hashCode 排序完的topic-partitions组依次为T1-5, T1-3, T1-0, T1-8, T1-2, T1-1, T1-4, T1-7, T1-6, T1-9，我们的消费者线程排序为C1-0, C1-1, C2-0, C2-1，最后分区分配的结果为：\n\nC1-0 将消费 T1-5, T1-2, T1-6 分区；\nC1-1 将消费 T1-3, T1-1, T1-9 分区；\nC2-0 将消费 T1-0, T1-4 分区；\nC2-1 将消费 T1-8, T1-7 分区；\n多个主题的分区分配和单个主题类似。遗憾的是，目前我们还不能自定义分区分配策略，只能通过partition.assignment.strategy参数选择 range 或 roundrobin。\n————————————————\n版权声明：本文为CSDN博主「AlferWei」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/OiteBody/article/details/80595971","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4187,"question":"如何确定分区数量呢？　","simplecontent":null,"content":"可以遵循一定的步骤来尝试确定分区数：创建一个只有1个分区的topic，然后测试这个topic的producer吞吐量和consumer吞吐量。假设它们的值分别是Tp和Tc，单位可以是MB/s。然后假设总的目标吞吐量是Tt，那么分区数 =  Tt / max(Tp, Tc)\n\n说明：Tp表示producer的吞吐量。测试producer通常是很容易的，因为它的逻辑非常简单，就是直接发送消息到Kafka就好了。Tc表示consumer的吞吐量。测试Tc通常与应用的关系更大， 因为Tc的值取决于你拿到消息之后执行什么操作，因此Tc的测试通常也要麻烦一些。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4188,"question":"一个topic 有多少partition?","simplecontent":null,"content":"物理上把topic分成一个或多个partition，每个partition在物理上对应一个文件夹，该文件夹 下存储这个partition的所有消息和索引文件。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4189,"question":"】Kafka提交offset机制?","simplecontent":null,"content":"《 自动提交、手动提交（1.同步提交  可以失败重试 2.异步提交  不能失败重试 3.异步+同步）》\n使得Kafka在消费的过程中即使挂了或者引发再均衡问题重新分配Partation，当下次重新恢复消费时仍然可以知道从哪里开始消费。它好比看一本书中的书签标记，每次通过书签标记(offset)就能快速找到该从哪里开始看(消费)。\nKafka对于offset的处理有两种提交方式：(1) 自动提交(默认的提交方式)   (2) 手动提交(可以灵活地控制offset)\n自动提交偏移量\nKafka在消费的过程中会以频率为auto_commit_interval_ms向Kafka自带的topic(__consumer_offsets)进行偏移量提交，具体提交到哪个Partation是以算法：partation=hash(group_id)%50来计算的。\n对于自动提交偏移量，如果auto_commit_interval_ms的值设置的过大，当消费者在自动提交偏移量之前异常退出，将导致kafka未提交偏移量，进而出现重复消费的问题，所以建议auto_commit_interval_ms的值越小越好。\n\n手动提交偏移量:\n鉴于Kafka自动提交offset的不灵活性和不精确性(只能是按指定频率的提交)，Kafka提供了手动提交offset策略。手动提交能对偏移量更加灵活精准地控制，以保证消息不被重复消费以及消息不被丢失。\n对于手动提交offset主要有3种方式：1.同步提交  2.异步提交  3.异步+同步 组合的方式提交\n 1.同步手动提交偏移量\n同步模式下提交失败的时候一直尝试提交，直到遇到无法重试的情况下才会结束，同时同步方式下消费者线程在拉取消息会被阻塞，在broker对提交的请求做出响应之前，会一直阻塞直到偏移量提交操作成功或者在提交过程中发生异常，限制了消息的吞吐量。\n 2.异步手动提交偏移量+回调函数\n 异步手动提交offset时，消费者线程不会阻塞，提交失败的时候也不会进行重试，并且可以配合回调函数在broker做出响应的时候记录错误信息。\n对于异步提交，由于不会进行失败重试，当消费者异常关闭或者触发了再均衡前，如果偏移量还未提交就会造成偏移量丢失。\n 3.异步+同步 组合的方式提交偏移量\n针对异步提交偏移量丢失的问题，通过对消费者进行异步批次提交并且在关闭时同步提交的方式，这样即使上一次的异步提交失败，通过同步提交还能够进行补救，同步会一直重试，直到提交成功。\n通过finally在最后不管是否异常都会触发consumer.commit()来同步补救一次，确保偏移量不会丢失","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4190,"question":"】同步刷盘，异步刷盘区别?","simplecontent":null,"content":"《异步刷盘是先放入内存，积累后在放入硬盘；同步刷盘是写入硬盘》\n写磁盘方式：\n　　1）异步刷盘方式：在返回写成功状态时，消息可能只是被写入了内存的PAGECACHE，写操作的返回快，吞吐量大；当内存里的消息量积累到一定程度时，统一触发写磁盘操作，快速写入\n　　2）同步刷盘方式：在返回写成功状态时，消息已经被写入磁盘。具体流程是，消息写入内存的PAGECACHE后，立刻通知刷盘线程刷盘，然后等待刷盘完成，刷盘线程执行完成后唤醒等待的线程，返回消息写成功的状态。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4191,"question":"】同步复制、异步复制区别?","simplecontent":null,"content":"《同步复制是主机完全写数据到从机  速度慢；异步复制是主机写成功后反馈到客户端  速度快》\n　　如果一个broker组有Master和Slave，消息需要从Master复制到Slave上，有同步和异步两种复制方式。\n同步复制是等Master和Slave\n均写成功后才反馈给客户端写成功状态；异步复制方式是只要Master写成功即可反馈给客户端写成功状态\n　　这两种复制方式各有优劣，在异步复制方式下，系统拥有较低的延迟和较高的吞吐量，但是如果Master出了故障，有些数据因为没有被写入Slave，有可能会丢失；在同步复制方式下，如果Master出故障，Slave","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4192,"question":"broker是什么概念?","simplecontent":null,"content":"相当于硬件的交换机，MQ的服务端，broker 帮你把消息从发送端传送到接收端\nBroker是RocketMQ的核心，提供了消息的接收，存储，拉取等功能，一般都需要保证Broker的高可用，所以会配置Broker Slave，当Master挂掉之后，Consumer然后可以消费Slave；\nBroker分为Master和Slave，一个Master可以对应多个Slave，Master与Slave的对应关系通过指定相同的BrokerName，不同的BrokerId来定义，BrokerId为0表示Master，非0表示Slave；","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4193,"question":"】Kafka作用?","simplecontent":null,"content":"《高吞吐低延迟、每秒几十万的并发》\nKafka是高吞吐低延迟的高并发，高性能的消息中间件，好的Kafka集群可以做到每秒几十万的并发写入操作。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4194,"question":"】Kafka高效原因?","simplecontent":null,"content":"《消息顺序写入内存、分区可以并发生产、批量发送和数据压缩到主机、获取数据通过零拷贝》\n黑科技一：页面缓存磁盘顺序写。为什么是先写page cache呢，而不是直接写入磁盘呢，这是因为page cache是在内存中操作，内存中顺序写的操作要比磁盘快大约10倍，随机写操作要快10万倍，Kafka写数据的时候是以磁盘顺序写的方式来落盘的，会将数据追加到文件的末尾，而不是在文件的随机位置来修改数据。在顺序写场景，传统的机械盘和SSD盘的性能相当，也就是说如果采用kafka，在不需要采购昂贵的SSD的情况下，就能有很高的写性能。\n黑科技二：零拷贝技术\n当下游应用订阅kafka消息时，需要将kafka写入磁盘的数据读出来，如果用传统的磁盘文件读取方式，会有4次数据拷贝，而kafka采用零拷贝技术，通过DMA方式将磁盘数据读入内核缓冲区，然后用sendfile直接将内核缓冲区的数据读取到协议引擎中，并发送出去，全程无数据拷贝，无CPU参与，非常高效的实现数据读取和发送\n黑科技三：partition\n在kafka中，每个topic可以细分多个partition，每个partition可以并行处理，这样能很大程度提升kafka的并发处理能力。\n黑科技四：批量发送和数据压缩\nkafka可以设置批量发送数据，当生产者产生数据达到一定数量，或者没有达到数量，但是达到一定时间间隔，就会一次将数据发送给kafka的broker，因为是批量的原因，减少了网络交互次数，节省很多时间。如果宽带有压力，还可以将批量数据进行压缩处理。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4195,"question":"】为什么使用RocketMQ，而不使用Kafka？","simplecontent":null,"content":"《kafka是异步刷盘和异步复制，而rk支持同步和异步；kafka批量发送可能因为缓存过多发生内存溢出，不支持重试、事务回滚、延时消费》\nKafka一般适用日志传输，而RocketMQ适用非日志的可靠性传输\n数据可靠性\nRocketMQ支持异步实时刷盘，同步刷盘，同步Replication，异步Replication\nKafka只支持异步刷盘，异步Replication\nRocketMQ的同步刷盘在单机可靠性比Kafka高，不会因为操作系统崩溃，导致数据丢失。同步Replication比异步Replication可靠，数据完全无单点。Kafka在主机宕机，备机自动切换，由于异步Replication导致数据丢失。如果主机重启，与现在的主机产生数据冲突。\n性能     \nKafka的TPS高，不稳定\nKafkaTPS高因为producer将多个消息合并，批量发向broker。这里会有一些问题，缓存过多消息，gc是个问题；producer发送消息到broker，向业务返回成功，但是producer宕机，导致消息丢失；producer分布式系统，且每台机器是多线程发送，单个producer产生的数据量有限；发送消息单一功能，缓存可由上层业务完成。\n单机支持的队列数\nKafka单机超过64个队列，发送消息响应时间随着队列越多越长\nRocketMQ单机支持最高5万个队列，Load不会明显变化\n实时性\nKafka短轮询，实时性取决轮询间隔时间\nRocketMQ长轮询，消息投递延时通常在几毫秒\n失败重试\n Kafka消费失败不支持重试\nRocketMQ消费失败支持定时重试，每次重试间隔时间顺延\n消息顺序\nKafka消息顺序，broker宕机，产生消息乱序\nRocketMQ消息顺序，broker宕机，不会乱序\n定时消息\nKafka不支持\nRocketMQ支持，指定毫秒级别的延时时间\n分布式式事物\nKafka不支持\nRocketMQ支持\n消息查询\nKafka不支持\nRocketMQ支持根据message id和消息内容查询\n消息回溯\nKafka理论支持\nRocketMQ按照时间支持，精确到毫秒\n消费并行度\nKafka消费并行度与分区数一致\nRocketMQ顺序消费和Kafka一样，乱序取决consumer的线程数\n消息轨迹\nKafka不支持\nRocketMQ支持\nbroker消息过滤\nKafka不支持\nRocketMQ根据message tag或者任意形式过滤\n其它方面，比如Kafka消息堆积比RocketMQ强，更成熟，而RocketMQ java语言编写。\n\n\nApache Kafka的受欢迎程度很高，Kafka拥有充足的就业机会和职业前景。此外，在这个时代拥有kafka知识是一条快速增长的道路。所以，在这篇文章中，我们收集了Apache Kafka面试中常见的问题，并提供了答案。因此，如果您希望参加Apache Kafka面试，这是一份不错的指南。这将有助于您成功参加Kafka面试。\n这是Kafka最受欢迎的面试问题清单，以及任何面试官都可能问到的答案。所以，继续学习直到本文的结尾，希望对你有帮助！","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4196,"question":"什么是Apache Kafka?","simplecontent":null,"content":"答：Apache Kafka是一个发布 - 订阅开源消息代理应用程序。这个消息传递应用程序是用“scala”编码的。基本上，这个项目是由Apache软件启动的。Kafka的设计模式主要基于事务日志设计。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4197,"question":"Kafka中有哪几个组件?","simplecontent":null,"content":"答：Kafka最重要的元素是：\n主题：Kafka主题是一堆或一组消息。\n生产者：在Kafka，生产者发布通信以及向Kafka主题发布消息。\n消费者：Kafka消费者订阅了一个主题，并且还从主题中读取和处理消息。\n经纪人：在管理主题中的消息存储时，我们使用Kafka Brokers。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:23","updateTime":"2021-05-26 01:08:23","isExist":null},{"id":4183,"question":"如果你没有指定key，那么Kafka是如何确定这条消息去往哪个分区的呢？","simplecontent":null,"content":"不指定key时，Kafka几乎就是随机找一个分区发送无key的消息，然后把这个分区号加入到缓存中以备后面直接使用——当然了，Kafka本身也会清空该缓存（默认每10分钟或每次请求topic元数据时）。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4184,"question":"】Consumer个数与分区数有什么关系？","simplecontent":null,"content":"《一个消费者消费一个group下多个分区，但是一个分区只能被一个消费者消费》\ntopic下的一个分区只能被同一个consumer group下的一个consumer线程来消费，但反之并不成立，即一个consumer线程可以消费多个分区的数据，比如Kafka提供的ConsoleConsumer，默认就只是一个线程来消费所有分区的数据。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4185,"question":"】如何达到最大吞吐量?","simplecontent":null,"content":"《n个分区就n个线程》\n如果你的分区数是N，那么最好线程数也保持为N，这样通常能够达到最大的吞吐量。超过N的配置只是浪费系统资源，因为多出的线程不会被分配到任何分区。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4170,"question":"】什么情况会导致 kafka 运行变慢？cpu，硬盘，网络","simplecontent":null,"content":"《cpu，硬盘，网络》\ncpu 性能瓶颈\n磁盘读写瓶颈\n网络瓶颈","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4171,"question":"】使用 kafka 集群需要注意什么？单数（半数坏了不能用），不超过7（复制变慢）","simplecontent":null,"content":"《单数（半数坏了不能用），不超过7（复制变慢）》\n集群的数量不是越多越好，最好不要超过 7 个，因为节点越多，消息复制需要的时间就越长，整个群组的吞吐量就越低。\n集群数量最好是单数，因为超过一半故障集群就不能用了，设置为单数容错率更高。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4172,"question":"】Kafka消费重复原因？offset部分没有自动提交、强行kill线程","simplecontent":null,"content":"《offset部分没有自动提交、强行kill线程》\n\n原因1：强行kill线程，导致消费后的数据，offset没有提交（消费系统宕机、重启等）。 \n原因2：设置offset为自动提交，关闭kafka时，如果在close之前，调用 consumer.unsubscribe() 则有可能部分offset没提交，下次重启会重复消费。例如：\n\ntry {\n    consumer.unsubscribe();\n} catch (Exception e) {\n}\n\ntry {\n    consumer.close();\n} catch (Exception e) {\n}\n上面代码会导致部分offset没提交，下次启动时会重复消费。 \n原因3:（重复消费最常见的原因）：消费后的数据，当offset还没有提交时，partition就断开连接。比如，通常会遇到消费的数据，处理很耗时，导致超过了Kafka的session timeout时间（0.10.x版本默认是30秒），那么就会re-blance重平衡，此时有一定几率offset没提交，会导致重平衡后重复消费。 \n原因4：当消费者重新分配partition的时候，可能出现从头开始消费的情况，导致重发问题。 \n原因5：当消费者消费的速度很慢的时候，可能在一个session周期内还未完成，导致心跳机制检测报告出问题。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4173,"question":"】Kafka防止重复消费?","simplecontent":null,"content":"《生产时推送ack确认机制为-1，手动移交offset，查询数据库是否消费了》\n要确定Kafka的消息是否丢失或重复，从两个方面分析入手：消息发送和消息消费。\n\n1、消息发送\n\n         Kafka消息发送有两、、种方式：同步（sync）和异步（async），默认是同步方式，可通过producer.type属性进行配置。Kafka通过配置request.required.acks属性来确认消息的生产：\n\n0---表示不进行消息接收是否成功的确认；\n1---表示当Leader接收成功时确认；\n-1---表示Leader和Follower都接收成功时确认；\n综上所述，有6种消息生产的情况，下面分情况来分析消息丢失的场景：\n\n（1）acks=0，不和Kafka集群进行消息接收确认，则当网络异常、缓冲区满了等情况时，消息可能丢失；\n\n（2）acks=1、同步模式下，只有Leader确认接收成功后但挂掉了，副本没有同步，数据可能丢失；\n\n2、消息消费\n\nKafka消息消费有两个consumer接口，Low-level API和High-level API：\n\nLow-level API：消费者自己维护offset等值，可以实现对Kafka的完全控制；\n\nHigh-level API：封装了对parition和offset的管理，使用简单；\n\n如果使用高级接口High-level API，可能存在一个问题就是当消息消费者从集群中把消息取出来、并提交了新的消息offset值后，还没来得及消费就挂掉了，那么下次再消费时之前没消费成功的消息就“诡异”的消失了；\n\n解决办法：\n\n        针对消息丢失：同步模式下，确认机制设置为-1，即让消息写入Leader和Follower之后再确认消息发送成功；异步模式下，为防止缓冲区满，可以在配置文件设置不限制阻塞超时时间，当缓冲区满时让生产者一直处于阻塞状态；\n\n        针对消息重复：将消息的唯一标识保存到外部介质中，每次消费时判断是否处理过即可。\n\n消息重复消费及解决参考：https://www.javazhiyin.com/22910.html\n\n16.为什么Kafka不支持读写分离？\n\n在 Kafka 中，生产者写入消息、消费者读取消息的操作都是与 leader 副本进行交互的，从 而实现的是一种主写主读的生产消费模型。\n\nKafka 并不支持主写从读，因为主写从读有 2 个很明 显的缺点:\n\n(1)数据一致性问题。数据从主节点转到从节点必然会有一个延时的时间窗口，这个时间 窗口会导致主从节点之间的数据不一致。某一时刻，在主节点和从节点中 A 数据的值都为 X， 之后将主节点中 A 的值修改为 Y，那么在这个变更通知到从节点之前，应用读取从节点中的 A 数据的值并不为最新的 Y，由此便产生了数据不一致的问题。\n\n(2)延时问题。类似 Redis 这种组件，数据从写入主节点到同步至从节点中的过程需要经 历网络→主节点内存→网络→从节点内存这几个阶段，整个过程会耗费一定的时间。而在 Kafka 中，主从同步会比 Redis 更加耗时，它需要经历网络→主节点内存→主节点磁盘→网络→从节 点内存→从节点磁盘这几个阶段。对延时敏感的应用而言，主写从读的功能并不太适用。\n\n\n1、丢包问题：消息推送服务，每天早上，手机上各终端都会给用户推送消息，这时候流量剧增，可能会出现kafka发送数据过快，导致服务器网卡爆满，或者磁盘处于繁忙状态，可能会出现丢包现象。\n解决方案：首先对kafka进行限速， 其次启用重试机制，重试间隔时间设置长一些，最后Kafka设置acks=all，即需要相应的所有处于ISR的分区都确认收到该消息后，才算发送成功。 \n检测方法：使用重放机制，查看问题所在。\n2.重复消费最常见的原因：re-balance问题,通常会遇到消费的数据，处理很耗时，导致超过了Kafka的session timeout时间（0.10.x版本默认是30秒），那么就会re-balance重平衡，此时有一定几率offset没提交，会导致重平衡后重复消费。 \n消息重复消费和消息丢包的解决办法\n保证不丢失消息：生产者（ack=all 代表至少成功发送一次)     重试机制\n消费者 （offset手动提交，业务逻辑成功处理后，提交offset） \n保证不重复消费：落表（主键或者唯一索引的方式，避免重复数据） \n业务逻辑处理（选择唯一主键存储到Redis或者mongdb中，先查询是否存在，若存在则不处理；若不存在，先插入Redis或Mongdb,再进行业务逻辑处理）\n\n\n作者：任嘉平生愿\n链接：https://www.jianshu.com/p/d9aaef95ca6b\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4174,"question":"】Topic是什么?","simplecontent":null,"content":"《消费队列，kafka消息放入队列》\nTopic在逻辑上可以被认为是一个queue，每条消费都必须指定它的Topic，可以简单理解为必须指明把这条消息放进哪个queue里。为了使得Kafka的吞吐率可以线性提高，物理上把Topic分成一个或多个Partition，每个Partition在物理上对应一个文件夹，该文件夹下存储这个Partition的所有消息和索引文件。若创建topic1和topic2两个topic，且分别有13个和19个分区，则整个集群上会相应会生成共32个文件夹（本文所用集群共8个节点，此处topic1和topic2 replication-factor均为1）","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4175,"question":"】Kafka删除数据策略?","simplecontent":null,"content":"《时间过期、分区太大》\n2、对于传统的message queue而言，一般会删除已经被消费的消息，而Kafka集群会保留所有的消息，无论其被消费与否。当然，因为磁盘限制，不可能永久保留所有数据（实际上也没必要），\n     因此Kafka提供两种策略删除旧数据。一是基于时间，二是基于Partition文件大小。\n     例如可以通过配置$KAFKA_HOME/config/server.properties，让Kafka删除一周前的数据，也可在Partition文件超过1GB时删除旧数据，配置如下所示。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4176,"question":"】为什么kafka使用高可用?","simplecontent":null,"content":"《broker宕机后，partition在其他机器有副本的，会重新选举一个新的leader》\n由多个broker组成，每个broker就是一个节点；创建一个topic，这个topic可以划分为多个partition，每个partition可以存在于不同的broker上，每个partition存放放一部分数据。\n　　kafka就是一个分布式消息队列，就是说一个topic的数据，是分散放在多个机器上的，每个机器就放一部分数据。\n　kafka 0.8以后，提供了HA机制，就是replica副本机制。每个partition的数据都会同步到其他机器上，形成自己的多个replica副本。然后所有replica会选举一个leader出来，那么生产和消费都跟这个leader打交道，然后其他replica就是follower。写的时候，leader会负责把数据同步到所有follower上去，读的时候就直接读leader上数据即可。只能读写leader？很简单，要是你可以随意读写每个follower，那么就要care数据一致性的问题，系统复杂度太高，很容易出问题。kafka会均匀的将一个partition的所有replica分布在不同的机器上，这样才可以提高容错性。\n　　kafka的这种机制，就有所谓的高可用性了，因为如果某个broker宕机了，也没事儿，因为那个broker上面的partition在其他机器上都有副本的，那么此时会重新选举一个新的leader出来，大家继续读写那个新的leader即可。这就有所谓的高可用性了。\n\n1）写过程\n　　写数据的时候，生产者就写leader，然后leader将数据落地写本地磁盘，接着其他follower自己主动从leader来pull数据。一旦所有follower同步好数据了，就会发送ack给leader，leader收到所有follower的ack之后，就会返回写成功的消息给生产者。（当然，这只是其中一种模式，还可以适当调整这个行为）\n \n2）读过程\n　　消费的时候，只会从leader去读，但是只有当一个消息已经被所有follower都同步成功并返回ack的时候，这个消息才能够被消费者读到。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4177,"question":"】Group是什么?","simplecontent":null,"content":"《消费配置的group进行消费，多台机的group相同则一台消费，若不同则多台机消费相同的数据》\n一个topic 可以配置几个partition，produce发送的消息分发到不同的partition中，consumer接受数据的时候是按照group来接受，kafka确保每个partition只能同一个group中的同一个consumer消费，如果想要重复消费，那么需要其他的组来消费。Zookeerper中保存这每个topic下的每个partition在每个group中消费的offset \n假设一个topic test 被groupA消费了，现在启动另外一个新的groupB来消费test，默认test-groupB的offset不是0，而是没有新建立，除非当test有数据的时候，groupB会收到该数据，该条数据也是第一条数据，groupB的offset也是刚初始化的ofsert, 除非用显式的用–from-beginnging 来获取从0开始数据 ","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4178,"question":"】Partition是什么?","simplecontent":null,"content":"《Partition是topic在不同机器上保存的分区，数据根据算法存在不同分区上，也会有副本》\n我们知道Kafka 的消息通过topic进行分类。topic可以被分为若干个partition来存储消息。消息以追加的方式写入partition,然后以先入先出的顺序读取。\n\n生产者生产一个消息send到topic分区器，分区器会根据消息里面的分区参数key值把消息分到对应的partition。这里就像我们快递代发网点一样，快递代发网点可以代理很多种快递公司，如果要寄快递者P（生产者）指定用什么快递公司，代发网点人员C（分区器）就会把该物品M（消息）归类到指定的快递公司区域存放。如果P不要求具体的快递公司寄件，那么就由C随意分配快递公司（哈哈，那就要看这个家伙的心情了，心情好点给你一个顺丰比较快到达，心情不好时就GG吧）。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4179,"question":"】消息根据什么算法分到不同partition?","simplecontent":null,"content":"《没有key轮询放入partition、有key计算哈希值放入指定partition》\n第4、7行：如果没有指定key值并且可用分区个数大于0时，在就可用分区中做轮询决定改消息分配到哪个partition。\n第4、10行：如果没有指定key值并且没有可用分区时，在所有分区中轮询决定改消息分配到哪个partition。\n第14行：如果指定key值，对key做hash分配到指定的partition。\n所以当同一个key的消息会被分配到同一个partition中。消息在同一个partition处理的顺序是FIFO，这就保证了消息的顺序性。\nProducer发送消息到broker时，会根据Paritition机制选择将其存储到哪一个Partition。如果Partition机制设置合理，所有消息可以均匀分布到不同的Partition里，这样就实现了负载均衡。如果一个Topic对应一个文件，那这个文件所在的机器I/O将会成为这个Topic的性能瓶颈，而有了Partition后，不同的消息可以并行写入不同broker的不同Partition里，极大的提高了吞吐率。\n\n Topic在逻辑上可以被认为是一个queue，每条消费都必须指定它的Topic，可以简单理解为必须指明把这条消息放进哪个queue里。为了使得Kafka的吞吐率可以线性提高，物理上把Topic分成一个或多个Partition，每个Partition在物理上对应一个文件夹，该文件夹下存储这个Partition的所有消息和索引文件。若创建topic1和topic2两个topic，且分别有13个和19个分区，则整个集群上会相应会生成共32个文件夹（本文所用集群共8个节点，此处topic1和topic2 ","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4180,"question":"】Kafka的分区数是不是越多越好？","simplecontent":null,"content":"《发送是多线程并发发送到不同分区、而消费是一台机消费一个group上多个分区数据，但是一个分区数据只能被一个消费者消费》\nkafka使用分区将topic的消息打散到多个分区分布保存在不同的broker上，实现了producer和consumer消息处理的高吞吐量。Kafka的producer和consumer都可以多线程地并行操作，而每个线程处理的是一个分区的数据。因此分区实际上是调优Kafka并行度的最小单元。对于producer而言，它实际上是用多个线程并发地向不同分区所在的broker发起Socket连接同时给这些分区发送消息；而consumer，同一个消费组内的所有consumer线程都被指定topic的某一个分区进行消费。\n\n所以说，如果一个topic分区越多，理论上整个集群所能达到的吞吐量就越大。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4181,"question":"一条消息如何知道要被发送到哪个分区？","simplecontent":null,"content":"默认情况下，Kafka根据传递消息的key来进行分区的分配，即hash(key) % numPartitions：\n这保证了相同key的消息一定会被路由到相同的分区。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4182,"question":"】key为null时如何存储消息到分区?","simplecontent":null,"content":"《从缓存中取分区id或者随机取一个》","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:22","updateTime":"2021-05-26 01:08:22","isExist":null},{"id":4158,"question":"】Kafka 创建 Topic 时如何将分区放置到不同的 Broker中？","simplecontent":null,"content":"副本因子不能大于 Broker  的个数；\n第一个分区（编号为 0）的第一个副本放置位置是随机从 brokerList  选择的；\n其他分区的第一个副本放置位置相对于第 0 个分区依次往后移。也就是如果我们有 5 个\nBroker，5 个分区，假设第一个分区放在第四个 Broker 上，那么第二个分区将会放在第五个\tBroker\t上；第三个分区将会放在第一个\tBroker\t上；第四个分区将会放在第二个\nBroker  上，依次类推；\n剩余的副本相对于第一个副本放置位置其实是由 nextReplicaShift 决定的，而这个数也是随机产生的","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4159,"question":"】Kafa consumer 是否可以消费指定分区消息？","simplecontent":null,"content":"Kafa consumer 消费消息时，向 broker 发出\"fetch\"请求去消费特定分区的消息，consumer 指定消息在日志中的偏移量（offset），就可以消费从这个位置开始的消息，customer 拥有了 offset 的控制权，可以向后回滚去重新消费之前的消息，这是很有意义的","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4160,"question":"Kafka 消息是采用 Pull 模式，还是 Push 模式？","simplecontent":null,"content":"Kafka 最初考虑的问题是，customer 应该从 brokes 拉取消息还是 brokers 将消息推送到consumer，也就是 pull 还 push。在这方面，Kafka 遵循了一种大部分消息系统共同的传统的设计：producer 将消息推送到 broker，consumer 从 broker 拉取消息\n\n一些消息系统比如 Scribe 和 Apache\tFlume 采用了 push 模式，将消息推送到下游的\nconsumer。这样做有好处也有坏处：由 broker 决定消息推送的速率，对于不同消费速率的\nconsumer 就不太好处理了。消息系统都致力于让 consumer 以最大的速率最快速的消费消息，但不幸的是，push 模式下，当 broker 推送的速率远大于 consumer 消费的速率时，\nconsumer 恐怕就要崩溃了。最终 Kafka 还是选取了传统的 pull 模式\n\nPull 模式的另外一个好处是 consumer 可以自主决定是否批量的从 broker 拉取数据。Push 模式必须在不知道下游 consumer 消费能力和消费策略的情况下决定是立即推送每条消息还是缓存之后批量推送。如果为了避免 consumer 崩溃而采用较低的推送速率，将可能导致一次只推送较少的消息而造成浪费。Pull 模式下，consumer 就可以根据自己的消费能力去决\n\n定这些策略\n\nPull 有个缺点是，如果 broker 没有可供消费的消息，将导致 consumer 不断在循环中轮询， 直到新消息到 t 达。为了避免这点，Kafka 有个参数可以让 consumer 阻塞知道新消息到达\n(当然也可以阻塞知道消息的数量达到某个特定的量这样就可以批量发","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4161,"question":"Kafka 的设计时什么样的呢？","simplecontent":null,"content":"Kafka 将消息以 topic 为单位进行归纳\n将向 Kafka topic 发布消息的程序成为 producers.\n将预订 topics 并消费消息的程序成为 consumer.\nKafka 以集群的方式运行，可以由一个或多个服务组成，每个服务叫做一个 broker.\nproducers 通过网络将消息发送到 Kafka 集群，集群向消费者提供消息","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4162,"question":"数据传输的事物定义有哪三种？","simplecontent":null,"content":"数据传输的事务定义通常有以下三种级别：\n（1）最多一次:  消息不会被重复发送，最多被传输一次，但也有可能一次不传输\n（2）最少一次:  消息不会被漏发送，最少被传输一次，但也有可能被重复传输.\n（3）精确的一次（Exactly   once）:\t不会漏传输也不会重复传输,每个消息都传输被一次而且仅仅被传输一次，这是大家所期望的\n\n3.Kafka 判断一个节点是否还活着有那两个条件？\n（1）节点必须可以维护和 ZooKeeper 的连接，Zookeeper 通过心跳机制检查每个节点的连接\n（2）如果节点是个 follower,他必须能及时的同步 leader 的写操作，延时不能太久","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4163,"question":"说说kafka的原理，为什什么能保证这么高的吞吐量？","simplecontent":null,"content":"1.消息分类按不同类别,分成不同的Topic,Topic⼜又拆分成多个partition,每个partition均衡分散到不同的服务器(提高并发访问的能\n\n⼒力力)\n\n\n2.消费者按顺序从partition中读取,不支持随机读取数据,但可通过改变保存到zookeeper中的offset位置实现从任意位置开始读取\n3.服务器消息定时清除(不管有没有消费)\n4.每个partition还可以设置备份到其他服务器上的个数以保证数据的可用性。通过Leader,Follower方式\n5.zookeeper保存kafka服务器和客户端的所有状态信息.(确保实际的客户端和服务器轻量级)\n6.在kafka中,一个partition中的消息只会被group中的一个consumer消费;每个group中consumer消息消费互相独⽴立;我们可以认为\n\n一个group是一个\"订阅\"者,一个Topic中的每个partions,只会被一个\"订阅者\"中的一个consumer消费,不过一个consumer可以消费多个\npartitions中的消息","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4164,"question":"Kafka中是怎么体现消息顺序性的？","simplecontent":null,"content":"kafka每个partition中的消息在写入时都是有序的，消费时，每个partition只能被每一个group中的一个消费者消费，保证了消费时也是有序的。\n整个topic不保证有序。如果为了保证topic整个有序，那么将partition调整为1.\n\n\n比如说我们建了一个 topic，有三个 partition。生产者在写的时候，其实可以指定一个 key，比如说我们指定了某个订单 id 作为 key，那么这个订单相关的数据，一定会被分发到同一个 partition 中去，而且这个 partition 中的数据一定是有顺序的。\n消费者从 partition 中取出来数据的时候，也一定是有顺序的。到这里，顺序还是 ok 的，没有错乱。接着，我们在消费者里可能会搞多个线程来并发处理消息。因为如果消费者是单线程消费处理，而处理比较耗时的话，比如处理一条消息耗时几十 ms，那么 1 秒钟只能处理几十条消息，这吞吐量太低了。而多个线程并发跑的话，顺序可能就乱掉了。\n解决方案\n一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。\n写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4165,"question":"】解释Kafka可以接收的消息最大为多少？100万字节","simplecontent":null,"content":"答：Kafka可以接收的最大消息大小约为1000000字节。\n1兆=1024KB=1024*1024字节","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4166,"question":"】Kafka发送消息方式？广播和单播","simplecontent":null,"content":"《广播和单播》\n这是Kafka用来实现一个Topic消息的广播（发给所有的Consumer）和单播（发给某一个Consumer）的手段。一个Topic可以对应多个Consumer Group。如果需要实现广播，只要每个Consumer有一个独立的Group就可以了。要实现单播只要所有的Consumer在同一个Group里。用Consumer Group还可以将Consumer进行自由的分组而不需要多次发送消息到不同的Topic。\n\n首先创建一个Topic (名为topic1，包含3个Partition)，然后创建一个属于group1的Consumer实例，并创建三个属于group2的Consumer实例，最后通过Producer向topic1发送key分别为1，2，3的消息。结果发现属于group1的Consumer收到了所有的这三条消息，同时group2中的3个Consumer分别收到了key为1，2，3的消息。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4167,"question":"】kafka 可以脱离 zookeeper 单独使用吗？zk协调kafka作用","simplecontent":null,"content":"《zk协调kafka作用》\nkafka 不能脱离 zookeeper 单独使用，因为 kafka 使用 zookeeper 管理和协调 kafka 的节点服务器。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4168,"question":"】kafka 有几种数据保留的策略？过期时间、消息大小","simplecontent":null,"content":"《过期时间、消息大小》\nkafka 有两种数据保存策略：\n按照过期时间保留\n按照存储的消息大小保留。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4169,"question":"】kafka 同时设置了 7 天和 10G 清除数据，到第五天的时候消息达到了 10G，这个时候 kafka 将如何处理？按照时间和大小2个条件判断，只要一个不满足就会清除","simplecontent":null,"content":"《按照时间和大小2个条件判断，只要一个不满足就会清除》\n这个时候 kafka 会执行数据清除工作，时间和大小不论那个满足条件，都会清空数据。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:21","updateTime":"2021-05-26 01:08:21","isExist":null},{"id":4146,"question":"】Kafka服务器能接收到的最大信息是多少?","simplecontent":null,"content":"Kafka服务器可以接收到的消息的最大大小是1000000字节。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4147,"question":"】kafka broker是什么？一台或多台服务器","simplecontent":null,"content":"缓存代理，Kafka集群中的一台或多台服务器统称为broker。\nbroker的主要工作\t接收生产者的消息，设置偏移量，提交消息到磁盘保存；为消费者提供服务，响应请求，返回消息。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4148,"question":"】kafka优点和缺点？优点是高吞吐率、写入速度快；缺点是可靠性低","simplecontent":null,"content":"\"RocketMQ和kafka吞吐量是10万级别，Kafka的特性之一就是高吞吐率，支持每秒百万级的写入请，速度快（kafka是直接通过磁盘存储，线性读写，速度快：避免了数据在JVM内存和系统内存之间的复制，减少耗性能的对象创建和垃圾回收）\nkafka对可靠性要求不是特别高，除了日志，网站的一些浏览数据应该也适用\"","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4149,"question":"】为什么kafka吞吐量那么高？磁盘存储比不上内存，寻址是按顺序写和读，比随机快；分区存储+索引；批量读写；批量压缩","simplecontent":null,"content":"一、顺序读写\n    众所周知Kafka是将消息记录持久化到本地磁盘中的，一般人会认为磁盘读写性能差，可能会对Kafka性能如何保证提出质疑。实际上不管是内存还是磁盘，快或慢关键在于寻址的方式，磁盘分为顺序读写与随机读写，内存也一样分为顺序读写与随机读写。基于磁盘的随机读写确实很慢，但磁盘的顺序读写性能却很高，一般而言要高出磁盘随机读写三个数量级，一些情况下磁盘顺序读写性能甚至要高于内存随机读写。\n四、分区分段+索引\n\n    Kafka的message是按topic分类存储的，topic中的数据又是按照一个一个的partition即分区存储到不同broker节点。每个partition对应了操作系统上的一个文件夹，partition实际上又是按照segment分段存储的。这也非常符合分布式系统分区分桶的设计思想。\n\n    通过这种分区分段的设计，Kafka的message消息实际上是分布式存储在一个一个小的segment中的，每次文件操作也是直接操作的segment。为了进一步的查询优化，Kafka又默认为分段后的数据文件建立了索引文件，就是文件系统上的.index文件。这种分区分段+索引的设计，不仅提升了数据读取的效率，同时也提高了数据操作的并行度。\n\n二、Page Cache\n    为了优化读写性能，Kafka利用了操作系统本身的Page Cache，就是利用操作系统自身的内存而不是JVM空间内存。这样做的好处有：\n \n    1避免Object消耗：如果是使用 Java 堆，Java对象的内存消耗比较大，通常是所存储数据的两倍甚至更多。\n \n    2避免GC问题：随着JVM中数据不断增多，垃圾回收将会变得复杂与缓慢，使用系统缓存就不会存在GC问题\n \n    相比于使用JVM或in-memory cache等数据结构，利用操作系统的Page Cache更加简单可靠。首先，操作系统层面的缓存利用率会更高，因为存储的都是紧凑的字节结构而不是独立的对象。其次，操作系统本身也对于Page Cache做了大量优化，提供了 write-behind、read-ahead以及flush等多种机制。再者，即使服务进程重启，系统缓存依然不会消失，避免了in-process cache重建缓存的过程。\n \n    通过操作系统的Page Cache，Kafka的读写操作基本上是基于内存的，读写速度得到了极大的提升。\n\n\n五、批量读写\n\n     Kafka数据读写也是批量的而不是单条的。\n\n除了利用底层的技术外，Kafka还在应用程序层面提供了一些手段来提升性能。最明显的就是使用批次。在向Kafka写入数据时，可以启用批次写入，这样可以避免在网络上频繁传输单个消息带来的延迟和带宽开销。假设网络带宽为10MB/S，一次性传输10MB的消息比传输1KB的消息10000万次显然要快得多。\n\n六、批量压缩\n\n     在很多情况下，系统的瓶颈不是CPU或磁盘，而是网络IO，对于需要在广域网上的数据中心之间发送消息的数据流水线尤其如此。进行数据压缩会消耗少量的CPU资源,不过对于kafka而言,网络IO更应该需要考虑。\n\n如果每个消息都压缩，但是压缩率相对很低，所以Kafka使用了批量压缩，即将多个消息一起压缩而不是单个消息压缩\nKafka允许使用递归的消息集合，批量的消息可以通过压缩的形式传输并且在日志中也可以保持压缩格式，直到被消费者解压缩\nKafka支持多种压缩协议，包括Gzip和Snappy压缩协议\n     Kafka速度的秘诀在于，它把所有的消息都变成一个批量的文件，并且进行合理的批量压缩，减少网络IO损耗，通过mmap提高I/O速度，写入数据的时候由于单个Partion是末尾添加所以速度最优；读取数据的时候配合sendfile直接暴力输出。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4150,"question":"kafka维持消息不被漏掉?","simplecontent":null,"content":"","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4151,"question":"】kafka和rocketmq对比？Kafka没有重试、批量发送、事务机制、topic数量为64","simplecontent":null,"content":"\"kafka在producer端做了数据合并，批量发送，性能是rocketmq的十倍\nkafka 不支持消息发送失败重试机制，rocketmq 支持消息发送失败重试机制\nkafka支持的topic是64个，超出性能下降，而rocketmq支持5万个topic\"","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4152,"question":"】kafka如何保证数据的不丢失？Ack机制、offset机制","simplecontent":null,"content":"\"生产者：kafka的ack机制：在kafka发送数据的时候，每次发送消息都会有一个确认反馈机制，确保消息正常的能够被收到，其中状态有0,1，-1。\n消费者：消费者数据的不丢失\"","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4153,"question":"Kafka 的高可用性?","simplecontent":null,"content":"Kafka 一个最基本的架构认识：由多个 broker 组成，每个 broker 是一个节点；你创建一个 topic，这\n个 topic 可以划分为多个 partition，每个 partition 可以存在于不同的 broker 上，每个\t\t\npartition 就放一部分数据。\t\t\t\t\n\n这就是天然的分布式消息队列，就是说一个 topic 的数据，是分散放在多个机器上的，每个机器就放一部\n分数据。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4154,"question":"】kafka 的 ack 机制？0不等待主机、 1主机接收、 -1主机和副机接收后","simplecontent":null,"content":"《0不等待主机、 1主机接收、 -1主机和副机接收后》\nrequest.required.acks 有三个值 0不等待主机、 1主机接收、 -1主机和副机接收后\n0:生产者不会等待 broker 的 ack，这个延迟最低但是存储的保证最弱当 server 挂掉的时候就会丢数据\n1：服务端会等待 ack 值\tleader 副本确认接收到消息后发送 ack 但是如果 leader 挂掉后他不确保是否复制完成新 leader 也会导致数据丢失\n-1：同样在 1 的基础上 服务端会等所有的 follower 的副本受到数据后才会受到 leader 发出的 ack，这样数据不会丢失","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4155,"question":"】Kafka 的消费者消费数据如何提交offset？消费者每次消费数据的时候，消费者都会记录消费的物理偏移量（offset）的位置等到下次消费时，他会接着上次位置继续消费","simplecontent":null,"content":"消费者每次消费数据的时候，消费者都会记录消费的物理偏移量（offset）的位置等到下次消费时，他会接着上次位置继续消费","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4156,"question":"】消费者负载均衡策略？一个分片对应一个消费者成员","simplecontent":null,"content":"一个消费者组中的一个分片对应一个消费者成员，他能保证每个消费者成员都能访问，如果组中成员太多会有空闲的成员","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4157,"question":"数据有序?","simplecontent":null,"content":"一个消费者组里它的内部是有序的消费者组与消费者组之间是无序的","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:20","updateTime":"2021-05-26 01:08:20","isExist":null},{"id":4127,"question":"】kafka 可以脱离 zookeeper 单独使用吗？不能脱离","simplecontent":null,"content":"kafka 不能脱离 zookeeper 单独使用，因为 kafka 使用 zookeeper 管理和协调 kafka 的节点服务器。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4128,"question":"】什么情况会导致 kafka 运行变慢？cpu 性能瓶颈、磁盘读写瓶颈、网络瓶颈","simplecontent":null,"content":"cpu 性能瓶颈、磁盘读写瓶颈、网络瓶颈","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4129,"question":"】使用 kafka 集群需要注意什么？集群不要超过7个，消息复制需要的时间就越长","simplecontent":null,"content":"集群的数量不是越多越好，最好不要超过 7 个，因为节点越多，消息复制需要的时间就越长，整个群组的吞吐量就越低。\n集群数量最好是单数，因为超过一半故障集群就不能用了，设置为单数容错率更高。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4130,"question":"】Kafka的持久化文件？","simplecontent":null,"content":"一个 Topic 被分成多 Partition，每个 Partition 在存储层面是一个 append-only 日志文件，属于一个 Partition 的消息都会被直接追加到日志文件的尾部，每条消息在文件中的位置称为 offset（偏移量）。\n日志文件由“日志条目（log entries）”序列组成，每一个日志条目包含一个4字节整型数（值为N），其后跟N个字节的消息体。每条消息都有一个当前 Partition 下唯一的64字节的 offset，标识这条消息的起始位置。消息格式如下：\n\n写\n日志文件允许串行附加，并且总是附加到最后一个文件。当文件达到配置指定的大小（log.segment.bytes = 1073741824 (bytes)）时，就会被滚动到一个新文件中（每个文件称为一个 segment file）。日志有两个配置参数：M，强制操作系统将文件刷新到磁盘之前写入的消息数；S，强制操作系统将文件刷新到磁盘之前的时间（秒）。在系统崩溃的情况下，最多会丢失M条消息或S秒的数据。\n读\n通过给出消息的偏移量（offset）和最大块大小（S）来读取数据。返回一个缓冲区为S大小的消息迭代器，S应该大于任何单个消息的大小，如果消息异常大，则可以多次重试读取，每次都将缓冲区大小加倍，直到成功读取消息为止。可以指定最大消息大小和缓冲区大小，以使服务器拒绝大于某个大小的消息。读取缓冲区可能以部分消息结束，这很容易被大小分隔检测到。\n读取指定偏移量的数据时，需要首先找到存储数据的 segment file，由全局偏移量计算 segment file 中的偏移量，然后从此位置开始读取。\n删除\n消息数据随着 segment file 一起被删除。Log manager 允许可插拔的删除策略来选择哪些文件符合删除条件。当前策略为删除修改时间超过 N 天前的任何日志，或者是保留最近的 N GB 的数据。\n为了避免在删除时阻塞读操作，采用了 copy-on-write 技术：删除操作进行时，读取操作的二分查找功能实际是在一个静态的快照副本上进行的。\n1.数据持久化：\n     发现线性的访问磁盘（即：按顺序的访问磁盘），很多时候比随机的内存访问快得多，而且有利于持久化；\n     传统的使用内存做为磁盘的缓存\n     Kafka直接将数据写入到日志文件中，以追加的形式写入\n\n2.日志数据持久化特性：\n   \n   写操作：通过将数据追加到文件中实现\n\n   读操作：读的时候从文件中读就好了\n\n3.优势：    \n             读操作不会阻塞写操作和其他操作（因为读和写都是追加的形式，都是顺序的，不会乱，所以不会发生阻塞），数据大小不对性能产生影响；\n             没有容量限制（相对于内存来说）的硬盘空间建立消息系统；\n             线性访问磁盘，速度快，可以保存任意一段时间！\n————————————————\n版权声明：本文为CSDN博主「平凡之路无尽路」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/gududedabai/article/details/80002453","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4131,"question":"】消息堆积怎么办？扩展机器数量消费、分区数增加、多线程异步消费","simplecontent":null,"content":"《扩展机器数量消费、分区数增加、多线程异步消费》\n1、consumer故障导致kafka积压了大量消息\n\n场景：原来topicA 有3个partition\n思路：扩展机器数量，创建新的topicB ，设定10个partition，之前A的消费者逻辑改为获取到topicA的消息之后，发topicB的消息，然后新的10台机器来处理topicB的数据，这样效率是以前的3倍。\n\n2、消息过期失效\n也是因为数据大量堆积没有消费，参考场景1 扩展临时机器\n\n1）如果是Kafka消费能力不足，则可以考虑增加Topic的分区数，并且同时提升消费组的消费者数量，消费者数=分区数。（两者缺一不可）\n\n2）如果是下游的数据处理不及时：提高每批次拉取的数量。批次拉取数据过少（拉取数据/处理时间<生产速度），使处理的数据小于生产的数据，也会造成数据积压。","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4132,"question":"】如何保证顺序消费？","simplecontent":null,"content":"Kafka分布式的单位是partition，同一个partition用一个write ahead log组织，所以可以保证FIFO的顺序。不同partition之间不能保证顺序。\n\n但是绝大多数用户都可以通过message key来定义，因为同一个key的message可以保证只发送到同一个partition，比如说key是user id，table row id等等，所以同一个user或者同一个record的消息永远只会发送到同一个partition上，保证了同一个user或record的顺序。当然，如果你有key skewness 就有些麻烦，需要特殊处理\n\n一个 topic，一个 partition，一个 consumer，内部单线程消费，单线程吞吐量太低，一般不会用这个。\n写 N 个内存 queue，具有相同 key 的数据都到同一个内存 queue；然后对于 N 个线程，每个线程分别消费一个内存 queue 即可，这样就能保证顺序性。\n\n\n\nKafka 中发送1条消息的时候，可以指定(topic, partition, key) 3个参数。partiton 和 key 是可选的。如果你指定了 partition，那就是所有消息发往同1个 partition，就是有序的。并且在消费端，Kafka 保证，1个 partition 只能被1个 consumer 消费。或者你指定 key（比如 order id），具有同1个 key 的所有消息，会发往同1个 partition。也是有序的。\n.\n创建Topic只指定1个partition，这样的坏处就是磨灭了kafka最优秀的特性。\nkafkaTemplate.send(\"TOPIC_UYUN_ALARM\",  1,\"123\",\"1123\");","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4133,"question":"发送消息到Kafka?","simplecontent":null,"content":"同步发送消息\n异步发送消息","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4134,"question":"Kafka传递数据的格式?","simplecontent":null,"content":"Map<String,Object> voucherMaster = new HashMap<String, Object>();\n// 添加凭证来源\nvoucherMaster.put(\"orderNo\"        ,master.getArId());\n\nprivate void insertVoucher(ArMaster glEntity) {\n    Object voucherMaster = VoucherWrappers.newVoucher(glEntity);\n    kafkaTemplate.send(JSON.toJSONString(voucherMaster), \"GL-VOUCHER-CREATE\");\n}\n\n @KafkaListener(topics = {\"GL-ARAP-REFUND-LMS\"},group = \"gl-arap\")\n    public void processMessage(ConsumerRecord<?, ?> record) {\n        Optional<?> kafkaMessage = Optional.ofNullable(record.value());\n        if (kafkaMessage.isPresent()) {\n            Object message = kafkaMessage.get();\n            logger.info(\"GL-ARAP-REFUND-LMS:\"+message.toString());\n            Map<String, String> param = new HashMap<>();\n            String sendMes =  message.toString().replaceAll(\"\\\\\\\\\\\\\\\"\",\"\\\"\");\n            param.put(\"message\",sendMes);\n            try {\n                HttpClientUtils.doPost(url + MqPathConstants.SALE_CANCEL_ALLIANCES,param);\n            } catch (Exception e) {\n                RedisUtils.hMSet(redis,System.currentTimeMillis()+\"-MIDDLEWARE-GL-ARAP-REFUND-LMS\", param);\n            }\n        }\n    }","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4135,"question":"kafaka生产数据时数据的分组策略?","simplecontent":null,"content":"生产者决定数据产生到集群的哪个partition中 \n每一条消息都是以（key，value）格式 \nKey是由生产者发送数据传入 \n所以生产者（key）决定了数据产生到集群的哪个partition","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4136,"question":"producer是否直接将数据发送到broker的leader(主节点)？","simplecontent":null,"content":"producer直接将数据发送到broker的leader(主节点)，不需要在多个节点进行分发，为了帮助producer做到这点，所有的Kafka节点都可以及时的告知:哪些节点是活动的，目标topic目标分区的leader在哪。这样producer就可以直接将消息发送到目的地了","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4137,"question":"Kafa consumer是否可以消费指定分区消息？","simplecontent":null,"content":"Kafa consumer消费消息时，向broker发出\"fetch\"请求去消费特定分区的消息，consumer指定消息在日志中的偏移量（offset），就可以消费从这个位置开始的消息，customer拥有了offset的控制权，可以向后回滚去重新消费之前的消息，这是很有意义的","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4138,"question":"Kafka消息是采用Pull模式，还是Push模式？","simplecontent":null,"content":"Kafka最初考虑的问题是，customer应该从brokes拉取消息还是brokers将消息推送到consumer，也就是pull还push。在这方面，Kafka遵循了一种大部分消息系统共同的传统的设计：producer将消息推送到broker，consumer从broker拉取消息\n一些消息系统比如Scribe和Apache Flume采用了push模式，将消息推送到下游的consumer。这样做有好处也有坏处：由broker决定消息推送的速率，对于不同消费速率的consumer就不太好处理了。消息系统都致力于让consumer以最大的速率最快速的消费消息，但不幸的是，push模式下，当broker推送的速率远大于consumer消费的速率时，consumer恐怕就要崩溃了。最终Kafka还是选取了传统的pull模式\nPull模式的另外一个好处是consumer可以自主决定是否批量的从broker拉取数据。Push模式必须在不知道下游consumer消费能力和消费策略的情况下决定是立即推送每条消息还是缓存之后批量推送。如果为了避免consumer崩溃而采用较低的推送速率，将可能导致一次只推送较少的消息而造成浪费。Pull模式下，consumer就可以根据自己的消费能力去决\n定这些策略\nPull有个缺点是，如果broker没有可供消费的消息，将导致consumer不断在循环中轮询，直到新消息到t达。为了避免这点，Kafka有个参数可以让consumer阻塞知道新消息到达(当然也可以阻塞知道消息的数量达到某个特定的量这样就可以批量发","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4139,"question":"数据有序?","simplecontent":null,"content":"一个消费者组里它的内部是有序的 \n消费者组与消费者组之间是无序的","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4140,"question":"Kafka的消费者如何消费数据?","simplecontent":null,"content":"消费者每次消费数据的时候，消费者都会记录消费的物理偏移量（offset）的位置 \n等到下次消费时，他会接着上次位置继续消费","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4141,"question":"kafka的ack机制?","simplecontent":null,"content":"request.required.acks有三个值 0 1 -1 \n0:生产者不会等待broker的ack，这个延迟最低但是存储的保证最弱当server挂掉的时候就会丢数据 \n1：服务端会等待ack值 leader副本确认接收到消息后发送ack但是如果leader挂掉后他不确保是否复制完成新leader也会导致数据丢失 \n-1：同样在1的基础上 服务端会等所有的follower的副本受到数据后才会受到leader发出的ack，这样数据不会丢失","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4142,"question":"】家电网kafka使用场景？更改mogodb的物流信息和状态，订单信息，订单金额、更改产品和商品商品信息","simplecontent":null,"content":"更改mogodb的物流信息和状态，订单信息，订单金额、更改产品和商品商品信息","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4143,"question":"】kakfa数据重复的解决办法？幂等性、手动提交","simplecontent":null,"content":"《幂等性、手动提交》\n1幂等性\n2,自动提交offset","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4144,"question":"】kafka数据丢失原因？Ack设置问题、offset提交方式问题","simplecontent":null,"content":"1.消息是异步，且是反馈是0或1 消息发送分同步、异步两种方式，默认使用同步方式\n0 代表：不等待broker 的 ack，broker接收到还没有写入磁盘就已经返回，当 broker 故障时有可能丢失数据；\n1 代表：producer 等待 broker 的 ack，主机接收成功后返回 ack，但是在主机发送到从机同步成功之前主机故障，那么将会丢失数据；\n-1代表：producer 等待 broker 的 ack，partition 的 leader 和 follower 全部落盘成功后才返回 ack，数据一般不会丢失，延迟时间长但是可靠性高；但是这样也不能保证数据不丢失\n2.offset是在消费处理逻辑前自动提交消费者读取完成，offset 已经提交，但还没有处理完成，消费者挂掉，offset 已经更新，无法再消费之前丢失的数据\"","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4145,"question":"】kafka数据重复的原因？提供者发送成功后确认机制是-1，但此时从机挂掉，返回失败给提供者，然后又重新发送、消费时offset未提交","simplecontent":null,"content":"\"1.消息发送后主机挂掉，从机竞争过程中acks = -1，数据发送到 leader后，副本同步，leader此时挂掉。从机在变成新的 leader, producer 端会得到返回异常，producer 端会重新发送数据\n2.offset采用自动提交的方式, 自动提交时，假设 1s 提交一次 offset 的更新，设当前 offset = 10，已经消费了数据，但offset没提交当消费者消费了 0.5s 的数据，offset 移动了 15，由于提交间隔为 1s，因此这一 offset 的更新并不会被提交，这时候我们写的消费者挂掉，重启后，消费者会去 ZooKeeper 上获取读取位置，获取到的 offset 仍为10\"","filterContent":null,"type":"java-kafka","status":0,"createTime":"2021-05-26 01:08:19","updateTime":"2021-05-26 01:08:19","isExist":null},{"id":4120,"question":"】分库分表如何进行分页?","simplecontent":null,"content":"《各个节点获取数据，经过最小堆计算，出现误差，最好是每个节点按照id是有顺序的，限制每个库只有那么多数据》\n先看一下Mycat是如何处理分页操作的，假如有如下Mycat分库方案： \n一张表有30份数据分布在3个分片DB上，具体数据分布如下\nDB1：[0,1,2,3,4,10,11,12,13,14] \nDB2：[5,6,7,8,9,16,17,18,19] \nDB3：[20,21,22,23,24,25,26,27,28,29]\n\nselect * from table limit 2;\n在有排序呢条件的情况下，Mycat接收到各个DB节点的返回结果后，对其进行最小堆运算，计算出所有结果集中最小的两条记录 [0,1] 返回给应用。\n但是，当排序分页中有 偏移量 （offset）时，处理逻辑又有不同。假如应用的查询SQL如下：\nmysql>select * from table order by id limit 5,2;\nMycat将各个DB节点返回的数据 [10,11], [16,17], [20,21] 经过最小堆计算后返回给应用的结果集是 [10,11]。可是，对于应用而言，该表的所有数据明明是 0-29 这30个数据的集合，limit 5,2 操作返回的结果集应该是 [5,6]，如果返回 [10,11] 则是错误的处理逻辑。\n\nMycat在下发有 limit m,n 的SQL语句时会对其进行改写，改写成 limit 0, m+n 来保证查询结果的逻辑正确性。所以，Mycat发送到后端DB上的SQL语句是\nmysql>select * from table order by id limit 0,7;\n各个DB返回给Mycat的结果集是\nDB1: [0,1,2,3,4,10,11] \nDB2: [5,6,7,8,9,16,17] \nDB3: [20,21,22,23,24,25,26]\n经过最小堆计算后得到最小序列 [0,1,2,3,4,5,6] ，然后返回偏移量为5的两个结果为 [5,6] 。\n虽然Mycat返回了正确的结果，但是仔细推敲发现这类操作的处理逻辑是及其消耗（浪费）资源的。应用需要的结果集为2条，Mycat中需要处理的结果数为21条。也就是说，对于有 t 个DB节点的全分片 limit m, n 操作，Mycat需要处理的数据量为 (m+n)*t 个。比如实际应用中有50个DB节点，要执行limit 1000,10操作，则Mycat处理的数据量为 50500 条，返回结果集为10，当偏移量更大时，内存和CPU资源的消耗则是数十倍增加。\n如果设计使用Mycat时有分页排序，请考虑放弃！\n1.如果只是为了分页，可以考虑这种分表，就是表的id是范围性的，且id是连续的，比如第一张表id是1到10万，第二张是10万到20万，这样分页应该没什么问题。\n2.如果是其他的分表方式，建议用sphinx先建索引，然后查询分页，我们公司现在就是这样干的。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4121,"question":"简单的MySQL主从复制?","simplecontent":null,"content":"MySQL的主从复制解决了数据库的读写分离，并很好的提升了读的性能\n但是，主从复制也带来其他一系列性能瓶颈问题：\n1. 写入无法扩展\n2. 写入无法缓存\n3. 复制延时\n4. 锁表率上升\n5. 表变大，缓存率下降\n那问题产生总得解决的，这就产生下面的优化方案，一起来看看。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4122,"question":"Mysql数据库Mycat分表分库如何分？","simplecontent":null,"content":"Mycat分表分库虽然能解决大表对数据库系统的压力，但也有一些不利，因此Mycat分表分库要先解决的问题是，分不分库，分哪些库，什么规则分，分多少分片。那么究竟是怎么分的呢？\n1、能不分就不分，1000万以内的表，不建议分片，通过合适的索引，读写分离等方式，可以很好的解决性能问题。\n2、分片数量尽量少，分片尽量均匀分布在多个DataHost上，因为一个查询SQL跨分片越多，则总体性能越差，虽然要好于所有数据在一个分片的结果，只在必要的时候进行扩容，增加分片数量。\n3、分片规则需要慎重选择，分片规则的选择，需要考虑数据的增长模式，数据的访问模式，分片关联性问题，以及分片扩容问题，最近的分片策略为范围分片，枚举分片，一致性Hash分片，这几种分片都有利于扩容。\n4、尽量不要在一个事务中的SQL跨越多个分片，分布式事务一直是个不好处理的问题\n5、查询条件尽量优化，尽量避免Select * 的方式，大量数据结果集下，会消耗大量带宽和CPU资源，查询尽量避免返回大量结果集，并且尽量为频繁使用的查询语句建立索引。\n总体上来说，分片的选择是取决于最频繁的查询SQL的条件，因为不带任何Where语句的查询SQL，会便利所有的分片，性能相对最差，因此这种SQL越多，对系统的影响越大，所以我们要尽量避免这种SQL的产生。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4123,"question":"mysql分页最后几页慢的问题?","simplecontent":null,"content":"1、尽量给出查询的大致范围\nSELECT c1,c2,cn... FROM table WHERE id>=20000 LIMIT 10;\n2、子查询法\nSELECT c1,c2,cn... FROM table WHERE id>=\n(\nSELECT id FROM table LIMIT 20000,1\n)\nLIMIT 10;\n\n查询从第1000000之后的30条记录：\nSQL代码1：平均用时6.6秒 SELECT * FROM `cdb_posts` ORDER BY pid LIMIT 1000000 , 30\nSQL代码2：平均用时0.6秒 SELECT * FROM `cdb_posts` WHERE pid >= (SELECT pid FROM  `cdb_posts` ORDER BY pid LIMIT 1000000 , 1) LIMIT 30\n\n因为要取出所有字段内容，第一种需要跨越大量数据块并取出，而第二种基本通过直接根据索引字段定位后，才取出相应内容，效率自然大大提升。对limit的优化，不是直接使用limit，而是首先获取到offset的id，然后直接使用limit size来获取数据。\n可以看出，越往后分页，LIMIT语句的偏移量就会越大，两者速度差距也会越明显。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4124,"question":"mycat取模分片是什么?","simplecontent":null,"content":"就是根据数据表的某一个字段，通常是某一个整数型的字段，对其进行十进制的求模运算，将运算结果作为Mycat的路由结果，具体规则如下：\n此分片算法根据id进行十进制求模运算，相比固定的分片hash，这种分片算法在批量插入时会增加事务一致性的难度。\n录入数据时，Mycat根据id进行十进制求模运算，将运算结果作为路由结果，将SQL路由到指定的数据分片节点，符合我们配置的分片规则。\n按照分片字段查询\ndn2{select * from t_user where id = 1}\n如果指定分片字段，则走分片查询单个分片节点。\n\nmysql> explain select * from t_user where id >=3;\n+-----------+----------------------------------------------+\n| DATA_NODE | SQL                                          |\n+-----------+----------------------------------------------+\n| dn1       | SELECT * FROM t_user WHERE id >= 3 LIMIT 100 |\n| dn2       | SELECT * FROM t_user WHERE id >= 3 LIMIT 100 |\n| dn3       | SELECT * FROM t_user WHERE id >= 3 LIMIT 100 |\n\n+----+-------+------+---------------------+\n| ID | name  | sex  | CREATE_TIME         |\n+----+-------+------+---------------------+\n|  3 | lyz03 | n    | 2017-08-13 21:54:00 |\n+----+-------+------+---------------------+\n1 row in set (0.04 sec)\n由此可见，如果分片字段范围的查询，则走所有节点去检索，哪怕只有一条数据在一个分片上，route路由也是走所有的分片进行检索查询。\n\n按照非分片字段查询\nmysql> explain select * from t_user where name = 'lyz01';\n+-----------+-----------------------------------------------------+\n| DATA_NODE | SQL                                                 |\n+-----------+-----------------------------------------------------+\n| dn1       | SELECT * FROM t_user WHERE name = 'lyz01' LIMIT 100 |\n| dn2       | SELECT * FROM t_user WHERE name = 'lyz01' LIMIT 100 |\n| dn3       | SELECT * FROM t_user WHERE name = 'lyz01' LIMIT 100 |\n+-----------+-----------------------------------------------------+\n3 rows in set (0.00 sec)\n \nmysql>\nmysql> select * from t_user where name = 'lyz01';\n+----+-------+------+---------------------+\n| ID | name  | sex  | CREATE_TIME         |\n+----+-------+------+---------------------+\n|  1 | lyz01 | n    | 2017-08-13 21:51:45 |\n+----+-------+------+---------------------+\n1 row in set (0.01 sec)\n由此可见，如果不走分片字段的查询，即使是单个数据，也要route路由所有的分片，走所有的分片进行查询。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4125,"question":"MySQL单表数据量过大的处理方式经验?","simplecontent":null,"content":" 先考虑表分区 ；然后考虑分表 ；然后考虑分库。\n明确主键用途：\n\n真的需要查询单行数据时候才需要主键！\n\n我采用无主键设计，用于避免写入时候浪费维护插入数据的性能。最早使用聚集的类似自增的id主键，压测写入超过5亿行的时候，写入性能缩减一半\n\n准确适用聚集：\n\n写入的数据在硬盘物理顺序上是追加，而不是插入！\n\n我把时间戳字段设置为聚集索引，用于聚集写入目的设计。保证硬盘上的物理写入顺序，不浪费性能用于插入数据\n用于精准索引！\n使用时间+设备联合索引，保证这张表只有一个查询用途。保证系统只有一种查询目的：按照设备号，查询一个时间段的数据。\n精确的表分区：\n要求查询时候限定最大量或者最大取值范围！\n按天进行表分区，实现大数据量下的高效查询。这里是本文重点，按照聚集索引进行，可以让目标数据局限在更小的范围进行，虽然单表数据上亿，但是查询基本上只在某一天的的几千万里进行索引查询\n1、索引优化和SQL语句优化是必须的，避免模糊查询和非索引查询，删改操作根据聚集索引进行，删改操作太频繁的话还是需要考虑分表\n2、看需求，如果需求不限制，那就分表\n分区会增加管理复杂度和成本这个很难理解，分区增加不了多少工作，如果需求要求必须单表，分区是解决在千万到几亿数据量的比较合适的方法\n可能更大数据量还是要回到分的路上，但是可能更多考虑分布式\n3、我们一般都是把历史数据定期转存其他表（一样的表名后加年月例如TABLE201205）归档~ \n这样该表本年度的查询的压力也小点（90%查询量集中在本年度）,即使查询历史数据也不影响性能，强力推荐！","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4126,"question":"】聚集索引是什么?","simplecontent":null,"content":"对于一张表来说，聚集索引只能有一个，因为数据真实的物理存储顺序就是按照聚集索引存储的。基于这个原理，现在可以用这样的方案来测试：对一张表设置一个主键， 之后再建立一个聚集索引，假如聚集索引能创建成功， 表明主键就不是聚集索引， 如果不可以建立聚集索引，就表明主键是聚集索引。\nCREATE CLUSTERED INDEX index_stud_name ON student(stud_name);\n聚集索引的作用对象是一张表数据的物理地址，聚集索引使得数据按照物理地址顺序的存储在存储介质中，数据的物理地址也是连续的，因此聚集索引是查询速度最快的索引，其查询原理是二分法。\n\n聚集索引尽量建立在值不会发生变更的列上，否则会带来非聚集索引的维护。一般来说这个索引建立在ID列上，而该ID则一般赋予一个自增的属性。这样做的意义和好处是当向表中插入一条ID序号靠前的数据时，不会因为插入一条数据，而移动整个数据集合的物理地址。\n\n尽量在建立非聚集索引之前建立聚集索引，否则会导致表上所有非聚集索引的重建，聚集索引应该避免建立在数值单调的列上，否则可能会造成IO的竞争，以及B树的不平衡，从而导致数据库系统频繁的维护B树的平衡性。聚集索引的列值最好能够在表中均匀分布\n\n但是对于业务的角度上来说，自增的ID列往往是个相对来说没有意义的字段，而且聚集索引一个表中只能存在一个。所以这里又引入了一个非聚集索引的概念。\n\n相比之下，唯一非聚集索引速度更快，这是因为查询过程中，一旦查到符合要求的数据，数据库会立刻停止查找，因为其是唯一的，继续查下去就没有意义了。反之，非唯一非聚集索引就会慢一些，因为即使查到了一条数据后，还要继续向后查找，因为本条数据在数据库中是非唯一的，仍然可能有其他索引字段相同的数据存在，所以查询开销会增加。\n\n聚集索引：聚集索引中，表中各行的物理顺序与键值的逻辑（索引）顺序相同。表只能包含一个聚集索引。\n如果不是聚集索引，表中各行的物理顺序与键值的逻辑顺序不匹配。聚集索引比非聚集索引有更快的数据访问速度\n\n\n聚集索引不适用于：\n1频繁更改的列这将导致整行移动（因为SQLServer必须按物理顺序保留行中的数据值）。这一点要特别注意，因为在大数据量事务处理系统中数据是易失的。\n2宽键来自聚集索引的键值由所有非聚集索引作为查找键使用，因此存储在每个非聚集索引的叶条目内。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:03","updateTime":"2021-05-26 01:08:03","isExist":null},{"id":4102,"question":"Btree树作用和原理?","simplecontent":null,"content":"降低树的高度","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4103,"question":"B+作用和原理?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4104,"question":"Myisam和innodb对b+区别?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4105,"question":"】什么时候索引不起作用?","simplecontent":null,"content":"1.有or必全有索引;\n2.复合索引未用左列字段;\n3.like以%开头;\n4.需要类型转换;\n5.where中索引列有运算;\n6.where中索引列使用了函数;\n7.如果mysql觉得全表扫描更快时（数据少）;\n2.2，哪些字段可以建索引，一般都where、order by 或者 group by 后面的字段。 ","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4106,"question":"】什么时没必要用索引?","simplecontent":null,"content":"1.唯一性差;\n2.频繁更新的字段不用（更新索引消耗）;\n3.where中不用的字段;\n4.索引使用<>时，效果一般;\n2.如果表比较小的话，可能都不需要加索引。 ","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4107,"question":"】MYSQL 什么时候用单列索引？什么使用用联合索引？","simplecontent":null,"content":"学生表，可以认为name的重复度比较小，而age的重复度比较大，对于单列索引来说，比较适合建在重读度低的列上。\n\nA. name 和 age 各自单独建立索引。 \n一般来说mysql会选择其中一个索引，name的可能性比较大，因为mysq会统计每个索引上的重复度，选用低重复度的字段。另外一个age的索引就不会用到，但还有维护索引的开销，所以age的索引不需要创建。\nB. name和age的联合索引 \n这种索引的切合度最好，mysql会直接选用这个索引。但相对单独的name索引来说，维护的成本要大一些，并且索引数据占用的存储空间也要更大一些。\n回过来看，有必要使用联合索引吗？ 我的看法是没有必要，因为学校里可能会有重名的人，但比较少。用name就可以比较精准的找到记录，即使有重复的也比较少。\n什么情况下使用联合索引比较好呢？ 举一个例子，大学选认课老师，需要创建一个关系对应表，有2个字段,student_id 和 teacher_id，想要查询某个老师和某个学生是否存在师生关系。 \n一个学生会选几十个老师，一个老师会带几百个学生 \n如果只为student_id建立索引的情况下，经过索引会选出几十条记录，然后在内存中where一下，去除其余的老师。 \n相反如果只为teacher_id建立索引，经过索引会选出几百条记录，然后在内存中where一下，去除其余的学生。 \n两种情况都不是最优的，这个时候使用联合索引最合适，通过索引直接找到对应记录。\n\n:Mysql从左到右的使用索引中的字段，一个查询可以只使用索引中的一部份，但只能是最左侧部分。例如索引是key index (a,b,c). 可以支持a | a,b| a,b,c 3种组合进行查找，但不支持 b,c进行查找 .当最左侧字段是常量引用时，索引就十分有效。\n如：建立 姓名、年龄、性别的复合索引。\ncreate table test(\na int,\nb int,\nc int,\nKEY a(a,b,c)\n);\n优: select * from test where a=10 and b>50\n差: select * from test where a50\n优: select * from test order by a\n差: select * from test order by b\n差: select * from test order by c\n优: select * from test where a=10 order by a\n优: select * from test where a=10 order by b\n差: select * from test where a=10 order by c\n优: select * from test where a>10 order by a\n差: select * from test where a>10 order by b\n差: select * from test where a>10 order by c\n优: select * from test where a=10 and b=10 order by a\n优: select * from test where a=10 and b=10 order by b\n优: select * from test where a=10 and b=10 order by c\n优: select * from test where a=10 and b=10 order by a\n优: select * from test where a=10 and b>10 order by b\n差: select * from test where a=10 and b>10 order by c\n\n\n使用索引原则\n\n1.索引越少越好\n原因：主要在修改数据时，第个索引都要进行更新，降低写速度。\n2.最窄的字段放在键的左边\n3.避免file sort排序，临时表和表扫描.","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4108,"question":"什么时候创建组合索引?","simplecontent":null,"content":"　　当我们的where查询存在多个条件查询的时候，我们需要对查询的列创建组合索引","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4109,"question":"】为什么不对没一列创建索引?","simplecontent":null,"content":"　　（１）减少开销：假如对col1、col2、col3创建组合索引，相当于创建了（col1）、（col1，col2）、（col1，col2，col3）3个索引\n　　覆盖索引：假如查询SELECT col1, col2, col3 FROM 表名，由于查询的字段存在索引页中，那么可以从索引中直接获取，而不需要回表查询\n　　（２）效率高：对col1、col2、col3三列分别创建索引，MySQL只会选择辨识度高的一列作为索引。假设有100w的数据，一个索引筛选出10%的数据，那么可以筛选出10w的数据；对于组合索引而言，可以筛选出100w*10%*10%*10%=1000条数据","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4110,"question":"】索引最左匹配原则？第一个必须要有","simplecontent":null,"content":"　　假设我们创建（col1，col2，col3）这样的一个组合索引，那么相当于对col1列进行排序，也就是我们创建组合索引，以最左边的为准，只要查询条件中带有最左边的列，那么查询就会使用到索引","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4111,"question":"什么是mysql分表分区，有什么作用?","simplecontent":null,"content":"　　什么是分表，从表面意思上看呢，就是把一张表分成N多个小表，具体请看mysql分表的3种方法\n　　什么是分区，分区呢就是把一张表的数据分成N多个区块，这些区块可以在同一个磁盘上，也可以在不同的磁盘上，具体请参考mysql分区功能详细介绍，以及实例\n分区不一样，一张大表进行分区后，他还是一张表，不会变成二张表，但是他存放数据的区块变多了。 \n从 上面我们可以看出，aa这张表，分为二个区，p1和p3，本来是三个区，被我删了一个区。我们都知道一张表对应三个文件.MYD,.MYI,.frm。分 区呢根据一定的规则把数据文件和索引文件进行了分割，还多出了一个.par文件，打开.par文件后你可以看出他记录了，这张表的分区信息，根分表中 的.MRG有点像。分区后，还是一张，而不是多张表。 \n如orderid,userid,ordertime,.....\nordertime<2015-01-01 #p0\nordertime<2015-04-01 #p1\nordertime<2015-07-01 #p2\nordertime<2015-10-01 #p3\nordertime<2016-01-01 #p4\n按照时间分区。大部分只查询最近的订单数据，那么大部分只访问一个分区，比整个表小多了，数据库可以更加好的缓存，性能也提高了。这个是数据库分的，应用程序透明，无需修改。\n\n2，数据处理上 \n\na），分表后，数据都是存放在分表里，总表只是一个外壳，存取数据发生在一个一个的分表里面。看下面的例子： \n\nselect * from alluser where id='12'表面上看，是对表alluser进行操作的，其实不是的。是对alluser里面的分表进行了操作。 \n\nb），分区呢，不存在分表的概念，分区只不过把存放数据的文件分成了许多小块，分区后的表呢，还是一张表。数据处理还是由自己来完成。 \n3，提高性能上 \n\na）， 分表后，单表的并发能力提高了，磁盘I/O性能也提高了。并发能力为什么提高了呢，因为查寻一次所花的时间变短了，如果出现高并发的话，总表可以根据不同 的查询，将并发压力分到不同的小表里面。磁盘I/O性能怎么搞高了呢，本来一个非常大的.MYD文件现在也分摊到各个小表的.MYD中去了。 \n\nb），mysql提出了分区的概念，我觉得就想突破磁盘I/O瓶颈，想提高磁盘的读写能力，来增加mysql性能。 \n在这一点上，分区和分表的测重点不同，分表重点是存取数据时，如何提高mysql并发能力上；而分区呢，如何突破磁盘的读写能力，从而达到提高mysql性能的目的。 \n\n4），实现的难易度上 \n\na），分表的方法有很多，用merge来分表，是最简单的一种方式。这种方式根分区难易度差不多，并且对程序代码来说可以做到透明的。如果是用其他分表方式就比分区麻烦了。 \n\nb），分区实现是比较简单的，建立分区表，根建平常的表没什么区别，并且对开代码端来说是透明的。 \n三，mysql分表和分区有什么联系呢 \n\n1，都能提高mysql的性高，在高并发状态下都有一个良好的表面。 \n\n2，分表和分区不矛盾，可以相互配合的，对于那些大访问量，并且表数据比较多的表，我们可以采取分表和分区结合的方式（如果merge这种分表方式，不能和分区配合的话，可以用其他的分表试），访问量不大，但是表数据很多的表，我们可以采取分区的方式等。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4112,"question":"分库分表区别是什么?","simplecontent":null,"content":"1 基本思想之什么是分库分表？\n从字面上简单理解，就是把原本存储于一个库的数据分块存储到多个库上，把原本存储于一个表的数据分块存储到多个表上。\n\n2 基本思想之为什么要分库分表？\n     数据库中的数据量不一定是可控的，在未进行分库分表的情况下，随着时间和业务的发展，库中的表会越来越多，表中的数据量也会越来越大，相应地，数据操作，增删改查的开销也会越来越大；另外，一台服务器的资源（CPU、磁盘、内存、IO等）是有限的，最终数据库所能承载的数据量、数据处理能力都将遭遇瓶颈,。\n\n3 分库分表的实施策略。\n     如果你的单机性能很低了，那可以尝试分库。分库，业务透明，在物理实现上分成多个服务器，不同的分库在不同服务器上。分区可以把表分到不同的硬盘上，但不能分配到不同服务器上。一台机器的性能是有限制的，用分库可以解决单台服务器性能不够，或者成本过高问题。\n当分区之后，表还是很大，处理不过来，这时候可以用分库。\norderid,userid,ordertime,.....\nuserid%4=0，用分库1\nuserid%4=1，用分库2\nuserid%4=2, 用分库3\nuserid%4=3，用分库4\n上面这个就是一个简单的分库路由，根据userid选择分库，即不同的服务器\n分库分表有垂直切分和水平切分两种。\n     3.1 何谓垂直切分，即将表按照功能模块、关系密切程度划分出来，部署到不同的库上。例如，我们会建立定义数据库workDB、商品数据库payDB、用户数据库userDB、日志数据库logDB等，分别用于存储项目数据定义表、商品定义表、用户数据表、日志数据表等。\n   \n如userid,name,addr一个表，为了防止表过大，分成2个表。\nuserid,name\nuserid,addr\n\n       3.2 何谓水平切分，当一个表中的数据量过大时，我们可以把该表的数据按照某种规则，例如userID散列、按性别、按省，进行划分，然后存储到多个结构相同的表，和不同的库上。例如，我们的userDB中的用户数据表中，每一个表的数据量都很大，就可以把userDB切分为结构相同的多个userDB：part0DB、part1DB等，再将userDB上的用户数据表userTable，切分为很多userTable：userTable0、userTable1等，然后将这些表按照一定的规则存储到多个userDB上。\n\n      3.3 应该使用哪一种方式来实施数据库分库分表，这要看数据库中数据量的瓶颈所在，并综合项目的业务类型进行考虑。\n如果数据库是因为表太多而造成海量数据，并且项目的各项业务逻辑划分清晰、低耦合，那么规则简单明了、容易实施的垂直切分必是首选。\n而如果数据库中的表并不多，但单表的数据量很大、或数据热度很高，这种情况之下就应该选择水平切分，水平切分比垂直切分要复杂一些，它将原本逻辑上属于一体的数据进行了物理分割，除了在分割时要对分割的粒度做好评估，考虑数据平均和负载平均，后期也将对项目人员及应用程序产生额外的数据管理负担。\n在现实项目中，往往是这两种情况兼而有之，这就需要做出权衡，甚至既需要垂直切分，又需要水平切分。我们的游戏项目便综合使用了垂直与水平切分，我们首先对数据库进行垂直切分，然后，再针对一部分表，通常是用户数据表，进行水平切分。\n分库分表存在的问题是什么\n\n4.1 事务问题。\n       在执行分库分表之后，由于数据存储到了不同的库上，数据库事务管理出现了困难。如果依赖数据库本身的分布式事务管理功能去执行事务，将付出高昂的性能代价；如果由应用程序去协助控制，形成程序逻辑上的事务，又会造成编程方面的负担。\n\n4.2 跨库跨表的join问题。\n    在执行了分库分表之后，难以避免会将原本逻辑关联性很强的数据划分到不同的表、不同的库上，这时，表的关联操作将受到限制，我们无法join位于不同分库的表，也无法join分表粒度不同的表，结果原本一次查询能够完成的业务，可能需要多次查询才能完成。\n\n4.3 额外的数据管理负担和数据运算压力。\n额外的数据管理负担，最显而易见的就是数据的定位问题和数据的增删改查的重复执行问题，这些都可以通过应用程序解决，但必然引起额外的逻辑运算，例如，对于一个记录用户成绩的用户数据表userTable，业务要求查出成绩最好的100位，在进行分表之前，只需一个order by语句就可以搞定，但是在进行分表之后，将需要n个order by语句，分别查出每一个分表的前100名用户数据，然后再对这些数据进行合并计算，才能得出结果。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4113,"question":"】用过哪些分库分表中间件？","simplecontent":null,"content":"Nycat\\","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4114,"question":"】表的数据量过大情况如何操作?","simplecontent":null,"content":"垂直分表，然后分区，不用的数据放在备份表中，最后分库\n分表\n比如你单表都几千万数据了，你确定你能扛住么？绝对不行，单表数据量太大，会极大影响你的 sql 执行的性能，到了后面你的 sql 可能就跑的很慢了。一般来说，就以我的经验来看，单表到几百万的时候，性能就会相对差一些了，你就得分表了。\n分表是啥意思？就是把一个表的数据放到多个表中，然后查询的时候你就查一个表。比如按照用户 id 来分表，将一个用户的数据就放在一个表中。然后操作的时候你对一个用户就操作那个表就好了。这样可以控制每个表的数据量在可控的范围内，比如每个表就固定在 200 万以内。\n\n分库\n分库是啥意思？就是你一个库一般我们经验而言，最多支撑到并发 2000，一定要扩容了，而且一个健康的单库并发值你最好保持在每秒 1000 左右，不要太大。那么你可以将一个库的数据拆分到多个库中，访问的时候就访问一个库好了。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4115,"question":"】如何进行垂直拆分或水平拆分的？","simplecontent":null,"content":"水平拆分的意思，就是把一个表的数据给弄到多个库的多个表里去，但是每个库的表结构都一样，只不过每个库表放的数据是不同的，所有库表的数据加起来就是全部数据。水平拆分的意义，就是将数据均匀放更多的库里，然后用多个库来扛更高的并发，还有就是用多个库的存储容量来进行扩容。\n垂直拆分的意思，就是把一个有很多字段的表给拆分成多个表，或者是多个库上去。每个库表的结构都不一样，每个库表都包含部分字段。一般来说，会将较少的访问频率很高的字段放到一个表里去，然后将较多的访问频率很低的字段放到另外一个表里去。因为数据库是有缓存的，你访问频率高的行字段越少，就可以在缓存里缓存更多的行，性能就越好。这个一般在表层面做的较多一些。\n\n这个其实挺常见的，不一定我说，大家很多同学可能自己都做过，把一个大表拆开，订单表、订单支付表、订单商品表。\n还有表层面的拆分，就是分表，将一个表变成 N 个表，就是让每个表的数据量控制在一定范围内，保证 SQL 的性能。否则单表数据量越大，SQL 性能就越差。一般是 200 万行左右，不要太多，但是也得看具体你怎么操作，也可能是 500 万，或者是 100 万。你的SQL越复杂，就最好让单表行数越少。\n好了，无论分库还是分表，上面说的那些数据库中间件都是可以支持的。就是基本上那些中间件可以做到你分库分表之后，中间件可以根据你指定的某个字段值，比如说 userid，自动路由到对应的库上去，然后再自动路由到对应的表里去。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4116,"question":"】分库分表的方式?","simplecontent":null,"content":"一种是按照 range 来分，就是每个库一段连续的数据，这个一般是按比如时间范围来的，但是这种一般较少用，因为很容易产生热点问题，大量的流量都打在最新的数据上了。\n或者是按照某个字段 hash 一下均匀分散，这个较为常用。\nrange 来分，好处在于说，扩容的时候很简单，因为你只要预备好，给每个月都准备一个库就可以了，到了一个新的月份的时候，自然而然，就会写新的库了；缺点，但是大部分的请求，都是访问最新的数据。实际生产用 range，要看场景。\nhash 分发，好处在于说，可以平均分配每个库的数据量和请求压力；坏处在于说扩容起来比较麻烦，会有一个数据迁移的过程，之前的数据需要重新计算 hash 值重新分配到不同的库或表。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4117,"question":"】Range分库的缺点?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4118,"question":"】Hash分库的缺点?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4119,"question":"mycat是怎样实现分库分表的？","simplecontent":null,"content":"mycat里面通过定义路由规则来（路由规则里面会定义分片字段，以及分片算法）。分片算法有多种，例如hash、取模、按范围分片等等。在mycat里面，会对所有传递的sql语句做路由处理（路由处理的依据就是表是否分片，如果分片，那么需要依据分片字段和对应的分片算法来判断sql应该传递到哪一个、或者哪几个、又或者全部节点去执行）","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:02","updateTime":"2021-05-26 01:08:02","isExist":null},{"id":4086,"question":"】描述下行锁?","simplecontent":null,"content":"InnoDB实现了以下两种类型的行锁。\n共享锁（s）：允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。\n排他锁（Ｘ）：允许获取排他锁的事务更新数据，阻止其他事务取得相同的数据集共享读锁和排他写锁。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4087,"question":"】行锁语法?","simplecontent":null,"content":"共享锁（Ｓ）：SELECT * FROM table_name WHERE ... LOCK IN SHARE MODE\n排他锁（X）：SELECT * FROM table_name WHERE ... FOR UPDATE\n","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4088,"question":"】mysql为什么会锁表?","simplecontent":null,"content":"这是源代码的部分，当debug到sysEleMaterialClassService.updateChildParentId();出现异常，然后在catch里我打了个断点，看报错信息。看完之后没有走到 throw这个抛异常的方法，然后我就关闭了应用，修改代码。等重启后就发现表锁了。\n我这个操作就导致即没有抛异常让事务回滚，也没有让mybatis提交事务，但是表这是已经被锁定，等着你提交后执行，就这么一直等着，始终没有提交。 mybatis 对 jdbc 的代码做过封装，它的事务提交时手动的，所以我们每次要sqlSession.submit();而这一步应该是走完方法到controller层后才提交。我这里到service层就停了。\n—\n当多个连接（数据库连接）同时对一个表的数据进行更新操作，那么速度将会越来越慢，持续一段时间后将出现数据表被锁的现象，从而影响到其它的查询及更新。　","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4089,"question":"如何解锁?","simplecontent":null,"content":".\n.查询锁表信息\n.\n.当前运行的所有事务\n.\n.select * from information_schema.innodb_trx\n.\n.当前出现的锁\n.\n.select * from information_schema.innodb_locks\n.\n.锁等待的对应关系\n\n.select * from information_schema.innodb_lock_waits  \n.2\n.\n.kill 线程\n.\n.通过 select * from information_schema.innodb_trx 查询 trx_mysql_thread_id然后执行 kill 线程ID\n.\n.KILL   8807;//后面的数字即时进程的ID \n.1、对于按钮等控件，点击后使其立刻失效，不让用户重复点击，避免对同时对同一条记录操作。\n2、使用乐观锁进行控制。乐观锁大多是基于数据版本（Version）记录机制实现。即为数据增加一个版本标识，在基于数据库表的版本解决方案中，一般是 通过为数据库表增加一个“version”字段来实现。读取出数据时，将此版本号一同读出，之后更新时，对此版本号加一。此时，将提交数据的版本数据与数 据库表对应记录的当前版本信息进行比对，如果提交的数据版本号大于数据库表当前版本号，则予以更新，否则认为是过期数据。乐观锁机制避免了长事务中的数据 库加锁开销（用户A和用户B操作过程中，都没有对数据库数据加锁），大大提升了大并发量下的系统整体性能表现。Hibernate 在其数据访问引擎中内置了乐观锁实现。需要注意的是，由于乐观锁机制是在我们的系统中实现，来自外部系统的用户更新操作不受我们系统的控制，因此可能会造 成脏数据被更新到数据库中。\n3、使用悲观锁进行控制。悲观锁大多数情况下依靠数据库的锁机制实现，如Oracle的Select … for update语句，以保证操作最大程度的独占性。但随之而来的就是数据库性能的大量开销，特别是对长事务而言，这样的开销往往无法承受。如一个金融系统， 当某个操作员读取用户的数据，并在读出的用户数据的基础上进行修改时（如更改用户账户余额），如果采用悲观锁机制，也就意味着整个操作过程中（从操作员读 出数据、开始修改直至提交修改结果的全过程，甚至还包括操作员中途去煮咖啡的时间），数据库记录始终处于加锁状态，可以想见，如果面对成百上千个并发，这 样的情况将导致灾难性的后果。所以，采用悲观锁进行控制时一定要考虑清楚。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4090,"question":"】悲观锁如何导致死锁的？加入2个任务同时获取12商品和213商品，任务1对商品1加锁，任务对2加锁，然后任务1对2加锁。。。","simplecontent":null,"content":".\n　","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4091,"question":"】乐观锁和悲观锁定义？查询时是否上锁，别人在此时是否能上锁，悲观锁很容易导致死锁（查询都上锁还得了别人不能修改了）","simplecontent":null,"content":"乐观锁：每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在提交更新的时候会判断一下在此期间别人有没有去更新这个数据。\n悲观锁：每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会阻止，直到这个锁被释放。\n数据库的乐观锁需要自己实现，在表里面添加一个 version 字段，每次修改成功值加 1，这样每次修改的时候先对比一下，自己拥有的 version 和数据库现在的 version 是否一致，如果不一致就不修改，这样就实现了乐观锁。\n悲观锁：\n\n乐观锁：","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4092,"question":"】悲观锁使用什么语法？for update","simplecontent":null,"content":"悲观锁：就是考虑问题很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁；\n实现：sql语句后边加上for update\n例子：Select  id,nam from biao for update","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4093,"question":"】乐观锁使用什么语法？加一个vesion","simplecontent":null,"content":"乐观锁:就是考虑问题很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁\n实现：在表里边加一个vesion\n例子：\nSelect  max(nub) ,version from biao\nUpdate biao set nub=nub+1,version=vsersion+1 where id=id and version =version","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4094,"question":"】高并发使用什么锁？乐观锁，不能使用悲观锁（会死锁）","simplecontent":null,"content":"乐观锁，不能使用悲观锁（会死锁）","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4095,"question":"】MySQL 问题排查都有哪些手段？explanin，慢查询日志","simplecontent":null,"content":"《explanin，慢查询日志》\n使用 show processlist 命令查看当前所有连接信息。\n使用 explain 命令查询 SQL 语句执行计划。\n开启慢查询日志，查看慢查询的 SQL。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4096,"question":"h】如何做 MySQL 的性能优化？","simplecontent":null,"content":"为搜索字段创建索引。\n避免使用 select *，列出需要查询的字段。\n垂直分割分表。\n选择正确的存储引擎。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4097,"question":"】mysql、Oracle数据库比较？收费，主键自增，分页，sql字段、建表流程","simplecontent":null,"content":"《收费，主键自增，分页，sql字段》\n1、首先主要是关系型数据库、nosql数据库和缓存数据库的区别；我觉的：\n关系型数据库（mysql、Oracle）就想当于一个储物柜，里边分了各种小格子，把各种数据有序的保存在里边，查询时非常方便；有比较完善的sql语句；\nmysql免费开源，自动提交事务，是基于表级别的一个事务，而Oracle不自动提交，是基于行级别的事务；mysql安装包小，使用简单，Oracle安装包较大，还会收费，更适合于大数据的处理、并发量高；\nmysql用limit进行分页，第一个参数表示启始数，第二个参数表示要查询的条数。\noracle用伪列rownum来进行分页，因为伪列只能用小于，不能用大于，所以需要一个两层的嵌套查询。\nmysql主键可以自增。Oracle必须用序列（sequence）；\n字段类型有些区别；\nmysql一般都是先有用户，然后创建库、创建表。而Oracle一般是，先创建数据库，然后创建临时表空间、物理表空间，再创建用户，创建表。\nnosql数据库（mongdb）就相当于一个仓库，比如把衣服放在一堆，书本放在一堆，这样他的存储效率肯定很高，但是查找时，不方便精确查找。所以nosql更适合于数据量比较大，但是数据之间关系不是特别强，或者不是特别重要的数据；比如：电商里边的评论数据；\n他的collection相当于数据库，document相当于表，document中数据主要以json格式存储；\n缓存数据库（redis、memcached）：缓存数据库由于是保存在内存中的，所以他的存储效率非常高；但是他不适合持久化存储数据，尽管redis支持持久化，但是他也仅仅是在一定程度上保证了数据的安全性，还是有很多情况会造成数据丢失的，比如redis穿透、雪崩等。\n所以他仅仅适合做为数据库和应用程序直接的中间层使用，不能作为真正的存储数据库使用。即使使用，也只能是一些不是特别重要的数据，比如购物车，在B2C的项目中，用户购物车一般都是临时存储，如果放入购物车长时间不提交，那么用户再购买的可能性很小了，所以即使丢了，也不会造成太多的损失。以这个，来换取项目的运行效率非常划算；","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4098,"question":"Mysql和orale的优缺点？","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4099,"question":"索引的使用?","simplecontent":null,"content":"索引可以理解为数据的查询目录，建索引的目的就是 提高对表的查询速度；没有索引时，查询时全表检索，有了索引就可以根据索引快速查找需要的数据；但是索引也不能乱建，因为索引需要维护，会导致增删改的效率降低。会使数据的维护变的复杂，影响开发的效率，索引也会占用数据库的物理空间；所以我们一般在项目的开发阶段、测试阶段、试运行阶段都很少去创建索引，因为有了索引，系统bug造成垃圾数据特别不好删除。只有在项目正式上线后才去增加索引，以提高项目运行速度。索引我们一般都创建在经常作为查询条件的字段、排序的字段和作为关联关系的字段上边。尽量避免在大文本字段、数据量比较小的字段（比如性别），增删改性能大于检索性能的字段上边；另外，有些情况，即使增加了索引，索引也不会生效，比如：索引字段使用了不等于（！=或者<>）符号，用了函数、进行了运算，使用了is null或is not null，\n和不匹配的数据类型进行比较、like查询时两边都用了%等；还有一个要注意的地方是，如果在多个字段上建立联合索引，那么组合索引的第一个列被where子句引用时，索引才会起作用。因为想要使用索引增加查询效率，必然要牺牲增删改效率，为了解决这个问题，我们经常对数据库做主从复制，读写分离。同时创建两个数据库，一主一从，两个数据库数据完全一致，主的数据库用来进行写的操作，操作后数据库会自动把数据同步到从的数据库，从的数据库用来执行读的操作。这样我们建立索引时，就可以只在读的数据库创建就可以了。这样就索引即能增加查询效率，有不影响增删改效率。这样做了之后，我们还可以对他进一步优化，比如数据库引擎的优化，主数据库因为执行增删改操作，所以用事务型引擎Innodb，\n读的数据库，不需要事务，就可以用效率更高的MyIASM引擎。同时根据实际情况，也可以配置一主多从或者多主多从。索引的创建常用的有2中方式：CREATE UNIQUE INDEX index_name ON table_name (column_list)；或者ALTER TABLE table_name ADD INDEX index_name (id,name)；修改用：ALTER TABLE table_name REBUILD INDEX index_name (column_list)；删除用：DROP INDEX index_name ON talbe_name\n或者：ALTER TABLE table_name DROP INDEX index_name\n查看用：select * from all_indexes where table_name='student';\nConlum_list中多个字段用”，”号分割。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4100,"question":"存储过程如何使用?","simplecontent":null,"content":"存储过程（procedure）是为了完成特定功能的SQL 语句集，存储在数据库中，经过第一次编译后再次调用不需要再次编译。存储过程里边可以定义变量、写if判断、写循环。他不能return返回，但是可以通过参数返回，有三种参数（in输入、our输出 还有 inout 即可输入又可输出。因为存储过程只在创造时进行编译，以后每次执行存储过程都不需再重新编译，而一般SQL语句每执行一次就编译一次,所以使用存储过程可提高数据库执行速度。当对数据库进行复杂操作时(如对多个表进行Update,Insert,Query,Delete时），可将此复杂操作用存储过程封装起来与数据库提供的事务处理结合一起使用。.存储过程可以重复使用,可减少数据库开发人员的工作量。安全性高,可设定只有某此用户才具有对指定存储过程的使用权。\n当然他也有缺点，最大的缺点就是可移植性差，另外学习起来也有一定的难度。还有就是采用存储过程后也就意味着你的系统有一些业务逻辑不是在应用程序里处理，这种架构会增加一些系统维护和调试成本。所以，个人认为，普通业务逻辑尽量不要使用存储过程，定时性的ETL任务或报表统计函数可以根据团队资源情况采用存储过程处理。存储过程可以快速解决问题，但是移植性、维护性、扩展性不好，它有时会约束软件的架构，约速程序员的思维，在你的系统没有性能问题时不建议用存储过程。如果你要完成的功能只是一次或有限次的工作，如数据订正、数据迁移等等，存储过程也可以拿上用场。如果你的系统很小，并且有50%的开发人员熟练掌握PL/SQL，人员结构稳定，那存储过程可以减少很多代码量，并且性能不错。当系统变复杂了，开发人员多了，存储过程的弊端就会呈现。mysql存储过程用call调用，Oracle用excecute调用；mysql写存储过程，一般先要用delimiter $$，设置 $$为命令终止符号，代替分号 ,因为分号在存储过程里边要用；创建好以后，               在用delimiter ；恢复；\n我之前写过一些存储过程，但最近接触的比较多的还是电商类的互联网项目，这类项目中，存储过程并不建议使用。最近一次存储过程记得是，为测试人员写的一个创建测试数据的存储过程。当时测试人员为了进行报表统计功能的测试，需要经常重复性的生成大量的数据，还设计到了很多张表。如果手动一条条加数据特别麻烦，于是找我想个办法，我就帮他写了一个存储过程；好久没写了，手比较生，当时也是一边找资料，一边写的。很简单的东西，写了近2个小时；\n\n函数（function）与存储过程的结构类似，但是存储过程中不能用return返回值，函数必须有一个return子句，用于返回函数值；当然函数也可以用类似存储过程的参数返回；函数除了直接调用以外，可以直接放在select语句中使用，存储过程不行，存储过程定义关键字用procedure，函数定义用function。一般情况下如果要求有且有一个返回值，用函数，否则，用存储过程。\n     触发器（trigger）一般是执行sql语句的增删改查时使用，比如修改A表的一条数据时，让他自动触发一个操作，在B表里边新增一条记录；触发器因为需要绑定在表上，所以有数量限制，他里边的语法和存储过程、函数类似。\n\n    视图(View)实际上是多张表之间进行关联查询，把查询结果虚拟成一张表，就叫视图。创建视图也非常简单，create view viewname as + 查询语句，就可以了。视图的使用和表的使用完全一样，但不要在视图上进行增删改的操作，因为他本身就是一个查询结果的集合。利用视图，可以使我们把复杂的查询简单化，可以增强数据的安全性，屏蔽用户对基表的操作；他一般无法提高查询效率。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4101,"question":"数据库优化应该从哪些方法考虑？","simplecontent":null,"content":"1、数据库选型：首先应该从数据库的选型来看，首先是关系型数据库，目前最流行的是mysql和Oracle，mysql更适合于中小型项目，安装使用比较简单，免费开源。Oracle适合于大型项目，安装包比较大，使用比较耗内存，收费，但是效率高、可靠性好，使用行级锁，比mysql的表级锁粒度更细，对并发性的支持要好的多。NOSQL数据库（比如：mongdb），事务性比较差，但效率高，主要适用于数据量比较大，但关系型要求不是很强的数据，比如评论数据。缓存数据库（比如：redis），由于保存在内存中，所以速度特别快，但是不适应持久化保存。所以缓存数据库一般作为应用和数据库的中间层来使用。\n2、设计规范：其次应该从数据库设计规范来考虑。好的规范，可以是数据库运行效率更高，优化更方便。以mysql为例；\n由于mysql对大小写在windows和linux上敏感型不一致，为了避免麻烦，我们一般建议数据库名、表名、字段名都用小写+下划线命名；\n数据库名最好于项目名称一致。\n表名最好采用：“数据库名_表名”的方式；\n字段名最后见名知意，不要太长；\n字段选用合适的字段类型，比如姓名可以用varchar（10），而不要用默认的长度255，日期最好用date或datetime或时间戳。金额最好用decimal，而不是double、float等。\n关联表以外的表最好都有主键id、创建时间、创建人、最后修改时间、最后修改人字段。\n数据库设计时，以三大范式为参考，但是必要时，可以使用冗余；\n对于预期数据量特别大的表，可能没有都会有很大增长的表，要考虑水平分表，比如系统日志表，可以考虑表名中加入月份，每月生成新表。\n对于字段比较多的表，比如企业信息表，可以考虑纵向分表，把表分成两张1对1的表。把经常查询的字段放在一张表里，不经常用到的和大文本字段放在另外一张表里。\n开发阶段，介意每个表只有主键，不应该包含其他外键。因为开发过程中，系统不稳定，可能出现很多垃圾数据，有了外键，数据的清理会给我们开发照成很多不便。要求开发人员用代码维护表之间的关系，这样更能增加代码的健壮性。\n3、索引：开发测试完成以后，一定要记得给数据库添加索引，增加sql的执行效率。添加索引也要注意，索引应该添加到经常作为查询条件或者排序字段、或者作为外键的列上。而那些不经常查询的字段、大文本字段、可选值比较少的字段（比如性别）等不需要创建索引。另外，sql中的不等于、is null、函数、like两边同时使用%等，会使索引失效，应该尽量避免使用；\n4、配置：数据库的配置优化（my.ini)，比如：最大连接数、最大缓存数、最大线程数、物理内存等；\n5、读写分离、主从复制优化。因为一般查询多、修改少，索引可以增加查询效率，但会影响修改效率。所以做了读写分离以后，可以把索引只建立在读的数据库上。并且查询不需要事务，所以可以用非事务行引擎；\n6、数据库集群，数据库压力过大时，用集群来分担压力是个很不错的方案；","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:01","updateTime":"2021-05-26 01:08:01","isExist":null},{"id":4068,"question":"】 char 和 varchar 的区别是什么？","simplecontent":null,"content":"char(n) ：固定长度类型，比如订阅 char(10)，当你输入\"abc\"三个字符的时候，它们占的空间还是 10 个字节，其他 7 个是空字节。\nchat 优点：效率高；缺点：占用空间；适用场景：存储密码的 md5 值，固定长度的，使用 char 非常合适。\nvarchar(n) ：可变长度，存储的值是每个值占用的字节再加上一个用来记录其长度的字节的长度。\n所以，从空间上考虑 varcahr 比较合适；从效率上考虑 char 比较合适，二者使用需要权衡。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4069,"question":"h】MySQL 的内连接、左连接、右连接有什么区别？","simplecontent":null,"content":"内连接关键字：inner join；左连接：left join；右连接：right join。\n内连接是把匹配的关联数据显示出来；左连接是左边的表全部显示出来，右边的表显示出符合条件的数据；右连接正好相反。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4070,"question":"MySQL 索引是怎么实现的？","simplecontent":null,"content":"索引是满足某种特定查找算法的数据结构，而这些数据结构会以某种方式指向数据，从而实现高效查找数据。\n具体来说 MySQL 中的索引，不同的数据引擎实现有所不同，但目前主流的数据库引擎的索引都是 B+ 树实现的，B+ 树的搜索效率，可以到达二分法的性能，找到数据区域之后就找到了完整的数据结构了，所有索引的性能也是更好的。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4071,"question":"h】怎么验证 MySQL 的索引是否满足需求？","simplecontent":null,"content":"explain\n\n使用 explain 查看 SQL 是如何执行查询语句的，从而分析你的索引是否满足需求。\nexplain 语法：explain select * from table where type=1。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4072,"question":"】Mysql的默认事务隔离是什么？可重复读","simplecontent":null,"content":"可重复读","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4073,"question":"】数据库的事务隔离有哪些？未提交读、提交读、可重复读、序列化","simplecontent":null,"content":"MySQL 的事务隔离是在 MySQL. ini 配置文件里添加的，在文件的最后添加：\ntransaction-isolation = REPEATABLE-READ\n可用的配置值：READ-UNCOMMITTED、READ-COMMITTED、REPEATABLE-READ、SERIALIZABLE。\nREAD-UNCOMMITTED：未提交读，最低隔离级别、事务未提交前，就可被其他事务读取（会出现幻读、脏读、不可重复读）。\nREAD-COMMITTED：提交读，一个事务提交后才能被其他事务读取到（会造成幻读、不可重复读）。\nREPEATABLE-READ：可重复读，默认级别，保证多次读取同一个数据时，其值都和事务开始时候的内容是一致，禁止读取到别的事务未提交的数据（会造成幻读）。\nSERIALIZABLE：序列化，代价最高最可靠的隔离级别，该隔离级别能防止脏读、不可重复读、幻读。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4074,"question":"】事务隔离区别?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4075,"question":"】已提交读是什么？事务要等另一个事物提交后才能读取数据","simplecontent":null,"content":"读提交，就是事务要等另一个事物提交后才能读取数据\neg:\n程序员拿着信用卡去享受生活（卡里当然是只有3.6万），当他埋单时（程序员事务开启），收费系统事先检测到他的卡里有3.6万，就在这个时候！！程序员的妻子要把钱全部转出充当家用，并提交。当收费系统准备扣款时，再检测卡里的金额，发现已经没钱了（第二次检测金额当然要等待妻子转出金额事务提交完）。程序员就会很郁闷，明明卡里是有钱的…\n\n\n作者：垃圾桶边的狗\n链接：https://www.jianshu.com/p/271076b79ca8\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4076,"question":"】可重复读是什么？其它事务可以读不可以修改，但是可以插入","simplecontent":null,"content":"（行锁，其它事务可以读不可以修改，但是可以插入）\n\n保证多次读取同一个数据时，其值都和事务开始时候的内容是一致，禁止读取到别的事务未提交的数据（会造成幻读），MySQL 的默认级别；\nRepeatable read\n重复读，就是在开始读取数据（事物开启）时，不再允许修改操作。MySQL是这一级别。\neg:\n程序员拿着信用卡去享受生活（卡里当然是只有3.6万），当他埋单时（事务开启，不允许其他事务的UPDATE修改操作），收费系统事先检测到他的卡里有3.6万。这个时候他的妻子不能转出金额了。接下来收费系统就可以扣款了。\n分析：\n重复读可以解决不可重复读问题。写到这里，应该明白一点就是，不可重复读对应的是修改 UPDATE操作。但是可能会有幻读问题。因为幻读问题对应的是插入INSERT操作，而不是UPDATE操作。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4077,"question":"】事务序列化是什么？其它事务可以读不可以插入和修改","simplecontent":null,"content":"（表锁，其它事务可以读不可以插入和修改）\nSerializable是最高的事务隔离级别，在该级别下，事务串行化顺序执行，可以避免脏读，不可重复读与幻读。但是这种事务隔离级别效率低下，比较耗数据库性能，一般不用。\n大多数数据库默认的事务级别隔离级别是Read committed、比如Sql Server，Oracle。Mysql的默认级别是Repeatable read\n\n\n作者：垃圾桶边的狗\n链接：https://www.jianshu.com/p/271076b79ca8\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4078,"question":"并发事务存在的问题：脏读，不可重复读，幻读表示什么?","simplecontent":null,"content":"《别人操作次数：1,2,2》\n脏读： （读取了未提交的新事物，然后被回滚了）\n    事务A读取了事务B中尚未提交的数据。如果事务B回滚，则A读取使用了错误的数据。\n    比如我给你转了100万，但是我还没有提交，此时你查询自己账户，多了100万，很开心。然后我发现转错人了，回滚了事物。然后你100万就没了。  在过程中你查到了没有提交事物的数据（多出的100万），这就是脏读。\n（解决：如果 一个事物在读的时候，禁止读取未提交的事物。是不是就解决了。）\n\n不可重复读： （读取了提交的新事物，指更新操作）\n      不可重复读是指在对于数据库中的某个数据，一个事务范围内多次查询却返回了不同的数据值，这是由于在查询间隔，被另一个事务修改并提交了。\n　　不可重复读和脏读的区别是，脏读是某一事务读取了另一个事务未提交的脏数据，而不可重复读则是读取了前一事务提交的数据。\n　　在某些情况下，不可重复读并不是问题，比如我们多次查询某个数据当然以最后查询得到的结果为主。但在另一些情况下就有可能发生问题，例如同一个事物前后两次查询同一个数据，期望两次读的内容是一样的，但是因为读的过程中，因为令一个数据写了该数据，导致不可重复读。（解决：如果 一个事物在读的时候，禁止任何事物写。是不是就解决了。）\n\n幻读：（也是读取了提交的新事物，指增删操作）\n    在事务A多次读取构成中，事务B对数据进行了新增操作，导致事务A多次读取的数据不一致。幻读和不可重复读的区别在于，\n    不可重复是针对记录的update操作，只要在记录上加写锁，就可避免；幻读是对记录的insert操作，\n    要禁止幻读必须加上全局的写锁(比如在表上加写锁)。 另外说一下两类丢失更新：\n（解决，如果一个事物加上表级锁，只要有任何东西操作这个表的时候，禁止任何操作的并发）\n脏读: \n指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据， 那么另外一个事务读到的这个数据是脏数据，依据脏数据所做的操作可能是不正确的。\n不可重复读:\n 指在一个事务内，多次读同一数据。在这个事务还没有结束时，另外一个事务也访问该同一数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改，那么第一个事务两次读到的数据可能是不一样的。这样就发生了在一个事务内两次读到的数据是不一样的，因此称为是不可重复读。\n幻觉读: \n幻觉读是指当事务不是独立执行时发生的一种现象，例如 第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好像发生了幻觉一样。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4079,"question":"】不可重复读和脏读的区别?","simplecontent":null,"content":"脏读是某一事务读取了另一个事务未提交的脏数据，而不可重复读则是读取了前一事务提交的数据。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4080,"question":"】幻读和不可重复读的区别?","simplecontent":null,"content":"    不可重复是针对记录的update操作，只要在记录上加写锁，就可避免；幻读是对记录的insert操作，\n要禁止幻读必须加上全局的写锁(比如在表上加写锁)。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4081,"question":"】如何避免不可重复读?","simplecontent":null,"content":"记录上加写锁","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4082,"question":"】如何避免幻读?","simplecontent":null,"content":"全局的写锁","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4083,"question":"MySQL 常用的引擎？区别是什么？","simplecontent":null,"content":"《myisam和innodb；是否支持事务和外键和行级锁，是否支持表级锁，速度》\n\nInnoDB 引擎：mysql 5.1 后默认的数据库引擎，提供了对数据库 acid 事务的支持，并且还提供了行级锁和外键的约束，它的设计的目标就是处理大数据容量的数据库系统。MySQL 运行的时候，InnoDB 会在内存中建立缓冲池，用于缓冲数据和索引。但是该引擎是不支持全文搜索，同时启动也比较的慢，它是不会保存表的行数的，所以当进行 select count(*) from table 指令的时候，需要进行扫描全表。由于锁的粒度小，写操作是不会锁定全表的,所以在并发度较高的场景下使用会提升效率的。\n\nMyIASM 引擎：不提供事务的支持，也不支持行级锁和外键。因此当执行插入和更新语句时，即执行写操作的时候需要锁定这个表，所以会导致效率会降低。不过和 InnoDB 不同的是，MyIASM 引擎是保存了表的行数，于是当进行 select count(*) from table 语句时，可以直接的读取已经保存的值而不需要进行扫描全表。所以，如果表的读操作远远多于写操作时，并且不需要事务的支持的，可以将 MyIASM 作为数据库引擎的首选。\n","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4084,"question":"】MySQL 的行锁和表锁定义？","simplecontent":null,"content":"MyISAM 只支持表锁，InnoDB 支持表锁和行锁，默认为行锁。\n表级锁：开销小，加锁快，不会出现死锁。锁定粒度大，发生锁冲突的概率最高，并发量最低。\n行级锁：开销大，加锁慢，会出现死锁。锁力度小，发生锁冲突的概率小，并发度最高。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4085,"question":"】Mysql 表锁的语法?","simplecontent":null,"content":"LOCK tables orders read local,order_detail read local;\nSELECT SUM(total) FROM orders;\nSELECT SUM(subtotal) FROM order_detail;\nUnlock tables;","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:08:00","updateTime":"2021-05-26 01:08:00","isExist":null},{"id":4049,"question":"数据库的索引创建有哪些设计原则？","simplecontent":null,"content":"答：①对查询频次较高，数据量较大的表创建索引。②限制索引数量：对于增删改操作较多的表，如果索引过多将需要很高的维护代价，降低操作效率，增加操作耗时。③利用最左前缀：如果索引字段值过长，会降低索引的执行效率。④删除不常用索引。⑤使用唯一索引，区分度越高，效率越高。⑤使用短索引，如果索引值很长则占用磁盘变大，会影响效。⑥为常作为查询条件、经常需要排序、分组和联合操作的字段建立索引。⑦尽量扩展现有索引，联合索引的效率高于多个独立索引。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4050,"question":"最左前缀原则?","simplecontent":null,"content":"1.主要使用在联合索引中\n例如abc联合索引，只有当a或者ab或者abc为条件时才能触发索引，这当然是毋容置疑的，但是我测试了发现ac也是会触发联合索引的，这是为什么呢？\n\n使用a或者ac只会使用联合索引中的a列，至于其他情况联合索引不会被使用。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4051,"question":"MySQL支持哪几种索引？","simplecontent":null,"content":"答：①BTREE 索引 ： 最常见的索引类型，大部分索引都支持 B 树索引。\n②HASH 索引：只有Memory引擎支持 ， 使用场景简单 。\n③R-tree 索引（空间索引）：空间索引是MyISAM引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少，不做特别介绍。\n④Full-text （全文索引） ：全文索引也是MyISAM的一个特殊索引类型，主要用于全文索引，InnoDB从Mysql5.6版本开始支持全文索引。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4052,"question":"】innodb和myisam的区别和使用场景？（锁、事务、外键）","simplecontent":null,"content":"a.InnoDB：\n1.支持事务处理\n2.支持外键\n3.支持行锁\n4.不支持FULLTEXT类型的索引（在Mysql5.6已引入）\n5.不保存表的具体行数，扫描表来计算有多少行\n6.对于AUTO_INCREMENT类型的字段，必须包含只有该字段的索引\n7.DELETE 表时，是一行一行的删除\n8.InnoDB 把数据和索引存放在表空间⾥里里⾯面\n9.跨平台可直接拷⻉贝使用\n10.表格很难被压缩\nb.MyISAM：\n1.不支持事务，回滚将造成不完全回滚，不具有原子性\n2.不支持外键\n3.支持全文搜索\n4.保存表的具体行数,不带where时，直接返回保存的行数\n5.DELETE   表时，先drop表，然后重建表\n6.MyISAM 表被存放在三个文件 。frm 文件存放表格定义。 数据文件是MYD (MYData) 。 索引文件是MYI (MYIndex)引伸\n7.跨平台很难直接拷⻉贝\n8.AUTO_INCREMENT类型字段可以和其他字段一起建⽴立联合索引\n9.表格可以被压缩\nc.选择：因为MyISAM相对简单所以在效率上要优于InnoDB.如果系统读多，写少。对原子性要求低。那么MyISAM最好的选择。   且MyISAM恢复速度快。可直接用备份覆盖恢复。如果系统读少，写多的时候，尤其是并发写入高的时候。InnoDB就是⾸首选了。两种类型都有⾃自⼰己优缺点，选择那个完全要看⾃自⼰己的实际类弄弄。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4053,"question":"mysql如何进⾏分表分库？","simplecontent":null,"content":"一般就是垂直切分和水平切分，这是一种结果集描述的切分方式，是物理空间上的切分。           我们从⾯面临的问题，开始解决，阐述：\n⾸首先是用户请求量太大，我们就堆机器搞定（这不是本文重点）。\n然后是单个库太大，这时我们要看是因为表多而导致数据多，还是因为单张表⾥里里⾯面的数据多。   如果是因为表多而数据多，使用垂直切分，根据业务切分成不同的库。\n如果是因为单张表的数据量太大，这时要用水平切分，即把表的数据按某种规则切分成多张表，甚⾄至多个库上的多张表。 分库分表的顺序应该是先垂直分，后水平分。       因为垂直分更简单，更符合我们处理现实世界问题的方式。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4054,"question":"】表数据量很大如何解决？建索引、缓存、异步、队列、分库分表","simplecontent":null,"content":"建索引、缓存、异步、队列、分库分表","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4055,"question":"】mysql单表达到多少数据量需要分库分表？300万","simplecontent":null,"content":"理论上确实5000万以上才会性能急剧下降，有些db架构师也是这么说过。但是实际情况却不一定，按照一部分的真实项⽬目，\n500万以上就会开始慢了。当然，这个跟具体的业务逻辑、响应要求、表设计也是很有关系的。表字段全是int类型的，可以到1000万以上 再优化。到了300万，是时候作好优化的技术储备了。但是不一定分表，可以通过缓存、搜索引擎等技术也都可以提高性能。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4056,"question":"数据库死锁机制和解决方案：?","simplecontent":null,"content":"1、死锁：死锁是指两个或者两个以上的事务在执行过程中，因争夺锁资源而造成的一种互相等待的现象。\n2、处理机制：解决死锁最有用最简单的方法是不要有等待，将任何等待都转化为回滚，并且事务重新开始。但是有可能影响并发性能。\n\n1、超时回滚，innodb_lock_wait_time设置超时时间；\n2、wait-for-graph方法：跟超时回滚比起来，这是一种更加主动的死锁检测方式。InnoDB引擎也采用这种方式。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4057,"question":"】数字型字段和字符型哪个更好?","simplecontent":null,"content":".尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串串中每一个字符，而对于数字型而⾔言只需要比较一次就够了。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4058,"question":"】mysql调优?","simplecontent":null,"content":"1、选择最合适的字段属性：类型、⻓长度、是否允许NULL等；尽量把字段设为not  null，一⾯面查询时对比是否为null；\n2.要尽量避免全表扫描，⾸首先应考虑在 where 及 order by 涉及的列列上建⽴立索引。\n3.应尽量避免在  where 子句中对字段进行  null 值判断、使用!= 或  <> 操作符，否则将导致引擎放弃使用索引而进行全表扫描\n4.应尽量避免在   where 子句中使用   or 来连接条件，如果一个字段有索引，一个字段没有索引，将导致引擎放弃使用索引而进行全表扫描\n5.in 和 not in 也要慎用，否则会导致全表扫描\n6.模糊查询也将导致全表扫描，若要提高效率，可以考虑字段建⽴立前置索引或用全文检索；\n7.如果在  where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运\n行时；它必须在编译时进行选择。然  而，如果在编译时建⽴立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。\n9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。\n10.不要在      where  子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。\n11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该         索引将不会被使用，并且应尽可能的让字段顺序与索引顺序相一致。\n12.不要写一些没有意义的查询，如需要⽣生成一个空表结构：\n13.Update      语句，如果只更改1、2个字段，不要Update全部字段，否则频繁调用会引起明显的性能消耗，同时带来大量⽇日志。\n14.对于多张大数据量（这⾥里里⼏几百条就算大了）的表JOIN，要先分⻚页再JOIN，否则逻辑读会很高，性能很差。\n15.select count(*) from table；这样不带任何条件的count会引起全表扫描，并且没有任何业务意义，是一定要杜绝的。\n16.索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或\nupdate  时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列列上建的索引是否有 必要。\n17.应尽可能的避免更新 clustered 索引数据列列，因为  clustered 索引数据列列的顺序就是表记录的物理存储顺序，一旦该列列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列列，那么需要考虑是否应将该索引建为\nclustered 索引。\n18.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处         理查询和连    接时会逐个比较字符串串中每一个字符，而对于数字型而⾔言只需要比较一次就够了。\n19.尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为⾸首先变⻓长字段存储空间⼩小，可以节省存储空间，其次对于查询来说，在一个相对较⼩小的字段内搜索效率显然要高些。\n20.任何地方都不要使用  select * from t ，用具体的字段列列表代替“*”，不要返回用不到的任何字段。\n21.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引⾮非常有限（只有主键索引）。\n22. 避免频繁创建和删除临时表，以减少系统表资源的消耗。临时表并不是不可使用，适当地使用它们可以使某些例例程更有效，例例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件，         最好使用导出表。\n23.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度； 如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。\n24.如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较⻓长时间锁定。\n\n\n25.尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。\n26.使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。\n27.与临时表一样，游标并不是不可使用。对⼩小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用⼏几个表才能获得所需的数据时。在结果集中包括“合计”的例例程通常要比使用游标执行的速度快。如果开发时 间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。\n28.在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送  DONE_IN_PROC 消息。\n29.尽量避免大事务操作，提高系统并发能⼒力力。\n30.尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4059,"question":"】mysql调优2?","simplecontent":null,"content":"1.使用索引，判断索引是否生效，explain select语句；\n2.使用分页，或者批量插入修改，当只要一条数据时使用limit  1；\n3.避免select *；\n4.不等于、是否存在用哪些 字段尽量使⽤not null  exists  \n5.不要使用！=  in   or  子查询太多了\n6.拆分大的delete和insert语句：delete和insert会锁表；\n7.分表分库分区\n8.日记判断查询速度","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4060,"question":"】mysql 优化之 is null ，is not null 索引使用测试?","simplecontent":null,"content":"    EXPLAIN select name from t_user where `name` is not null; 使用索引 \n        EXPLAIN select name from t_user where `name` is null; 不使用索引\n1、当索引字段不可以为null 时,只有使用is not null 返回的结果集中只包含索引字段时，才使用索引\n 2、当索引字段可以为空时，使用 is null 不影响覆盖索引，但是使用 is not null 只有完全返回索引字段时才会使用索引","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4061,"question":"】垂直拆分的优缺点?","simplecontent":null,"content":"垂直拆分是指数据表列的拆分，把一张列比较多的表拆分为多张表。表的记录并不多，但是字段却很长，表占用空间很大，检索表的时候需要执行大量的IO，严重降低了性能。这时需要把大的字段拆分到另一个表，并且该表与原表是一对一的关系。 \n2.\n1，把不常用的字段单独放在一张表;, \n2，把text，blob等大字段拆分出来放在附表中; \n3，经常组合查询的列放在一张表中;\n垂直切分的优点 \n◆ 数据库的拆分简单明了，拆分规则明确； \n◆ 应用程序模块清晰明确，整合容易； \n◆ 数据维护方便易行，容易定位；\n垂直切分的缺点 \n◆ 部分表关联无法在数据库级别完成，需要在程序中完成； \n◆ 对于访问极其频繁且数据量超大的表仍然存在性能平静，不一定能满足要求； \n◆ 事务处理相对更为复杂； \n◆ 切分达到一定程度之后，扩展性会遇到限制； \n◆ 过读切分可能会带来系统过渡复杂而难以维护。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4062,"question":"】Mysql索引使用什么结构？B+树","simplecontent":null,"content":"B+树","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4063,"question":"】索引为什么不使用Hash结构？数据量大要扩容，不进行访问和排序查找","simplecontent":null,"content":"数据量大要扩容，不进行访问和排序查找","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4064,"question":"】数据库的三范式是什么？不可分割，完全依赖，传递依赖","simplecontent":null,"content":"《不可分割，完全依赖，传递依赖》\n第一范式：强调的是列的原子性，即数据库表的每一列都是不可分割的原子数据项。\n第二范式：要求实体的属性完全依赖于主关键字。所谓完全依赖是指不能存在仅依赖主关键字一部分的属性。\n第三范式：任何非主属性不依赖于其它非主属性。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4065,"question":"】一张自增表里面总共有 7 条数据，删除了最后 2 条数据，重启 MySQL 数据库，又插入了一条数据，此时 id 是几？MyISAM 是8，InnoDB是6；InnoDB表只把自增主键的最大ID记录到内存中，所以重启数据库或者对表OPTIMIZE操作，都会使最大ID丢失；MylSAM表会把自增主键的最大ID记录到数据文件里面，重启MYSQL后，自增主键的最大ID也不会丢失。","simplecontent":null,"content":"表类型如果是 MyISAM ，那 id 就是 8。\n表类型如果是 InnoDB，那 id 就是 6。\nInnoDB 表只会把自增主键的最大 id 记录在内存中，所以重启之后会导致最大 id 丢失。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4066,"question":"】如何获取当前数据库版本？select version()","simplecontent":null,"content":"使用 select version() 获取当前 MySQL 数据库版本。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4067,"question":"】ACID 是什么？原子、一致性、隔离、持久性","simplecontent":null,"content":"Atomicity（原子性）：一个事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被恢复（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。即，事务不可分割、不可约简。\nConsistency（一致性）：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设约束、触发器、级联回滚等。\nIsolation（隔离性）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。\nDurability（持久性）：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:59","updateTime":"2021-05-26 01:07:59","isExist":null},{"id":4034,"question":"】如何查看索引不起作用？explain   type=range","simplecontent":null,"content":"《通过explain  Type=all不起作用  type=range范围查询》\nType=all不起作用  type=range范围查询","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4035,"question":"】有没有查看mysql的日志？默认为10秒","simplecontent":null,"content":"《默认为10秒》\n执行show variables LIKE \"%quer%\";\n\nslow_query_log：是否开启慢日志\n\nslow_query_log_file：慢日志文件路径，默认文件是\n\nlong_query_time：设置超时多少秒写入日志，单位秒\n\nlog_queries_not_using_indexes：是否开启没使用到所有的查询，前提必须是slow_query_log=ON\n\n \n\n如何配置：\n\n快速修改在mysql中执行：\n\nset global slow_query_log=on;\n\nset global slow_query_log_file ='日志文件路径'\n\nset global log_queries_not_using_indexes=on;\n\n \n\nMYSQL配置my.ini或my.cnf中修改","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4036,"question":"】sql优化方法有那些？1.不用* 2.使用>不要=  3.分页 4.分批次提交  5.使用exists不用in，not in      6.不用!=  <>  7.主键不用uuid 8.少使用num is null可以设置为0","simplecontent":null,"content":"8.大量数据删除使用truncate table速度快，日志少代替delete","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4037,"question":"】普通索引sql语句？creae index 名 on 表（字段）","simplecontent":null,"content":"creae index 名 on 表（字段）","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4038,"question":"】唯一性索引字符？\tunique","simplecontent":null,"content":"creae unique index 名 on 表（字段）unique","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4039,"question":"简述主从复制的基本原理?","simplecontent":null,"content":"答：①主从复制是指一台服务器充当主数据库服务器，另外一台或多台服务器充当从数据库服务器，主服务器中的数据自动复制到从服务器中。对于多级复制，数据库服务器既可充当主机也可充当从机。②MySQL主从复制的基础是主服务器对数据库修改二进制记录，从服务器通过主服务器的二进制日志自动执行更新。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4040,"question":"】MySQL有哪些锁？","simplecontent":null,"content":"答：①按操作类型可以分为读锁（共享锁S）和写锁（排它锁X）。读锁：对同一份数据，多个读操作可以同时进行而不会互相影响。写锁：当前操作没有完成之前，会阻塞其他读锁和写锁。②按操作粒度分为行锁、表锁、页锁。行锁指对某行数据加锁，是一种排它锁。表锁指对当前操作的整张表加锁，实现简单，资源消耗较少。③页锁的锁定粒度介于行锁和表锁之间，一次锁定相邻的一组记录。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4041,"question":"】视图是什么？和普通的表有什么区别？","simplecontent":null,"content":"答：①视图（View）是一种虚拟存在的表。视图并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的。通俗的讲，视图就是一条SELECT语句执行后返回的结果集。所以我们在创建视图的时候，主要的工作就落在创建这条SQL查询语句上。②视图相对于普通的表的优势主要包括以下几项：简单：使用视图的用户完全不需要关心后面对应的表的结构、关联条件和筛选条件，对用户来说已经是过滤好的复合条件的结果集。安全：使用视图的用户只能访问他们被允许查询的结果集，对表的权限管理并不能限制到某个行某个列，但是通过视图就可以简单的实现。数据独立：一旦视图的结构确定了，可以屏蔽表结构变化对用户的影响，源表增加列对视图没有影响；源表修改列名，则可以通过修改视图来解决，不会造成对访问者的影响。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4042,"question":"】存储过程和函数有什么区别？","simplecontent":null,"content":"答：①存储过程和函数是 事先经过编译并存储在数据库中的一段 SQL 语句的集合，调用存储过程和函数可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的。\t②两者的区别在于函数必须有返回值，而存储过程没有返回值。\n函数只能返回一个变量，而存储过程可以返回多个；","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4043,"question":"】视图是否可以更新?","simplecontent":null,"content":"视图不能被索引，也知不能有关联的触发器或默\n会的，修改视图会修改底层基表的数据，另外视图一般只做查询不做增删改的操作。\n可以增删改，但是有条件\n\n可以在简单视图中执行DML 操作\nl当视图定义中包含以下元素之一时不能使用delete:\n组函数\nGROUPBY子句\nDISTINCT 关键字\nROWNUM 伪列\n\n\n\n当视图定义中包含以下元素之一时不能使用update :\nl组函数\nlGROUP BY子句\nlDISTINCT 关键字\nlROWNUM 伪列\nl列的定义为表达式\n\n\n当视图定义中包含以下元素之一时不能使用insert :\nl组函数\nlGROUP BY 子句\nlDISTINCT 关键字\nlROWNUM 伪列\nl列的定义为表达式\nl表中非空的列在视图定义中未包括\n\n屏蔽 DML 操作：\n\nl可以使用WITH READ ONLY 选项屏蔽对视图的DML 操作\nl任何DML 操作都会返回一个Oracle server 错误","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4044,"question":"】创建视图sql？create view XXX as XXXXXXXXXXXXXX;","simplecontent":null,"content":"create view XXX as XXXXXXXXXXXXXX;","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4045,"question":"】触发器是什么？增删改后出发执行sql","simplecontent":null,"content":"答：①触发器是与表有关的数据库对象，指在 insert/update/delete 之前或之后，触发并执行触发器中定义的SQL语句集合。触发器的这种特性可以协助应用在数据库端确保数据的完整性 , 日志记录 , 数据校验等操作 。②使用别名 OLD 和 NEW 来引用触发器中发生变化的记录内容，这与其他的数据库是相似的。现在触发器还只支持行级触发，不支持语句级触发。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4046,"question":"】B+树是什么和B树有什么区别？B+树叶子节点有链表","simplecontent":null,"content":"答：①BTree又叫多路平衡搜索树，一颗m叉的BTree特性如下： 树中每个节点最多包含m个孩子。 除根节点与叶子节点外，每个节点至少有[ceil(m/2)]个孩子。若根节点不是叶子节点，则至少有两个孩子。所有的叶子节点都在同一层。每个非叶子节点由n个key与n+1个指针组成，其中[ceil(m/2)-1] <= n <= m-1。\n\n②B+Tree为BTree的变种\n\nB+Tree与BTree的区别为： n叉B+Tree最多含有n个key，而BTree最多含有n-1个key。 B+Tree的叶子节点保存所有的key信息，依key大小顺序排列。所有的非叶子节点都可以看作是key的索引部分。③由于B+Tree只有叶子节点保存key信息，查询任何key都要从root走到叶子。所以B+Tree的查询效率更加稳定。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4047,"question":"】MySQL的索引对B+树做了哪些优化？","simplecontent":null,"content":"答：MySql索引数据结构对经典的B+Tree进行了优化。在原B+Tree的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的B+Tree，提高区间访问的性能。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4048,"question":"】索引有哪些分类？","simplecontent":null,"content":"答：①单值索引 ：即一个索引只包含单个列，一个表可以有多个单列索引。②唯一索引 ：索引列的值必须唯一，但允许有空值。③复合索引 ：即一个索引包含多个列。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:58","updateTime":"2021-05-26 01:07:58","isExist":null},{"id":4016,"question":"】Exists和in区别？in先查子表、exist先查父表","simplecontent":null,"content":"《in先查子表、exist先查父表》\n1.in先查什么，先查询子表，和父表笛卡尔积，判断条件符合\n2.exist先查什么，先查询父表，判断父表是否符合条件\n优先级：父表多使用in，子表多适应exists\"\n\n1. in()适合B表比A表数据小的情况\n2. exists()适合B表比A表数据大的情况\n当A表数据与B表数据一样大时,in与exists效率差不多,可任选一个使用.\nselect * from A\nwhere id in(select id from B)\n以上查询使用了in语句,in()只执行一次,它查出B表中的所有id字段并缓存起来.之后,检查A表的id是否与B表中的id相等,如果相等则将A表的记录加入结果集中,直到遍历完A表的所有记录.\n\n可以看出,当B表数据较大时不适合使用in(),因为它会B表数据全部遍历一次.\n如:A表有10000条记录,B表有1000000条记录,那么最多有可能遍历10000*1000000次,效率很差.\n再如:A表有10000条记录,B表有100条记录,那么最多有可能遍历10000*100次,遍历次数大大减少,效率大大提升.","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4017,"question":"】父表数据多使用什么？in","simplecontent":null,"content":"in","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4018,"question":"】子表多使用什么？exist","simplecontent":null,"content":"Exist","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4019,"question":"】为什么一般情况下使用exist？一般是详情表比较多数据","simplecontent":null,"content":"EXISTS与IN的使用效率的问题，通常情况下采用exists要比in效率高，因为IN不走索引，但要看实际情况具体使用：\nIN适合于外表大而内表小的情况；EXISTS适合于外表小而内表大的情况。\n\n而订单表和详情表匹配的话，一般是详情表比较多数据，所以使用exist","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4020,"question":"】Exist的sql语句?","simplecontent":null,"content":"select * from TableIn where exists(select BID from TableEx where BNAME=TableIn.ANAME)\nselect * from TableIn where ANAME in(select BNAME from TableEx)","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4021,"question":"】索引优化方法有那些？1.不要运算  2.不要用函数 3.模糊查询左边不能 4.复合索引最左边要包括  not in ,not exist. !=或者<>  7.字段为字符串要加单引号","simplecontent":null,"content":"1.不要运算  2.不要用函数 3.模糊查询左边不能 4.复合索引最左边要包括  not in ,not exist. !=或者<>  7.字段为字符串要加单引号","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4022,"question":"】为什么where条件中使用or索引不起作用?","simplecontent":null,"content":"起作用的","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4023,"question":"】in索引起作用吗？字符串加引号起作用、int不用加引号也起作用","simplecontent":null,"content":"《字符串加引号起作用、int不用加引号也起作用》\n1. 如果字段类型为字符串，需要给in查询中的数值与字符串值都需要添加引号，索引才能起作用。\n2. 如果字段类型为int，则in查询中的值不需要添加引号，索引也会起叙用。\nIN的字段，在联合索引中，按以上方法，也会起作用。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4024,"question":"】索引的代价？影响增删改效率","simplecontent":null,"content":"占用磁盘空间，影响增删改效率","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4025,"question":"】那些列上适合添加索引？1.Where order  2.经常查询，该字段不同值的多 3.少变化","simplecontent":null,"content":"1.Where order  2.经常查询，该字段不同值的多 3.少变化","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4026,"question":"数据库优化方式有哪些？1.慢查询记录 2.sql优化和索引优化  4.存储过程函数 5.分表分库  6.定时碎片化管理","simplecontent":null,"content":"1.慢查询记录 2.sql优化和索引优化  4.存储过程函数 5.分表分库  6.定时碎片化管理","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4027,"question":"】存储过程可以优化速度吗？复杂sql用存储过程比程序要好","simplecontent":null,"content":"复杂sql用存储过程比程序要好","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4028,"question":"】左，右，内，外连接的代码？left join，right join，inner join，full join     on","simplecontent":null,"content":"left join，right join，inner join，full join     on","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4029,"question":"】char和varchar区别有哪些？Char定长补0 查找快、varcahr不定长 查找慢","simplecontent":null,"content":"1.char是定长不足补空，查找快，占空间  存字母占1位，存中文占2位\n2.varchar不定长，查找慢 存都占2位\"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4030,"question":"】游标的作用？定位结果集的行","simplecontent":null,"content":"定位结果集的行","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4031,"question":"TRUNCATE TABLE 不起作用?","simplecontent":null,"content":"\"1.有触发器 2.索引视图  \n1.表示全部删除不能带条件，数据不能回复无日志\"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4032,"question":"优化mysql性能?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":4033,"question":"】范围查询索引起作用吗？数据量大小、不触发索引不起效条件","simplecontent":null,"content":"1.单列索引中——<,<=,=,>,>=,between,like（右边模糊）适用索引\n2.索引中有范围的，有序性失效，解决方案以实际为准\n网上查询有说是因为在查询数据条数约占总条数五分之一以下时能够使用到索引，但超过五分之一时，使用全表扫描。于是把日期范围缩小：\n\n>、< 、>=、<=等, 如果数据量过大的话，即使where条件字段已经建立了索引，查询语句执行时还是有可能进行全表扫描的。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:57","updateTime":"2021-05-26 01:07:57","isExist":null},{"id":3998,"question":"编写sql（有主键，int，有小数，时间，默认值，不为空，序列，带上名称，外键）?","simplecontent":null,"content":"CREATE TABLE IF NOT EXISTS `runoob_tbl`(\n   `runoob_id` INT UNSIGNED AUTO_INCREMENT,\n   `runoob_title` VARCHAR(100) NOT NULL,\n   `runoob_author` VARCHAR(40) NOT NULL,\n   `submission_date` DATE,\n course_id int,\n creditLimit decimal(10,4),\nszName VARCHAR(128) COMMENT '游戏名字', \n primary key(orderNumber),\nforeign key (cusNumber) references Customers(customerNumber) \n)ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nprimary key    标识该属性为该表的主键，可以唯一的标识对应的元组\nforeign key    标识该属性为该表的外键，是与之联系的某表的主键\nnot null       标识该属性不能为空\nunique         标识该属性的值是唯一的\nauto_increment 标识该属性的值自动增加\ndefault        为该属性设置默认值\n\nDROP TABLE IF EXISTS `aaa`;\nCREATE TABLE `aaa` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(255) DEFAULT NULL,\n  `age` int(11) DEFAULT '0' COMMENT '年龄',\n  `amount` decimal(5,2) DEFAULT NULL,（位数不包括小数点）\n  `sid` int(11) DEFAULT NULL,\n  `quantity` varchar(255) NOT NULL DEFAULT '0',\n`time` date DEFAULT NULL,（日期）\n  `createdate` datetime DEFAULT NULL,（时间）\n  PRIMARY KEY (`id`),\n  FOREIGN KEY (`sid`) REFERENCES `cat` (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":3999,"question":"】mysql on和where?","simplecontent":null,"content":"《连接条件、筛选条件》\non后面的是连接条件，代表两个表建立关系所遵循的规则\nwhere后面的可以看作是筛选条件，是对最终结果集进行过滤所遵循的规则","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4000,"question":"分区表sql？partition by RANGE","simplecontent":null,"content":"create table test (id number,data varchar2(100))\npartition by RANGE (id)\n(\npartition p1 values less than (1000) tablespace p1,\npartition p2 values less than (2000) tablespace p2,\npartition p3 values less than (maxvalue) tablespace p3\n);\ncreate index i_id on test(id) local; 因为id是分区键，所以这样就创建了一个有前缀的本地索引。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4001,"question":"分区索引和普通索引区别？","simplecontent":null,"content":"分区索引需要对每个分区建立相同的索引，也就是开始的工作量会稍微大点，不分区索引，也就是说一个索引对全表建立就行；这样问题就出来了，当你对某个分区进行drop或者新建分区的话，同时你得对不分区索引进行重建，这样工作量也会变大；而分区索引当你对表进行drop分区或create分区的时候只需要在新分区建立新的索引即可。\n\n创建分区表后，创建分区索引有大致两种方式，一种是全局索引（包括分区索引和普通非分区索引），另一种是在每个分区创建索引，而不是在分区表的父表创建索引。\n\n全局就是索引键值贯穿表的所有索引字段数据，分区索引则是索引上只包含对应分区的索引字段数据，所以很明显，如果通过where条件可以直接定位到某个或某些分区上，那么分区索引就可以帮助你在这个分区中快速查找数据，但如果没办法通过where定位分区，那么需要遍历全表所有分区来定位数据，此时分区索引无法起作用，那就必须全局索引了。所以是否要用全局索引一个最基本的判断，就是where条件和分区字段的匹配。\n另外，当分区维护的时候，全局索引会失效，必须重建才行，这将会影响到表的事务操作，所以oltp的事务性表，尽量不要用全局索引。\n\n2.        如果局部索引的索引列以分区键开头，则称为前缀局部索引。 \n3.        如果局部索引的列不是以分区键开头，或者不包含分区键列，则称为非前缀索引。 \n4.        前缀和非前缀索引都可以支持索引分区消除，前提是查询的条件中包含索引分区键。 \n5.        局部索引只支持分区内的唯一性，无法支持表上的唯一性，因此如果要用局部索引去给表做唯一性约束，则约束中必须要包括分区键列。 \n\n2.        全局索引可以分区，也可以是不分区索引，全局索引必须是前缀索引，即全局索引的索引列必须是以索引分区键作为其前几列。 \n3.        全局分区索引的索引条目可能指向若干个分区，因此，对于全局分区索引，即使只动，截断一个分区中的数据，都需要rebulid若干个分区甚至是整个索引。 \n\n分区索引就是在所有每个区上单独创建索引，它能自动维护，在drop或truncate某个分区时不影响该索引的其他分区索引的使用，也就是索引不会失效，维护起来比较方便，但是在查询性能稍微有点影响。\n\n　全局索引就是在全表上创建索引，它可以创建自己的分区，可以和分区表的分区不一样，也就是它是独立的索引。在drop或truncate某个分区时需要创建索引alter index idx_xx rebuild，也可以alter table table_name drop partition partition_name update global indexes;实现，但是要花很长时间在重建索引上。可以通过查询user_indexes、user_part_indexes和user_ind_partitions视图来查看索引是否有效。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4002,"question":"】MySQL和PostgreSQL的比较？mysql免费不支持函数索引，支持函数索引和高并发性能更好因为是多进程","simplecontent":null,"content":"《mysql免费不支持函数索引，支持函数索引和高并发性能更好因为是多进程》\nPostgreSQL没有单独的存储过程，都是通过函数实现的\n\nPostgreSQL完全免费，oracle不免费，mysql被oracle收购了以后可能要收费吧，\n\n与PostgreSQl配合的开源软件很多，有很多分布式集群软件，如pgpool、pgcluster、slony、plploxy等等，很容易做读写分离、负载均衡、数据水平拆分等方案，而这在MySQL下则比较困难。\n\n4. PostgreSQL在很多方面都比MySQL强，如复杂SQL的执行、存储过程、触发器、索引。同时PostgreSQL是多进程的，而MySQL是线 程的，虽然并发不高时，MySQL处理速度快，但当并发高的时候，对于现在多核的单台机器上，MySQL的总体处理性能不如PostgreSQL，原因是 MySQL的线程无法充分利用CPU的能力。\n\n函数方法很多吧，获取id顺序，列转行。\n\nmysql不支持函数索引，只能在创建基于具体列的索引。\n不支持物化视图。\n\tpg支持函数索引，同时还支持部分数据索引，通过规则系统可以实现物化视图的功能。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4003,"question":"】mysql的varchar(20)存储多少汉字？20个","simplecontent":null,"content":"20个","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4004,"question":"】MySQL的主键，唯一键的区别？主键是不能为null，唯一可以为null","simplecontent":null,"content":"《主键是不能为null，唯一可以为null》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4005,"question":"】数据库如何实现扩容？垂直、水平","simplecontent":null,"content":"《垂直、水平切分》\n1.垂直切分 不同业务模块的表存入到不同的数据库\n2.水平切分 一个表的数据按照一定分片规则存储在不同的数据库\"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4006,"question":"数据库读写分离?","simplecontent":null,"content":"主库写，多个从裤读，主库和从裤建立心跳，实现同步\njdbc流程\t建立驱动，建立连接，sql，设置statement参数，执行处理结果集","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4007,"question":"h】数据库中有多条重复的数据，怎么写一条sql语句删除？","simplecontent":null,"content":"1.临时表  2.group by查最小id select name,min(id) id from user group by name\n如果只是要查询不是重复的记录的知话\nselect distinct * from 表\n如果是将多余道的重复记录删除\n首先将不是重复的数据提取出来专，保存到一个临时表中\nselect distinct * into #temp from 表\n然后删除原来的表\ndelete from 表\n最后往里属面插入临时表的数据","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4008,"question":"quartz在规定的时间没处理完事物？怎么办？需要配置那些？","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4009,"question":"】oracle的分页关键词?ROWNUM","simplecontent":null,"content":"（ROWNUM ）\n\t\"前：SELECT * FROM  (  SELECT A.*, ROWNUM RN  FROM (\n后：) A  )  WHERE RN BETWEEN 21 AND 40  \"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4010,"question":"复合索引原理?","simplecontent":null,"content":"条件顺序按找索引的顺序，节约空间和时间，效率提高","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4011,"question":"什么是非关系型数据库?","simplecontent":null,"content":"没有一对多关系，是文档类或键值对的存储形式，建立索引很快","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4012,"question":"】Mysql查询一条数据代码?limit 1","simplecontent":null,"content":"《limit 1》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4013,"question":"】mysql文本的排序代码?order by type_order+0","simplecontent":null,"content":"《order by type_order+0》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4014,"question":"】Mysql 服务器默认端口是什么？3306","simplecontent":null,"content":"3306","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":4015,"question":"】索引和约束区别?索引是对查询where后面，约束是字段完整性","simplecontent":null,"content":"索引是对查询where后面，约束是字段完整性\n1.对1或多个字段 2.保持数据的完整性，非空，主键，外键","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:56","updateTime":"2021-05-26 01:07:56","isExist":null},{"id":3989,"question":"】聚簇和非聚簇索引区别?","simplecontent":null,"content":"《找到索引就找到数据》\n聚簇索引：将数据存储与索引放到了一块，找到索引也就找到了数据\n非聚簇索引：将数据存储于索引分开结构，索引结构的叶子节点指向了数据的对应行，\n由于聚簇索引是将数据跟索引结构放到一块，因此一个表仅有一个聚簇索引\n\n　不是所有类型的索引都可以成为覆盖索引。覆盖索引必须要存储索引的列，而哈希索引、空间索引和全文索引等都不存储索引列的值，所以MySQL只能使用B-Tree索引做覆盖索引\n聚簇索引默认是主键，如果表中没有定义主键，InnoDB 会选择一个唯一的非空索引代替。如果没有这样的索引，InnoDB 会隐式定义一个主键来作为聚簇索引。InnoDB 只聚集在同一个页面中的记录。包含相邻健值的页面可能相距甚远。如果你已经设置了主键为聚簇索引，必须先删除主键，然后添加我们想要的聚簇索引，最后恢复设置主键即可\n\n\n1.聚集索引。表数据按照索引的顺序来存储的，也就是说索引项的顺序与表中记录的物理顺序一致。对于聚集索引，叶子结点即存储了真实的数据行，不再有另外单独的数据页。 在一张表上最多只能创建一个聚集索引，因为真实数据的物理顺序只能有一种。\n2.非聚集索引。表数据存储顺序与索引顺序无关。对于非聚集索引，叶结点包含索引字段值及指向数据页数据行的逻辑指针，其行数量与数据表行数据量一致。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3990,"question":"h】什么叫做覆盖索引？","simplecontent":null,"content":"解释一： 就是select的数据列只用从索引中就能够取得，不必从数据表中读取，换句话说查询列要被所使用的索引覆盖。\n解释二： 索引是高效找到行的一个方法，当能通过检索索引就可以读取想要的数据，那就不需要再到数据表中读取行了。如果一个索引包含了（或覆盖了）满足查询语句中字段与条件的数据就叫 做覆盖索引。\n解释三：是非聚集组合索引的一种形式，它包括在查询里的Select、Join和Where子句用到的所有列（即建立索引的字段正好是覆盖查询语句[select子句]与查询条件[Where子句]中所涉及的字段，也即，索引包含了查询正在查找的所有数据）。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3991,"question":"】mysql有哪几种索引？普通索引、唯一索引、组合索引","simplecontent":null,"content":"《普通索引、唯一索引、组合索引、主键索引、全文索引》\n索引分单列索引和组合索引；\n普通索引：仅加速查询\n\n唯一索引：加速查询 + 列值唯一（可以有null）\n\n主键索引：加速查询 + 列值唯一（不可以有null）+ 表中只有一个\n\n组合索引：多列值组成一个索引，专门用于组合搜索，其效率大于索引合并\n\n全文索引：对文本的内容进行分词，进行搜索","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3992,"question":"Mysql为什么使用b+树？降低高度和查找次数","simplecontent":null,"content":"降低高度和查找次数，\nB+的搜索与B-树也基本相同，区别是B+树只有达到叶子结点才命中（B-树可以在非叶子结点命中），其性能也等价于在关键字全集做一次二分查找；\n1.所有关键字都出现在叶子结点的链表中（稠密索引），且链表中的关键字恰好是有序的；\n2.不可能在非叶子结点命中；\n3.非叶子结点相当于是叶子结点的索引（稀疏索引），叶子结点相当于是存储（关键字）数据的数据层；\n4.更适合文件索引系统；\n\n文件很大，不可能全部存储在内存中，故要存储到磁盘上\n索引的结构组织要尽量减少查找过程中磁盘I/O的存取次数（为什么使用B-/+Tree，还跟磁盘存取原理有关。）\n局部性原理与磁盘预读，预读的长度一般为页（page）的整倍数（在许多操作系统中，页得大小通常为4k）\n数据库系统巧妙利用了磁盘预读原理，将一个节点的大小设为等于一个页，这样每个节点只需要一次I/O就可以完全载入，(由于节点中有两个数组，所以地址连续)。而红黑树这种结构，h明显要深的多。由于逻辑上很近的节点（父子）物理上可能很远，无法利用局部性","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3993,"question":"B-树和B+树的区别?","simplecontent":null,"content":"（1）B+树查询时间复杂度固定是logn，B-树查询复杂度最好是 O(1)。\n（2）B+树相邻接点的指针可以大大增加区间访问性，可使用在范围查询等，而B-树每个节点 key 和 data 在一起，则无法区间查找。\n（3）B+树更适合外部存储，也就是磁盘存储。由于内节点无 data 域，每个节点能索引的范围更大更精确\n（4）注意这个区别相当重要，是基于（1）（2）（3）的，B-树每个节点即保存数据又保存索引，所以磁盘IO的次数很少，B+树只有叶子节点保存，磁盘IO多，但是区间访问比较好。\n补充：Tree based，有序，支持点查询和范围查询（Range Scan）；Hash based，无序，只支持点查询。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3994,"question":"PreparedStatement的使用?","simplecontent":null,"content":"String sql=\"update t_a set fok=1 where fid=?\";\n PreparedStatement\tps =conn.prepareStatement(sql);\n ps.setString(1,\"0001\");","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3995,"question":"Case when使用?","simplecontent":null,"content":"case  \n    when condition then result\n    when condition then result\n    when condition then result\nelse result\nEnd\n使用else不会再用then","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3996,"question":"】创建序列代码？","simplecontent":null,"content":"《sequence，最小值，最大值，开始值，每次增加值》\n　 create sequence SEQ_ALLACTIVESEARCHINFO\n 　 minvalue 1\n  　maxvalue 9999\n  　start with 15\n  　increment by 1\nnocache;","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3997,"question":"】查询序列？","simplecontent":null,"content":"《SEQ_ALLACTIVESEARCHINFO.nextval、from dual》\nselect SEQ_ALLACTIVESEARCHINFO.nextval from dual;","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:55","updateTime":"2021-05-26 01:07:55","isExist":null},{"id":3985,"question":"】Mysql默认的事务隔离级别?","simplecontent":null,"content":"是可重复读","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:54","updateTime":"2021-05-26 01:07:54","isExist":null},{"id":3986,"question":"在ORACLE大数据量下的分页解决方法?","simplecontent":null,"content":"一般用截取ID方法，还有是三层嵌套方法。 \n答:一种分页方法","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:54","updateTime":"2021-05-26 01:07:54","isExist":null},{"id":3987,"question":"聚簇索引的优点?","simplecontent":null,"content":"1.聚簇索引将索引和数据行保存在同一个B-Tree中，查询通过聚簇索引可以直接获取数据，相比非聚簇索引需要第二次查询（非覆盖索引的情况下）效率要高。\n2.聚簇索引对于范围查询的效率很高，因为其数据是按照大小排列的，","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:54","updateTime":"2021-05-26 01:07:54","isExist":null},{"id":3988,"question":"聚簇索引的缺点?","simplecontent":null,"content":"聚簇索引的更新代价比较高，如果更新了行的聚簇索引列，就需要将数据移动到相应的位置。这可能因为要插入的页已满而导致“页分裂”。\n插入速度严重依赖于插入顺序，按照主键进行插入的速度是加载数据到Innodb中的最快方式。如果不是按照主键插入，最好在加载完成后使用OPTIMIZE TABLE命令重新组织一下表。\n聚簇索引在插入新行和更新主键时，可能导致“页分裂”问题。\n聚簇索引可能导致全表扫描速度变慢，因为可能需要加载物理上相隔较远的页到内存中（需要耗时的磁盘寻道操作）。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:54","updateTime":"2021-05-26 01:07:54","isExist":null},{"id":3974,"question":"如何实现 MySQL 的读写分离？","simplecontent":null,"content":"其实很简单，就是基于主从复制架构，简单来说，就搞一个主库，挂多个从库，然后我们就单单只是写主库，然后主库会自动把数据给同步到从库上去。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3975,"question":"锁粒度?","simplecontent":null,"content":"一种提高共享资源并发性的方式就是让锁定对象更有选择性。尽量只锁定需要修改的部分数据，而不是所有的资源。任何时候，在给定的资源上，锁定的数据量越少，则系统的并发程度越高，只要相互之间不发生冲突即可。\n但是加锁也需要消耗资源。所的各种操作都会增加系统的开销。所谓的锁策略，就是在锁的开销和数据的安全性之间寻求平衡，这种平衡当然也会影响性能。\nMysql的每种存储引擎都可以实现自己的锁策略和锁粒度，且支持多个存储引擎，所以不需要单一的通用解决方案，一下是两种最重要的锁策略：\n表锁（table lock）\n表锁是MySQL中最基本的锁策略，且是开销最小的策略。一个用户对表有写操作时，它会锁定整张表，这会阻塞其他用户对该表的所有读写操作。\n尽管存储引擎可以管理自己的锁，MySQL本身还是会使用各种有效的表所来实现不同的目的。如服务器会为ALTER TABLE之类的语句使用表所而忽略存储引擎的锁机制。\n行锁（row lock）\n行级锁可以最大程度地支持并发处理。在InnoDB和XtraDB及一些其他存储引擎中实现了行级锁，行级锁只能在存储引擎层实现，MySQL服务层并没有实现。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3976,"question":"】SQL什么情况下不会使用索引？判空查询，不等于查询，函数，计算、模糊查询百分号不能在前面，复合索引没有符合最左原则","simplecontent":null,"content":"《判空查询，不等于查询，函数，计算、模糊查询百分号不能在前面，复合索引没有符合最左原则》\n1、建立组合索引，但查询谓词并未使用组合索引的第一列，此处有一个INDEX SKIP SCAN概念。\n2、在包含有null值的table列上建立索引，当时使用select count(*) from table时不会使用索引。\n3、在索引列上使用函数时不会使用索引，如果一定要使用索引只能建立函数索引。\n4、当被索引的列进行隐式的类型转换时不会使用索引。如:select * from t where indexed_column = 5，而indexed_column列建立索引但类型是字符型，这时Oracle会产生\n隐式的类型转换，转换后的语句类似于select * from t where to_number(indexed_column) = 5，此时不走索引的情况类似于case3。日期转换也有类似问题，如:\nselect * from t where trunc(date_col) = trunc(sysdate)其中date_col为索引列，这样写不会走索引，可改写成select * from t where date_col >= trunc(sysdate)\nand date_col < trunc(sysdate+1)，此查询会走索引。\n5、并不是所有情况使用索引都会加快查询速度，full scan table 有时会更快，尤其是当查询的数据量占整个表的比重较大时，因为full scan table采用的是多块读，\n当Oracle优化器没有选择使用索引时不要立即强制使用，要充分证明使用索引确实查询更快时再使用强制索引。\n6、<>\n7、like’%dd’百分号在前\n8、not in ,not exist.","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3977,"question":"】如何优化数据库性能?","simplecontent":null,"content":"《索引、分库分表、批量操作、分页算法、升级硬盘SSD、业务优化、主从部署》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3978,"question":"select * from table t where size > 10 group by size order by size的sql语句执行顺序？","simplecontent":null,"content":"FORM: 对FROM的左边的表和右边的表计算笛卡尔积。产生虚表VT1\n\n\nON: 对虚表VT1进行ON筛选，只有那些符合<join-condition>的行才会被记录在虚表VT2中。\n\n\nJOIN： 如果指定了OUTER JOIN（比如left join、 right join），那么保留表中未匹配的行就会作为外部行添加到虚拟表VT2中，产生虚拟表VT3, rug from子句中包含两个以上的表的话，那么就会对上一个join连接产生的结果VT3和下一个表重复执行步骤1~3这三个步骤，一直到处理完所有的表为止。\n\n\nWHERE： 对虚拟表VT3进行WHERE条件过滤。只有符合<where-condition>的记录才会被插入到虚拟表VT4中。\n\n\nGROUP BY: 根据group by子句中的列，对VT4中的记录进行分组操作，产生VT5.\n\n\nCUBE | ROLLUP: 对表VT5进行cube或者rollup操作，产生表VT6.\n\n\nHAVING： 对虚拟表VT6应用having过滤，只有符合<having-condition>的记录才会被 插入到虚拟表VT7中。\n\n\nSELECT： 执行select操作，选择指定的列，插入到虚拟表VT8中。\n\n\nDISTINCT： 对VT8中的记录进行去重。产生虚拟表VT9.\n\n\nORDER BY: 将虚拟表VT9中的记录按照<order_by_list>进行排序操作，产生虚拟表VT10.\n\n\nLIMIT：取出指定行的记录，产生虚拟表VT11, 并将结果返回。\n\n因此执行顺序将是 from table t > where size > 10 > group by size > order by size","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3979,"question":"可重复读隔离级别使用什么锁?","simplecontent":null,"content":"共享锁（Shared Locks）直到事务的结束（COMMIT或ROLLBAK）。然后当你尝试修改读取的数据（通过UPDATE语句），如果同样的事务多次并发运行，它会英气不同类型的死锁。\n\n循环死锁\n循环死锁是其中一个最常见的死锁——你就以不同顺序访问资源（例如不同表），最后每个查询等待另一个。使用可重复读隔离级别，但你用多个事务只读写一个表时，也是有可能引起循环死锁。\n从2个代码可以看到，2个数据范围被读取，最后被更新。如果2个事务在同个时间执行，会发生循环死锁，因为数据范围在不同顺序里被访问。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3980,"question":"为什么选读已提交(Read Commited)作为事务隔离级别！?","simplecontent":null,"content":"可重复读(Repeatable Read)，简称为RR；\n读已提交(Read Commited)，简称为RC；\n\n缘由一：在RR隔离级别下，存在间隙锁，导致出现死锁的几率比RC大的多！\n此时执行语句\nselect * from test where id <3 for update;\n在RR隔离级别下，存在间隙锁，可以锁住(2,5)这个间隙，防止其他事务插入数据！\n而在RC隔离级别下，不存在间隙锁，其他事务是可以插入数据！\nps:在RC隔离级别下并不是不会出现死锁，只是出现几率比RR低而已！\n缘由二：在RR隔离级别下，条件列未命中索引会锁表！而在RC隔离级别下，只锁行\n此时执行语句\nupdate test set color = 'blue' where color = 'red'; \n在RC隔离级别下，其先走聚簇索引，进行全部扫描","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3981,"question":"在已提交读级别下，不可重复读问题需要解决么？","simplecontent":null,"content":"不用解决，这个问题是可以接受的！毕竟你数据都已经提交了，读出来本身就没有太大问题！Oracle的默认隔离级别就是RC，你们改过Oracle的默认隔离级别么？\n在RC级别下，主从复制用什么binlog格式？\nOK,在该隔离级别下，用的binlog为row格式，是基于行的复制！Innodb的创始人也是建议binlog使用该格式！","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3982,"question":"项目中是不用读未提交(Read UnCommitted)和串行化(Serializable)两个隔离级别?","simplecontent":null,"content":"原因有二\n采用读未提交(Read UnCommitted),一个事务读到另一个事务未提交读数据，这个不用多说吧，从逻辑上都说不过去！\n采用串行化(Serializable)，每个次读操作都会加锁，快照读失效，一般是使用mysql自带分布式事务功能时才使用该隔离级别！","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3983,"question":"Oracle，SqlServer事务隔离级别?","simplecontent":null,"content":"中都是选择读已提交(Read Commited)作为默认的隔离级别","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3984,"question":"为什么Mysql不选择读已提交作为默认隔离级别，而选择可重复读作为默认的隔离级别呢？","simplecontent":null,"content":"那Mysql在5.0这个版本以前，binlog只支持STATEMENT这种格式！而这种格式在读已提交(Read Commited)这个隔离级别下主从复制是有bug的，因此Mysql将可重复读(Repeatable Read)作为默认的隔离级别！\\\n解决方案有两种！\n(1)隔离级别设为可重复读(Repeatable Read),在该隔离级别下引入间隙锁。当Session 1执行delete语句时，会锁住间隙。那么，Ssession 2执行插入语句就会阻塞住！\n(2)将binglog的格式修改为row格式，此时是基于行的复制，自然就不会出现sql执行顺序不一样的问题！奈何这个格式在mysql5.1版本开始才引入。因此由于历史原因，mysql将默认的隔离级别设为可重复读(Repeatable Read)，保证主从复制不出问题！","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:53","updateTime":"2021-05-26 01:07:53","isExist":null},{"id":3954,"question":"】订单“读写分离”和缓存往往都不合适，最适合的是什么呢？分库分表","simplecontent":null,"content":"数据库水平切分，也是一种常见的数据库架构，是一种通过算法，将数据库进行分割的架构。一个水平切分集群中的每个数据库，通常称为一个“分片”。每一个分片中的数据没有重合，所有分片中的数据并集组成全部数据。\n大部分的互联网业务，数据量都非常大，单库容量最容易成为瓶颈，当单库的容量成为了瓶颈，我们希望提高数据库的写性能，降低单库容量的话，就可以采用水平切分了。\n而有少部分程序员，会没有分析数据库的性能瓶颈是什么，就贸贸然的使用“读写分离”，殊不知“水平切分”才是正道。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3955,"question":"水平切分原理?","simplecontent":null,"content":"分片架构是大伙常说的水平切分(sharding)数据库架构。\n\nuser-db1：水平切分成2份中的第一份，user-db2：水平切分成2份中的第二份，分片后，多个数据库实例也会构成一个数据库集群。一旦分片，就涉及分片算法。常见的水平切分算法有“范围法”和“哈希法”\n\n范围法如上图：以用户中心的业务主键uid为划分依据，将数据水平切分到两个数据库实例上去。\n\n哈希法如上图 \nuser-db1：存储uid取模得1的uid数据，user-db2：存储uid取模得0的uid数","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3956,"question":"水平切分的查询问题?","simplecontent":null,"content":"例如，按照uid分为3个库，使用login_name=shenjian来查询，就不知道数据分布在哪个库上了。一种方法，是遍历所有库，当分库数量多起来，性能会显著降低。\n常见的解决方案，有这么四种方法：\n第一种方法，索引表法\n思路：uid能直接定位到库，login_name不能直接定位到库，如果通过login_name能查询到uid，问题解决。\n细致的步骤为：\n（1）建立一个索引表记录login_name->uid的映射关系；\n（2）用login_name来访问时，先通过索引表查询到uid，再定位相应的库；\n（3）索引表属性较少，只有两列，可以容纳非常多数据，一般不需要分库\n（4）如果数据量过大，可以通过login_name来分库；\n潜在的不足是：多一次数据库查询，性能会有所下降。\n\n第二种方法，缓存映射法\n\n思路：访问索引表性能较低，把映射关系放在缓存里性能更佳\n\n细致的步骤为：\n\n（1）login_name查询先到cache中查询uid，再根据uid定位数据库；\n\n（2）假设cache miss，采用扫全库法获取login_name对应的uid，放入cache；\n\n（3）login_name到uid的映射关系不会变化，映射关系一旦放入缓存，不会更改，无需淘汰，缓存命中率超高；\n\n（4）如果数据量过大，可以通过login_name进行cache水平切分；\n\n潜在的不足是：多了一次cache查询。\n\n第三种方法，login_name生成uid法\n\n思路：不进行额外查询，能由login_name直接生成uid么？\n\n细致的步骤为：\n\n（1）在用户注册时，设计函数login_name生成uid，uid=f(login_name)，按uid分库插入数据；\n\n（2）用login_name来访问时，先通过函数计算出uid，即uid=f(login_name)再来一遍，由uid路由到对应库；\n\n潜在的不足是：该函数设计需要非常讲究技巧，有uid生成冲突风险\n\n第四种方法，基因法（这个方法网上没有，在“架构是之路”公众号里有说明过） \n思路：不用login_name生成uid，可以从login_name抽取“基因”，融入uid中。 \n方法图示如下（这个图很重要）：\n\nIMG_256\n\n假设分8库，采用uid%8路由。潜台词是，uid的最后3个bit决定这条数据落在哪个库上，这3个bit就是所谓的“基因”。\n\n细致的步骤为：\n\n（1）在用户注册时，设计函数login_name生成3bit基因，login_name_gene=f(login_name)，如上图粉色部分；画外音，一定要步骤和图对着看\n\n（2）同时，生成61bit的全局唯一id，作为用户的标识，如上图绿色部分；\n\n（3）接着把3bit的login_name_gene也作为uid的一部分，如上图屎黄色部分；\n\n（4）生成64bit的uid，由id和login_name_gene拼装而成，并按照uid分库插入数据；\n\n（5）用login_name来访问时，先通过函数由login_name再次复原3bit基因，login_name_gene=f(login_name)，通过login_name_gene%8直接定位到库。如此这般，uid可以直接定位到库，login_name可以生成基因，也可以定位到库。\n\n好，用户中心是第一个场景。\nhttps://blog.csdn.net/qq_38331606/article/details/79551355","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3957,"question":"MySQL数据库主从同步延迟原理?","simplecontent":null,"content":"《》\n答：谈到MySQL数据库主从同步延迟原理，得从mysql的数据库主从复制原理说起，mysql的主从复制都是单线程的操作，主库对所有DDL和 DML产生binlog，binlog是顺序写，所以效率很高，slave的Slave_IO_Running线程到主库取日志，效率很比较高，下一步， 问题来了，slave的Slave_SQL_Running线程将主库的DDL和DML操作在slave实施。DML和DDL的IO操作是随即的，不是顺 序的，成本高很多，还可能可slave上的其他查询产生lock争用，由于Slave_SQL_Running也是单线程的，所以一个DDL卡主了，需要 执行10分钟，那么所有之后的DDL会等待这个DDL执行完才会继续执行，这就导致了延时。有朋友会问：“主库上那个相同的DDL也需要执行10分，为什 么slave会延时？”，答案是master可以并发，Slave_SQL_Running线程却不可以。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3958,"question":"MySQL数据库主从同步延迟是怎么产生的。?","simplecontent":null,"content":"答：当主库的TPS并发较高时，产生的DDL数量超过slave一个sql线程所能承受的范围，那么延时就产生了，当然还有就是可能与slave的大型query语句产生了锁等待。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3959,"question":"MySQL数据库主从同步延迟解决方案?","simplecontent":null,"content":"答：最简单的减少slave同步延时的方案就是在架构上做优化，尽量让主库的DDL快速执行。还有就是主库是写，对数据安全性较高，比如 sync_binlog=1，innodb_flush_log_at_trx_commit = 1 之类的设置，而slave则不需要这么高的数据安全，完全可以讲sync_binlog设置为0或者关闭binlog，innodb_flushlog也 可以设置为0来提高sql的执行效率。另外就是使用比主库更好的硬件设备作为slave。\nhttps://www.cnblogs.com/kevingrace/p/6274073.html\n具体的重试策略为：\n  备库过了slave-net-timeout秒还没有收到主库来的数据，它就会开始第一次重试。然后每过 master-connect-retry 秒，备库会再次尝试重连主库。直到重试了 master-retry-count 次，它才会放弃重试。如果重   试的过程中，连上了主库，那么它认为当前主库是好的，又会开始 slave-net-timeout 秒的等待。\n  slave-net-timeout 的默认值是3600 秒， master-connect-retry默认为60秒， master-retry-count默认为86400次。\n  也就是说，如果主库一个小时都没有任何数据变更发送过来，备库才会尝试重连主库。\n  这就是为什么我遇到场景下，一个小时后，备库才会重连主库，继续同步数据变更的原因。\n  这样的话，如果你的主库上变更比较频繁，可以考虑将slave-net-timeout设置的小一点，避免主库 Binlog dump 线程 终止了，无法将最新的更新推送过来。\n  当然 slave-net-timeout 设置的过小也有问题，这样会导致如果主库的变更确实比较少的时候，备库频繁的重新连接主库，造成资源浪费。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3960,"question":"mysql 主从同步 多长时间同步一次?","simplecontent":null,"content":"默认一分钟同步一次\n\n至于slave_net_timeout这个参数究竟设置多少，要根据自己的mysql主库数据更新的频繁程度：主库数据更新频繁的，就将这个参数值设小点，更新不频繁就设大点。\n一般这个参数设置5s、10s、15s、20s、30s等等","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3961,"question":"高并发是否合适使用mysql主从同步?","simplecontent":null,"content":"以前线上确实处理过因为主从同步延时问题而导致的线上的 bug，属于小型的生产事故。\n是这个么场景。有个同学是这样写代码逻辑的。先插入一条数据，再把它查出来，然后更新这条数据。在生产环境高峰期，写并发达到了 2000/s，这个时候，主从复制延时大概是在小几十毫秒。线上会发现，每天总有那么一些数据，我们期望更新一些重要的数据状态，但在高峰期时候却没更新。用户跟客服反馈，而客服就会反馈给我们。\n我们通过 MySQL 命令：\nshow status\n查看 Seconds_Behind_Master，可以看到从库复制主库的数据落后了几 ms。\n一般来说，如果主从延迟较为严重，有以下解决方案：\n分库，将一个主库拆分为多个主库，每个主库的写并发就减少了几倍，此时主从延迟可以忽略不计。\n打开 MySQL 支持的并行复制，多个库并行复制。如果说某个库的写入并发就是特别高，单库写并发达到了 2000/s，并行复制还是没意义。\n重写代码，写代码的同学，要慎重，插入数据时立马查询可能查不到。\n如果确实是存在必须先插入，立马要求就查询到，然后立马就要反过来执行一些操作，对这个查询设置直连主库。不推荐这种方法，你要是这么搞，读写分离的意义就丧失了。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3962,"question":"mysql主从同步延迟怎么解决?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3963,"question":"com.mysql.cj.jdbc.Driver和com.mysql.jdbc.Driver的区别?","simplecontent":null,"content":"com.mysql.jdbc.Driver和mysql-connector-java 5一起用。\ncom.mysql.cj.jdbc.Driver和mysql-connector-java 6 一起用。\nJDBC连接Mysql6 com.mysql.cj.jdbc.Driver， 需要指定时区serverTimezone:","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3964,"question":"复制解决的问题?","simplecontent":null,"content":"         MySQL复制技术有以下一些特点：\n         (1)    数据分布 (Data distribution )\n         (2)    负载平衡(load balancing)\n         (3)    备份(Backups) \n         (4)    高可用性和容错行 High availability and failover ","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3965,"question":"复制如何工作 ?","simplecontent":null,"content":"        整体上来说，复制有3个步骤：   \n       (1)    master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；\n       (2)    slave将master的binary log events拷贝到它的中继日志(relay log)；\n        (3)    slave重做中继日志中的事件，将改变反映它自己的数据。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3966,"question":"如果断开通信怎么办?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3967,"question":"如何确保 slave与master数据一致?","simplecontent":null,"content":"slave库写redo、binlog不实时丢数据的场景\n    master正常，但是slave出现异常的情况下宕机，这个时候会出现什么样的情况呢？如果数据丢失，slave的SQL线程还会重新应用吗？这个我们需要先了解SQL线程的机制。\n    slave读取master的binlog日志后，需要落地3个文件：relay log、relay log info、master info：\n        relay log：即读取过来的master的binlog，内容与格式与master的binlog一致\n        relay log info：记录SQL Thread应用的relay log的位置、文件号等信息\n        master info：记录IO Thread读取master的binlog的位置、文件号、延迟等信息\n    因此如果当这3个文件如果不及时落地，则主机crash后会导致数据的不一致。\n在MySQL 5.6.2之前，slave记录的master信息以及slave应用binlog的信息存放在文件中，即master.info与relay-log.info。在5.6.2版本之后，允许记录到table中，参数设置如下：\n对应的表分别为mysql.slave_master_info与mysql.slave_relay_log_info，且这两个表均为innodb引擎表。\nmaster info与relay info还有3个参数控制刷新：\n\nsync_relay_log：默认为10000，即每10000次sync_relay_log事件会刷新到磁盘。为0则表示不刷新，交由OS的cache控制。\n\n\nsync_master_info:若master-info-repository为FILE，当设置为0，则每次sync_master_info事件都会刷新到磁盘，默认为10000次刷新到磁盘；若master-info-repository为TABLE，当设置为0，则表不做任何更新，设置为1，则每次事件会更新表 #默认为10000\n\n\nsync_relay_log_info：若relay_log_info_repository为FILE，当设置为0，交由OS刷新磁盘，默认为10000次刷新到磁盘；若relay_log_info_repository为TABLE，且为INNODB存储，则无论为任何值，则都每次evnet都会更新表。\n\nhttp://www.mamicode.com/info-detail-2005295.html","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3968,"question":"读写分离的实现方式?","simplecontent":null,"content":"　　为了实现读写分离，出现了很多解决方案，其中比较流行的是采用中间件做为Proxy，保持应用层代码不随数据库的变动而发生变化，这里包括Amoeba、Atlas、Cobar、Mycat、MySQL Proxy等，而Mycat是目前开源的数据库中间件中比较成熟的解决方案。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3969,"question":"mysql主从复制过程?","simplecontent":null,"content":"1.主机：找到主数据库的配置文件my.cnf(\n开启二进制日志 binlog\n配置唯一的server-id\n获得master二进制文件名及位置\n创建一个用于slave和master通信的用户账号\n\n[mysqld]\n#开启二进制日志\nlog-bin=mysql-bin \n#设置server-id，建议使用ip最后3位\nserver-id=140\n\n2.从机：找到从数据库的配置文件my.cnf(或者my.ini)\n配置唯一的server-id\n使用master分配的用户账号读取master二进制日志\n启动slave服务\n\n#开启中继日志\nrelay-log=mysql-relay\n#设置server-id，建议使用ip最后3位\nserver-id=141\n\n\n\n3.重启服务systemctl restart mysqld.service\n\n4.主机授权给从机\nGRANT REPLICATION SLAVE ON *.* TO 'mysql141'@'192.168.131.141' IDENTIFIED BY 'mysql141';\n\nflush privileges;\n\n--查询master的状态\nshow master status\\G\n\n\n5.告知从服务器二进制文件名与位置\n\nCHANGE MASTER TO master_host = '192.168.131.140',\n master_user = 'mysql141',\n master_password = 'mysql141',\n master_log_file = 'mysql-bin.000001',\n master_log_pos = 120;\n\n6.//开启复制\nstart slave;\n\n//查看主从复制是否配置成功\nSHOW SLAVE STATUS\\G","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3970,"question":"复制的基本原则?","simplecontent":null,"content":"每个Slave只有一个Master\n每个Slave只能有一个唯一的服务ID\n每个Master可以有多个Slave","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3971,"question":"主从复制的过程?","simplecontent":null,"content":"（1）在Slave服务器上执行start slave命令开启主从复制开关，开始进行主从复制。 \n（2）此时，Slave服务器的IO线程会通过在master上已经授权的复制用户权限请求连接Master服务器，并请求从执行binlog日志文件中的指定位置（日志文件名和位置就是在配置主从复制服务时执行change master命令指定的）之后开始发送binlog日志内容。 \n（3）Master服务器接收来自Slave服务器的IO线程的请求后，其上负责复制的IO线程会根据Slave服务器的IO线程请求的信息分批读取指定binlog日志文件指定位置之后的binlog日志信息，然后返回给Slave端的IO线程。返回的信息中除了binlog日志内容外，还有在Master服务器端记录的IO线程。返回的信息中除了binlog中的下一个指定更新位置。 \n（4）当Slave服务器的IO线程获取到Master服务器上IO线程发送的日志内容、日志文件及位置点后，会将binlog日志内容依次写到Slave端自身的Relay Log（即中继日志）文件（Mysql-relay-bin.xxx）的最末端，并将新的binlog文件名和位置记录到master-info文件中，以便下一次读取master端新binlog日志时能告诉Master服务器从新binlog日志的指定文件及位置开始读取新的binlog日志内容 \n（5）Slave服务器端的SQL线程会实时检测本地Relay Log 中IO线程新增的日志内容，然后及时把Relay LOG 文件中的内容解析成sql语句，并在自身Slave服务器上按解析SQL语句的位置顺序执行应用这样sql语句，并在relay-log.info中记录当前应用中继日志的文件名和位置点","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3972,"question":"主从复制的原理是什么？","simplecontent":null,"content":"　　MySQL的主从复制是一个异步的复制过程（虽然一般情况下感觉是实时的），数据将从一个MySQL数据库（Master）复制到另一个MySQL数据库（Slave），在Master和Slave之间实现整个主从复制的过程是由三个线程参与完成的。其中两个线程（SQL线程和IO线程）在Slave端，另一个线程（I/O线程）在Master端。 \n　　要实现MySQL的主从复制，首先必须打开Master端的binlog记录功能，否则就无法实现。binlog: binary log，是主库中保存所有更新事件日志的二进制文件。因为整个复制过程实际上就是Slave从Master端获取binlog日志，然后在Slave上以相同顺序执行获取的binlog日志中的记录的各种SQL操作。 \n————————————————\n版权声明：本文为CSDN博主「王洪玉」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/why15732625998/article/details/80463041","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3973,"question":"为什么要做主从复制？","simplecontent":null,"content":"读写分离。在业务复杂的系统中，有这么一个情景，有一句sql语句需要锁表，导致暂时不能使用读的服务，那么就很影响运行中的业务，使用主从复制，让主库负责写，从库负责读，这样，即使主库出现了锁表的情景，通过读从库也可以保证业务的正常运作。\n做数据的热备\n架构的扩展。业务量越来越大，I/O访问频率过高，单机无法满足，此时做多库的存储，降低磁盘I/O访问的频率，提高单个机器的I/O性能。\n\n　　绝大多数的企业的应用场景对于数据库来说都是读多写少，比如微博，明星发一条微博，上千万人读。所以为了分担数据库压力，做负载均衡，首先考虑到的就是读写分离，读写分离基于上面实现的主从复制，使用主库作为写库，从库为读库，提高数据库性能，提高IO性能。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:52","updateTime":"2021-05-26 01:07:52","isExist":null},{"id":3938,"question":"行读锁升级为表锁?","simplecontent":null,"content":"session1（Navicat）、session2（mysql）\n1、session1: begin;--开启事务未提交\n      --手动加name='c'的行读锁,未使用索引\n   select * from mylock  where name='c' lock in share mode;\n2、session2：update mylock set name='y' where id=2; -- 修改阻塞 未用索引行锁升级为表锁\n3、session1: commit; --提交事务 或者 rollback 释放读锁\n4、session2：update mylock set name='y' where id=2; --修改成功\n注：未使用索引行锁升级为表锁\n\n第一个用户：\nbegin;--开启事务未提交\nselect * from aaa where name='1' LOCK IN SHARE MODE;//可以\nselect * from pl;//可以 不阻塞\nupdate aaa set name='2' where id='1';//可以\nupdate pl set keyword='2' where id='10001';//可以 不阻塞\ncommit; -- 提交事务 或者 rollback 释放写锁\n\n第二个用户：\nselect * from aaa where id='1';//可以\nselect * from aaa where id='2' ;//可以\nselect * from pl;//可以 不阻塞\nupdate aaa set name='2' where name='2';//不可以\nupdate aaa set name='1' where name='1';//不可以\nupdate aaa set name='2' where id='2';//不可以\nupdate pl set keyword='2' where id='10001';//可以 不阻塞","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3939,"question":"间隙锁?","simplecontent":null,"content":"select id,name from t_student where id > 0 and id < 5 for update;\n这时候，我们命中的数据为以下着色部分：\nid\tname\tsex\taddress\n1\tzhaoyi\t0\tbeijin\n3\tsunsan\t1\tshanghai\n4\tlisi\t0\tguangzhou\n5\tzhouwu\t0\tshenzhen\n6\twuliu\t1\thangzhou\n\nselect ... for update这条语句，是会对数据记录加锁的，这里因为命中了索引，加的是行锁。从数据记录来看，这里排它锁锁住数据是id为1、3和4的这3条数据。\n但是，看看前面我们的介绍——对于键值在条件范围内但不存在的记录，叫做“间隙(GAP)”，InnoDB也会对这个“间隙”加锁。\n好了，我们这里，键值在条件范围但是不存在的记录，就是id为2的记录，这里会对id为2数据加上间隙锁。假设这时候如果有id=2的记录insert进来了，是要等到这个事务结束以后才会执行的\n\n间隙锁作用\n1.防止幻读\n假设有下面场景\n时间\t事务A\t事务B\nT1\tselect count(1) from t_student where id > 1;\t　\nT2\t　\tinsert into t_student values(2,'qianer',1,'nanjing');\nT3\t　\tcommit;\nT4\tselect count(1) from t_student where id > 1;\t　\nT5\tcommit;\t　\n如果没有间隙锁，事务A在T1和T4读到的结果是不一样的，有了间隙锁，读的就是一样的了\n2.防止数据误删/改\n这个作用比较重要，假设以下场景：\n时间\t事务A\t事务B\nT1\tdelete from t_student where id < 4;\t　\nT2\t　\tinsert into t_student values(2,'qianer',1,'nanjing');\nT3\t　\tcommit;\nT4\tcommit;\t　\n这种情况下，如果没有间隙锁，会出现的问题是：id为2的记录，刚加进去，就被删除了，这种情况有时候对业务，是致命性的打击。加了间隙锁之后，由于insert语句要等待事务A执行完之后释放锁，避免了这种情况\n间隙锁缺点\n这种情况，对插入的性能就有很大影响了，必须等到事务结束才能进行插入，性能大打折扣\n更有甚者，如果间隙锁出现死锁的情况下，会更隐晦，更难定位","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3940,"question":"】读锁和写锁区别？共享锁和排它锁，区别在于对读还是对写加锁，别人可加共享锁和不能加任何锁","simplecontent":null,"content":"读锁后别人可以再次设置共享锁，而写锁别人不可以设置共享锁，不可改，但是都可以读\n\n共享锁（s）：又称读锁。允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。若事务T对数据对象A加上S锁，则事务T可以读A但不能修改A，其他事务只能再对A加S锁，而不能加X锁，直到T释放A上的S锁。这保证了其他事务可以读A，但在T释放A上的S锁之前不能对A做任何修改。\n排他锁（Ｘ）：又称写锁。允许获取排他锁的事务更新数据，阻止其他事务取得相同的数据集共享读锁和排他写锁。若事务T对数据对象A加上X锁，事务T可以读A也可以修改A，其他事务不能再对A加任何锁，直到T释放A上的锁。\n\n对于共享锁大家可能很好理解，就是多个事务只能读数据不能改数据。 \n对于排他锁大家的理解可能就有些差别，我当初就犯了一个错误，以为排他锁锁住一行数据后，其他事务就不能读取和修改该行数据，其实不是这样的。排他锁指的是一个事务在一行数据加上排他锁后，其他事务不能再在其上加其他的锁。mysql InnoDB引擎默认的修改数据语句：update,delete,insert都会自动给涉及到的数据加上排他锁，select语句默认不会加任何锁类型，如果加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。所以加过排他锁的数据行在其他事务种是不能修改数据的，也不能通过for update和lock in share mode锁的方式查询数据，但可以直接通过select …from…查询数据，因为普通查询没有任何锁机制。\n\n按照锁定范围来说，分为三种：\n记录锁（Record Locks）:锁定索引中一条记录。 例如主键或唯一索引等值条件指定 where id=3\n间隙锁（Gap Locks）: 锁定索引记录之间的间隙，或者是某一条记录之前和之后加锁，该机制主要为了解决幻读问题。\nNext-Key 锁: 记录锁+间隙锁，RR隔离级下默认使用Next-Key锁，锁定当前记录也锁定记录间隙\n\n按照功能来说，分为两种：\n共享读锁（S）\n允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。\n//共享读锁 手动添加\nSELECT * FROM table_name WHERE … LOCK IN SHARE MODE\nSELECT * FROM table_name – MVCC下无锁\n\n排他写锁：获得排他写锁的事务更新数据，阻止其他事务取得相同数据集的共享读锁和排他写锁。\n自动加：对于UPDATE、DELETE和INSERT语句，InnoDB会自动给涉及数据集加排他锁（X)；\n手动加：SELECT * FROM table_name WHERE … FOR UPDATE","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3941,"question":"行锁和表锁区别?","simplecontent":null,"content":"他们的共享锁区别：表锁不能改自己表，而行锁可以改\n他们的排斥锁区别：别人（表锁不能访问，而行锁可以访问，但是都不能改）\n\n表级锁： 每次操作锁住整张表。开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最高，并发度最低；\n行级锁： 每次操作锁住一行数据。开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低，并发度也最高；","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3942,"question":"行锁和表锁使用场景?","simplecontent":null,"content":"三种锁各有各的特点，若仅从锁的角度来说，表级锁更适合于以查询为主，只有少量按索引条件更新数据的应用，如WEB应用；行级锁更适合于有大量按索引条件并发更新少量不同数据，同时又有并发查询的应用，如一些在线事务处理（OLTP）系统。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3943,"question":"排它锁和共享锁区别?","simplecontent":null,"content":"注意区别\n\n共享锁就是指多个事务只能读数据而不能修改数据。（即只读不能改）\n排他锁是指一个事务在一行数据加上锁后，其它事务不能再对其加锁。mysql的默认存储引擎InnoDB默认的修改语句（如update、insert、delete）会自动给涉及到的数据加上排他锁，而select查询语句不会加锁，故普通查询语句其他事务也是可以查询到数据的，同时获取到排他锁的事务既能读数据，又能写数据。\n如果加排他锁可以使用select …for update语句，加共享锁可以使用select … lock in share mode语句。\n1）共享锁：允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。\n    ( Select * from table_name where ......lock in share mode)\n2）排他锁：允许获得排他锁的事务更新数据，阻止其他事务取得相同数据集的共享读锁和  排他写锁。(select * from table_name where.....for update)\n    为了允许行锁和表锁共存，实现多粒度锁机制；同时还有两种内部使用的意向锁（都是表锁），分别为意向共享锁和意向排他锁。\n    InnoDB行锁是通过给索引项加锁来实现的，即只有通过索引条件检索数据，InnoDB才使用行级锁，否则将使用表锁！","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3944,"question":"判断是表锁还是行锁?","simplecontent":null,"content":"举个例子: 假设有个表单products ，里面有id跟name二个栏位，id是主键。\n例1: (明确指定主键，并且有此笔资料，row lock)\nSELECT * FROM products WHERE id='3' FOR UPDATE;\nSELECT * FROM products WHERE id='3' and type=1 FOR UPDATE;\n例2: (明确指定主键，若查无此笔资料，无lock)\nSELECT * FROM products WHERE id='-1' FOR UPDATE;\n例3: (无主键，table lock)\nSELECT * FROM products WHERE name='Mouse' FOR UPDATE;\n例4: (主键不明确，table lock)\nSELECT * FROM products WHERE id<>'3' FOR UPDATE;\n例5: (主键不明确，table lock)\nSELECT * FROM products WHERE id LIKE '3' FOR UPDATE;\n 另外：MyAsim 只支持表级锁，InnerDB支持行级锁\n添加了(行级锁/表级锁)锁的数据不能被其它事务再锁定，也不被其它事务修改（修改、删除）\n是表级锁时，不管是否查询到记录，都会锁定表\n此外，如果A与B都对表id进行查询但查询不到记录，则A与B在查询上不会进行row锁，但A与B都会获取排它锁，此时A再插入一条记录的话则会因为B已经有锁而处于等待中，此时B再插入一条同样的数据则会抛出Deadlock found when trying to get lock; try restarting transaction然后释放锁，此时A就获得了锁而插入成功","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3945,"question":"Innodb使用什么锁?","simplecontent":null,"content":"在不通过索引条件查询的时候，InnoDB 确实使用的是表锁，而不是行锁。\n由于 MySQL 的行锁是针对索引加的锁，不是针对记录加的锁，因此虽然是访问不同行的记录，但是如果是使用相同的索引键，是会出现锁冲突的。应用设计的时候要注意这一点。\n当表有多个索引的时候，不同的事务可以使用不同的索引锁定不同的行，另外，不论是使用主键索引、唯一索引还是普通索引，InnoDB 都会使用行锁来对数据加锁。\n即便在条件中使用了索引字段，但是否使用索引来检索数据是由 MySQL 通过判断不同的执行计划的代价来决定的。如果 MySQL 认为全表扫描效率更高，比如对一些很小的表，它就不会使用索引，这种情况下 InnoDB 将使用表锁，而不是行锁。因此，在分析锁冲突时，别忘了检查 SQL 的执行计划，以确认是否真正使用了索引","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3946,"question":"页级锁?","simplecontent":null,"content":"页级锁是 MySQL 中锁定粒度介于行级锁和表级锁中间的一种锁。表级锁速度快，但冲突多，行级冲突少，但速度慢。因此，采取了折衷的页级锁，一次锁定相邻的一组记录。BDB 支持页级锁。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3947,"question":"MySQL 常用存储引擎的锁机制?","simplecontent":null,"content":"MyISAM 和 Memory 采用表级锁（table-level locking）\nBDB 采用页级锁（page-level locking）或表级锁，默认为页级锁；\nInnoDB 支持行级锁（row-level locking）和表级锁，默认为行级锁。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3948,"question":"意向锁到底是什么?","simplecontent":null,"content":"解决表锁与之前可能存在的行锁冲突，避免为了判断表是否存在行锁而去扫描全表的系统消耗。行锁在加锁前要先加意向锁。意向锁是一种表锁。\n\n例子分析\n\n事务 A 锁住了表中的一行，让这一行只能读，不能写。\n\n之后，事务 B 申请整个表的写锁。\n\n如果事务 B 申请成功，那么理论上它就能修改表中的任意一行，这与 A 持有的行锁是冲突的。\n\n数据库需要避免这种冲突，就是说要让 B 的申请被阻塞，直到 A 释放了行锁。\n\n数据库要怎么判断这个冲突呢？\n\nstep1：判断表是否已被其他事务用表锁锁表\nstep2：判断表中的每一行是否已被行锁锁住。\n\n注意step2，这样的判断方法效率实在不高，因为需要遍历整个表。\n于是就有了意向锁。\n\n在意向锁存在的情况下，事务 A 必须先申请表的意向共享锁，成功后再申请一行的行锁。\n\n在意向锁存在的情况下，上面的判断可以改成\n\nstep1：不变\nstep2：发现表上有意向共享锁，说明表中有些行被共享行锁锁住了，因此，事务 B 申请表的写锁会被阻塞。\n————————————————\n版权声明：本文为CSDN博主「延迟满足」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/a1102325298/article/details/86586629","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3949,"question":"元数据锁代码?","simplecontent":null,"content":"session1: begin;–开启事务\nselect * from mylock;–加MDL读锁\n2、session2: alter table mylock add f int; – 修改阻塞\n3、session1：commit; --提交事务 或者 rollback 释放读锁\n4、session2：Query OK, 0 rows affected (38.67 sec) --修改完成","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3950,"question":"行锁优缺点?","simplecontent":null,"content":"行锁的劣势：开销大；加锁慢；会出现死锁\n行锁的优势：锁的粒度小，发生锁冲突的概率低；处理并发的能力强\n加锁的方式：自动加锁。对于UPDATE、DELETE和INSERT语句，InnoDB会自动给涉及数据集加排他锁；对于普通SELECT语句，InnoDB不会加任何锁；当然我们也可以显示的加锁：\n共享锁：select * from tableName where ... + lock in share more\n排他锁：select * from tableName where ... + for update\nInnoDB和MyISAM的最大不同点有两个：一，InnoDB支持事务(transaction)；二，默认采用行级锁。加锁可以保证事务的一致性，可谓是有人(锁)的地方，就有江湖(事务)；我们先简单了解一下事务知识。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3951,"question":"】如何尽量避免死锁的产生?","simplecontent":null,"content":"《各个功能更新数据按照顺序》\n.根本的原因是程序逻辑的顺序，最常见的是交差更新\n.Transaction 1: 更新表A -> 更新表B\nTransaction 2: 更新表B -> 更新表A\n这类问题要从程序上避免，所有的更新需要按照一定的顺序","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3952,"question":"MySQL集群和主从复制分别适合在什么场景下使用?","simplecontent":null,"content":"集群和主从复制是为了应对高并发、大访问量的情况。如果网站访问量和并发量太大了，少量的数据库服务器是处理不过来的，会造成网站访问慢。数据写入会造成数据表或记录被锁住，锁住的意思就是其他访问线程暂时不能读写要等写入完成才能继续，这样会影响其他用户读取速度。采用主从复制可以让一些服务器专门读，一些专门写可以解决这个问题。\n\nmysql主从复制的常见使用场景，当我们的读写流量过大的情况下，尤其是读流量过大的情况下，mysql主从读写分离就很有必要了。\n我们使用主库写入，读取从库来分离读写流量，而这时候读流量不断增加，那我们只需要扩展从库就可以了。\n数据量大的情况下使用的技术不是读写分离，是分表和分库，或者使用分布式存储引擎，读写分离不能解决数据量大的问题。\n6、系统写入操作并发量大不适合使用读写分离，至于需要什么技术看你的具体业务需求，而且大量写入操作本身就是个难以处理的大数据问题，但是读写分离从一定程度上减轻写入操作的负担。\n\n大多数互联网业务，往往读多写少，这时候，数据库的读会首先称为数据库的瓶颈，这时，如果我们希望能够线性的提升数据库的读性能，消除读写锁冲突从而提升数据库的写性能，那么就可以使用“分组架构”（读写分离架构）。\n用一句话概括，读写分离是用来解决数据库的读性能瓶颈的。\n\n写特别多适合使用分库分表","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3953,"question":"】读写分离和缓存哪个好？读写分离减少读的压力，缓存成本低","simplecontent":null,"content":"缓存，也是互联网中常常使用到的一种架构方式，同“读写分离”不同，读写分离是通过多个读库，分摊了数据库读的压力，而存储则是通过缓存的使用，减少了数据库读的压力。他们没有谁替代谁的说法，但是，如果在缓存的读写分离进行二选一时，还是应该首先考虑缓存。\n缓存的使用成本要比从库少非常多；缓存的开发比较容易，大部分的读操作都可以先去缓存，找不到的再渗透到数据库。当然，如果我们已经运用了缓存，但是读依旧还是瓶颈时，就可以选择“读写分离”架构了。简单来说，我们可以将读写分离看做是缓存都解决不了时的一种解决方案。\n当然，缓存也不是没有缺点的\n对于缓存，我们必须要考虑的就是高可用，不然，如果缓存一旦挂了，所有的流量都同时聚集到了数据库上，那么数据库是肯定会挂掉的。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:51","updateTime":"2021-05-26 01:07:51","isExist":null},{"id":3921,"question":"】什么是覆盖索引？一个索引包含所有需要查询的字段的值","simplecontent":null,"content":"《一个索引包含所有需要查询的字段的值》\n如果一个索引包含(或覆盖)所有需要查询的字段的值，称为‘覆盖索引’。即只需扫描索引而无须回表。\n只扫描索引而无需回表的优点：\n    1.索引条目通常远小于数据行大小，只需要读取索引，则mysql会极大地减少数据访问量。\n    2.因为索引是按照列值顺序存储的，所以对于IO密集的范围查找会比随机从磁盘读取每一行数据的IO少很多。\n    3.一些存储引擎如myisam在内存中只缓存索引，数据则依赖于操作系统来缓存，因此要访问数据需要一次系统调用\n    4.innodb的聚簇索引，覆盖索引对innodb表特别有用。(innodb的二级索引在叶子节点中保存了行的主键值，所以如果二级主键能够覆盖查询，则可以避免对主键索引的二次查询)\n\n覆盖索引必须要存储索引列的值，而哈希索引、空间索引和全文索引不存储索引列的值，所以mysql只能用B-tree索引做覆盖索引。\n————————————————\n版权声明：本文为CSDN博主「jh993627471」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/jh993627471/article/details/79421363","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3922,"question":"项目如何使用分库分表?","simplecontent":null,"content":"主要使用垂直切分为主，不是以水平切分为主\n发票表，订单表，物流表（物流公司 物流号 ；订单信息  状态；详细物流信息）","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3923,"question":"】分库分表类型?垂直分表、水平拆分","simplecontent":null,"content":"《垂直分表、水平拆分》\n垂直拆分\n\n垂直分表\n\n也就是“大表拆小表”，基于列字段进行的。一般是表中的字段较多，将不常用的， 数据较大，长度较长（比如text类型字段）的拆分到“扩展表“。一般是针对那种几百列的大表，也避免查询时，数据量太大造成的“跨页”问题。\n\n垂直分库\n\n垂直分库针对的是一个系统中的不同业务进行拆分，比如用户User一个库，商品Producet一个库，订单Order一个库。 切分后，要放在多个服务器上，而不是一个服务器上。为什么？ 我们想象一下，一个购物网站对外提供服务，会有用户，商品，订单等的CRUD。没拆分之前， 全部都是落到单一的库上的，这会让数据库的单库处理能力成为瓶颈。按垂直分库后，如果还是放在一个数据库服务器上， 随着用户量增大，这会让单个数据库的处理能力成为瓶颈，还有单个服务器的磁盘空间，内存，tps等非常吃紧。 所以我们要拆分到多个服务器上，这样上面的问题都解决了，以后也不会面对单机资源问题。\n\n数据库业务层面的拆分，和服务的“治理”，“降级”机制类似，也能对不同业务的数据分别的进行管理，维护，监控，扩展等。 数据库往往最容易成为应用系统的瓶颈，而数据库本身属于“有状态”的，相对于Web和应用服务器来讲，是比较难实现“横向扩展”的。 数据库的连接资源比较宝贵且单机处理能力也有限，在高并发场景下，垂直分库一定程度上能够突破IO、连接数及单机硬件资源的瓶颈。\n\n水平拆分\n\n水平分表\n\n针对数据量巨大的单张表（比如订单表），按照某种规则（RANGE,HASH取模等），切分到多张表里面去。 但是这些表还是在同一个库中，所以库级别的数据库操作还是有IO瓶颈。不建议采用。\n\n水平分库分表\n\n将单张表的数据切分到多个服务器上去，每个服务器具有相应的库与表，只是表中数据集合不同。 水平分库分表能够有效的缓解单机和单库的性能瓶颈和压力，突破IO、连接数、硬件资源等的瓶颈。\n\n水平分库分表切分规则\n\nRANGE\n\n从0到10000一个表，10001到20000一个表；\n\nHASH取模\n\n一个商场系统，一般都是将用户，订单作为主表，然后将和它们相关的作为附表，这样不会造成跨库事务之类的问题。 取用户id，然后hash取模，分配到不同的数据库上。\n\n地理区域\n\n比如按照华东，华南，华北这样来区分业务，七牛云应该就是如此。\n\n时间\n\n按照时间切分，就是将6个月前，甚至一年前的数据切出去放到另外的一张表，因为随着时间流逝，这些表的数据 被查询的概率变小，所以没必要和“热数据”放在一起，这个也是“冷热数据分离”。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3924,"question":"】分库分表后面临的问题？不同库事物、统计合并查询、垮库查询","simplecontent":null,"content":"事务支持\n分库分表后，就成了分布式事务了。\n如果依赖数据库本身的分布式事务管理功能去执行事务，将付出高昂的性能代价； 如果由应用程序去协助控制，形成程序逻辑上的事务，又会造成编程方面的负担。\n多库结果集合并（group by，order by）\nTODO\n跨库join\nTODO 分库分表后表之间的关联操作将受到限制，我们无法join位于不同分库的表，也无法join分表粒度不同的表， 结果原本一次查询能够完成的业务，可能需要多次查询才能完成。粗略的解决方法： 全局表：基础数据，所有库都拷贝一份。 字段冗余：这样有些字段就不用join去查询了。 系统层组装：分别查询出所有，然后组装起来，较复杂。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3925,"question":"详细讲解表锁和行锁?","simplecontent":null,"content":"行级锁（仅InnoDB引擎支持）\n行级锁是Mysql中锁定粒度最细的一种锁，表示只针对当前操作的行进行加锁。行级锁能大大减少数据库操作的冲突。其加锁粒度最小，但加锁的开销也最大。行级锁分为共享锁 和 排他锁。\n只有通过索引条件检索数据，InnoDB才使用行级锁，否则，InnoDB将使用表锁\n    共享锁：\n        共享锁又称读锁，是读取操作创建的锁。其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。\nSELECT ... LOCK IN SHARE MODE;\n    排他锁：\n        排他锁又称写锁，如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获准排他锁的事务既能读数据，又能修改数据。\nSELECT ... FOR UPDATE;\n表级锁\n表级锁是MySQL中锁定粒度最大的一种锁，表示对当前操作的整张表加锁，它实现简单，资源消耗较少，被大部分MySQL引擎支持。最常使用的MYISAM与INNODB都支持表级锁定。表级锁定分为表共享读锁（共享锁）与表独占写锁（排他锁）。\n        意向锁：\n            意向锁是表级锁，其设计目的主要是为了在一个事务中揭示下一行将要被请求锁的类型。InnoDB中的两个表锁：\n            意向共享锁（IS）：表示事务准备给数据行加入共享锁，也就是说一个数据行加共享锁前必须先取得该表的IS锁\n            意向排他锁（IX）：类似上面，表示事务准备给数据行加入排他锁，说明事务在一个数据行加排他锁前必须先取得该表的IX锁。\n意向锁是InnoDB自动加的，不需要用户干预。\n页级锁\n页级锁是MySQL中锁定粒度介于行级锁和表级锁中间的一种锁。表级锁速度快，但冲突多，行级冲突少，但速度慢。所以取了折衷的页级，一次锁定相邻的一组记录。BDB支持页级锁\n共享锁又称读锁，是读取操作创建的锁。其他用户可以并发读取数据，但任何事务都不能对数据进行修改（获取数据上的排他锁），直到已释放所有共享锁。\n\n\n作者：codingBen\n链接：https://www.jianshu.com/p/61b894093678\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3926,"question":"】行级锁如何造成的死锁？锁索引","simplecontent":null,"content":"《锁索引》\n概述：在MySQL中，行级锁并不是直接锁记录，而是锁索引。索引分为主键索引和非主键索引两种：\n如果一条sql语句操作了主键索引，MySQL就会锁定这条主键索引；\n如果一条语句操作了非主键索引，MySQL会先锁定该非主键索引，再锁定相关的主键索引。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3927,"question":"】死锁现象的产生原因？操作非主键索引，等待主键索引过程中产生死锁","simplecontent":null,"content":"《操作非主键索引，等待主键索引过程中产生死锁》\n当两个事务同时执行，一个锁住了主键索引，在等待其他相关索引。另一个锁定了非主键索引，在等待主键索引。这样就会发生死锁。\nInnoBD的解决：发生死锁后，InnoDB一般都可以检测到，并使一个事务释放锁回退，另一个获取锁完成事务。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3928,"question":"】什么时候会锁住整张表，什么时候或只锁住一行呢？非索引条件、索引条件查询","simplecontent":null,"content":"《非索引条件、索引条件》\nInnoDB行锁是通过给索引上的索引项加锁来实现的。\n只有通过索引条件检索数据，InnoDB才使用行级锁，否则，InnoDB将使用表锁！","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3929,"question":"】InnoDB支持什么锁?行级锁和表级锁","simplecontent":null,"content":"行级锁和表级锁","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3930,"question":"】InnoDB默认什么锁?行级锁","simplecontent":null,"content":"《行级锁》\n.概述：支持行级锁和表级锁,默认为行级锁。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3931,"question":"】锁分类有那些？乐观锁、悲观锁","simplecontent":null,"content":"《乐观锁（）、悲观锁（表级锁{共享锁和排它锁}和行级锁{共享锁和排它锁}）》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3932,"question":"】共享锁/排他锁、表共享读锁/表独占写锁？读操作加共享锁、写操作加排它锁","simplecontent":null,"content":"《读操作加共享锁、写操作加排它锁》\n共享锁（Shared Lock，S）：对行数据的读操作加锁。\n排他锁（Exclusive Lock，X）：对行数据的insert/delete/update操作加锁。\n表共享读锁（table read lock）：表级别的S锁，对应的语句分别是LOCK TABLE … READ。\n表独占写锁（table write lock）：表级别的X锁，对应的语句分别是LOCK TABLE … WRITE。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3933,"question":"】表读锁作用?","simplecontent":null,"content":"《表读锁限制自己只能访问该表不能访问别的表，但是别人是所有表可以访问，所有人不能访问改这个表，但是别人可以改的别的表》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3934,"question":"表锁代码?","simplecontent":null,"content":"表共享读锁（Table Read Lock）\n表独占写锁（Table Write Lock）\n\n手动增加表锁\nlock table 表名称1 read(write),表名称2 read(write),其他;\n删除表锁\nunlock tables;\n查看表锁情况\nshow open tables;\n\n表读锁：表读锁限制自己只能访问该表不能访问别的表，但是别人是所有表可以访问，所有人不能访问改这个表，但是别人可以改的别的表\n只能对一张表加锁表读锁，如果加锁2个，就先解锁然后第二个表上读锁\n1、session1: lock table mylock read; – 给mylock表加读锁\n2、session1: select * from mylock; – 可以查询\n3、session1：select * from tdep; –不能访问非锁定表\n4、session2：select * from mylock; – 可以查询 没有锁\n5、session2：update mylock set name=‘x’ where id=2; – 修改阻塞,自动加行写锁\n6、session1：unlock tables; – 释放表锁\n7、session2：Rows matched: 1 Changed: 1 Warnings: 0 – 修改执行完成\n8、session1：select * from tdep; --可以访问\n第一个用户：\nlock table aaa read; \nselect * from aaa;//可以\nselect * from pl;//不可以\nupdate aaa set name='2' where id='1';;//不可以\nupdate pl set keyword='2' where id='10001';;//不可以\n\n第二个用户：\nselect * from aaa;//可以\nselect * from pl;//可以\nupdate aaa set name='2' where id='1';;//不可以 阻塞了\nupdate pl set keyword='2' where id='10001';//可以\n\n\n表写锁：（自己只能访问自己表并修改表；别人是不能读，但对别的表可以读可以修改）\n1、session1: lock table mylock write; – 给mylock表加写锁\n2、session1: select * from mylock; – 当前session可以查询\n3、session1：select * from tdep; –不能访问非锁定表\n4、session1：update mylock set name=‘y’ where id=2; --可以执行\n5、session2：select * from mylock; – 查询阻塞\n6、session1：unlock tables; – 释放表锁\n7、session2：4 rows in set (22.57 sec) – 查询执行完成\n8、session1：select * from tdep; --可以访问\n\n第一个用户：\nlock table aaa write; \nselect * from aaa;//可以\nselect * from pl;//不可以 不阻塞\nupdate aaa set name='2' where id='1';//可以\nupdate pl set keyword='2' where id='10001';//不可以 不阻塞\n\n第二个用户：\nselect * from aaa;//不行  苏塞\nselect * from pl;// 可以\nupdate aaa set name='2' where id='1';//不行  苏塞\nupdate pl set keyword='2' where id='10001';// 可以\n\n\n之间关系：表读锁自己和别人可以读，但是都不能修改；而表写锁是自己可读可改，别人不可读不可修改\n读锁和写锁区别在于别人是否可读了，自己是否可改","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3935,"question":"行级锁代码?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3936,"question":"行读锁：（自己可读可改，别人可读不可改）?","simplecontent":null,"content":"session1（Navicat）、session2（mysql）\n1、session1: begin;--开启事务未提交\n   select * from mylock  where id=1 lock in share mode; --手动加id=1的行读锁,使用索引\n2、session2：update mylock set name='y' where id=2; -- 未锁定该行可以修改\n3、session2：update mylock set name='y' where id=1; -- 锁定该行修改阻塞\nERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction-- 锁定超时\n4、session1: commit; --提交事务 或者 rollback 释放读锁\n5、session2：update mylock set name='y' where id=1; --修改成功\n\n第一个用户：\nselect * from aaa where id='1' LOCK IN SHARE MODE;//可以\nselect * from aaa where id='2' LOCK IN SHARE MODE;//可以\nselect * from pl;//可以 不阻塞\nupdate aaa set name='2' where id='1';//可以\nupdate pl set keyword='2' where id='10001';//可以 不阻塞\n\n第二个用户：\nselect * from aaa where id='1' ;//可以\nselect * from aaa where id='1' LOCK IN SHARE MODE;//可以\nselect * from aaa where id='2' ;//可以\nselect * from pl;//可以 不阻塞\nupdate aaa set name='2' where id='1';//不可以\nupdate aaa set name='2' where name='3';//不可以\nupdate pl set keyword='2' where id='10001';//可以 不阻塞","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3937,"question":"行写锁（自己可读可改，别人可读不可改）?","simplecontent":null,"content":"session1（Navicat）、session2（mysql）\n1、session1: begin;--开启事务未提交\n      select * from mylock  where id=1 for update; --手动加id=1的行写锁,\nsession2：select * from mylock  where id=2 ; -- 可以访问\n3、session2: select * from mylock  where id=1 ; -- 可以读 不加锁 \n4、session2: select * from mylock  where id=1 lock in share mode ; -- 加读锁被阻塞\n5、session1：commit; -- 提交事务 或者 rollback 释放写锁\n5、session2：执行成功\n\n注：行产生写锁时，在MVCC下仍然可读，因为MVCC下的select读不需要获取锁（无锁），所以不会阻塞\n\n第一个用户：\nbegin;--开启事务未提交\nselect * from aaa  where id='1' for update; --手动加id=1的行写锁,\nselect * from aaa  where id='2' ; -- 可以访问\nselect * from aaa  where id='1' ; -- 可以读 不加锁 \nselect * from aaa  where id='1' lock in share mode ; -- 加读锁被阻塞\nupdate aaa set name='111' where id='1';//可以\nupdate aaa set name='222' where id='2';//可以\ncommit; -- 提交事务 或者 rollback 释放写锁\n\n第二个用户：\nselect * from aaa  where id='2' ; -- 可以访问\nselect * from aaa  where id='1' ; -- 可以读 不加锁 \nselect * from aaa  where id='1' lock in share mode ; -- 加读锁被阻塞\nupdate aaa set name='111' where id='1';-- 不行 被阻塞\nupdate aaa set name='222' where id='2';-- 可以\n\n共享锁又称读锁（S锁），一个事务获取了共享锁，其他事务可以获取共享锁，不能获取排他锁，其他事务可以进行读操作，不能进行写操作。\n排他锁又称写锁（X锁），如果事务T对数据A加上排他锁后，则其他事务不能再对A加任任何类型的封锁。获准排他锁的事务既能读数据，又能修改数据。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:50","updateTime":"2021-05-26 01:07:50","isExist":null},{"id":3904,"question":"】分库分表常用方式？Mycat，sharding-jdbc（这两个选择比较多），sharding（叫沙顶jdbc）是client不需要部署中间件，缺点是如果要升级的化项目需要升级，好处是维护成本低，而mycat维护成本高些","simplecontent":null,"content":"Mycat，sharding-jdbc（这两个选择比较多），sharding（叫沙顶jdbc）是client不需要部署中间件，缺点是如果要升级的化项目需要升级，好处是维护成本低，而mycat维护成本高些","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3905,"question":"】为什么使用分库分表？数据量很大、高并发，数据库单裤性能瓶颈问题","simplecontent":null,"content":"Java后台可以支撑的部署很多台就可以了，但是mq很慢了是因为mysql没办法入库了太慢了，高峰时每秒8000请求/s\n怎么做？\n设置3台异步写库，每天新增数据120万sql，那么每台40万条数据\nMq分3台，mysql分3台，mq每台40万，mysql每台40万","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3906,"question":"】Explain值展示有哪些值？System（1个）、Const（一次）、all 、range","simplecontent":null,"content":"Type：告诉我们对表使用的访问方式，主要包含如下集中类型。\nall：全表扫描。\nconst：读常量，最多只会有一条记录匹配，由于是常量，实际上只须要读一次。\neq_ref：最多只会有一条匹配结果，一般是通过主键或唯一键索引来访问。\nfulltext：进行全文索引检索。\nindex：全索引扫描。\nindex_merge：查询中同时使用两个（或更多）索引，然后对索引结果进行合并（merge），再读取表数据。\nindex_subquery：子查询中的返回结果字段组合是一个索引（或索引组合），但不是一个主键或唯一索引。\nrang：索引范围扫描。\nref：Join语句中被驱动表索引引用的查询。\nref_or_null：与ref的唯一区别就是在使用索引引用的查询之外再增加一个空值的查询。\nsystem：系统表，表中只有一行数据；\nunique_subquery：子查询中的返回结果字段组合是主键或唯一约束。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3907,"question":"多路搜索树原理?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3908,"question":"B+tree原理?","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3909,"question":"】聚集索引和非聚集索引的根本区别？物理位置顺序与列值的顺序","simplecontent":null,"content":"《物理顺序与列值的逻辑顺序》\n数据行的物理顺序与列值（一般是主键的那一列）的逻辑顺序相同，一个表中只能拥有一个聚集索引。\n\n注：第一列的地址表示该行数据在磁盘中的物理地址，后面三列才是我们SQL里面用的表里的列，其中id是主键，建立了聚集索引。\n\n    结合上面的表格就可以理解这句话了吧：数据行的物理顺序与列值的顺序相同，如果我们查询id比较靠后的数据，那么这行数据的地址在磁盘中的物理地址也会比较靠后。而且由于物理排列方式与聚集索引的顺序相同，所以也就只能建立一个聚集索引了。\n索引的叶子节点就是对应的数据节点（MySQL的MyISAM除外，此存储引擎的聚集索引和非聚集索引只多了个唯一约束，其他没什么区别），可以直接获取到对应的全部列的数据，而非聚集索引在索引没有覆盖到对应的列的时候需要进行二次查询，后面会详细讲。因此在查询方面，聚集索引的速度往往会更占优势\n————————————————\n版权声明：本文为CSDN博主「Linias」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_29373285/article/details/85254407\n\n1、表记录的排列顺序和与索引的排列顺序是否一致。\n2、聚集索引一个表只有一个，非聚集索引一个表可以存在多个。\n3、聚集索引存储记录是物理上抄连续存在，非聚集索引是逻辑上的连续。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3910,"question":"】聚集索引优点？范围查询和排序","simplecontent":null,"content":"《有利于范围查询和排序》\n1、以最快的速度缩小查询范围。\n2、以最快的速度进行字段排序。\n聚集索引使用场合：\n1、此列包含有限数目的不同zd值。\n2、查询的结果返回一个区间的值。\n3、查询的结果返回某值相同的大量结果集。\n\n非聚集索引优点\n1、非聚集索引比聚集索引层次多。\n3、添加记录不会引起数据顺序的重组。\n非聚集索引使用场合：\n1、此列包含了大量数目不同的值。\n2、查询的结束返回的是少量的结果集。 \n\n非聚集索引的二次查询问题\n非聚集索引叶节点仍然是索引节点，只是有一个指针指向对应的数据块，此如果使用非聚集索引查询，而查询列中包含了其他该索引没有覆盖的列，那么他还要进行第二次的查询，查询节点上对应的数据行的数据。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3911,"question":"】聚集索引字段要求？聚集索引一个表只有一个","simplecontent":null,"content":"《聚集索引一个表只有一个》","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3912,"question":"】聚集索引的约束是唯一性，是否要求字段也是唯一的呢？","simplecontent":null,"content":" 《聚集索引字段列可以不唯一》\n    \n不要求唯一！\n\n　　分析：如果认为是的朋友，可能是受系统默认设置的影响，一般我们指定一个表的主键，如果这个表之前没有聚集索引，同时建立主键时候没有强制指定使用非聚集索引，SQL会默认在此字段上创建一个聚集索引，而主键都是唯一的，所以理所当然的认为创建聚集索引的字段也需要唯一。\n\n　　结论：聚集索引可以创建在任何一列你想创建的字段上，这是从理论上讲，实际情况并不能随便指定，否则在性能上会是恶梦。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3913,"question":"为什么聚集索引可以创建在任何一列上，如果此表没有主键约束，即有可能存在重复行数据呢？","simplecontent":null,"content":"　　粗一看，这还真是和聚集索引的约束相背，但实际情况真可以创建聚集索引。\n\n　　分析其原因是：如果未使用 UNIQUE 属性创建聚集索引，数据库引擎将向表自动添加一个四字节 uniqueifier 列。必要时，数据库引擎 将向行自动添加一个 uniqueifier 值，使每个键唯一。此列和列值供内部使用，用户不能查看或访问。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3914,"question":"】是不是聚集索引就一定要比非聚集索引性能优呢?不是覆盖索引不是最好","simplecontent":null,"content":"　　如果想查询学分在60-90之间的学生的学分以及姓名，在学分上创建聚集索引是否是最优的呢？\n\n　　答：否。既然只输出两列，我们可以在学分以及学生姓名上创建联合非聚集索引，此时的索引就形成了覆盖索引，即索引所存储的内容就是最终输出的数据，这种索引在比以学分为聚集索引做查询性能更好。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3915,"question":"在数据库中通过什么描述聚集索引与非聚集索引的？","simplecontent":null,"content":"　　索引是通过二叉树的形式进行描述的，我们可以这样区分聚集与非聚集索引的区别：聚集索引的叶节点就是最终的数据节点，而非聚集索引的叶节仍然是索引节点，但它有一个指向最终数据的指针。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3916,"question":"在主键是创建聚集索引的表在数据插入上为什么比主键上创建非聚集索引表速度要慢？","simplecontent":null,"content":"　　有了上面第四点的认识，我们分析这个问题就有把握了，在有主键的表中插入数据行，由于有主键唯一性的约束，所以需要保证插入的数据没有重复。我们来比较下主键为聚集索引和非聚集索引的查找情况：聚集索引由于索引叶节点就是数据页，所以如果想检查主键的唯一性，需要遍历所有数据节点才行，但非聚集索引不同，由于非聚集索引上已经包含了主键值，所以查找主键唯一性，只需要遍历所有的索引页就行（索引的存储空间比实际数据要少），这比遍历所有数据行减少了不少IO消耗。这就是为什么主键上创建非聚集索引比主键上创建聚集索引在插入数据时要快的真正原因。\n————————————————\n版权声明：本文为CSDN博主「Linias」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_29373285/article/details/85254407","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3917,"question":"】不可重复读和幻读区别？一查一改一查、一改一插一查","simplecontent":null,"content":"一查一改一查（行排斥锁），一改一插一查（使用表锁解决）\n属于事务隔离级别的，3个方法都是在同一方法里\n\n不是使用行锁和表锁来解决，而是使用隔离级别来解决，如下面\n\n\n不可重复读","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3918,"question":"】不可重复读是什么？2读间另一改","simplecontent":null,"content":"《2读间另一改》\n是指在一个事务内，多次读同一数据。在这个事务还没有结束时，另外一个事务也访问该同一数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改，那么第一个事务两次读到的的数据可能是不一样的。这样在一个事务内两次读到的数据是不一样的，因此称为是不可重复读。    e.g.\n    1.在事务1中，Mary 读取了自己的工资为1000,操作并没有完成\n    2.在事务2中，这时财务人员修改了Mary的工资为2000,并提交了事务.\n    3.在事务1中，Mary 再次读取自己的工资时，工资变为了2000\n 解决办法：如果只有在修改事务完全提交之后才可以读取数据，则可以避免该问题。\n ","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3919,"question":"】幻读是什么？改查之间另一插","simplecontent":null,"content":"《改查间另一插》\n3.是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好象发生了幻觉一样。\n   e.g. \n   目前工资为1000的员工有10人。\n   1.事务1,读取所有工资为1000的员工。\n   2.这时事务2向employee表插入了一条员工记录，工资也为1000\n   3.事务1再次读取所有工资为1000的员工 共读取到了11条记录， \n \n 解决办法：如果在操作事务完成数据处理之前，任何其他事务都不可以添加新数据，则可避免该问题\n \n不可重复读的重点是修改 :\n 同样的条件, 你读取过的数据,再次读取出来发现值不一样了\n幻读的重点在于新增或者删除\n 同样的条件, 第 1 次和第 2 次读出来的记录数不一样","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3920,"question":"】In什么情况索引起作用？字符串要加引号、int可不加引号","simplecontent":null,"content":"《字符串要加引号、int可不加引号》\n1. 如果字段类型为字符串，需要给in查询中的数值与字符串值都需要添加引号，索引才能起作用。\n2. 如果字段类型为int，则in查询中的值不需要添加引号，索引也会起叙用。\nIN的字段，在联合索引中，按以上方法，也会起作用。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:49","updateTime":"2021-05-26 01:07:49","isExist":null},{"id":3884,"question":"】mysql索引命中规则？起作用和不起作用意思","simplecontent":null,"content":"最左匹配原则:\n1.最左前缀匹配原则, mysql会一只向右匹配直到遇到范围查询(>, <, between, like)就停止匹配, 比如a=1 and b=2 and c>3 and d=4 如果建立了(a,b,c,d)顺序的索引, d是用不到索引的, 如果建立(a,b,d,c)的索引, 则都可以使用到, a,b,d的顺序可以任意调整.\n2.= 和 in 可以乱序, 比如 a=1 and b=2 and c=3 建立(a,b,c)索引可以任意顺序, mysql 的查询优化器会帮你优化成索引可以识别的形式.\n\n使用联合索引的全部索引键, 可触发索引的使用.\n如: select e.* from e where e.e1=1 and e.e3=2\n查询条件中包含索引的前缀部分, 也就是 e1, 可以触发索引的使用\n如: select e.* from e where e.e1=1\n使用部分索引键, 但不包含索引的前缀部分，不可触发索引的使用。\n如: select e.* from e where e.e3=1\n使用联合索引的全部索引键, 但不是AND操作, 不可以触发索引的使用\n如: select e.* from e where e.e3=2 or e.e1=1","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3885,"question":"】什么是MVCC?多版本并发控制","simplecontent":null,"content":"多版本并发控制。是乐观锁的一种实现方式。\n基本特征\n每行数据都存在一个版本，每次数据更新时都更新该版本。\n修改时Copy出当前版本随意修改，各个事务之间无干扰。\n保存时比较版本号，如果成功（commit），则覆盖原记录；失败则放弃copy（rollback）\n锁机制可以控制并发操作,但是其系统开销较大,而MVCC可以在大多数情况下代替行级锁,使用MVCC,能降低其系统开销。 \n我们认为他就是乐观锁的一整实现方式，就是每行都有版本号，保存时根据版本号决定是否成功。\n但由于Mysql的写操作会加排他锁（前文有讲），如果锁定了还算不算是MVCC","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3886,"question":"】一张表只有10多条数据，where primary_key=，还走索引吗？测试过起作用","simplecontent":null,"content":"没有必要，数据量不大，不需要索引，毕竟索引也是一个数据库结构，也会造成数据库开销。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3887,"question":"】共享锁和排它锁直白描述？管理员设置的共享锁是大家公用，别人不能改，只用设置共享锁都是管理员，而排它锁我的东西你可以看不可以改我的","simplecontent":null,"content":"管理员设置的共享锁是大家公用，别人不能改，只用设置共享锁都是管理员，而排它锁我的东西你可以看不可以改我的","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3888,"question":"】mysql增删改查默认加什么锁？Innodb是Select不加锁，而增改删加行级排它锁；而myisam是select加表共享锁，，而增改删加行表级排它锁","simplecontent":null,"content":"Innodb是Select不加锁，而增改删加行级排它锁；而myisam是select加表共享锁，，而增改删加行表级排它锁","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3889,"question":"】死锁如何解决？将where设置为索引变成行锁，分布式锁，使用innodb","simplecontent":null,"content":"将where设置为索引变成行锁，分布式锁，使用innodb","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3890,"question":"】读写分离和分库分表如何一起用？","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3891,"question":"】为什么做读写分离？大部分网站是读多，写很少，高并发","simplecontent":null,"content":"这个，高并发这个阶段，那肯定是需要做读写分离的，啥意思？因为实际上大部分的互联网公司，一些网站，或者是app，其实都是读多写少。所以针对这个情况，就是写一个主库，但是主库挂多个从库，然后从多个从库来读，那不就可以支撑更高的读并发压力了吗？","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3892,"question":"】如何实现mysql的读写分离？主写，从读","simplecontent":null,"content":"就搞一个主库，挂多个从库，然后我们就单单只是写主库，然后主库会自动把数据给同步到从库上去。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3893,"question":"】什么是binlog日志？记录增删改操作记录","simplecontent":null,"content":"记录增删改操作记录","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3894,"question":"】MySQL主从复制原理的是啥？从库启动时复制主库的binlog到本地，串行执行binlog日志的操作，延迟时mysql支持使用半同步复制（主库之后的每个操作会复制到从库）和并行复制（启动别的线程执行最新的relaylog日志）","simplecontent":null,"content":"主库将变更写binlog日志，然后从库连接到主库之后，从库有一个IO线程，将主库的binlog日志拷贝到自己本地，写入一个中继日志中。接着从库中有一个SQL线程会从中继日志读取binlog，然后执行binlog日志中的内容，也就是在自己本地再次执行一遍SQL，这样就可以保证自己跟主库的数据是一样的。\n\n这里有一个非常重要的一点，就是从库同步主库数据的过程是串行化的，也就是说主库上并行的操作，在从库上会串行执行。所以这就是一个非常重要的点了，由于从库从主库拷贝日志以及串行执行SQL的特点，在高并发场景下，从库的数据一定会比主库慢一些，是有延时的。所以经常出现，刚写入主库的数据可能是读不到的，要过几十毫秒，甚至几百毫秒才能读取到。\n\n而且这里还有另外一个问题，就是如果主库突然宕机，然后恰好数据还没同步到从库，那么有些数据可能在从库上是没有的，有些数据可能就丢失了。\n\n所以mysql实际上在这一块有两个机制，一个是半同步复制，用来解决主库数据丢失问题；一个是并行复制，用来解决主从同步延时问题。\n\n这个所谓半同步复制，semi-sync复制，指的就是主库写入binlog日志之后，就会将强制此时立即将数据同步到从库，从库将日志写入自己本地的relay log之后，接着会返回一个ack给主库，主库接收到至少一个从库的ack之后才会认为写操作完成了。\n\n所谓并行复制，指的是从库开启多个线程，并行读取relay log中不同库的日志，然后并行重放不同库的日志，这是库级别的并行。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3895,"question":"】数据库延迟的原因？1.写速度太快了 2.网络为问题 3.全量复制太慢了导致后面的增量复制不能及时","simplecontent":null,"content":"1.写速度太快了 2.网络为问题 3.全量复制太慢了导致后面的增量复制不能及时","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3896,"question":"】主从复制延迟会导致什么问题？创建订单后却没办法更新数据状态","simplecontent":null,"content":"创建订单后却没办法更新数据状态","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3897,"question":"】如何解决mysql主从同步的延时问题？可以查看数据插入后是否查不到，启动半复制（有ack机制返回给主库确认）和并行复制，进行分库分表降低并发压力，或者插入后不要查询直接修改","simplecontent":null,"content":"1、分库，将一个主库拆分为4个主库，每个主库的写并发就500/s，此时主从延迟可以忽略不计\n2、打开mysql支持的并行复制，多个库并行复制，如果说某个库的写入并发就是特别高，单库写并发达到了2000/s，并行复制还是没意义。28法则，很多时候比如说，就是少数的几个订单表，写入了2000/s，其他几十个表10/s。\n3、重写代码，写代码的同学，要慎重，当时我们其实短期是让那个同学重写了一下代码，插入数据之后，直接就更新，不要查询\n4、如果确实是存在必须先插入，立马要求就查询到，然后立马就要反过来执行一些操作，对这个查询设置直连主库。不推荐这种方法，你这么搞导致读写分离的意义就丧失了\n\n\n线上确实处理过因为主从同步延时问题，导致的线上的bug，小型的生产事故\n\nshow status，Seconds_Behind_Master，你可以看到从库复制主库的数据落后了几ms\n\n其实这块东西我们经常会碰到，就比如说用了mysql主从架构之后，可能会发现，刚写入库的数据结果没查到，结果就完蛋了。。。。\n\n所以实际上你要考虑好应该在什么场景下来用这个mysql主从同步，建议是一般在读远远多于写，而且读的时候一般对数据时效性要求没那么高的时候，用mysql主从同步","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3898,"question":"】什么时候使用主从分离？读非常多时候，且对写及时性没那么高","simplecontent":null,"content":"读非常多时候，且对写及时性没那么高","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3899,"question":"】独立站如何进行分库分表？根据卖家id最后2位，好处是扩容不用迁移，同时数据也是比较平均，扩容直接增加库，而卖家id是16位增加需要增加4位","simplecontent":null,"content":"根据卖家id最后2位，好处是扩容不用迁移，同时数据也是比较平均，扩容直接增加库，而卖家id是16位增加需要增加4位","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3900,"question":"】单表如何进行不停机数据库迁移？1.导数据 2.写库需要新库和旧库一起写 3.需要比较数据是否不一样","simplecontent":null,"content":"迁移情况：600万数据一小时完成迁移，3台机器开20个线程的进行迁移","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3901,"question":"】水平分表的策略优缺点？扩容，集中存储","simplecontent":null,"content":"扩容，集中存储","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3902,"question":"】水平分表的策略方式有哪些？Range（时间）和hash（哈希值）","simplecontent":null,"content":"Range（时间）和hash（哈希值）","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3903,"question":"】大表如何分表？1、例如订单表，根据访问量拆分，流量高字段在主表，流量低在副表 2、水平拆分，分成多个水平库，还可以分库，然后再分水平表，根据订单号%膜确定是哪个表在插入","simplecontent":null,"content":"可能有500万数据需要拆分了","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:48","updateTime":"2021-05-26 01:07:48","isExist":null},{"id":3866,"question":"】优化数据库的方法？","simplecontent":null,"content":"1、选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置 NOTNULL， 例如’ 省份’ 、’ 性别’ 最好适用 ENUM\n\n2、使用连接(JOIN)来代替子查询\n\n3、适用联合(UNION)来代替手动创建的临时表\n4、事务处理\n\n5、锁定表、优化事务处理\n\n6、适用外键， 优化锁定表\n\n7、建立索引\n\n8、优化查询语句\n174","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3867,"question":"】存储时期？Datatime、Timestamp:以时间戳格式存储、Date 存储日期月份","simplecontent":null,"content":"Datatime:以 YYYY-MM-DD HH:MM:SS 格式存储时期时间， 精确到秒， 占用 8 个字节得存储空间， datatime 类型与时区无关\nTimestamp:以时间戳格式存储，占用 4 个字节，范围小 1970-1-1 到 2038-1-19， 显示依赖于所指定得时区，     默认在第一个列行的数据修改时可以自动得修改\ntimestamp 列得值\nDate:（ 生日） 占用得字节数比使用字符串.datatime.int 储存要少， 使用 date 只需要 3 个字节， 存储日期月份， 还可以利用日期时间函数进行日期间得计算\nTime:存储时间部分得数据\n注意:不要使用字符串类型来存储日期时间数据（   通常比字符串占用得储存空间小， 在进行查找过滤可以利用日期得函数）\n使用 int 存储日期时间不如使用 timestamp 类型","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3868,"question":"】索引的目的是什么？","simplecontent":null,"content":"快速访问数据表中的特定信息，   提高检索速度\n创建唯一性索引， 保证数据库表中每一行数据的唯一性。加速表和表之间的连接\n\n使用分组和排序子句进行数据检索时，     可以显著减少查询中分组和排序的时间","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3869,"question":"】SQL 语言包括哪几部分？DDL、数据操纵(DML)","simplecontent":null,"content":"SQL 语言包括数据定义(DDL)、数据操纵(DML),数据控制(DCL)和数据查询（ DQL） 四个部分。\n\n数据定义： Create Table,Alter Table,Drop Table, Craete/Drop Index 等数据操纵： Select ,insert,update,delete,\n数据控制： grant,revoke 数据查询： select\n\n177","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3870,"question":"】游标作用？从结果集的当前行检索一行或多行","simplecontent":null,"content":"是对查询出来的结果集作为一个单元来有效的处理。游标可以定在该单元中的特定行，  从结果集的当前行检索一行或多行。可以对结果集当前行做修改。一般不使用游标， 但是需要逐条处理数据的时候， 游标显得十分重要。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3871,"question":"】什么是存储过程？","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3872,"question":"】存储过程用什么来调用？","simplecontent":null,"content":"答： 存储过程是一个预编译的 SQL 语句， 优点是允许模块化的设计， 就是说只需创建一次， 以后在该程序中就可以调用多次。如果某次操作需要执行多次 SQL， 使用存储过程比单纯 SQL 语句执行要快。可以用一个命令对象来调用存储过程。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3873,"question":"】说说对SQL 语句优化有哪些方法？","simplecontent":null,"content":"1、Where 子句中：where 表之间的连接必须写在其他 Where 条件之前，那些可以过滤掉最大数量记录的条件必须写在 Where 子句的末尾.HAVING 最后。\n\n2、用 EXISTS 替代 IN、用 NOT EXISTS 替代 NOT IN。\n\n3、  避免在索引列上使用计算\n\n4、避免在索引列上使用 IS NULL 和 IS NOT NULL\n\n5、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。\n\n6、应尽量避免在 where 子句中对字段进行 null 值判断， 否则将导致引擎放弃使用索引而进行全表扫描\n\n7、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3874,"question":"】说一下 mysql 常用的引擎？","simplecontent":null,"content":"InnoDB 引擎：InnoDB 引擎提供了对数据库 acid 事务的支持，并且还提供了行级锁和外键的约束，它的设计的目标就是处理大数据容量的数据库系统。MySQL 运行的时候，InnoDB 会在内存中建立缓冲池，用于缓冲数据和索引。但是该引擎是不支持全文搜索，同时启动也比较的慢，它是不会保存表的行数的，所以当进行 select count(*) from table 指令的时候，需要进行扫描全表。由于锁的粒度小，写操作是不会锁定全表的,所以在并发度较高的场景下使用会提升效率的。\n\nMyIASM 引擎：MySQL 的默认引擎，但不提供事务的支持，也不支持行级锁和外键。因此当执行插入和更新语句时，即执行写操作的时候需要锁定这个表，所以会导致效率会降低。不过和 InnoDB 不同的是，MyIASM 引擎是保存了表的行数，于是当进行 select count(*) from table 语句时，可以直接的读取已经保存的值而不需要进行扫描全表。所以，如果表的读操作远远多于写操作时，并且不需要事务的支持的，可以将 MyIASM 作为数据库引擎的首选。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3875,"question":"】分库分表之后,id 主键如何处理？Uuid、雪花算法、美团的Leaf分布式ID生成系统","simplecontent":null,"content":"因为要是分成多个表之后，每个表都是从 1 开始累加，这样是不对的，我们需要一个全局唯一的 id 来支持。\n生成全局 id 有下面这几种方式：\nUUID：不适合作为主键，因为太长了，并且无序不可读，查询效率低。比较适合用于生成唯一的  名字的标示比如文件的名字。\n数据库自增 id : 两台数据库分别设置不同步长，生成不重复ID的策略来实现高可用。这种方式生成的  id  有序，但是需要独立部署数据库实例，成本高，还会有性能瓶颈。\n利用 redis 生成 id : 性能比较好，灵活方便，不依赖于数据库。但是，引入了新的组件造成系统更加复杂，可用性降低，编码更加复杂，增加了系统成本。\nTwitter的snow?ake算法 ：Github 地址：https://github.com/twitter-archive/snow?ake。\n美团的Leaf分布式ID生成系统 ：Leaf  是美团开源的分布式ID生成器，能保证全局唯一性、趋势递增、单调递增、信息安全，里面也提到了几种分布式方案的对比，但也需要依赖关系数据库、\nZookeeper等中间件。感觉还不错。美团技术团队的一篇文章：https://tech.meituan.com/2017/ 04/21/mt-leaf.html  。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3876,"question":"】不可重复读和幻读区别？不可重复读是第二个事务是修改，幻读是插入或者删除","simplecontent":null,"content":"不可重复读的重点是修改比如多次读取一条记录发现其中某些列的值被修改，幻读的重点在于新增或者 删除比如多次读取一条记录发现记录增多或减少了。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3877,"question":"】简单说一说drop、delete与truncate的区别？delete和truncate只删除表的数据、drop删除表结构、速度drop> truncate >delete、 truncate,drop删除后不能回滚","simplecontent":null,"content":"SQL中的drop、delete、truncate都表示删除，但是三者有一些差别\ndelete和truncate只删除表的数据不删除表的结构速度,一般来说: drop> truncate >delete\ndelete语句是dml,这个操作会放到rollback    segement中,事务提交之后才生效;\n如果有相应的trigger,执行的时候将被触发.   truncate,drop是ddl,   操作立即生效,原数据不放到rollback\nsegment中,不能回滚.  操作不触发trigger.\n\n删除表中的数据的方法有delete,truncate, 其中TRUNCATE TABLE用于删除表中的所有行，而不记录单个行删除操作。TRUNCATE TABLE 与没有 WHERE 子句的 DELETE 语句类似；但是，TRUNCATE TABLE 速度更快，使用的系统资源和事务日志资源更少。下面介绍SQL中Truncate的用法\n\n当你不再需要该表时， 用 drop；当你仍要保留该表，但要删除所有记录时， 用 truncate；当你要删除部分记录时（always with a WHERE clause), 用 delete.\n\n\nTruncate是一个能够快速清空资料表内所有资料的SQL语法。并且能针对具有自动递增值的字段，做计数重置归零重新计算的作用。\n\n1、TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同：二者均删除表中的全部行。但 TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少。\n \n2、DELETE 语句每次删除一行，并在事务日志中为所删除的每行记录一项。TRUNCATE TABLE 通过释放存储表数据所用的数据页来删除数据，并且只在事务日志中记录页的释放。\n \n3、TRUNCATE TABLE 删除表中的所有行，但表结构及其列、约束、索引等保持不变。新行标识所用的计数值重置为该列的种子。如果想保留标识计数值，请改用 DELETE。如果要删除表定义及其数据，请使用 DROP TABLE 语句。\n \n4、对于由 FOREIGN KEY 约束引用的表，不能使用 TRUNCATE TABLE，而应使用不带 WHERE 子句的 DELETE 语句。由于 TRUNCATE TABLE 不记录在日志中，所以它不能激活触发器。\n \n5、TRUNCATE TABLE 不能用于参与了索引视图的表。\n \n6、对用TRUNCATE TABLE删除数据的表上增加数据时，要使用UPDATE STATISTICS来维护索引信息。\n \n7、如果有ROLLBACK语句，DELETE操作将被撤销，但TRUNCATE不会撤销。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3878,"question":"】mysql 有4种不同的索引有哪些？","simplecontent":null,"content":"主键索引（PRIMARY） \n唯一索引（UNIQUE） \n普通索引（INDEX）\n全文索引（FULLTEXT）","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3879,"question":"】mysql读锁和写锁？共享锁（2个人加了共享锁，这2个人可以修改，其他人不可以删除和修改，但是可以加共享锁）、排它锁（只能一个人加，其它人不能加锁）","simplecontent":null,"content":"读锁也叫共享锁 （shared lock）\n即事务A 使用共享锁 获取了某条（或者某些）记录时，事务B 可以读取这些记录，可以继续添加共享锁，但是不能修改或删除这些记录（当事务B 对这些数据修改或删除时会进入阻塞状态，直至锁等待超时或者事务A提交）\n\n写锁也叫排它锁（exclusive lock）\n详解\n一个写锁会阻塞其他的读锁和写锁\n即事务A 对某些记录添加写锁时，事务B 无法向这些记录添加写锁或者读锁（不添加锁的读取是可以的），事务B 也无法执行对 锁住的数据 update delete\n\n使用场景\n读取结果集的最新版本，同时防止其他事务产生读取或者更新该结果集。\n例如：并发下对商品库存的操作","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3880,"question":"】在进行数据库编程时，连接池有什么作用？不需要三次握手和四次挥手的开销","simplecontent":null,"content":"由于创建连接和释放连接都有很大的开销（ 尤其是数据库服务器不在本地时， 每次建立连接都需要进行 TCP 的三次握手，释放连接需要进行 TCP 四次握手，造成的开销是不可忽视的）， 为了提升系统访问数据库的性能， 可以事先创建若干连接置于连接池中， 需要时直接从连接池获取， 使用结束时归还连接池而不必关闭连接， 从而避免频繁创建和释放连接所造成的开销， 这是典型的用空间换取时间的策略（ 浪费了空间存储连接， 但节省了创建和释放连接的时间）。池化技术在Java 开发中是很常见的，在使用线程时创建线程池的道理与此相同。基于 Java 的开源数据库连接池主要有： C3P0、Proxool、DBCP、BoneCP、Druid 等。\n\n补充： 在计算机系统中时间和空间是不可调和的矛盾， 理解这一点对设计满足性能要求的算法是至关重要的。大型网站性能优化的一个关键就是使用缓存，   而缓存跟上面讲的连接池道理非常类似，  也是使用空间换时间的策略。可以将热点数据置于缓存中， 当用户查询这些数据时可以直接从缓存中得到， 这无论如何也快过去数据库中查询。当然， 缓存的置换策略等也会对系统性能产生重要影响， 对于这个问题的讨论已经超出了这里要阐述的范围。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3881,"question":"】Statement 和PreparedStatement 有什么区别,哪个性能更好？预编译的、可以带参数、性能上的优势","simplecontent":null,"content":"与 Statement 相比，① PreparedStatement 接口代表预编译的语句，它主要的优势在于可以减少 SQL 的编译错误并增加 SQL 的安全性（ 减少 SQL 注射攻击的可能性）；② PreparedStatement 中的 SQL 语句是可以带参数的，避免了用字符串连接拼接 SQL 语句的麻烦和不安全；③ 当批量处理 SQL 或频繁执行相同的查询时， PreparedStatement 有明显的性能上的优势， 由于数据库可以将编译优化后的SQL 语句缓存起来， 下次执行相同结构的语句时就会很快（ 不用再次编译和生成执行计划）。\n\n补充：为了提供对存储过程的调用，JDBC API 中还提供了 CallableStatement 接口。存储过程（ Stored Procedure）是数据库中一组为了完成特定功能的 SQL 语句的集合，   经编译后存储在数据库中，   用户通过指定存储过程的名字并给出参数\n（ 如果该存储过程带有参数） 来执行它。虽然调用存储过程会在网络开销、安全性、性能上获得很多好处，   但是存在如果底层数据库发生迁移时就会有很多麻烦， 因为每种数据库的存储过程在书写上存在不少的差别。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3882,"question":"】mysql范围查询索引起做用吗？","simplecontent":null,"content":"","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3883,"question":"】范围查询中为何between不走索引，采用in后可以走索引？因为beteen和》都是不可知的，而in是可知的","simplecontent":null,"content":"SELECT\n\t* \nFROM\n\tgoods_detail \nWHERE\n\ttenant_id = '996' \n\tAND buss_day BETWEEN \"2020/1/1\" AND \"2020/1/6\" \n\tAND goods_id = '985';\n\nSELECT\n\t* \nFROM\n\tgoods_detail \nWHERE\n\ttenant_id = '996' \n\tAND buss_day BETWEEN \"2020/1/1\" AND \"2020/1/6\" \n\tAND goods_id = '985';\n\n分析下SQL1：\n第一列：tenant_id 等值匹配，可以匹配到精确地索引\n第二列：buss_day范围匹配，匹配出来的buss_day具体有哪些，是不可以知的\n第三列：由于匹配出来的buss_day不可知，goods_id无法走索引匹配\n分析下SQL2：\n第一列：tenant_id 等值匹配，可以匹配到精确地索引\n第二列：buss_day等值匹配，匹配出来的buss_day是可知的\n第三列：由于匹配出来的buss_day可知，goods_id走索引匹配\n在组合索引中，采用between，>、<、like等进行匹配都会导致后面的列无法走索引，因为通过以上方式匹配到的数据是不可知的。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:47","updateTime":"2021-05-26 01:07:47","isExist":null},{"id":3861,"question":"】mysql查询时间？ DATE_FORMAT、,'%Y-%m-%d %h:%i:%s'","simplecontent":null,"content":"select DATE_FORMAT(now(),'%Y-%m-%d %h:%i:%s') from dual;\n select * from test where date_format(create_time,'%Y-%m-%d') between '2018-07-30' and '2018-07-31';\n但是前端传入的参数确是 YYYY-MM-DD 的 没有带时分秒。\n\n如果按照下面这两种方式会查不全\n\nselect * from test where create_time between '2018-07-30' and '2018-07-31';\nselect * from test where create_time >= '2018-07-30' and date <= '2018-07-31';\n我这里提供两种方式：\n\n第一种： 让前端传固定的格式 YYYY-MM-DD hh:mm:ss 继续用上面的方法。\n\n第二种：你用mysql的函数date_format\n\nselect * from test where date_format(create_time,'%Y-%m-%d') between '2018-07-30' and '2018-07-31';\n这样就能得到你全部在区间内的数据了\n\n\n169","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3862,"question":"】MySQL 里记录货币用什么字段类型好？NUMERIC 和 DECIMAL 类型","simplecontent":null,"content":"NUMERIC 和 DECIMAL 类型被 MySQL 实现为同样的类型， 这在 SQL92 标准允许。他们被用于保存值， 该值的准确精度是极其重要的值， 例如与金钱有关的数据。当声明一个类是这些类型之一时，     精度和规模的能被(并且通常是)指定。\n\n例如：\n\nsalary DECIMAL(9,2)\n\n在这个例子中， 9(precision)代表将被用于存储值的总的小数位数，而 2(scale)代表将被用于存储小数点后的位数。\n\n因此， 在这种情况下， 能被存储在 salary 列中的值的范围是从-9999999.99 到9999999.99。\n\n170","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3863,"question":"】MySQL 数据库作发布系统的存储，一天五万条以上的增量， 预计运维三年,怎么优化？避免 join 查询、添加索引、分表、缓存机制、","simplecontent":null,"content":"1、设计良好的数据库结构， 允许部分数据冗余， 尽量避免 join 查询， 提高效率。\n\n2、选择合适的表字段数据类型和存储引擎，    适当的添加索引。\n\n3、MySQL 库主从读写分离。\n\n4、找规律分表，    减少单表中的数据量提高查询速度。\n\n5、添加缓存机制， 比如 memcached， apc 等。\n\n6、不经常改动的页面，   生成静态页面。\n\n7、书写高效率的 SQL。比如 SELECT * FROM TABEL 改为 SELECT field_1, field_2, field_3 FROM TABLE.\n\n171","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3864,"question":"】pgsql 跨库查询插件？mysql用不了dblink","simplecontent":null,"content":"SELECT * FROM dblink('<连接名称>', '<SQL命令>') as <表名>(<列名> <列类型>); \nselect dblink_connect('test','host=localhost dbname=cbe_sta user=postgres password=lifc126820');\nselect * from dblink('host=127.0.0.1 port=3306 dbname=test user=root password=root','select id from cat') as t(id int)\n\n172","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3865,"question":"】锁的优化策略？1、读写分离2、分段加锁3、减少锁持有的时间4.多个线程尽量以相同的顺序去获取资源","simplecontent":null,"content":"不能将锁的粒度过于细化， 不然可能会出现线程的加锁和释放次数过多， 反而效率不如一次加一把大锁。\n\n173","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3847,"question":"】MySQL 中有哪些不同的表格？1、MyISAM2、Heap3、Merge4、INNODB5、ISAM","simplecontent":null,"content":"156","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3848,"question":"】如果一个表有一列定义为TIMESTAMP，将发生什么？每当行被更改时，   时间戳字段将获取当前时间戳。","simplecontent":null,"content":"列设置为 AUTO INCREMENT 时， 如果在表中达到最大值， 会发生什么情况？\n\n它会停止递增， 任何进一步的插入都将产生错误， 因为密钥已被使用。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3849,"question":"怎样才能找出最后一次插入时分配了哪个自动增量？","simplecontent":null,"content":"LAST_INSERT_ID 将返回由 Auto_increment 分配的最后一个值， 并且不需要指定表名称。\n\n\n157","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3850,"question":"】你怎么看到为表格定义的所有索引？","simplecontent":null,"content":"索引是通过以下方式为表格定义的：\n\nSHOW INDEX FROM <tablename>;\n\n158","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3851,"question":"】LIKE 声明中的％和_是什么意思？","simplecontent":null,"content":"％ 对应于 0 个或更多字符，_只是 LIKE 语句中的一个字符。\n\n如何在 Unix 和 MySQL 时间戳之间进行转换？\n\nUNIX_TIMESTAMP 是从 MySQL 时间戳转换为 Unix 时间戳的命令FROM_UNIXTIME 是从 Unix 时间戳转换为 MySQL 时间戳的命令\n\n159","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3852,"question":"】列对比运算符是什么？<![CDATA[ >= ]]>","simplecontent":null,"content":"在 SELECT 语句的列比较中使用=，<>，<=，<，> =，>，<<，>>，<=>，AND，\nOR 或 LIKE 运算符。\n\n\nmybatis <=，<，> =\n第一种写法（1）：\n\n原符号 < <= > >= & ' \"\n替换符号 &lt;    &lt;=    &gt;    &gt;=    &amp; &apos; &quot;\n例如：sql如下：\ncreate_date_time &gt;= #{startTime} and create_date_time &lt;= #{endTime}\n\n第二种写法（2）：\n大于等于\n<![CDATA[ >= ]]>\n小于等于\n<![CDATA[ <= ]]>\n例如：sql如下：\ncreate_date_time <![CDATA[ >= ]]> #{startTime} and create_date_time <![CDATA[ <= ]]> #{endTime}\n\n\n161","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3853,"question":"】BLOB 和TEXT 有什么区别？二进制、TEXT 是一个不区分大小写的 BLOB","simplecontent":null,"content":"BLOB 是一个二进制对象， 可以容纳可变数量的数据。TEXT 是一个不区分大小写的 BLOB。\n\nBLOB 和 TEXT 类型之间的唯一区别在于对 BLOB 值进行排序和比较时区分大小写， 对 TEXT 值不区分大小写。\n\n162","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3854,"question":"】MySQL_fetch_array 和MySQL_fetch_object 的区别是什么？数据文件具有“.MYD”","simplecontent":null,"content":"MySQL_fetch_array（ ） –  将结果行作为关联数组或来自数据库的常规数组返回。 MySQL_fetch_object –  从数据库返回结果行作为对象。\n\n163","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3855,"question":"】MyISAM 表格将在哪里存储，并且还提供其存储格式？数据文件具有“.MYD”、索引文件具有“.MYI”","simplecontent":null,"content":"每个 MyISAM 表格以三种格式存储在磁盘上：\n\n·“.frm” 文件存储表定义\n\n· 数据文件具有“.MYD” （ MYData） 扩展名索引文件具有“.MYI” （ MYIndex） 扩展名\n\n\n164","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3856,"question":"】MySQL 如何优化DISTINCT？所有列上转换为 GROUP BY","simplecontent":null,"content":"DISTINCT 在所有列上转换为 GROUP BY， 并与 ORDER BY 子句结合使用。SELECT DISTINCT t1.a FROM t1,t2 where  t1.a=t2.a;\n\n165","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3857,"question":"】Mysql查询第一条数据？Limit 0","simplecontent":null,"content":"Limit 0","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3858,"question":"】如何显示前 50 行？LIMIT 0,50;","simplecontent":null,"content":"在 MySQL 中， 使用以下代码查询显示前 50 行： SELECT*FROM\n\nLIMIT 0,50;\n\n166","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3859,"question":"】可以使用多少列创建索引？任何标准表最多可以创建 16 个索引","simplecontent":null,"content":"任何标准表最多可以创建 16 个索引列。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3860,"question":"】NOW（）和CURRENT_DATE（）有什么区别？显示当前年份， 月份， 日期， 小时， 分钟和秒、CURRENT_DATE（） 仅显示当前年份， 月份和日期。","simplecontent":null,"content":"NOW（） 命令用于显示当前年份， 月份， 日期， 小时， 分钟和秒。CURRENT_DATE（） 仅显示当前年份， 月份和日期。\n\n\n168","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:46","updateTime":"2021-05-26 01:07:46","isExist":null},{"id":3835,"question":"】基于主键索引和普通索引的查询有什么区别？普通索引需要回表","simplecontent":null,"content":"如果语句是 select * from T where ID=500，即主键查询方式，则只需要搜索 ID 这棵 B+ 树；\n如果语句是 select * from T where k=5，即普通索引查询方式，则需要先搜索 k 索引树，得到 ID 的值为 500，再到 ID 索引树搜索一次。这个过程称为回表。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3836,"question":"】组合索引最左原本则的意思是？","simplecontent":null,"content":"不是指2个字段顺序一定是按从组合索引的顺序，相反也会起作用，而是第一个字段必须要有","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3837,"question":"】Mysql用到多个索引是怎么样？","simplecontent":null,"content":"当有多个单列索引时，mysql只能用到其中那个它认为最有效率的单列索引\n\n增加组合索引后\n\n使用组合索引了\n\n\n用单个字段查询，也是触发组合索引\n\n三个索引只用到了组合索引","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3838,"question":"】 Mysql出现幻读问题？MVCC和间隙锁","simplecontent":null,"content":"mysql默认是Repeatable Read，有幻读问题，MVCC和间隙锁解决了幻读","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3839,"question":"】MySQL间隙锁问题？主要作用是为了防止出现幻读，但是它会把锁定范围扩大","simplecontent":null,"content":"删除数据找不到数据会对两边上间隙锁，另一个隔壁的线程也删除了产生了间隙锁，相互等待对方释放资源，就产生了死锁\n\n当高并发访问时执行delete操作和insert操作时，如 \n　　delete from user u where u.id = 2; insert into user u values(2);\n　　delete from user u where u.id = 3; insert into user u values(3);\n　　可能会出现乱序，delete from user u where u.id = 2;delete from user u where u.id = 3;这时当执行最后一条插入语句时就会抛出死锁。\n　　这时数据库会扫描索引，数据库会向左扫描扫到第一个比给定参数小的值， 向右扫描扫描到第一个比给定参数大的值， 然后以此为界，构建一个区间，\n　　最终会锁住整个区间内的数据，这就是间隙锁的死锁，这种情况就得修改代码逻辑， 存在才删除，尽量不去删除不存在的记录。\n\n\n\n　　间隙锁（Gap Lock）：锁加在不存在的空闲空间，可以是两个索引记录之间，也可能是第一个索引记录之前或最后一个索引之后的空间。\n　　最近用户反馈说系统老是出现insert时，等待超时了，最后发现是insert间隙锁！间隙锁是innodb中行锁的一种， 但是这种锁锁住的却不止一行数据，他锁住的是多行，是一个数据范围。间隙锁的主要作用是为了防止出现幻读，但是它会把锁定范围扩大，有时候也会给我们带来麻烦，我们就遇到了。 在数据库参数中， 控制间隙锁的参数是：\n　　innodb_locks_unsafe_for_binlog，这个参数默认值是OFF， 也就是启用间隙锁， 他是一个bool值， 当值为true时表示disable间隙锁。\n　　那为了防止间隙锁是不是直接将innodb_locaks_unsafe_for_binlog设置为true就可以了呢？ 不一定！而且这个参数会影响到主从复制及灾难恢复， 这个方法还尚待商量。\n间隙锁的出现主要集中在同一个事务中先delete后 insert的情况下， 当我们通过一个参数去删除一条记录的时候， 如果参数在数据库中存在，那么这个时候产生的是普通行锁，锁住这个记录， 然后删除， 然后释放锁。如果这条记录不存在，问题就来了， 数据库会扫描索引，发现这个记录不存在， 这个时候的delete语句获取到的就是一个间隙锁，然后数据库会向左扫描扫到第一个比给定参数小的值，向右扫描扫描到第一个比给定参数大的值， 然后以此为界，构建一个区间， 锁住整个区间内的数据， 一个特别容易出现死锁的间隙锁诞生了。\n\n　在没有并发，或是极少并发的情况下， 这样会可能会正常执行，在Mysql中， 事务最终都是穿行执行， 但是在高并发的情况下， 执行的顺序就极有可能发生改变， 变成下面这个样子：\nsql> delete from testLock where id = ‘6’;\nsql> insert into testLock(id,name) values(‘6’, ‘hahaha’);\n　　这个时候最后一条语句：insert into testLock(id,name) values(‘6’, ‘hahaha’); 执行时就会爆出死锁错误。因为删除id = 6这条记录的时候，id为6之后的部分都被锁住了， 他们都取得了这一个数据段的共享锁， 所以在获取这个数据段的排它锁时出现死锁。\n　　这种问题的解决办法：通过修改数据库的参数innodb_locaks_unsafe_for_binlog来取消间隙锁从而达到避免这种情况的死锁的方式尚待商量， 那就只有修改代码逻辑， 存在才删除，尽量不去删除不存在的记录。\n\n\n举个例子：\n表task_queue\nId           taskId\n1              2\n3              9\n10            20\n40            41\n\n开启一个会话： session 1\nsql> set autocommit=0;\n   ##\n取消自动提交\n\nsql> delete from task_queue where taskId = 20;\nsql> insert into task_queue values(20, 20);\n\n在开启一个会话： session 2\nsql> set autocommit=0;\n   ##\n取消自动提交\n\nsql> delete from task_queue where taskId = 25;\nsql> insert into task_queue values(30, 25);\n\n在没有并发，或是极少并发的情况下， 这样会可能会正常执行，在Mysql中， 事务最终都是穿行执行， 但是在高并发的情况下， 执行的顺序就极有可能发生改变， 变成下面这个样子：\nsql> delete from task_queue where taskId = 20;\nsql> delete from task_queue where taskId = 25;\nsql> insert into task_queue values(20, 20);\nsql> insert into task_queue values(30, 25);\n\n这个时候最后一条语句：insert into task_queue values(30, 25); 执行时就会爆出死锁错误。因为删除taskId = 20这条记录的时候，20 –  41 都被锁住了， 他们都取得了这一个数据段的共享锁， 所以在获取这个数据段的排它锁时出现死锁。\n\n这种问题的解决办法：前面说了， 通过修改innodb_locaks_unsafe_for_binlog参数来取消间隙锁从而达到避免这种情况的死锁的方式尚待商量， 那就只有修改代码逻辑， 存在才删除，尽量不去删除不存在的记录。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3840,"question":"】最新测试？百分之15左右索引会起作用","simplecontent":null,"content":"使用<和>会使用到锁，但是如何数据量范围很乏就会变成全表扫描，小量会起作用","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3841,"question":"】mysql的驱动？","simplecontent":null,"content":"1:Class.forName(\"com.mysql.jdbc.Driver\");\n1.Class.forName(\"com.mysql.jdbc.Driver\");//加载数据库驱动  \n2. String url=\"jdbc:mysql://localhost:3306/databasename\";//数据库连接子协议  \n3. Connection conn=DriverManager.getConnection(url,\"username\",\"password\");  \n\n2:DriverManager.registerDriver(new Driver());\n1.new com.mysql.jdbc.Driver();//创建driver对象，加载数据库驱动  \n2. String url=\"jdbc:mysql://localhost:3306/databasename\";//数据库连接子协议  \n3. Connection conn=DriverManager.getConnection(url,\"username\",\"password\");  \n\n1.tatic {  \n2.        try {  \n3.            java.sql.DriverManager.registerDriver(new Driver());  \n4.        } catch (SQLException E) {  \n5.            throw new RuntimeException(\"Can't register driver!\");  \n6.        }  \n7.    }  \n\n3:System.setProperty(\"jdbc:drivers\", \"com.mysql.jdbc.Driver\");\n1.System.setProperty(\"jdbc.driver\",\"com.mysql.jdbc.Driver\");//系统属性指定数据库驱动  \n2.String url=\"jdbc:mysql://localhost:3306/databasename\";//数据库连接子协议  \n3.Connection conn=DriverManager.getConnection(url,\"username\",\"password\");  ","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3842,"question":"敦煌网数据？","simplecontent":null,"content":"敦煌网的综合排名在1644，每天的ip为35万左右，pv为250万左右，且每天的访问量中有23%来自美国，22%来自中国，其他的是其他的国家。\n王树彤女士于2004年创立，目前有6400万商品\n19年的订单\n\nselect RFXSTATUSID ,count(1) from td_rfx_index  where STARTEDDATE < to_date('2022-01-01','yyyy-MM-dd') and STARTEDDATE >=to_date('2019-01-01','yyyy-MM-dd')  group by  RFXSTATUSID \n\n101001 Waiting Assign 等待分配\n101002 Waiting Assign Confirm 等待分配确认\n101003 Awaiting Payment 等待买家付款\n101004 Order Processing 执行中\n101005 Waiting Payment 等待买家付款，请勿发货\n101006 Pending seller confirmation 买家已付款，等待卖家确认\n101007 Waiting Seller to Delivery 买家已付款，等待卖家发货\n101008 Order rejected by seller 卖家无法执行订单\n101009 Pending delivery confirmation 等待买家确认收货\n101010 Order rejected; Seller failed to confirm 卖家在指定时间，没确定执行\n101011 Order Canceled by Seller 卖家取消订单\n102001 Pending payment verification 买家已付款，等待平台确认\n102002 Payment Confirmed 款已到帐，请准备发货\n102003 Order Purchase Apply 订单采购申请中\n102004 Verified the Apply 采购申请审核通过\n102005 Import shipping costs 填写运费\n102006 Buyer Accepted Goods 已确认收货\n102007 Shipping Exceed 7 Days 已确认收货\n102008 Applying for a refund 买家要求退款\n102009 Full Refund to Buyer  全额退款\n102010 Waiting Payment Release 等待放款\n102100 Refunded Refund\n102101 Charge back Charge back\n102111 Payment released 交易成功\n103001 Items being processed 等待发货\n103002 Portion of order shipped 已部分发货\n103100 All Goods Delivered 卖家已发货，等待买家确认\n104001 Dispute opened 双方纠纷处理中\n104002 Dispute submitted to DHgate 纠纷提交到平台\n104003 Pending approval on dispute resolution 等待协议确认\n104004 Agreement reached 协议达成\n104111 Dispute Closed 纠纷处理结束\n105001 Pending agreement on refund 买家申请退款，等待协商结果\n105002 Refund agreement reached 退款协议已达成\n105003 Partial refund is made; Items being processed 部分退款后，等待发货\n105004 Buyer canceled refund request 买家取消退款申请\n106002 Buyer escalated the case to DHgate 买家投诉到平台\n106003 Agreement on the solution reached 协议已达成，执行中\n111000 Canceled 订单取消\n111111 Closed 交易关闭\n\n\n线上商品：2000万  每张表有30万 \n订单量：23836292 select count(1) from td_rfx_index \n查询一年订单量2018-28986  2019-7555212  2017-1229  2020-16226575\nselect count(*) from td_rfx_index   where STARTEDDATE < to_date('2019-01-01','yyyy-MM-dd') and STARTEDDATE >=to_date('2018-01-01','yyyy-MM-dd') \n\n\nselect to_char(STARTEDDATE ,'MM') , count(1) from td_rfx_index   where STARTEDDATE < to_date('2020-01-01','yyyy-MM-dd') and STARTEDDATE >=to_date('2019-01-01','yyyy-MM-dd')  \n\ngroup by to_char(STARTEDDATE ,'MM') \n\n\n\nselect count(1) from td_rfx_index  where RFXSTATUSID in('102006','102007')\nCOUNT(1)\n\n151843","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3843,"question":"】分库分表之后，id 主键如何处理？","simplecontent":null,"content":"每个表都是从 1 开始累加，那肯定不对啊，需要一个全局唯一的 id 来支持\n1.使用雪花算法使用18位雪花算法\n2.商品编码是9位","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3844,"question":"】mysql为什么推荐主键是自增的？聚集索引","simplecontent":null,"content":"如果我们定义了主键(PRIMARY KEY)，那么InnoDB会选择主键作为聚集索引、如果没有显式定义主键，则InnoDB会选择第一个不包含有NULL值的唯一索引作为主键索引、如果也没有这样的唯一索引，则InnoDB会选择内置6字节长的ROWID作为隐含的聚集索引(ROWID随着行记录的写入而主键递增，这个ROWID不像ORACLE的ROWID那样可引用，是隐含的)。\n\n如果表使用自增主键，那么每次插入新的记录，记录就会顺序添加到当前索引节点的后续位置，当一页写满，就会自动开辟一个新的页\n5、如果使用非自增主键（如果身份证号或学号等），由于每次插入主键的值近似于随机，因此每次新纪录都要被插到现有索引页得中间某个位置，此时MySQL不得不为了将新记录插到合适位置而移动数据，甚至目标页面可能已经被回写到磁盘上而从缓存中清掉，此时又要从磁盘上读回来，这增加了很多开销，同时频繁的移动、分页操作造成了大量的碎片，得到了不够紧凑的索引结构，后续不得不通过OPTIMIZE TABLE来重建表并优化填充页面。\n \n综上总结，如果InnoDB表的数据写入顺序能和B+树索引的叶子节点顺序一致的话，这时候存取效率是最高的，也就是下面这几种情况的存取效率最高：\n1、使用自增列(INT/BIGINT类型)做主键，这时候写入顺序是自增的，和B+数叶子节点分裂顺序一致；\n2、该表不指定自增列做主键，同时也没有可以被选为主键的唯一索引(上面的条件)，这时候InnoDB会选择内置的ROWID作为主键，写入顺序和ROWID增长顺序一致；\n除此以外，如果一个InnoDB表又没有显示主键，又有可以被选择为主键的唯一索引，但该唯一索引可能不是递增关系时(例如字符串、UUID、多字段联合唯一索引的情况)，该表的存取效率就会比较差。","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3845,"question":"】mysql为什么用b+树，为什么非叶子节点不存数据？不支持范围查询和排序查询","simplecontent":null,"content":"不支持范围查询和排序查询","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3846,"question":"】MySQL 中有哪几种锁？表级锁、页面锁、行级锁","simplecontent":null,"content":"1、表级锁： 开销小， 加锁快； 不会出现死锁； 锁定粒度大， 发生锁冲突的概率最高， 并发度最低。\n\n2、行级锁： 开销大， 加锁慢； 会出现死锁； 锁定粒度最小， 发生锁冲突的概率最低， 并发度也最高。\n\n3、页面锁： 开销和加锁时间界于表锁和行锁之间； 会出现死锁； 锁定粒度界于表锁和行锁之间， 并发度一般。\n\n155","filterContent":null,"type":"java-mysql","status":0,"createTime":"2021-05-26 01:07:45","updateTime":"2021-05-26 01:07:45","isExist":null},{"id":3829,"question":"8 哨兵集群的自动发现机制？？？？？","simplecontent":null,"content":"哨兵互相之间的发现，是通过redis的pub/sub系统实现的，每个哨兵都会往sentinel:hello这个channel里发送一个消息，这时候所有其他哨兵都可以消费到这个消息，并感知到其他的哨兵的存在 \n每隔两秒钟，每个哨兵都会往自己监控的某个master+slaves对应的sentinel:hello channel里发送一个消息，内容是自己的host、ip和runid还有对这个master的监控配置 \n每个哨兵也会去监听自己监控的每个master+slaves对应的sentinel:hello channel，然后去感知到同样在监听这个master+slaves的其他哨兵的存在 \n每个哨兵还会跟其他哨兵交换对master的监控配置，互相进行监控配置的同步","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:45","updateTime":"2021-05-26 01:06:45","isExist":null},{"id":3830,"question":"9 slave配置的自动纠正？？？？？","simplecontent":null,"content":"哨兵会负责自动纠正slave的一些配置，比如slave如果要成为潜在的master候选人，哨兵会确保slave在复制现有master的数据; 如果slave连接到了一个错误的master上，比如故障转移之后，那么哨兵会确保它们连接到正确的master上","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:45","updateTime":"2021-05-26 01:06:45","isExist":null},{"id":3831,"question":"10 master选举算法？？？？？？？？？？","simplecontent":null,"content":"如果一个master被认为odown了，而且majority哨兵都允许了主备切换，那么某个哨兵就会执行主备切换操作，此时首先要选举一个slave来。 \n选举的时候会考虑slave的一些信息： \n1.跟master断开连接的时长 \n2.slave优先级 \n3.复制offset \n4.run id \n如果一个slave跟master断开连接已经超过了down-after-milliseconds的10倍，外加master宕机的时长，那么slave就被认为不适合选举为master，计算公式如下：\n1\t(down-after-milliseconds * 10) + milliseconds_since_master_is_in_SDOWN_state\n　　\n接下来会对slave进行排序 \n（1）按照slave优先级进行排序，slave priority越低，优先级就越高 \n（2）如果slave priority相同，那么看replica offset，哪个slave复制了越多的数据，offset越靠后，优先级就越高 \n（3）如果上面两个条件都相同，那么选择一个run id比较小的那个slave","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:45","updateTime":"2021-05-26 01:06:45","isExist":null},{"id":3832,"question":"11 configuration epoch？？？？？","simplecontent":null,"content":"哨兵会对一套redis master+slave进行监控，有相应的监控的配置 \n执行切换的那个哨兵，会从要切换到的新master（salve->master）那里得到一个configuration epoch，这就是一个version号，每次切换的version号都必须是唯一的 \n如果第一个选举出的哨兵切换失败了，那么其他哨兵，会等待failover-timeout时间，然后接替继续执行切换，此时会重新获取一个新的configuration epoch，作为新的version号","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:45","updateTime":"2021-05-26 01:06:45","isExist":null},{"id":3833,"question":"12 configuraiton传播？？？？？？？？？？","simplecontent":null,"content":"哨兵完成切换之后，会在自己本地更新生成最新的master配置，然后同步给其他的哨兵，就是通过之前说的pub/sub消息机制 \n这里之前的version号就很重要了，因为各种消息都是通过一个channel去发布和监听的，所以一个哨兵完成一次新的切换之后，新的master配置是跟着新的version号的 \n其他的哨兵都是根据版本号的大小来更新自己的master配置的","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:45","updateTime":"2021-05-26 01:06:45","isExist":null},{"id":3834,"question":"】项目如何使用Reids？所有订单表作为缓存、登录信息、日志、商品导入","simplecontent":null,"content":"Redis是一个继memcached后的又一个第三方缓存数据库，他比memcached强大很多，支持更多的数据类型（String、list、set、sort set、hash），支持持久化，支持集群；Redis虽然支持持久化，但是他并不适合持久化的保存数据。因为他不是很稳定。但是由于他是保存在内存中，读取速度非常快，所以在项目中一般都用它作为数据库和应用程序直接的中间层来使用，已减轻数据库压力，提高运行效率。\n我们项目中很多地方用到了redis；比如商品的三级分类、省市县、关于我们、联系我们、友情链接，常见问题等经常查询但是不经常改变的数据.redis还可以在tomcat集群里边实现session的共享。由于他的单线程的，所以在电商平台里边也经常用他做“防止超卖”, 生成规则的商品编号等。还有就是购物车也用到了redis\n 代码中，我们一般都通过spring整合redis官方提供的jedis工具包来操作redis。可以是单机版，也可以是集群。Redis本身就支持集群操作redis_cluster，另外redis还支持主从复杂，还有他独特的哨兵模式，在主服务器宕机时，从服务器可以自动转换为主服务器。另外，他也有他的分片机制，就像mysql的水平分表设计，数据量大时，可以把数据存储到不同的库中，来减轻redis负担。\nRedis的持久化方式主要有2种，RDB和AOF，RDB是一种快照方式，默认每隔5分钟创建一个快照副本，这种方式占用空间大，而且会丢失间隔时间5分钟之内的数据，但是他适合做备份，恢复时，可以根据需要恢复任意间隔时间点的数据。AOF是一种日志的持久化记录方式，每秒钟，都把redis中新增的数据记录到日志文件中，这种方式只有一个文件，占用空间少，最多丢失1秒内的数据。相对比较好，但是如果想要恢复5分钟或10分钟前某个时间点的数据，就不行了。所以实际项目中，我们一般会两种方式同时使用。如果搭建集群的话，还可以通过集群互相备份数据，只要集群不同时挂掉，单个redis就可以从集群中的其他服务器获取到最新数据。\n 还有就是，由于redis不是很稳定，有时候会发生“穿透”和“雪崩”； redis，都是按照key去缓存查询，如果不存在对应的value，就应该去数据库查找。如果key对应的value是一定不存在的，并且对该key并发请求量很大，就会对后端系统造成很大的压力。这就叫做缓存穿透。当缓存服务器重启或者大量缓存集中在某一个时间段失效，这样在失效的时候，也会给后端系统(比如DB)带来很大压力，这就叫“缓存雪崩”。解决办法是，对查询结果为空的情况也进行缓存，并且给缓存设置不同的有效期。当然redis容灾的最有效的方法还是搭建集群。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:45","updateTime":"2021-05-26 01:06:45","isExist":null},{"id":3812,"question":"】Redis事务操作代码有什么？","simplecontent":null,"content":"《MULTI、EXEC、DISCARD和WATCH》\nRedis事务功能是通过MULTI、EXEC、DISCARD和WATCH 四个原语实现的\nRedis会将一个事务中的所有命令序列化，然后按顺序执行。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3813,"question":"】Redis事务原理是什么?","simplecontent":null,"content":"1.redis 不支持回滚“Redis 在事务失败时不进行回滚，而是继续执行余下的命令”， 所以 Redis 的内部可以保持简单且快速。\n2.如果在一个事务中的命令出现错误，那么所有的命令都不会执行；\n3.如果在一个事务中出现运行错误，那么正确的命令会被执行。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3814,"question":"】如何释放锁?","simplecontent":null,"content":"《del key 命令》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3815,"question":"】如何解决死锁？超时释放","simplecontent":null,"content":"《超时释放》\n1）通过Redis中expire()给锁设定最大持有时间，如果超过，则Redis来帮我们释放锁。\n2） 使用 setnx key “当前系统时间+锁持有的时间”和getset key “当前系统时间+锁持有的时间”组合的命令就可以实现。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3816,"question":"】Redis使用setnx加锁原理?","simplecontent":null,"content":"方案二\n        利用setnx命令加锁，其中key是锁，value是锁的过期时间，1.通过setnx()方法尝试加锁，如果当前锁不存在，返回加锁成功。2. 如果锁已经存在则获取锁的过期时间，和当前时间比较，如果锁已经过期，则设置新的过期时间，返回加锁成功。\n如果锁未过期则请求进入等待队列中\n\n伪代码如下：\n long expires = System.currentTimeMillis() + expireTime;\n    String expiresStr = String.valueOf(expires);\n\n    // 如果当前锁不存在，返回加锁成功\n    if (setnx(key, expiresStr) == 1) {\n        return true;\n    }\n\n    // 如果锁存在，获取锁的过期时间\n    String currentValueStr = get(key);\n    if (currentValueStr != null && Long.parseLong(currentValueStr) < System.currentTimeMillis()) {\n        // 锁已过期，获取上一个锁的过期时间，并设置现在锁的过期时间\n        String oldValueStr = jedis.getSet(lockKey, expiresStr);\n        if (oldValueStr != null && oldValueStr.equals(currentValueStr)) {\n            // 考虑多线程并发的情况，只有一个线程的设置值和当前值相同，它才有权利加锁\n            return true;\n        }\n    }\n        \n    // 其他情况，一律返回加锁失败\n    return false;\n\n\n1.1方案一\n        利用setnx和expire命令实现加锁。当一个线程执行setnx返回1，说明key不存在，该线程获得锁；当一个线程执行setnx返回0，说明key已经存在，则获取锁失败。expire就是给锁加一个过期时间。伪代码如下：\nif(setnx(key,value)==1){\n     expire(key,expireTime)\n     try{\n        //业务处理\n     }finally{\n       del(key)\n     }\n}\n        该方案有一个致命问题，由于setnx和expire是两条Redis命令，不具备原子性，如果一个线程在执行完setnx()之后突然崩溃，导致锁没有设置过期时间，那么将会发生死锁。\n\n\n1.3方案三\n        Redis2.6.12以上版本为set命令增加了可选参数，伪代码如下：\nif(redis.set(key,value,\"ex 180\",\"nx\")){\n     //业务处理\n     do something;\n     //释放锁\n     redis.delete(key);\n}\n        我们对锁设置了过期时间，即使锁的持有者后续发生崩溃而没有解锁，锁也会因为到了过期时间而自动解锁（即key被删除），不会发生死锁。\n\n// redis实现分布式锁 有两个超时 时间问题\n\t/**\n\t * 两个超时时间含义：<br>\n\t * 1.在获取锁之前的超时时间----在尝试获取锁的时候，如果在规定的时间内还没有获取锁，直接放弃。<br>\n\t * 2.在获取锁之后的超时时间---当获取锁成功之后，对应的key 有对应有效期，对应的key 在规定时间内进行失效","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3817,"question":"】获取锁之后如何防止死锁？锁的超时时间","simplecontent":null,"content":"还要设置锁的超时时间 目的是为了防止死锁","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3818,"question":"】Setnx如果加锁返回什么  未加锁返回什么？1 0","simplecontent":null,"content":"1  0","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3819,"question":"】如何设置超时时间？conn.expire(redislockKey, expireLock);","simplecontent":null,"content":"conn.expire(redislockKey, expireLock);","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3820,"question":"】Redis如何批量操作?使用Pipeline管道","simplecontent":null,"content":"Java Redis的Pipeline管道，批量操作，节省大量网络往返时间 & Redis批量读写（hmset&hgetall） 使用Pipeline\n批量插入10条记录到redis的rd_table表中\n\n public static void main(String[] args) throws Exception{\n    List<Map<String, String>> addList=new ArrayList<Map<String,String>>();\n    for(int i=1;i<10;i++){\n      HashMap<String, String> hashMap = new HashMap<String, String>();\nhashMap.put(\"key\"+i,\"value\"+i);\naddList.add(hashMap);\n    }\n    if(addList.size()>0){\npipelineHmset(0, \"rd_table\", addList);\n}\n}\n通过pipeline方式当有大批量的操作时候，我们可以节省很多原来浪费在网络延迟的时间，需要注意到是用pipeline方式打包命令发送，redis必须在处理完所有命令前先缓存起所有命令的处理结果。打包的命令越多，缓存消耗内存也越多。所以并不是打包的命令越多越好。\n使用Pipeline在对Redis批量读写的时候，性能上有非常大的提升。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3821,"question":"】Redis 如何操作list？lpush，lreange，lrem，llen","simplecontent":null,"content":"《lpush，lreange，lrem，llen》\nvoid add(String key,String...value){\n    jedis.lpush(key, value);\n    }\n  void getList(String key,int start,int end){\n    //获取指定长度的list集合\n    List<String> list=jedis.lrange(key, start, end);\n    }\n     \n /**\n    * 更新\n    * @param key\n    * @param index\n    * @param value\n    */\n    void setValue(String key,int index,String value){\n    jedis.lset(key, index, value);\n    }\n \n    /**\n    * 删除\n    */\n    void remValue(String key,int count,String value){\n    jedis.lrem(key, count, value);\n    }\n     \n    /**\n    * 查看list的长度\n    * @param key\n    * return :long\n    */\n    void getListSize(String key){\n    System.out.println(\"list的长度为：\"+jedis.llen(key));\n \n    }","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3822,"question":"】哨兵的作用？监控从即升为主机，故障转移","simplecontent":null,"content":"《监控从即升为主机，故障转移》\n哨兵是redis集群架构中非常重要的一个组件，主要功能如下： \n集群监控：负责监控redis master和slave进程是否正常工作 \n消息通知：如果某个redis实例有故障，那么哨兵负责发送消息作为报警通知给管理员 \n故障转移：如果master node挂掉了，会自动转移到slave node上 \n配置中心：如果故障转移发生了，通知client客户端新的master地址","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3823,"question":"quorum和majority是什么?","simplecontent":null,"content":"1.quorum：确认odown的最少的哨兵数量\n2.majority：授权进行主从切换的最少的哨兵数量\n3.每次一个哨兵要做主备切换，首先需要quorum数量的哨兵认为odown，然后选举出一个哨兵来做切换，这个哨兵还得得到majority哨兵的授权，才能正式执行切换\n4.如果quorum < majority，比如5个哨兵，majority就是3，quorum设置为2，那么就3个哨兵授权就可以执行切换，但是如果quorum >= majority，那么必须quorum数量的哨兵都授权，比如5个哨兵，quorum是5，那么必须5个哨兵都同意授权，才能执行切换","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3824,"question":"为什么哨兵至少3个节点?","simplecontent":null,"content":"哨兵集群必须部署2个以上节点。如果哨兵集群仅仅部署了个2个哨兵实例，那么它的majority就是2（2的majority=2，3的majority=2，5的majority=3，4的majority=2），如果其中一个哨兵宕机了，就无法满足majority>=2这个条件，那么在master发生故障的时候也就无法进行主从切换。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3825,"question":"哨兵的注意事项?","simplecontent":null,"content":"1.故障转移时，判断一个master node是宕机了，需要大部分的哨兵都同意才行，涉及到了分布式选举的问题\n2.哨兵至少需要3个实例，来保证自己的健壮性\n3.哨兵 + redis主从的部署架构，是不会保证数据零丢失的，只能保证redis集群的高可用性","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3826,"question":"3sdown和odown？？？？？？","simplecontent":null,"content":"1.sdown和odown两种失败状态\n2.sdown是主观宕机，就一个哨兵如果自己觉得一个master宕机了，那么就是主观宕机\n3.odown是客观宕机，如果quorum数量的哨兵都觉得一个master宕机了，那么就是客观宕机\n4.sdown达成的条件：如果一个哨兵ping一个master，超过了is-master-down-after-milliseconds指定的毫秒数之后，就主观认为master宕机\n5.odown达成的条件：如果一个哨兵在指定时间内，收到了quorum指定数量的其他哨兵也认为那个master是sdown了，那么就认为是odown了，客观认为master宕机","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3827,"question":"脑裂以及redis数据丢失？？？？？？","simplecontent":null,"content":"主备切换的过程，可能会导致数据丢失 \n（1）异步复制导致的数据丢失 \n因为master -> slave的复制是异步的，所以可能有部分数据还没复制到slave，master就宕机了，此时这些部分数据就丢失了 \n（2）脑裂导致的数据丢失 \n脑裂，也就是说，某个master所在机器突然脱离了正常的网络，跟其他slave机器不能连接，但是实际上master还运行着 \n此时哨兵可能就会认为master宕机了，然后开启选举，将其他slave切换成了master，这个时候，集群里就会有两个master，也就是所谓的脑裂。 \n此时虽然某个slave被切换成了master，但是可能client还没来得及切换到新的master，还继续写向旧master的数据可能也丢失了，因此旧master再次恢复的时候，会被作为一个slave挂到新的master上去，自己的数据会清空，重新从新的master复制数据","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3828,"question":"如何尽可能减少数据丢失?","simplecontent":null,"content":"下面两个配置可以减少异步复制和脑裂导致的数据丢失：\n1\n2\tmin-slaves-to-write 1\nmin-slaves-max-lag 10\n　　\n解释：要求至少有1个slave，数据复制和同步的延迟不能超过10秒，如果说一旦所有的slave，数据复制和同步的延迟都超过了10秒钟，那么这个时候，master就不会再接收任何请求了 \n（1）减少异步复制的数据丢失 \n有了min-slaves-max-lag这个配置，就可以确保说，一旦slave复制数据和ack延时太长，就认为可能master宕机后损失的数据太多了，那么就拒绝写请求，这样可以把master宕机时由于部分数据未同步到slave导致的数据丢失降低的可控范围内 \n（2）减少脑裂的数据丢失 \n如果一个master出现了脑裂，跟其他slave丢了连接，那么上面两个配置可以确保说，如果不能继续给指定数量的slave发送数据，而且slave超过10秒没有给自己ack消息，那么就直接拒绝客户端的写请求，这样脑裂后的旧master就不会接受client的新数据，也就避免了数据丢失 \n上面的配置就确保了，如果跟任何一个slave丢了连接，在10秒后发现没有slave给自己ack，那么就拒绝新的写请求。\n因此在脑裂场景下，最多就丢失10秒的数据","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:44","updateTime":"2021-05-26 01:06:44","isExist":null},{"id":3792,"question":"】操作热数据有什么作用？减少数据库压力","simplecontent":null,"content":"减少数据库压力","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3793,"question":"】Redis 支持的数据类型有哪些？","simplecontent":null,"content":"Redis 支持的数据类型：string（字符串）、list（列表）、hash（字典）、set（集合）、zset（有序集合）。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3794,"question":"】每种数据类型的使用场景?","simplecontent":null,"content":"回答：一共五种\n(一)String\n这个其实没啥好说的，最常规的set/get操作，value可以是String也可以是数字。一般做一些复杂的计数功能的缓存。\n(二)hash\n这里value存放的是结构化的对象，比较方便的就是操作其中的某个字段。博主在做单点登录的时候，就是用这种数据结构存储用户信息，以cookieId作为key，设置30分钟为缓存过期时间，能很好的模拟出类似session的效果。\n(三)list\n使用List的数据结构，可以做简单的消息队列的功能。另外还有一个就是，可以利用lrange命令，做基于redis的分页功能，性能极佳，用户体验好。本人还用一个场景，很合适—取行情信息。就也是个生产者和消费者的场景。LIST可以很好的完成排队，先进先出的原则。\n(四)Set\n《去重》\n因为set堆放的是一堆不重复值的集合。所以可以做全局去重的功能。为什么不用JVM自带的Set进行去重？因为我们的系统一般都是集群部署，使用JVM自带的Set，比较麻烦，难道为了一个做一个全局去重，再起一个公共服务，太麻烦了。\n另外，就是利用交集、并集、差集等操作，可以计算共同喜好，全部的喜好，自己独有的喜好等功能。\n(五)sorted set\n《排序，去重》\nsorted set多了一个权重参数score,集合中的元素能够按score进行排列。可以做排行榜应用，取TOP N操作。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3795,"question":"jedis 和 Redisson 有哪些区别？","simplecontent":null,"content":"jedis：提供了比较全面的 Redis 命令的支持。\nRedisson：实现了分布式和可扩展的 Java 数据结构，与 jedis 相比 Redisson 的功能相对简单，不支持排序、事务、管道、分区等 Redis 特性。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3796,"question":"】怎么保证缓存和数据库数据的一致性？过期时间，同步操作，先删缓存再更新数据库","simplecontent":null,"content":"《过期时间，同步操作，更新先删缓存》\n合理设置缓存的过期时间。\n新增、更改、删除数据库操作时同步更新 Redis，可以使用事物机制来保证数据的一致性。\n1.需要更新数据时，先更新数据库，然后把缓存里对应的数据失效掉（删掉）。\n\n\n在讨论这三种情况之前，先说明一下我使用缓存的策略，也是大多数人使用的策略，叫做 Cache Aside Pattern。简而言之，就是\n1. 首先尝试从缓存读取，读到数据则直接返回；如果读不到，就读数据库，并将数据会写到缓存，并返回。\n2. 需要更新数据时，先更新数据库，然后把缓存里对应的数据失效掉（删掉）。\n读的逻辑大家都很容易理解，谈谈更新。如果不采取我提到的这种更新方法，你还能想到什么更新方法呢？\n\n大概会是：先删除缓存，然后再更新数据库。这么做引发的问题是，如果A,B两个线程同时要更新数据，并且A,B已经都做完了删除缓存这一步，接下来，A先更新了数据库，C线程读取数据，由于缓存没有，则查数据库，并把A更新的数据，写入了缓存，最后B更新数据库。那么缓存和数据库的值就不一致了。\n\n另外有人会问，如果采用你提到的方法，为什么最后是把缓存的数据删掉，而不是把更新的数据写到缓存里。这么做引发的问题是，如果A,B两个线程同时做数据更新，A先更新了数据库，B后更新数据库，则此时数据库里存的是B的数据。而更新缓存的时候，是B先更新了缓存，而A后更新了缓存，则缓存里是A的数据。这样缓存和数据库的数据也不一致。按照我提到的这种更新缓存的策略，理论上也是有不一致的风险的，之前在其他的博客文章有看到过，只不过概率很小，我们暂时可以不考虑，后面我们有其他手段来补救。\n\n讨论完使用缓存的策略，我们再来看这三种不一致的情况。\n1. 对于第一种，在读数据的时候，会自动把数据库的数据写到缓存，因此不一致自动消除.\n2. 对于第二种，数据最终变成了不相等，但他们之前在某一个时间点一定是相等的（不管你使用懒加载还是预加载的方式，在缓存加载的那一刻，它一定和数据库一致）。这种不一致，一定是由于你更新数据所引发的。前面我们讲了更新数据的策略，先更新数据库，然后删除缓存。因此，不一致的原因，一定是数据库更新了，但是删除缓存失败了。\n3. 对于第三种，情况和第二种类似，你把数据库的数据删了，但是删除缓存的时候失败了。\n因此，最终的结论是，需要解决的不一致，产生的原因是更新数据库成功，但是删除缓存失败。\n\n解决方案大概有以下几种：\n1. 对删除缓存进行重试，数据的一致性要求越高，我越是重试得快。\n2. 定期全量更新，简单地说，就是我定期把缓存全部清掉，然后再全量加载。\n3. 给所有的缓存一个失效期。\n第三种方案可以说是一个大杀器，任何不一致，都可以靠失效期解决，失效期越短，数据一致性越高。但是失效期越短，查数据库就会越频繁。因此失效期应该根据业务来定。\n并发不高的情况：\n读: 读redis->没有，读mysql->把mysql数据写回redis，有的话直接从redis中取；\n写: 写mysql->成功，再写redis；","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3797,"question":"】并发高的情况如何使用redis？布隆过滤器，先写入redis，异步写回数据库","simplecontent":null,"content":"读: 读redis->没有，读mysql->把mysql数据写回redis，有的话直接从redis中取；\n写：异步话，先写入redis的缓存，就直接返回；定期或特定动作将数据保存到mysql，可以做到多次更新，一次保存；","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3798,"question":"】Redis 持久化有几种方式？Rdb、aof","simplecontent":null,"content":"Redis 的持久化有两种方式，或者说有两种策略：\nRDB（Redis Database）：指定的时间间隔能对你的数据进行快照存储。\nAOF（Append Only File）：每一个收到的写命令都通过write函数追加到文件中。\nRDB是Redis默认的持久化方式。按照一定的时间周期策略把内存的数据以快照的形式保存到硬盘的二进制文件。即Snapshot快照存储，对应产生的数据文件为dump.rdb，通过配置文件中的save参数来定义快照的周期。（ 快照可以是其所表示的数据的一个副本，也可以是数据的一个复制品。）\n\nAOF：Redis会将每一个收到的写命令都通过Write函数追加到文件最后，类似于MySQL的binlog。当Redis重启是会通过重新执行文件中保存的写命令来在内存中重建整个数据库的内容。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3799,"question":"】两种持久化方式怎么存储到硬件？1.快照到硬盘  2.追加到文件末尾","simplecontent":null,"content":"1.快照到硬盘  2.追加到文件末尾","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3800,"question":"】Redis默认持久化是什么？RDB","simplecontent":null,"content":"RDB","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3801,"question":"】Redis 分布式锁有什么缺陷？上锁和解锁不能保证原子性，需要配合lua保证原子性","simplecontent":null,"content":"Redis 分布式锁不能解决超时的问题，分布式锁有一个超时时间，程序的执行如果超出了锁的超时时间就会出现问题。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3802,"question":"】Redis 如何做内存优化？散列表批量存储","simplecontent":null,"content":"《散列表存储》\n尽量使用 Redis 的散列表，把相关的信息放到散列表里面存储，而不是把每个字段单独存储，这样可以有效的减少内存使用。比如将 Web 系统的用户对象，应该放到散列表里面再整体存储到 Redis，而不是把用户的姓名、年龄、密码、邮箱等字段分别设置 key 进行存储。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3803,"question":"redis的散列表操作存储数据?","simplecontent":null,"content":"Hash操作，也叫做散列表操作。redis中Hash在内存中的存储格式如下图：\nJedis jedis = new Jedis(\"127.0.0.1\",6379);10         /**11          \n* 示例1： hset hash的key 项的key 项的值12          */13         \njedis.hset(\"myhash\",\"id\",\"3\");14         \njedis.hset(\"myhash\",\"name\",\"xiaohong\");15         \njedis.hset(\"myhash\",\"age\",\"13\");\nString id = jedis.hget(\"myhash\", \"id\");\n        String name = jedis.hget(\"myhash\", \"name\");\n        String age = jedis.hget(\"myhash\", \"age\");\n\n        System.out.println(String.format(\"id = %s, name = %s, age = %s\",id,name,age));\n\n\nMap<String,String> map = new HashMap<>();17         \nmap.put(\"id\",\"1\");18         \nmap.put(\"name\",\"dongdong\");19         \nmap.put(\"age\",\"3\");20         \njedis.hmset(\"myhash\",map);\n List<String> hmget = jedis.hmget(\"myhash\", \"id\", \"name\", \"age\");\n        System.out.println(\"hmget = \" + hmget);\nhttps://www.cnblogs.com/xinhuaxuan/p/9256763.html","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3804,"question":"】redis的过期策略以及内存淘汰机制？定期删除+惰性删除","simplecontent":null,"content":"redis采用的是定期删除+惰性删除策略。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3805,"question":"】为什么不用定时删除策略?？","simplecontent":null,"content":"定时删除,用一个定时器来负责监视key,过期则自动删除。虽然内存及时释放，但是十分消耗CPU资源。在大并发请求下，CPU要将时间应用在处理请求，而不是删除key,因此没有采用这一策略.","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3806,"question":"】定期删除+惰性删除是如何工作的呢?1.定期删除，redis默认每个100ms检查，是否有过期的key,有过期key则删除 （随机检查key） 2.获取某个key的时候，redis会检查一下，过期了此时就会删除","simplecontent":null,"content":"定期删除，redis默认每个100ms检查，是否有过期的key,有过期key则删除。需要说明的是，redis不是每个100ms将所有的key检查一次，而是随机抽取进行检查(如果每隔100ms,全部key进行检查，redis岂不是卡死)。因此，如果只采用定期删除策略，会导致很多key到时间没有删除。\n于是，惰性删除派上用场。也就是说在你获取某个key的时候，redis会检查一下，这个key如果设置了过期时间那么是否过期了？如果过期了此时就会删除。\n采用定期删除+惰性删除就没其他问题了么?\n不是的，如果定期删除没删除key。然后你也没即时去请求key，也就是说惰性删除也没生效。这样，redis的内存会越来越高。那么就应该采用内存淘汰机制。\n在redis.conf中有一行配置\nmaxmemory-policy volatile-lru\n1\n该配置就是配内存淘汰策略的(什么，你没配过？好好反省一下自己)\nvolatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰\nvolatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰\nvolatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰\nallkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰\nallkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰\nno-enviction（驱逐）：禁止驱逐数据，新写入操作会报错\nps：如果没有设置 expire 的key, 不满足先决条件(prerequisites); 那么 volatile-lru, volatile-random 和 volatile-ttl 策略的行为, 和 noeviction(不删除) 基本上一致。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3807,"question":"】Redis 淘汰策略有哪些？设置过期时间最近最少使用、设置过期时间将要过期、设置过期时间任意选择、最近最少使用、任意选择数据、禁止驱逐数据","simplecontent":null,"content":"volatile-lru：从已设置过期时间的数据集（server. db[i]. expires）中挑选最近最少使用的数据淘汰。\n\nvolatile-ttl：从已设置过期时间的数据集（server. db[i]. expires）中挑选将要过期的数据淘汰。\n\nvolatile-random：从已设置过期时间的数据集（server. db[i]. expires）中任意选择数据淘汰。\n\nallkeys-lru：从数据集（server. db[i]. dict）中挑选最近最少使用的数据淘汰。\n\nallkeys-random：从数据集（server. db[i]. dict）中任意选择数据淘汰。\n\nno-enviction（驱逐）：禁止驱逐数据。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3808,"question":"】Redis 常见的性能问题有哪些？内存快照速度慢，主从复制慢，最好设置在一个局域网内，不设置内存快照","simplecontent":null,"content":"《内存快照速度慢，主从复制慢》\n主服务器写内存快照，会阻塞主线程的工作，当快照比较大时对性能影响是非常大的，会间断性暂停服务，所以主服务器最好不要写内存快照。\nRedis 主从复制的性能问题，为了主从复制的速度和连接的稳定性，主从库最好在同一个局域网内。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3809,"question":"】Redis 常见性能问题和解决方案？","simplecontent":null,"content":"(1) Master 最好不要做任何持久化工作，如 RDB 内存快照和 AOF 日志文件\n(2) 如果数据比较重要，某个 Slave 开启 AOF 备份数据，策略设置为每秒同步一次\n(3) 为了主从复制的速度和连接的稳定性， Master 和 Slave 最好在同一个局域网内\n(4) 尽量避免在压力很大的主库上增加从库\n(5) 主从复制不要用图状结构，用单向链表结构更为稳定，即： Master <- Slave1 <- Slave2 <-\nSlave3…","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3810,"question":"】为什么Redis的操作是原子性的，怎么保证原子性的？因为是单线程","simplecontent":null,"content":"对于Redis而言，命令的原子性指的是：一个操作的不可以再分，操作要么执行，要么不执行。\nRedis的操作之所以是原子性的，是因为Redis是单线程的。\nRedis本身提供的所有API都是原子操作，Redis中的事务其实是要保证批量操作的原子性。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3811,"question":"】多个命令在并发中也是原子性的吗？不是，需要配合lua","simplecontent":null,"content":"《不是，需要配合lua》\n不一定， 将get和set改成单命令操作，incr 。使用Redis的事务，或者使用Redis+Lua==的方式实现.","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:43","updateTime":"2021-05-26 01:06:43","isExist":null},{"id":3775,"question":"】Redis 是什么？内存数据库","simplecontent":null,"content":"Redis 是一个使用 C 语言开发的高速缓存数据库。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3776,"question":"】Redis 使用场景有哪些？热点信息、会话信息、任务队列","simplecontent":null,"content":"记录帖子点赞数、点击数、评论数；\n缓存近期热帖；\n缓存文章详情信息；\n记录用户会话信息。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3777,"question":"】Redis 有哪些功能？数据缓存、分布式锁、数据持久化、息队列列、事务","simplecontent":null,"content":"数据缓存功能\n分布式锁的功能\n支持数据持久化\n支持事务\n支持消息队列","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3778,"question":"Redis 和 memcache 有什么区别？","simplecontent":null,"content":"存储方式不同：memcache 把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小；Redis 有部份存在硬盘上，这样能保证数据的持久性。\n数据支持类型：memcache 对数据类型支持相对简单；Redis 有复杂的数据类型。\n使用底层模型不同：它们之间底层实现方式，以及与客户端之间通信的应用协议不一样，Redis 自己构建了 vm 机制，因为一般的系统调用系统函数的话，会浪费一定的时间去移动和请求。\nvalue 值大小不同：Redis 最大可以达到 512mb；memcache 只有 1mb。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3779,"question":"】Redis 为什么是单线程的？没有cpu竞争资源，cpu不是瓶颈没必要设置成多cpu了","simplecontent":null,"content":"（cpu，阻塞，切换）\n因为 cpu 不是 Redis 的瓶颈，Redis 的瓶颈最有可能是机器内存或者网络带宽。既然单线程容易实现，而且 cpu 又不会成为瓶颈，那就顺理成章地采用单线程的方案了。\n关于 Redis 的性能，官方网站也有，普通笔记本轻松处理每秒几十万的请求。\n而且单线程并不代表就慢 nginx 和 nodejs 也都是高性能单线程的代表。\n\n因为Redis是基于内存的操作，CPU不是Redis的瓶颈，Redis的瓶颈最有可能是机器内存的大小或者网络带宽。既然单线程容易实现，而且CPU不会成为瓶颈，那就顺理成章地采用单线程的方案了（毕竟采用多线程会有很多麻烦！）Redis利用队列技术将并发访问变为串行访问\n1）绝大部分请求是纯粹的内存操作（非常快速）2）采用单线程,避免了不必要的上下文切换和竞争条件\n3）非阻塞IO优点：\n1.速度快，因为数据存在内存中，类似于HashMap，HashMap的优势就是查找和操作的时间复杂度都是O(1)\n2. 支持丰富数据类型，支持string，list，set，sorted set，hash\n3.支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行\n4. 丰富的特性：可用于缓存，消息，按key设置过期时间，过期后将会自动删除如何解决redis的并发竞争key问题","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3780,"question":"】单线程的redis为什么这么快？内存操作、单线程、io非阻塞复用","simplecontent":null,"content":"《内存操作、单线程、io非阻塞复用》\n(一)纯内存操作\n(二)单线程操作，避免了频繁的上下文切换\n(三)采用了非阻塞I/O多路复用机制","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3781,"question":"】I/O多路复用是什么？","simplecontent":null,"content":"一个线程，通过记录I/O流的状态来同时管理多个I/O，可以提高服务器的吞吐能力。\n多路 I/O 复用模型是利用select、poll、epoll可以同时监察多个流的 I/O 事件的能力，在空闲的时候，会把当前线程阻塞掉，当有一个或多个流有I/O事件时，就从阻塞态中唤醒，于是程序就会轮询一遍所有的流（epoll是只轮询那些真正发出了事件的流），并且只依次顺序的处理就绪的流，这种做法就避免了大量的无用操作。这里“多路”指的是多个网络连接，“复用”指的是复用同一个线程。采用多路 I/O 复用技术可以让单个线程高效的处理多个连接请求（尽量减少网络IO的时间消耗），且Redis在内存中操作数据的速度非常快（内存内的操作不会成为这里的性能瓶颈），主要以上两点造就了Redis具有很高的吞吐量。\n\nselect, poll, epoll 都是I/O多路复用的具体的实现。epoll性能比其他几者要好。redis中的I/O多路复用的所有功能通过包装常见的select、epoll、evport和kqueue这些I/O多路复用函数库来实现的。\n\nI/O 多路复用模型是利用select、poll、epoll可以同时监察多个流的 I/O 事件的能力，在空闲的时候，会把当前线程阻塞掉，当有一个或多个流有I/O事件时，就从阻塞态中唤醒，于是程序就会轮询一遍所有的流（epoll是只轮询那些真正发出了事件的流），依次顺序的处理就绪的流，这种做法就避免了大量的无用操作。这里“多路”指的是多个网络连接，“复用”指的是复用同一个线程。采用多路 I/O 复用技术可以让单个线程高效的处理多个连接请求（尽量减少网络IO的时间消耗），且Redis在内存中操作数据的速度非常快（内存内的操作不会成为这里的性能瓶颈），主要以上两点造就了Redis具有很高的吞吐量。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3782,"question":"I/O复用模型有哪些?","simplecontent":null,"content":"1.select/poll\n\n2.epoll\nhttps://www.jianshu.com/p/6a6845464770\n\n3.1 select大妈 每一个女生下楼, select大妈都不知道这个是不是你的女神, 她需要一个一个询问, 并且select大妈能力还有限, 最多一次帮你监视1024个妹子\n3.2 poll大妈不限制盯着女生的数量, 只要是经过宿舍楼门口的女生, 都会帮你去问是不是你女神\n3.3 epoll大妈不限制盯着女生的数量, 并且也不需要一个一个去问. 那么如何做呢? epoll大妈会为每个进宿舍楼的女生脸上贴上一个大字条,上面写上女生自己的名字, 只要女生下楼了, epoll大妈就知道这个是不是你女神了, 然后大妈再通知你.","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3783,"question":"】对于大量的请求怎么样处理？redis是通过IO多路复用（select，epoll, kqueue，依据不同的平台，采取不同的实现）来处理多个客户端请求的","simplecontent":null,"content":"redis是一个单线程程序，也就说同一时刻它只能处理一个客户端请求；\nredis是通过IO多路复用（select，epoll, kqueue，依据不同的平台，采取不同的实现）来处理多个客户端请求的","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3784,"question":"】什么是缓存穿透？某个数据不存在，大量请求从数据库查询","simplecontent":null,"content":"缓存穿透：指查询一个一定不存在的数据，由于缓存是不命中时需要从数据库查询，查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到数据库去查询，造成缓存穿透。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3785,"question":"】缓存穿透解决方案？布隆过滤器，先查布隆过滤器","simplecontent":null,"content":"解决方案：最常见的则是采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。\n另外也有一个更为简单粗暴的方法，如果一个查询返回的数据为空（不管是数据不存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。通过这个直接设置的默认值存放到缓存，这样第二次到缓冲中获取就有值了，而不会继续访问数据库，这种办法最简单粗暴。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3786,"question":"】缓存雪崩是什么？大量数据缓存时间失效","simplecontent":null,"content":"我们可以简单的理解为：由于原有缓存失效，新缓存未到期间\n(例如：我们设置缓存时采用了相同的过期时间，在同一时刻出现大面积的缓存过期)，所有原本应该访问缓存的请求都去查询数据库了，而对数据库CPU和内存造成巨大压力，严重的会造成数据库宕机。从而形成一系列连锁反应，造成整个系统崩溃。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3787,"question":"】缓存雪崩解决办法是什么？锁或者队列或预热或永不过期，时间均匀","simplecontent":null,"content":"大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上《锁减少大量访问》\n大多数系统设计者考虑用加锁（ 最多的解决方案）或者队列的方式保证来保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上。还有一个简单方案就时讲缓存失效时间分散开。\n\n  1. 加锁排队. 限流-- 限流算法. 1.计数 2.滑动窗口 3.  令牌桶Token Bucket 4.漏桶 leaky bucket [1]\n 在缓存失效后，通过加锁或者队列来控制读数据库写缓存的线程数量。比如对某个key只允许一个线程查询数据和写缓存，其他线程等待。\n 业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。\nSETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果。\n     2.数据预热\n \n  可以通过缓存reload机制，预先去更新缓存，再即将发生大并发访问前手动触发加载缓存不同的key，设置不同的过期时间，让缓存失效的时间点尽量均匀\n     3.做二级缓存，或者双缓存策略。\n     A1为原始缓存，A2为拷贝缓存，A1失效时，可以访问A2，A1缓存失效时间设置为短期，A2设置为长期。\n      4.缓存永远不过期\n 这里的“永远不过期”包含两层意思：\n    (1) 从缓存上看，确实没有设置过期时间，这就保证了，不会出现热点key过期问题，也就是“物理”不过期。\n     (2) 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是“逻辑”过期.\n 从实战看，这种方法对于性能非常友好，唯一不足的就是构建缓存时候，其余线程(非构建缓存的线程)可能访问的是老数据，但是对于一般的互联网功能来说这个还是可以忍受。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3788,"question":"】缓存预热是什么？系统上线后，将相关的缓存数据直接加载到缓存系统，手工操作或者自动加载或定时刷新","simplecontent":null,"content":"缓存预热这个应该是一个比较常见的概念，相信很多小伙伴都应该可以很容易的理解，缓存预热就是系统上线后，将相关的缓存数据直接加载到缓存系统。这样就可以避免在用户请求的时候，先查询数据库，然后再将数据缓存的问题！用户直接查询事先被预热的缓存数据！\n解决思路：\n1、直接写个缓存刷新页面，上线时手工操作下；\n2、数据量不大，可以在项目启动的时候自动进行加载；\n3、定时刷新缓存；","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3789,"question":"】缓存更新是什么？缓存失效和定手动更新","simplecontent":null,"content":"《缓存失效和定手动更新》\n除了缓存服务器自带的缓存失效策略之外（Redis默认的有6中策略可供选择），我们还可以根据具体的业务需求进行自定义的缓存淘汰，常见的策略有两种：\n（1）定时去清理过期的缓存；\n（2）当有用户请求过来时，再判断这个请求所用到的缓存是否过期，过期的话就去底层系统得到新数据并更新缓存。\n两者各有优劣，第一种的缺点是维护大量缓存的key是比较麻烦的，第二种的缺点就是每次用户请求过来都要判断缓存失效，逻辑相对比较复杂！具体用哪种方案，大家可以根据自己的应用场景来权衡。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3790,"question":"】缓存降级是什么？服务不可用时","simplecontent":null,"content":"当访问量剧增、服务出现问题（如响应时间慢或不响应）或非核心服务影响到核心流程的性能时，仍然需要保证服务还是可用的，即使是有损服务。系统可以根据一些关键数据进行自动降级，也可以配置开关实现人工降级。\n降级的最终目的是保证核心服务可用，即使是有损的。而且有些服务是无法降级的（如加入购物车、结算）。\n以参考日志级别设置预案：\n（1）一般：比如有些服务偶尔因为网络抖动或者服务正在上线而超时，可以自动降级；\n（2）警告：有些服务在一段时间内成功率有波动（如在95~100%之间），可以自动降级或人工降级，并发送告警；\n（3）错误：比如可用率低于90%，或者数据库连接池被打爆了，或者访问量突然猛增到系统能承受的最大阀值，此时可以根据情况自动降级或者人工降级；\n（4）严重错误：比如因为特殊原因数据错误了，此时需要紧急人工降级。\nedis服务降级的目的\n是为了防止Redis服务故障，导致数据库跟着一起发生雪崩问题。因此，对于不重要的缓存数据，可以采取服务降级策略，例如一个比较常见的做法就是，Redis出现问题，不去数据库查询，而是直接返回默认值给用户。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3791,"question":"】热点数据和冷数据是什么？热点数据，缓存才有价值","simplecontent":null,"content":"热点数据，缓存才有价值\n对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不大。频繁修改的数据，看情况考虑使用缓存\n对于上面两个例子，寿星列表、导航信息都存在一个特点，就是信息修改频率不高，读取通常非常高的场景。\n对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。\n**数据更新前至少读取两次，**缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那就没有太大价值了。\n那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同步保存到Redis缓存，减少数据库压力。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:42","updateTime":"2021-05-26 01:06:42","isExist":null},{"id":3757,"question":"】Redis 中的管道有什么用？ 即使旧请求还未被响应，还可以处理新的请求","simplecontent":null,"content":"一次请求/响应服务器能实现处理新的请求即使旧的请求还未被响应，这样就可以将多个命令发送到服务 器，而不用等待回复，最后在一个步骤中读取该答复。 \n这就是管道（pipelining），是一种几十年来广泛使用的技术。例如许多 POP3 协议已经实现支持这个功 能，大大加快了从服务器下载新邮件的过程。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3758,"question":"】怎么理解 Redis 事务？ 原子性","simplecontent":null,"content":"事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行，事务在执行的过程中，不会 被其他客户端发送来的命令请求所打断。 \n事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3759,"question":"】Redis 事务相关的命令有哪几个？ MULTI、EXEC、DISCARD、WATCH （开启、执行、取消、监控）","simplecontent":null,"content":"MULTI、EXEC、DISCARD、WATCH （开启、执行、取消、监控）\n1.MULTI用来组装一个事务；\n2.EXEC用来执行一个事务；\n3.DISCARD用来取消一个事务；\n4.WATCH用来监视一些key，一旦这些key在事务执行之前被改变，则取消事务的执行。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3760,"question":"】一个字符串类型的值能存储最大容量是多少？ 512M","simplecontent":null,"content":"512M","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3761,"question":"】为什么 Redis 需要把所有数据放到内存中？ 为了达到最快的读写速度，磁盘 I/O 速度为严重影响","simplecontent":null,"content":"Redis 为了达到最快的读写速度将数据都读到内存中，并通过异步的方式将数据写入磁盘。 所以 redis 具有快速和数据持久化的特征，如果不将数据放在内存中，磁盘 I/O 速度为严重影响 redis 的性能。 \n在内存越来越便宜的今天，redis 将会越来越受欢迎， 如果设置了最大使用的内存，则数据已有记录数达 到内存限值后不能继续插入新值。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3762,"question":"Redis 集群方案应该怎么做？","simplecontent":null,"content":"1.codis2.目前用的最多的集群方案，基本和 twemproxy 一致的效果，但它支持在节点数量改变情况下，旧节点 数据可恢复到新 hash 节点。 \nredis cluster3.0 自带的集群，特点在于他的分布式算法不是一致性 hash，而是 hash 槽的概念，以及自 身支持节点设置从节点。具体看官方文档介绍。 \n3.在业务代码层实现，起几个毫无关联的 redis 实例，在代码层，对 key 进行 hash 计算，然后去对应的 redis 实例操作数据。这种方式对 hash 层代码要求比较高，考虑部分包括，节点失效后的替代算法方案，数据震荡后的自动脚本恢复，实例的监控，等等。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3763,"question":"】MySQL 里有 2000w 数据，redis 中只存 20w 的数据，如何保证 redis 中的数据都是热点数据？ 施行数据淘汰策略","simplecontent":null,"content":"redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3764,"question":"】Redis 主要消耗什么物理资源？ 内存","simplecontent":null,"content":" 内存","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3765,"question":"】你会如何设计与实现电商网站购物车？使用hash存储，客户id为key，商品为field，数量为value，新增商品追加field和value，数量变化更改value；同时将商品信息存入另一个redis的hash","simplecontent":null,"content":"答：\n①可以使用redis数据库，以客户id作为key，每位客户创建一个hash存储结构存储对应的购物车信息。\n②将商品编号作为field，购买数量作为value进行存储。\n③添加商品：追加全新的field与value。\n④浏览：遍历hash。\n⑤更改数量：自增/自减，设置value值。\n⑥删除商品：直接删除field。\n⑦清空购物车：直接删除key。\n⑧当前仅仅是将数据存储到了redis中，并没有起到加速的作用，商品信息还需要二次查询数据库，将每条购物车中的商品记录保存成两条field，field1专用于保存购买数量，命名格式：商品id:nums 数值；field2专用于保存购物车中显示的信息，包含文字描述，图片地址，所属商家信息等，命名格式：商品id:info json数据 。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3766,"question":"】双11活动日，销售手机充值卡的商家对移动、联通、电信的30元、50元、100元商品推出抢购活动，每种商品抢购上限1000张，你会怎么解决？Redis的hash","simplecontent":null,"content":"答：①使用redis的hash数据结构，以商家id作为key、将参与抢购的商品id作为field、将参与抢购的商品数量作为对应的value。②抢购时使用降值的方式控制产品数量，通过hincrby key field increment实现对指定key的field值实现值的更新操作，例如hincrby CMCC card30:nums -10实现对移动的30元商品数量实现-10操作。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3767,"question":"】微信朋友圈点赞，要求按照点赞顺序显示点赞好友信息，如果取消点赞，移除对应好友信息，你会怎么实现？Redis的list 移除指定的list的一条数据","simplecontent":null,"content":"答：redis 可以应用于具有操作先后顺序的数据控制，可以使用list数据结构实现，点赞时使用rpush key value从右添加实现顺序显示功能，取消点赞通过lrem key count value从list左边开始移除指定数据。\n127.0.0.1:6379> lpush mimvp 10\n(integer) 4\n127.0.0.1:6379> lrange mimvp 0 -1\n1) “10”\n2) “13”\n3) “11”\n4) “12”\n127.0.0.1:6379> sort mimvp\n1) “10”\n2) “11”\n3) “12”\n4) “13”","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3768,"question":"每位用户首次使用今日头条时会设置3项爱好的内容，但是后期为了增加用户的活跃度、兴趣点，必须让用户对其他信息类别逐渐产生兴趣，增加客户留存度，如何实现？","simplecontent":null,"content":"答：①可以利用redis数据库的set数据结构完成，系统分析出各个分类的最新或最热点信息条目并组织成set集合，随机挑选其中部分信息，配合用户关注信息分类中的热点信息组织成展示的全信息集合。②通过srandmember key [count]随机获取集合中指定数量的数据，通过spop key [count]随机获取集合中的某个数据并将该数据移出集合。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3769,"question":"】Redis的缺点？ 受内存限制，不能存储大量数据","simplecontent":null,"content":"Redis 的全称是：Remote Dictionary.Server，本质上是一个 Key-Value 类型的内存数据库，很像 memcached，整个数据库统统加载在内存当中进行操作，定期通过异步操作把数据库数据 flush 到硬盘 上进行保存。 因为是纯内存操作，Redis 的性能非常出色，每秒可以处理超过 10 万次读写操作，是已知性能最快的 Key-Value DB。 \nRedis 的出色之处不仅仅是性能，Redis 最大的魅力是支持保存多种数据结构，此外单个 value 的最大限 制是 1GB，不像 memcached 只能保存 1MB 的数据，因此 Redis 可以用来实现很多有用的功能。 \n比方说用他的 List 来做 FIFO 双向链表，实现一个轻量级的高性 能消息队列服务，用他的 Set 可以做高 性能的 tag 系统等等。 \n另外 Redis 也可以对存入的 Key-Value 设置 expire 时间，因此也可以被当作一 个功能加强版的 memcached 来用。 Redis 的主要缺点是数据库容量受到物理内存的限制，不能用作海量数据的高性能 读写，因此 Redis 适合的场景主要局限在较小数据量的高性能操作和运算上。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3770,"question":"】新闻网站会出现热点新闻，热点新闻最大的特征是时效性，如何自动控制热点新闻的时效性？设置有效时间","simplecontent":null,"content":"答：redis 可以控制数据的生命周期，通过数据是否失效控制业务行为，适用于所有具有时效性限定控制的操作，使用String数据结构，通过setex key seconds value 可以设置数据有效的生命周期，有效时间以秒为单位，也可以通过psetex key milliseconds value设置数据的有效时间，有效时间以毫秒为单位。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3771,"question":"】Redis有哪些应用场景？热点数据加速查询、任务队列、即时信息查询","simplecontent":null,"content":"答：①为热点数据加速查询（主要场景），如热点商品、热点新闻、热点资讯、推广类等高访问量信息等。\n②应用于任务队列，如秒杀、抢购、购票排队等。\n③即时信息查询，如排行榜、各类网站访问统计、公交到站信息、在线人数信息（聊天室、网站）、设备信号等。\n④时效性信息控制，如验证码控制、投票控制等。\n⑤分布式数据共享，如分布式集群架构中的 session 分离以及消息队列、分布式锁等。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3772,"question":"什么是NoSQL？列举几个你知道的NoSQL数据库。","simplecontent":null,"content":"答：①许多网站在海量用户访问的高并发情况下出现崩溃问题，根本原因是关系型数据库。关系型数据库有性能瓶颈：磁盘IO性能低下、扩展瓶颈：数据关系复杂，扩展性差，不便于大规模集群。②NoSQL即Not-Only SQL，泛指非关系型数据库，作为关系型数据库的补充，降低了磁盘IO次数——使用内存存储、去除数据间关系——不存储关系，仅存储数据。③NoSQL的特征：特征：可扩容，可伸缩；大数据量下高性能；灵活的数据模型；高可用。④常见的NoSQL数据库：Redis、memcache、HBase、MongoDB。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3773,"question":"】Redis的原子性是什么？","simplecontent":null,"content":"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3774,"question":"】高并发如何保证原子性？低并发使用事务、高并发使用redis+lua","simplecontent":null,"content":"《对事务是要么执行要么不执行；高并发使用redis+lua保证原子性》\n\n对于一个事务来说是原子性 要么执行要么不执行  但是在高发可能非原子性需要使用redis+lua实现高并发原子性\n之所以是原子性是因为单线程","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:41","updateTime":"2021-05-26 01:06:41","isExist":null},{"id":3740,"question":"】redis事务处理？1.jedis.multi()开启  2.transaction.exec()提交事务","simplecontent":null,"content":"1.jedis.multi()开启  2.transaction.exec()提交事务","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3741,"question":"】redis存储list？rpush尾部添加，显示lrange(\"language\",0,0)，然后删除redis.lpop(\"language\"))","simplecontent":null,"content":"《rpush尾部添加，显示lrange(\"language\",0,0)，然后删除redis.lpop(\"language\"))》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3742,"question":"】jedis减1和减6如何写？1.decr 2.desrby","simplecontent":null,"content":"《1.decr 2.desrby》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3743,"question":"】Redis过期或不存在返回什么?null","simplecontent":null,"content":"《null》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3744,"question":"]redis如何集群原理?配置三主三从集群","simplecontent":null,"content":"1.配置三主三从集群，更改端口号和配置信息\n2.启动6个redis\n3.下载Ruby和Ruby驱动\n4.执行集群命令","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3745,"question":"】redis的aof三种同步方式?每秒，每次写入同步，不同步","simplecontent":null,"content":"《每秒，每次写入同步，不同步》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3746,"question":"】aof和rdb优缺点?1.aof文件很大  2.rdb存在漏消息，但恢复速度快","simplecontent":null,"content":"《1.aof文件很大  2.rdb存在漏消息，但恢复速度快》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3747,"question":"】jedis.incrBy和jedis.incr区别?1.增加指定的值 2.增加1，没有设置0","simplecontent":null,"content":"《1.增加指定的值 2.增加1，没有设置0》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3748,"question":"】jedis向尾部追加值?jedis.append(\"steve\",\" Is Good Man\");","simplecontent":null,"content":"《jedis.append(\"steve\",\" Is Good Man\");》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3749,"question":"】Redis截取字段?jedis.substr(\"steve\",0,4)","simplecontent":null,"content":"《jedis.substr(\"steve\",0,4)》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3750,"question":"】Jedis.ttl作用?剩余生存时间，没有key返回-2，没有设置生存时间返回-1","simplecontent":null,"content":"《剩余生存时间，没有key返回-2，没有设置生存时间返回-1》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3751,"question":"】使用过 Redis 分布式锁么，它是怎么实现的？ 先拿 setnx 来争抢锁，抢到之后，再用 expire 给锁加一个过期时间防止锁忘记了释放。 如果在 setnx 之后执行 expire 之前进程意外 crash 或者要重启维护了，那会怎么样？ set 指令有非常复杂的参数，这个应该是可以同时把 setnx 和 expire 合成一条指令来用的","simplecontent":null,"content":" set 指令有非常复杂的参数，这个应该是可以同时把 setnx 和 expire 合成一条指令来用的","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3752,"question":"】使用过 Redis 做异步队列么，你是怎么用的？一般使用 list 结构作为队列，rpush 生产消息，lpop 消费消息。当 lpop 没有消息的时候，要适当 sleep 一会再重试。","simplecontent":null,"content":"《用过、redis队列会丢数据》\n缺点： \n在消费者下线的情况下，生产的消息会丢失，得使用专业的消息队列如 rabbitmq 等。 能不能生产一次消费多次呢？ 使用 pub/sub 主题订阅者模式，可以实现 1:N 的消息队列。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3753,"question":"】Redis作为队列的缺点？消费过程中挂了没办法重新消费","simplecontent":null,"content":"消费过程中挂了没办法重新消费","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3754,"question":"Redis 集群的主从复制模型是怎样的？","simplecontent":null,"content":"为了使在部分节点失败或者大部分节点无法通信的情况下集群仍然可用，所以集群使用了主从复制模型, 每个节点都会有 N-1 个复制品.","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3755,"question":"】Redis 集群会有写操作丢失吗？ 可能存在丢失","simplecontent":null,"content":"Redis 并不能保证数据的强一致性，这意味这在实际中集群在特定的条件下可能会丢失写操作。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3756,"question":"】Redis 集群之间是如何复制的？ 异步复制","simplecontent":null,"content":"《异步复制 》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:40","updateTime":"2021-05-26 01:06:40","isExist":null},{"id":3729,"question":"】存储一条数据很大怎么办？会卡，淘汰机制，限制插入","simplecontent":null,"content":"会卡，淘汰机制，限制插入","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3730,"question":"】redis一个值最大存储量？字符串一次最大512M，list和set和map和zset限制个数2^32-1","simplecontent":null,"content":"《字符串一次最大512M，list和set和map和zset限制个数2^32-1，》\nStrings类型：一个String类型的value最大可以存储512M\nLists类型：list的元素个数最多为2^32-1个，也就是4294967295个。\nSets类型：元素个数最多为2^32-1个，也就是4294967295个。\nHashes类型：键值对个数最多为2^32-1个，也就是4294967295个。\nSorted sets类型：跟Sets类型相似。\"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3731,"question":"】redis存储多大数据？与内存和硬盘有关","simplecontent":null,"content":"《与内存和硬盘有关》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3732,"question":"】什么情况下使用redis，什么时候使用mysql？变化不多，数据量大的数据使用redis","simplecontent":null,"content":"《变化不多，数据量大的数据使用redis》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3733,"question":"】怎么测试 Redis 的连通性？ping","simplecontent":null,"content":"《ping》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3734,"question":"】redis缓存怎么做扩容？一致性哈希实现动态扩容缩容","simplecontent":null,"content":"《一致性哈希实现动态扩容缩容》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3735,"question":"】Redis  的内存用完了会发生什么?写命令会返回错误，读可以，配置淘汰机制","simplecontent":null,"content":"《写命令会返回错误，读可以，配置淘汰机制》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3736,"question":"redisson原理?","simplecontent":null,"content":"1.使用RedissonClient和rlock相结合\n2.设置锁对象\n3.通过tryLock获取锁，设置超时自动释放锁\n4.通过unlock释放锁（在finally）","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3737,"question":"】Redis排序?Redis.sort(“books”);","simplecontent":null,"content":"《Redis.sort(“books”);》\n1.升序Redis.sort(“books”);\n2.降序SortingParams p=new SortingParams ();\nRedis.sort(“books”,params.desc());","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3738,"question":"】Redis主从复制延迟解决方法?使用内网","simplecontent":null,"content":"《使用内网》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3739,"question":"】Redis中Set和setnx区别?1.插入多个都是返回ok，会覆盖  2.setnx返回1或者0，不会覆盖","simplecontent":null,"content":"《1.插入多个都是返回ok，会覆盖  2.setnx返回1或者0，不会覆盖》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:39","updateTime":"2021-05-26 01:06:39","isExist":null},{"id":3713,"question":"】Redis的机构是如何？Redis的hash存储跟hashmap类似，是数组+链表","simplecontent":null,"content":"1.Redis 中的 Hash和 Java的 HashMap 更加相似,都是数组+链表的结构.当发生 hash 碰撞时将会把元素追加到链表上\n2.我们先来了解下 hash 的内部结构.第一维是数组,第二维是链表.组成一个 hashtable.","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3714,"question":"】redis默认有多少个库？16","simplecontent":null,"content":"database 默认有多少个库16个库","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3715,"question":"】rdb和aof区别？rdb是一段时间会保存；aof每次写入会保存","simplecontent":null,"content":"《rdb是一段时间会保存；aof每次写入会保存》\nRDB持久化是指在指定的时间间隔内将内存中的数据集快照写入磁盘，\t获取服务器的数据生成一个快照文件，替换原先的快照文件\n\n\nAOF持久化以日志的形式记录服务器所处理的每一个写、删除操作，查询操作不会记录，以文本的方式记录，可以打开文件看到详细的操作记录。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3716,"question":"aof重写作用?","simplecontent":null,"content":"去掉没用命令，原理是获取获取服务器的数据批量一次代码生成一个aof文件，替换原先aof文件","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3717,"question":"】redis主从同步原理？从机启动发布同步命令，主机快照发给从机，分为全量复制和增量复制","simplecontent":null,"content":"1.配置好连接，从机发布同步命令到主机\n2.主机启动后台程序，讲内存数据持久化到硬盘，整个文件发给从机，从机保存到硬盘，加载到内存\n3.同步分为全量赋值第一次或断开重连和增量赋值（每次修改命令发送给从机，不是整个文件）\"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3718,"question":"】redis主从同步作用？高可用（防止迭代），读写分离，容灾恢复","simplecontent":null,"content":"高可用（防止迭代），读写分离，容灾恢复","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3719,"question":"】redis中rdb和aof持久化数据大小\t/100万数据大概70M?","simplecontent":null,"content":"《100万数据大概70M》\n\"      rdb  //10万string是5M\n      rdb  //110万string是70M   当设置了过期时间数据过期了，那么文件又变小，但是2次文件大小差不多，例如第一次增加100万到70m，第二次增加可能是70m左右了\naof文件数据过期文件不会降低大小\"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3720,"question":"】Redis支持的Java客户端都有哪些？Redisson、Jedis、lettuce，resttemplate","simplecontent":null,"content":"《Redisson、Jedis、lettuce，resttemplate等》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3721,"question":"】Redis官方推荐用哪个？Redisson","simplecontent":null,"content":"官方推荐使用Redisson","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3722,"question":"Redis如何设置密码及验证密码？","simplecontent":null,"content":"设置密码：config set requirepass 123456   授权密码：auth 123456","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3723,"question":"】Redis集群会有写操作丢失吗？过期清理、内存不足清理、主库故障从库位同步","simplecontent":null,"content":"《过期清理、内存不足清理、主库故障从库位同步》\n\t并不能保证数据强一致性，集群在特定的条件下可能会丢失写操作。\n过期 key 被清理\n最大内存不足，导致 Redis 自动清理部分 key 以节省空间\n主库故障后自动重启，从库自动同步\n单独的主备方案，网络不稳定触发哨兵的自动切换主从节点，切换期间会有数据丢失","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3724,"question":"】Redis集群之间是如何复制的？异步复制","simplecontent":null,"content":"异步复制","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3725,"question":"】Redis集群最大节点个数是多少？16384个","simplecontent":null,"content":"《16384个》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3726,"question":"】Redis集群如何选择数据库？默认在0数据库","simplecontent":null,"content":"《默认在0数据库》\n\tRedis集群目前无法做数据库选择，默认在0数据库。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3727,"question":"】redis的底层原理？Hashmap","simplecontent":null,"content":"Hashmap\n本质上是一个Key-Value类型的内存数据库，每秒可以处理超过 10万次读写操作，保存数据在内存，然后保存在硬盘","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3728,"question":"】使用多个db存在什么问题?存在脏读问题，不知道存储哪个db","simplecontent":null,"content":"一般使用一个db，使用多个可能存在脏读问题，不知道存储哪个db\"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:38","updateTime":"2021-05-26 01:06:38","isExist":null},{"id":3702,"question":"】redis 交集、并集、差集？sinter、sunion、sdiff","simplecontent":null,"content":"《sinter、sunion、sdiff》\n场景：抖音的2个用户查看相同关注人员\n System.out.println(\"sets1中添加元素element001：\"+jedis.sadd(\"sets1\", \"element001\")); \n        System.out.println(\"sets1中添加元素element002：\"+jedis.sadd(\"sets1\", \"element002\")); \n        System.out.println(\"sets1中添加元素element003：\"+jedis.sadd(\"sets1\", \"element003\")); \n        System.out.println(\"sets1中添加元素element002：\"+jedis.sadd(\"sets2\", \"element002\")); \n        System.out.println(\"sets1中添加元素element003：\"+jedis.sadd(\"sets2\", \"element003\")); \n        System.out.println(\"sets1中添加元素element004：\"+jedis.sadd(\"sets2\", \"element004\"));\n        System.out.println(\"查看sets1集合中的所有元素:\"+jedis.smembers(\"sets1\"));\n        System.out.println(\"查看sets2集合中的所有元素:\"+jedis.smembers(\"sets2\"));\n        System.out.println(\"sets1和sets2交集：\"+jedis.sinter(\"sets1\", \"sets2\"));\n        System.out.println(\"sets1和sets2并集：\"+jedis.sunion(\"sets1\", \"sets2\"));\n        System.out.println(\"sets1和sets2差集：\"+jedis.sdiff(\"sets1\", \"sets2\"));//差集：set1中有，set2中没有的元素","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3703,"question":"】Redis的数据结构使用？字符串、list、hash、set、sort set","simplecontent":null,"content":"1.字符串\n //添加和获取\n        jedis.set(\"num\",\"1\");\n        jedis.get(\"num\");\n    //删除值\n         jedis.del(\"num\");\n    //自减和自减\n        jedis.decr(\"num\");\n        jedis.incr(\"num\");\n    //加上/减去 一个数\n    //incrBy 返回的是修改之后的值如果原值是字符串不是数字，则会抛出异常\n        Long num = jedis.incrBy(\"num\", 3);\n        jedis.decrBy(\"num\",10);\n    //字符串拼接\n        Long len = jedis.append(\"name\", \"123\");\n//长度\n        System.out.println(len);\n1.Hash\n\n    // hash 操作的是map对象\n    //存值 参数第一个变量的名称， map键名(key)， map键值(value)\n        Long num = jedis.hset(\"hash1\", \"username\", \"caopengfei\");\n        String hget = jedis.hget(\"hash1\", \"username\");\n​\n\n\t\t\n    //获取hash中所有的值\n        Map<String, String> map2 = new HashMap<String, String>();\n        map2 = jedis.hgetAll(\"hash2\");\n​\n//    删除hash中的键 可以删除一个也可以删除多个，返回的是删除的个数\n        Long num = jedis.hdel(\"hash2\", \"username\", \"age\");\n\n    //增加hash中的键值对\n        jedis.hincrBy(\"hash2\", \"age\", 10);\n\n​\n    //判断hash是否存在某个值\n        System.out.println(jedis.hexists(\"hash2\", \"username\"));\n\n\n    //获取hash中键值对的个数\n        System.out.println(jedis.hlen(\"hash2\"));\n\n​\n    //    获取一个hash中所有的key值\n        Set<String> hash2 = jedis.hkeys(\"hash2\");\n​\n    //    获取所有的value值\n        List<String> hash2 = jedis.hvals(\"hash2\");\n\n    //也可以存多个key\n    //调用hmset\n        Map<String, String> map = new HashMap<String, String>();\n        map.put(\"username\", \"caopengfei\");\n        map.put(\"age\", \"25\");\n        map.put(\"sex\", \"男\");\n        String res = jedis.hmset(\"hash2\", map);\n2.List\n\n    ===========添加一个list===========\");\n    jedis.lpush(\"collections\", \"ArrayList\", \"Vector\", \"Stack\", \"HashMap\", \"WeakHashMap\", \"LinkedHashMap\");\n    jedis.lpush(\"collections\", \"HashSet\");\n    jedis.lpush(\"collections\", \"TreeSet\");\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);//-1代表倒数第一个元素，-2代表倒数第二个元素\n    collections区间0-3的元素：\"+jedis.lrange(\"collections\",0,3);\n    ===============================\");\n    // 删除列表指定的值 ，第二个参数为删除的个数（有重复时），后add进去的值先被删，类似于出栈\n    删除指定元素个数：\"+jedis.lrem(\"collections\", 2, \"HashMap\");\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);\n    删除下表0-3区间之外的元素：\"+jedis.ltrim(\"collections\", 0, 3);\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);\n    collections列表出栈（左端）：\"+jedis.lpop(\"collections\");\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);\n    collections添加元素，从列表右端，与lpush相对应：\"+jedis.rpush(\"collections\", \"EnumMap\");\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);\n    collections列表出栈（右端）：\"+jedis.rpop(\"collections\");\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);\n    修改collections指定下标1的内容：\"+jedis.lset(\"collections\", 1, \"LinkedArrayList\");\n    collections的内容：\"+jedis.lrange(\"collections\", 0, -1);\n    ===============================\");\n    collections的长度：\"+jedis.llen(\"collections\");\n    获取collections下标为2的元素：\"+jedis.lindex(\"collections\", 2);\n    ===============================\");\n    jedis.lpush(\"sortedList\", \"3\",\"6\",\"2\",\"0\",\"7\",\"4\");\n    sortedList排序前：\"+jedis.lrange(\"sortedList\", 0, -1);\n    System.out.println(jedis.sort(\"sortedList\");\n    sortedList排序后：\"+jedis.lrange(\"sortedList\", 0, -1);\n3.Set\n\n* Set集合，和List类的区别就是\n* set中不会出现重复的数据\n* 他可以进行聚合操作效率比较高\n* 其余的操作基本上和list相同\n\n\n    /*添加元素删除元素*/\n\n        Long num = jedis.sadd(\"myset\", \"a\", \"a\", \"b\",\"abc\");\n\n    /*获得元素*/\n        Set<String> myset = jedis.smembers(\"myset\");\n\n    /*移除元素*/\n        jedis.srem(\"myset\",\"a\",\"b\");\n        Set<String> myset = jedis.smembers(\"myset\");\n\n    //判断是否这个set中存在某个值\n        Boolean sismember = jedis.sismember(\"myset\", \"a\");\n\n    //获得A-B 获得差集合\n        jedis.sadd(\"myset1\",\"123\",\"32\",\"abc\",\"def\",\"123456\",\"sdfasd\");\n        jedis.sadd(\"myset2\",\"abc\",\"345\",\"123\",\"fda\");\n        Set<String> sdiff = jedis.sdiff(\"myset1\", \"myset2\");\n        Set<String> sinter = jedis.sinter(\"myset1\", \"myset2\");\n\n//    获得并集合\n        Set<String> sunion = jedis.sunion(\"myset1\", \"myset2\");\n\n//    成员数量\n        System.out.println(jedis.scard(\"myset1\"));\n\n\n//    获得随机的一个成员\n        System.out.println(jedis.srandmember(\"myset1\"));\n\n    @Test\n//    将相差的成员放到一个新的set中同理交集和并集都可以后面均\n//    加上一个store即可\n//    并返回新的长度\n        System.out.println(jedis.sdiffstore(\"myset3\",\"myset1\",\"myset2\"));\n        System.out.println(jedis.smembers(\"myset3\"));\n4.sort set\n/*\n和set极为的类似，他们是字符串的集合，没有重复的数据\n差别是sortedset每个成员中都会有一个分数（score）与之关联\n，redis正是通过分数来为集合中的成员进行从小到大的排序\nsortedset中数据必须单一但是他的score可以是重复的\n        jedis.zadd(\"mysort\",100.0, \"zhangsan\");\n        jedis.zadd(\"mysort\",200.0,\"lisi\");\n        jedis.zadd(\"mysort\",50.0,\"wangwu\");\n        Map<String ,Double>map = new HashMap<String ,Double>();\n        map.put(\"mutouliu\",70.0);\n​\n        jedis.zadd(\"mysort\",map);\n        Set<String> mysort = jedis.zrange(\"mysort\", 0, -1);\n        System.out.println(mysort);\n        Set<String> mysort1 = jedis.zrange(\"mysort\", 1, 2);\nhttps://www.baidu.com/link?url=bEZ4jGhzNk9Rb_LjMEkjdqNUP7goxyGCAQKNTPd1EmFiysmn3X9TEIsY_jam0Jq-_m6iB_LgRvhkOf0VW5NYLa&wd=&eqid=edc6d6e9000023a0000000055ea2ebc8","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3704,"question":"】文章点赞排名使用什么？Sort Set 有序列表","simplecontent":null,"content":"《Sort Set 有序列表》\n\n //创建4篇文章,用hash存储\n        jedis.hset(\"article:00001\",\"title1\",\"文章1\");\n        jedis.hset(\"article:00002\",\"title2\",\"文章2\");\n        jedis.hset(\"article:00003\",\"title3\",\"文章3\");\n        jedis.hset(\"article:00004\",\"title4\",\"文章4\");\n        Map<String, String> stringStringMap = jedis.hgetAll(\"article:00004\");\n        System.out.println(stringStringMap);\n\n        //创建一个有序集合，用来存文章的点赞排名。\n        jedis.zadd(\"score\", 0, \"article:00001\");\n        jedis.zadd(\"score\", 0, \"article:00002\");\n        jedis.zadd(\"score\", 0, \"article:00003\");\n        jedis.zadd(\"score\", 0, \"article:00004\");\n System.out.println(\"文章获取到的\"+jedis.zrange(\"score\", 0, -1)\n                .stream()\n                .sorted(Comparator.reverseOrder())\n                .collect(Collectors.toList()));\n\n        //现在模拟用户点赞。\n        //用户点赞就在该文章的基础上+1\n        jedis.zincrby(\"score\",1,\"article:00001\");\n        jedis.zincrby(\"score\",1,\"article:00002\");\n        jedis.zincrby(\"score\",1,\"article:00004\");\n        jedis.zincrby(\"score\",1,\"article:00003\");\n        jedis.zincrby(\"score\",1,\"article:00001\");\n        jedis.zincrby(\"score\",1,\"article:00001\");\n        jedis.zincrby(\"score\",1,\"article:00002\");\n        jedis.zincrby(\"score\",1,\"article:00002\");\n        jedis.zincrby(\"score\",1,\"article:00004\");\n        jedis.zincrby(\"score\",1,\"article:00004\");\n        jedis.zincrby(\"score\",1,\"article:00004\");\n        jedis.zincrby(\"score\",1,\"article:00004\");\n\n        //打印输出的list\n\n        Set<Tuple> score1 = jedis.zrevrangeWithScores(\"score\", 0, -1);\n        for (Tuple t : score1) {\n            System.out.println(t.getElement()+\":\"+t.getScore());\n        }","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3705,"question":"】redis存储对象什么时候使用序列化和json字符串？数据量小勇json，数据量大用序列化","simplecontent":null,"content":"少量数据用josn消耗的时间反而更合适，如果存储数据量超过10W字节，可以考虑序列化来提升效率。\npublic static byte[] serialize(Object object) {\n    ObjectOutputStream oos = null;\n    ByteArrayOutputStream baos = null;\n    try {\n        //序列化  \n            baos = new ByteArrayOutputStream();\n            oos = new ObjectOutputStream(baos);\n            oos.writeObject(object);\n            byte[] bytes = baos.toByteArray();\n            return bytes;\n        } catch (Exception e) {\n    }\n    return null;\n\n}\n\n反序列化\npublic static Object unserialize(byte[] bytes) {\n    ByteArrayInputStream bais = null;\n    try {\n        //反序列化  \n        bais = new ByteArrayInputStream(bytes);\n        ObjectInputStream ois = new ObjectInputStream(bais);\n        return ois.readObject();\n    } catch (Exception e) {\n    }\n    return null;\n}\n\npublic static void jsonString(Jedis jedis, Person person) {\n    String key = UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n//对象转字符串\n    String value = new Gson().toJson(person);\n    jedis.set(key, value);\n    String sValue = jedis.get(key);\n//字符串转对象\n    Person person2 = new Gson().fromJson(Person.class, sValue);\n}","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3706,"question":"Redis如何实现布隆过滤器?","simplecontent":null,"content":"布隆过滤器是一个神奇的数据结构，可以用来判断一个元素是否在一个集合中。很常用的一个功能是用来去重。\n\nredis 在 4.0 的版本中加入了 module 功能，布隆过滤器可以通过 module 的形式添加到 redis 中，所以使用 redis 4.0 以上的版本可以通过加载 module 来使用 redis 中的布隆过滤器。但是这不是最简单的方式，使用 docker 可以直接在 redis 中体验布隆过滤器。\n\n布隆过滤器是一种类似set的数据结构，只是不太准确，当用bf.exists判断元素是否存在时返回结果存在但真实不一定存在；当返回不存在时肯定是不存在，所以判断去重时有一定的误判概率。\n当然，误判只会发生在过滤器没有添加过的元素，对于添加过的元素不会发生误判。\n特点：高效地插入和查询，占用空间少，返回的结果是不确定性的。\n\n每个布隆过滤器对应到Redis的数据结构中就是一个大型的位数组和几个不同的无偏hash函数，无偏表示分布均匀。\n\n添加key时，使用多个hash函数对key进行hash运算得到一个整数索引值，对位数组长度进行取模运算得到一个位置，每个hash函数都会得到一个不同的位置，将这几个位置都置1就完成了add操作。\n\n查询同理，只要有一位是0就表示这个key不存在，但如果都是1，则不一定存在对应的key。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3707,"question":"】单线程的redis如何利用多核cpu机器？一台机器启动多个redis","simplecontent":null,"content":"只需在同一台机器上启动Redis的多个实例,将其当作不同的服务器即可。单一的实例在某些时候可能是不够用的,所以如果想使用多个CPU","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3708,"question":"】Redis建立唯一id怎么拼接？年份2 + 天数3 + 小时2 + 自增序号5","simplecontent":null,"content":"《年份2 + 天数3 + 小时2 + 自增序号5》\n《年份2+天数4+自增redis8》\n商城编号=年份（2位） + 一年中第几天 （3位）+ 小时（2位） + Redis自增序号 （5位），总计12位， 支持一小时内近100w个订单号的生成和使用；如果前面改变了后面重新计算\n\n * @Description 支持一个小时100w个订单号的生成\nprivate static Long incrOrderId(String biz, String prefix) {\n   String orderId = null;\n   String key = \"geese:#{biz}:id:\".replace(\"#{biz}\", biz).concat(prefix); // 00001\n   try {\n      Jedis jedis = new Jedis(\"localhost\",6379);\n      //System.out.println(\"连接成功\");\n      //存储数据到列表中\n      jedis.lpush(\"site-list\", \"Runoob\");\n      Long index = jedis.incr(key);\n      orderId = prefix.concat(String.format(\"%1$05d\", index)); // 补位操作 保证满足6位\n   } catch(Exception ex) {\n      System.out.println(ex.getMessage());\n      System.out.println(\"分布式订单号生成失败异常。。。。。\");\n   }\n   if (Strings.isNullOrEmpty(orderId)) return null;\n   return Long.parseLong(orderId);\n}","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3709,"question":"】redis集群不可用情况？一个主从挂了、半数主挂了","simplecontent":null,"content":"\"集群有M1、M2、M3三个节点，节点 M1包含 0 到 5500号哈希槽，节点M2包含5501 到 11000 号哈希槽，节点M3包含11001 到 16384号哈希槽。如果M2宕掉了，导致5501 到 11000 号哈希槽不可用，整个集群不可用。\n集群里面有M1-S1、M2-S2、M3-S3六个主从节点，节点 M1包含 0 到 5500号哈希槽，节点M2包含5501 到 11000 号哈希槽，节点M3包含11001 到 16384号哈希槽。如果是M2宕掉，集群便会选举S2为新节点继续服务，集群正常运行。当M2、S2都宕掉了，集群就不可用。\"\n\n有A,B,C三个节点的集群，在没有复制模型的情况下，如果节点B失败了，那么整个集群就会以为缺少5501-11000这个范围的槽而不可用。\n\n1、如果cluster中任意master挂掉，且当前master没有slave，集群进入fail状态情况下。即集群的slot映射[0-16383]不完成时进入fail态。\n2、如果cluster中超过半数以上master挂掉，无论是否有slave，集群进入fail状态。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3710,"question":"】redis哈希槽是什么？哈希值存储的位置","simplecontent":null,"content":"Redis 集群中内置了 16384 个哈希槽，当需要在 Redis 集群中放置一个 key-value时，redis 先对 key 使用 crc16 算法算出一个结果，然后把结果对 16384 求余数，\n这样每个 key 都会对应一个编号在 0-16383 之间的哈希槽，redis 会根据节点数量大致均等的将哈希槽映射到不同的节点。\nRedis 集群没有使用一致性hash, 而是引入了哈希槽的概念。\nRedis 集群有16384个哈希槽,每个key通过CRC16校验后对16384取模来决定放置哪个槽.集群的每个节点负责一部分hash槽。\n这种结构很容易添加或者删除节点，并且无论是添加删除或者修改某一个节点，都不会造成集群不可用的状态。\n使用哈希槽的好处就在于可以方便的添加或移除节点。\n当需要增加节点时，只需要把其他节点的某些哈希槽挪到新节点就可以了；\n当需要移除节点时，只需要把移除节点上的哈希槽挪到其他节点就行了；\n在这一点上，我们以后新增或移除节点的时候不用先停掉所有的 redis 服务。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3711,"question":"】用了哈希槽的概念，而没有用一致性哈希算法，不都是哈希么？","simplecontent":null,"content":"Redis Cluster是自己做的crc16的简单hash算法，没有用一致性hash。Redis的作者认为它的crc16(key) mod 16384的效果已经不错了，虽然没有一致性hash灵活，但实现很简单，节点增删时处理起来也很方便。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3712,"question":"】Redis集群如何扩容？将最后一个节点重新分配，一份为二","simplecontent":null,"content":"增加节点\n扩容场景\n当资源不够，需要增加节点时，需要对slots进行节点的重复分配。而此时，又不能停止对外服务，解决方案如何？\n假设原来有三个节点：A（0至5000），B（5001至10000），C（10001到16383）。现在需要增加第四个节点D节点进来，重新分配如下\n\n需要将C节点的slots，从13000~16383的slot迁移到D节点中。redis通过提供一组命令原语完成迁移操作。  分完后进行数据迁移。\n\n迁移期间访问问题\n当在迁移过程中，如果被访问的slot，可能会有部分key存在在源节点，有部分在目标节点中。\n1、当客户端发送请求到源节点的时候，源节点会查看对应的key是否还在本节点，如果存在，则直接执行命令返回给客户。如果不存在，则会给客户端返回一个ASK错误，指引客户端往正在导入的目标slot去请求对应的key。客户端可以通过返回的ASK错误中的目标节点进行对应KEY的请求。\n2、当客户端发送请求到目标节点时。\n1）如果客户端请求时，带上ASKING标识，由目标节点会执行对应KEY的查询。正常情况下，如果是通过查询源slot，获取ASK错误之后，再到目标节点进行查询的时候，需要带上ASKING标识。\n2）如果客户端请求时，未带上ASKING标识，原由上，对应的slot还属于源节点，则目标节点会拒绝执行KEY查询，会返回一个MOVED错误给客户端，告诉客户端对应的KEY的slot属于源节点。正常情况下，如果第一次请求KEY到了正在迁移的目标节点，则会收到MOVED错误。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:37","updateTime":"2021-05-26 01:06:37","isExist":null},{"id":3687,"question":"】redis分片机制？数据分在不同片上","simplecontent":null,"content":"《数据分在不同片上》\n所谓的分片其实就是大的数据分成几个小的部分，分别放置存储，对于数据而言无外乎就是读写，读写的基础就是数据的定位，redis利用集群的方式+槽位完成，分片的数据的定位和管理维护。\n   Redis 集群是一个可以在多个 Redis 节点之间进行数据共享的设施\nRedis 集群使用数据分片（sharding）而非一致性哈希（consistency hashing）来实现： 一个 Redis 集群包含 16384 个哈希槽（hash slot）， 数据库中的每个键都属于这 16384 个哈希槽的其中一个， 集群使用公式 CRC16(key) % 16384 来计算键 key 属于哪个槽， 其中 CRC16(key) 语句用于计算键 key 的 CRC16 校验和 。\n1. 槽位分配\n集群中的每个节点负责处理一部分哈希槽。 举个例子， 一个集群可以有三个哈希槽， 其中：\n节点 A 负责处理 0 号至 5500 号哈希槽。\n节点 B 负责处理 5501 号至 11000 号哈希槽。\n节点 C 负责处理 11001 号至 16384 号哈希槽。\n这种将哈希槽分布到不同节点的做法使得用户可以很容易地向集群中添加或者删除节点。 比如说：\n如果用户将新节点 D 添加到集群中， 那么集群只需要将节点 A 、B 、 C 中的某些槽移动到节点 D 就可以了。\n与此类似， 如果用户要从集群中移除节点 A ， 那么集群只需要将节点 A 中的所有哈希槽移动到节点 B 和节点 C ， 然后再移除空白（不包含任何哈希槽）的节点 A 就可以了。\n因为将一个哈希槽从一个节点移动到另一个节点不会造成节点阻塞， 所以无论是添加新节点还是移除已存在节点， 又或者改变某个节点包含的哈希槽数量， 都不会造成集群下线。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3688,"question":"】Redis存储对象?","simplecontent":null,"content":"《实体可以存储、实体集合要转json存储》\n允许set value直接放入user，但是不允许存储list《对象》，而是通过转json为字符串和序列化为字符串存储，获取数据再转为list《对象》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3689,"question":"Redis常用命令?","simplecontent":null,"content":"常用命令\n    1）连接操作命令\n    quit：关闭连接（connection）\n    auth：简单密码认证\n    help cmd： 查看cmd帮助，例如：help quit\n    \n    2）持久化\n    save：将数据同步保存到磁盘\n    bgsave：将数据异步保存到磁盘\n    lastsave：返回上次成功将数据保存到磁盘的Unix时戳\n    shundown：将数据同步保存到磁盘，然后关闭服务\n    \n    3）远程服务控制\n    info：提供服务器的信息和统计\n    monitor：实时转储收到的请求\n    slaveof：改变复制策略设置\n    config：在运行时配置Redis服务器\n    \n    4）对value操作的命令\n    exists(key)：确认一个key是否存在\n    del(key)：删除一个key\n    type(key)：返回值的类型\n    keys(pattern)：返回满足给定pattern的所有key\n    randomkey：随机返回key空间的一个\n    keyrename(oldname, newname)：重命名key\n    dbsize：返回当前数据库中key的数目\n    expire：设定一个key的活动时间（s）\n    ttl：获得一个key的活动时间\n    select(index)：按索引查询\n    move(key, dbindex)：移动当前数据库中的key到dbindex数据库\n    flushdb：删除当前选择数据库中的所有key\n    flushall：删除所有数据库中的所有key\n    \n    5）String\n    set(key, value)：给数据库中名称为key的string赋予值value\n    get(key)：返回数据库中名称为key的string的value\n    getset(key, value)：给名称为key的string赋予上一次的value\n    mget(key1, key2,…, key N)：返回库中多个string的value\n    setnx(key, value)：添加string，名称为key，值为value\n    setex(key, time, value)：向库中添加string，设定过期时间time\n    mset(key N, value N)：批量设置多个string的值\n    msetnx(key N, value N)：如果所有名称为key i的string都不存在\n    incr(key)：名称为key的string增1操作\n    incrby(key, integer)：名称为key的string增加integer\n    decr(key)：名称为key的string减1操作\n    decrby(key, integer)：名称为key的string减少integer\n    append(key, value)：名称为key的string的值附加value\n    substr(key, start, end)：返回名称为key的string的value的子串\n    \n    6）List \n    rpush(key, value)：在名称为key的list尾添加一个值为value的元素\n    lpush(key, value)：在名称为key的list头添加一个值为value的 元素\n    llen(key)：返回名称为key的list的长度\n    lrange(key, start, end)：返回名称为key的list中start至end之间的元素\n    ltrim(key, start, end)：截取名称为key的list\n    lindex(key, index)：返回名称为key的list中index位置的元素\n    lset(key, index, value)：给名称为key的list中index位置的元素赋值\n    lrem(key, count, value)：删除count个key的list中值为value的元素\n    lpop(key)：返回并删除名称为key的list中的首元素\n    rpop(key)：返回并删除名称为key的list中的尾元素\n    blpop(key1, key2,… key N, timeout)：lpop命令的block版本。\n    brpop(key1, key2,… key N, timeout)：rpop的block版本。\n    rpoplpush(srckey, dstkey)：返回并删除名称为srckey的list的尾元素，\n　　　　　　　　　　　　　　并将该元素添加到名称为dstkey的list的头部\n    \n    7）Set\n    sadd(key, member)：向名称为key的set中添加元素member\n    srem(key, member) ：删除名称为key的set中的元素member\n    spop(key) ：随机返回并删除名称为key的set中一个元素\n    smove(srckey, dstkey, member) ：移到集合元素\n    scard(key) ：返回名称为key的set的基数\n    sismember(key, member) ：member是否是名称为key的set的元素\n    sinter(key1, key2,…key N) ：求交集\n    sinterstore(dstkey, (keys)) ：求交集并将交集保存到dstkey的集合\n    sunion(key1, (keys)) ：求并集\n    sunionstore(dstkey, (keys)) ：求并集并将并集保存到dstkey的集合\n    sdiff(key1, (keys)) ：求差集\n    sdiffstore(dstkey, (keys)) ：求差集并将差集保存到dstkey的集合\n    smembers(key) ：返回名称为key的set的所有元素\n    srandmember(key) ：随机返回名称为key的set的一个元素\n    \n    8）Hash\n    hset(key, field, value)：向名称为key的hash中添加元素field\n    hget(key, field)：返回名称为key的hash中field对应的value\n    hmget(key, (fields))：返回名称为key的hash中field i对应的value\n    hmset(key, (fields))：向名称为key的hash中添加元素field \n    hincrby(key, field, integer)：将名称为key的hash中field的value增加integer\n    hexists(key, field)：名称为key的hash中是否存在键为field的域\n    hdel(key, field)：删除名称为key的hash中键为field的域\n    hlen(key)：返回名称为key的hash中元素个数\n    hkeys(key)：返回名称为key的hash中所有键\n    hvals(key)：返回名称为key的hash中所有键对应的value\n    hgetall(key)：返回名称为key的hash中所有的键（field）及其对应的value","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3690,"question":"】Sortset怎么排序的？根据权限，值小权重高","simplecontent":null,"content":"jedis.zadd(\"zset\", 8.0, \"element002\")","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3691,"question":"】Set赋值不重复和重复返回什么？1,0","simplecontent":null,"content":"jedis.sadd\n1,0","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3692,"question":"】获取key302对应值中的子串？jedis.getrange(\"key302\", 5, 7)","simplecontent":null,"content":"jedis.getrange(\"key302\", 5, 7)","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3693,"question":"】Redis获取原值更新新值？jedis.getSet","simplecontent":null,"content":"jedis.getSet","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3694,"question":"】Reids在set值后一起设置过期时间？jedis.setex(\"key303\", 2, \"key303-2second\")","simplecontent":null,"content":"jedis.setex(\"key303\", 2, \"key303-2second\")","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3695,"question":"】Redis使用set值返回什么？ok","simplecontent":null,"content":"ok","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3696,"question":"】Redis清空库？jedis.flushDB","simplecontent":null,"content":"jedis.flushDB","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3697,"question":"】为什么使用布隆过滤器？方便查询","simplecontent":null,"content":"如果想判断一个元素是不是在一个集合里，一般想到的是将所有元素保存起来，然后通过比较确定。链表，树等等数据结构都是这种思路. 但是随着集合中元素的增加，我们需要的存储空间越来越大，检索速度也越来越慢。不过世界上还有一种叫作散列表（又叫哈希表，Hash table）的数据结构。它可以通过一个Hash函数将一个元素映射成一个位阵列（Bit Array）中的一个点。这样一来，我们只要看看这个点是不是 1 就知道可以集合中有没有它了。这就是布隆过滤器的基本思想。\n相比于其它的数据结构，布隆过滤器在空间和时间方面都有巨大的优势。布隆过滤器存储空间和插入/查询时间都是常数。另外, Hash 函数相互之间没有关系，方便由硬件并行实现。布隆过滤器不需要存储元素本身，在某些对保密要求非常严格的场合有优势。\n缺点\n\n但是布隆过滤器的缺点和优点一样明显。误算率（False Positive）是其中之一。随着存入的元素数量增加，误算率随之增加。但是如果元素数量太少，则使用散列表足矣。\n\n另外，一般情况下不能从布隆过滤器中删除元素. 我们很容易想到把位列阵变成整数数组，每插入一个元素相应的计数器加1, 这样删除元素时将计数器减掉就可以了。然而要保证安全的删除元素并非如此简单。首先我们必须保证删除的元素的确在布隆过滤器里面. 这一点单凭这个过滤器是无法保证的。另外计数器回绕也会造成问题。\n\n可以看成是一个不是很准确的set结构，只是在使用它的contains方法判断某个对象是否存在时会出现误判。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3698,"question":"】布隆过滤器作用？解决缓存穿透的问题","simplecontent":null,"content":"一般情况下，先查询缓存是否有该条数据，缓存中没有时，再查询数据库。当数据库也不存在该条数据时，每次查询都要访问数据库，这就是缓存穿透。缓存穿透带来的问题是，当有大量请求查询数据库不存在的数据时，就会给数据库带来压力，甚至会拖垮数据库。\n可以使用布隆过滤器解决缓存穿透的问题，把已存在数据的key存在布隆过滤器中。当有新的请求时，先到布隆过滤器中查询是否存在，如果不存在该条数据直接返回；如果存在该条数据再查询缓存查询数据库。\n黑名单校验\n发现存在黑名单中的，就执行特定操作。比如：识别垃圾邮件，只要是邮箱在黑名单中的邮件，就识别为垃圾邮件。假设黑名单的数量是数以亿计的，存放起来就是非常耗费存储空间的，布隆过滤器则是一个较好的解决方案。把所有黑名单都放在布隆过滤器中，再收到邮件时，判断邮件地址是否在布隆过滤器中即可。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3699,"question":"】什么是布隆过滤器？判断数据是否存在从布隆过滤器查询","simplecontent":null,"content":"相对于Set、Map 等数据结构来说，它可以更高效地插入和查询，并且占用空间更少，它也有缺点，就是判断某种东西是否存在时，可能会被误判。但是只要参数设置的合理，它的精确度也可以控制的相对精确，只会有小小的误判概率。告诉你某种东西一定不存在或者可能存在。当布隆过滤器说，某种东西存在时，这种东西可能不存在；当布隆过滤器说，某种东西不存在时，那么这种东西一定不存在。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3700,"question":"】布隆过滤器特点？某种东西存在时，这种东西可能不存在；当布隆过滤器说，某种东西不存在时，那么这种东西一定不存在","simplecontent":null,"content":"某种东西存在时，这种东西可能不存在；当布隆过滤器说，某种东西不存在时，那么这种东西一定不存在","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3701,"question":"】布隆过滤器缺点？判断某种东西是否存在时，可能会被误判","simplecontent":null,"content":"判断某种东西是否存在时，可能会被误判","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:36","updateTime":"2021-05-26 01:06:36","isExist":null},{"id":3676,"question":"】Redis增量同步原理？主每执行写命令向所有从发送写命令，从收到后还行写入；","simplecontent":null,"content":"主每执行写命令向所有从发送写命令，从收到后还行写入；","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3677,"question":"】Redis主从复制原理？全量、增量","simplecontent":null,"content":"《全量同步：从发送同步命令，主发送快照到所有从，然后再发送写命令；\n增量同步：主每执行写命令向所有从发送写命令，从收到后还行写入；\n从宕机恢复实现全量同步》\n和Mysql主从复制的原因一样，Redis虽然读取写入的速度都特别快，但是也会产生读压力特别大的情况。为了分担读压力，Redis支持主从复制，Redis的主从结构可以采用一主多从或者级联结构，Redis主从复制可以根据是否是全量分为全量同步和增量同步。下图为级联结构。\n\n全量同步\nRedis全量复制一般发生在Slave初始化阶段，这时Slave需要将Master上的所有数据都复制一份。具体步骤如下： \n-  从服务器连接主服务器，发送SYNC命令； \n-  主服务器接收到SYNC命名后，开始执行BGSAVE命令生成RDB文件并使用缓冲区记录此后执行的所有写命令； \n-  主服务器BGSAVE执行完后，向所有从服务器发送快照文件，并在发送期间继续记录被执行的写命令； \n-  从服务器收到快照文件后丢弃所有旧数据，载入收到的快照； \n-  主服务器快照发送完毕后开始向从服务器发送缓冲区中的写命令； \n-  从服务器完成对快照的载入，开始接收命令请求，并执行来自主服务器缓冲区的写命令；\n\n完成上面几个步骤后就完成了从服务器数据初始化的所有操作，从服务器此时可以接收来自用户的读请求。\n增量同步\nRedis增量复制是指Slave初始化后开始正常工作时主服务器发生的写操作同步到从服务器的过程。 \n增量复制的过程主要是主服务器每执行一个写命令就会向从服务器发送相同的写命令，从服务器接收并执行收到的写命令。\n\n如果多个Slave断线了，需要重启的时候，因为只要Slave启动，就会发送sync请求和主机全量同步，当多个同时出现的时候，可能会导致Master IO剧增宕机。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3678,"question":"】Redis主从同步策略？优先全量，结束后进行增量","simplecontent":null,"content":"主从刚刚连接的时候，进行全量同步；全同步结束后，进行增量同步。当然，如果有需要，slave 在任何时候都可以发起全量同步。redis 策略是，无论如何，首先会尝试进行增量同步，如不成功，要求从机进行全量同步。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3679,"question":"】redis消息队列方式有哪些？发布订阅、生产消费","simplecontent":null,"content":"《发布订阅（多机相同消费）、生产消费（list 是单机不同消费）》\n1.直接使用Redis的List实现消息队列\n只需简单的两个指令lpush和rpop或者rpush和lpop。\nLong size = jedis.lpush(MESSAGE_KEY, message);\n        System.out.println(producerName + \": 当前未被处理消息条数为:\" + size);\n String message = jedis.rpop(Producer.MESSAGE_KEY);\n貌似还不错，但上述例子中消息消费者有一个问题存在，即需要不停的调用rpop方法查看List中是否有待处理消息。每调用一次都会发起一次连接，这会造成不必要的浪费。也许你会使用Thread.sleep()等方法让消费者线程隔一段时间再消费，但这样做有两个问题：\n1）、如果生产者速度大于消费者消费速度，消息队列长度会一直增大，时间久了会占用大量内存空间。\n2）、如果睡眠时间过长，这样不能处理一些时效性的消息，睡眠时间过短，也会在连接上造成比较大的开销。\n但是当队列为空时，lpop和rpop会一直空轮训，消耗资源；所以引入阻塞读blpop和brpop（b代表blocking），阻塞读在队列没有数据的时候进入休眠状态，\n一旦数据到来则立刻醒过来，消息延迟几乎为零。\n缺点：\n做消费者确认ACK麻烦，不能保证消费者消费消息后是否成功处理的问题（宕机或处理异常等），通常需要维护一个Pending列表，保证消息处理确认。\n不能做广播模式，如pub/sub，消息发布/订阅模型\n不能重复消费，一旦消费就会被删除\n不支持分组消费\n\n2.一次生产多次消费的队列\nRedis除了对消息队列提供支持外，还提供了一组命令用于支持发布/订阅模式。利用Redis的pub/sub模式可以实现一次生产多次消费的队列。\n1)发布 publish\n    PUBLISH指令可用于发布一条消息，格式 PUBLISH channel message\n    返回值表示订阅了该消息的数量。\n    2)订阅 subscribe\n    SUBSCRIBE指令用于接收一条消息，格式 SUBSCRIBE channel\n    可以看到使用SUBSCRIBE指令后进入了订阅模式，但没有接收到publish发送的消息，这是因为只有在消息发出去前订阅才会接收到。在这个模式下其他指令，只能看到回复。回复分为三种类型：\n    1、如果为subscribe，第二个值表示订阅的频道，第三个值表示是第几个订阅的频道?(理解成序号?) \n    2、如果为message(消息)，第二个值为产生该消息的频道，第三个值为消息\n    3、如果为unsubscribe，第二个值表示取消订阅的频道，第三个值表示当前客户端的订阅数量。\n    可以使用指令UNSUBSCRIBE退订，如果不加参数，则会退订所有由SUBSCRIBE指令订阅的频道。\n   \n    Redis还支持基于通配符的消息订阅，使用指令PSUBSCRIBE (pattern subscribe)，例如：\n   再试试推送消息会得到以下结果：\n   可以看到publish指令返回的是2，而订阅端这边接收了两次消息。这是因为PSUBSCRIBE指令可以重复订阅频道。而使用PSUBSCRIBE指令订阅的频道也要使用指令PUNSUBSCRIBE指令退订，该指令无法退订SUBSCRIBE订阅的频道，同理UNSUBSCRIBE也不能退订PSUBSCRIBE指令订阅的频道。同时PUNSUBSCRIBE指令通配符不会展开。\n例如：PUNSUBSCRIBE * 不会匹配到 channel.*, 所以要取消订阅channel.*就要这样写PUBSUBSCRIBE channel.*。\n jedis.publish(CHANNEL_KEY, message);\n//可以订阅多个频道 当前线程会阻塞在这儿        jedis.subscribe(jps, channel);\n此模式允许生产者只生产一次消息，由中间件负责将消息复制到多个消息队列，每个消息队列由对应的消费组消费。\n优点\n典型的广播模式，一个消息可以发布到多个消费者\n多信道订阅，消费者可以同时订阅多个信道，从而接收多类消息\n消息即时发送，消息不用等待消费者读取，消费者会自动接收到信道发布的消息\n缺点\n消息一旦发布，不能接收。换句话就是发布时若客户端不在线，则消息丢失，不能寻回\n不能保证每个消费者接收的时间是一致的\n若消费者客户端出现消息积压，到一定程度，会被强制断开，导致消息意外丢失。通常发生在消息的生产远大于消费速度时\n可见，Pub/Sub 模式不适合做消息存储，消息积压类的业务，而是擅长处理广播，即时通讯，即时反馈的业务。\n3.基于Sorted-Set的实现\nSortes Set(有序列表)，类似于java的SortedSet和HashMap的结合体，一方面她是一个set，保证内部value的唯一性，另一方面它可以给每个value赋予一个score，代表这个value的\n排序权重。内部实现是“跳跃表”。\n有序集合的方案是在自己确定消息顺ID时比较常用，使用集合成员的Score来作为消息ID，保证顺序，还可以保证消息ID的单调递增。通常可以使用时间戳+序号的方案。确保了消息ID的单调递增，利用SortedSet的依据\nScore排序的特征，就可以制作一个有序的消息队列了。\n优点\n就是可以自定义消息ID，在消息ID有意义时，比较重要。\n缺点\n缺点也明显，不允许重复消息（因为是集合），同时消息ID确定有错误会导致消息的顺序出错。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3680,"question":"】Redis cluster去除一个主机怎么办？重新部署","simplecontent":null,"content":"重新部署，因为有启动语句需要整合ip","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3681,"question":"】redis cluster不可用主要是通过failover机制决定的？集群主库半数宕机、集群某一节点的主从全数宕机","simplecontent":null,"content":"1 集群主库半数宕机（无论是否从库存活）\n2 集群某一节点的主从全数宕机。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3682,"question":"】为什么要实现Redis Cluster？双机主备，哈希槽平均分布到不同主机","simplecontent":null,"content":"《双机主备，哈希槽平均分布到不同主机上，通过哈希算法计算key的哈希值，确定存储位置》\n1.主从复制不能实现高可用 2.随着公司发展，用户数量增多，并发越来越多，业务需要更高的QPS，而主从复制中单机的QPS可能无法满足业务需求 3.数据量的考虑，现有服务器内存不能满足业务数据的需要时，单纯向服务器添加内存不能达到要求，此时需要考虑分布式需求，把数据分布到不同服务器上 4.网络流量需求：业务的流量已经超过服务器的网卡的上限值，可以考虑使用分布式来进行分流 5.离线计算，需要中间环节缓冲等别的需求\n\n比如：1到100个数字，要保存在3个节点上，按照顺序分区，把数据平均分配三个节点上 1号到33号数据保存到节点1上，34号到66号数据保存到节点2上，67号到100号数据保存到节点3上\n\n常用数据分布方式之哈希分布\n例如1到100个数字，对每个数字进行哈希运算，然后对每个数的哈希结果除以节点数进行取余，余数为1则保存在第1个节点上，余数为2则保存在第2个节点上，余数为0则保存在第3个节点，这样可以保证数据被打散，同时保证数据分布的比较均匀\n\n节点取余分区\n比如有100个数据，对每个数据进行hash运算之后，与节点数进行取余运算，根据余数不同保存在不同的节点上","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3683,"question":"】Redis如何保证数据不丢失？1.aof持久化  2.双机热备","simplecontent":null,"content":"《1.使用aof持久化\n2.双机热备》\nnginx(keepalive双机热备)+3（tomcat）+2redis（双机热备），但是后来由于阿里云服务器经典网络不提供虚拟IP，无法使用keepalive，nginx双机热备只能暂时先放弃，退而求其次，采用nginx+3tomcat+2redis（双机热备）。nginx+tomcat由于之前配置过，所以重点就落在redis双机热备上，毕竟是线上系统，适当的抗灾能力还是需要的，咱可不能像测试系统那么去玩，否则黑锅就有的背了，毕竟码代码赚点生活费也不容易。\n1.redis-cluster，官方提供的集群搭建方案（过于重量级，比较适合后期数据量较大的时候的使用）\n2.redis+keepalive（由于我们使用的阿里云服务器不支持虚拟IP，所以这套方案也就夭折了）\n3.redis+zookeeper（需要引入zookeeper，对现有代码变动较大）\n4.redis+sentinel（redis自带监控中间件）（代码变动小，配置少，而且能满足双机热备的需求）\n\n主-备方式即指的是一台服务器处于某种业务的激活状态（即Active状态），另一台服务器处于该业务的备用状态（即Standby状态)。而双主机方式即指两种不同业务分别在两台服务器上互为主备状态（即Active-Standby和Standby-Active状态）。\n当主服务器挂了之后，从服务器立马切换为主服务器继续工作，当原先主服务器修复完善启动后，会自动充当从服务器的角色继续工作。这样就很好的避免了，由于一台主机出现故障，系统挂点的现象出现。\nSentinel(哨兵)是用于监控redis集群中Master状态的工具，已经集成在redis官方版本中，可以直接配置使用。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3684,"question":"】Redis采用自增订单号存在什么问题？令牌桶放入list，取出一个删掉","simplecontent":null,"content":"《可以采用令牌桶放入list，取出一个删掉》","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3685,"question":"Redis Sentinel的主要功能?","simplecontent":null,"content":"Sentinel的主要功能包括主节点存活检测、主从运行情况检测、自动故障转移（failover）、主从切换。Redis的Sentinel最小配置是一主一从。 Redis的Sentinel系统可以用来管理多个Redis服务器，该系统可以执行以下四个任务：\n\n监控\n\nSentinel会不断的检查主服务器和从服务器是否正常运行。\n\n\n通知\n\n当被监控的某个Redis服务器出现问题，Sentinel通过API脚本向管理员或者其他的应用程序发送通知。\n\n\n自动故障转移\n\n当主节点不能正常工作时，Sentinel会开始一次自动的故障转移操作，它会将与失效主节点是主从关系的其中一个从节点升级为新的主节点， 并且将其他的从节点指向新的主节点。\n\n\n配置提供者\n\n在Redis Sentinel模式下，客户端应用在初始化时连接的是Sentinel节点集合，从中获取主节点的信息。\n","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3686,"question":"】为什么要主从复制（一主多仆），读写分离？解决单点故障","simplecontent":null,"content":"redis在作为缓存的时候，随着数据的不断增加，是有可能出现宕机的，这时候就出现了“单点故障”，解决方案就是进行主从复制，读写分离。\n\n原理图：Master是主，Slave是从，Master具有读写权限，Slave只有读权限（以下还会介绍redis分布式锁，即当Master死机之后，利用“sentinel监控”把Slave其中一个提升为Master,让系统继续执行，直至原Master重启后恢复）\n\n但是万一主机挂了怎么办，这是个麻烦事情，所以redis提供了一个sentinel（哨兵）\n一般“高可用”我们需要建立三个sentinel(哨兵)构成“sentinel集群”","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:35","updateTime":"2021-05-26 01:06:35","isExist":null},{"id":3660,"question":"】主从架构下那么master是否需要开启持久化？需要，如果使用从机作为备份，主机宕机了，主机数据是空，那么可能导致从机删除数据也变空了，且主机恢复时就没数据可恢复","simplecontent":null,"content":"如果采用了主从架构，那么建议必须开启master node的持久化！\n\n不建议用slave node作为master node的数据热备，因为那样的话，如果你关掉master的持久化，可能在master宕机重启的时候数据是空的，然后可能一经过复制，salve node数据也丢了\n\nmaster -> RDB和AOF都关闭了 -> 全部在内存中\n\nmaster宕机，重启，是没有本地数据可以恢复的，然后就会直接认为自己IDE数据是空的\n\nmaster就会将空的数据集同步到slave上去，所有slave的数据全部清空\n\n100%的数据丢失\n\nmaster节点，必须要使用持久化机制\n\n第二个，master的各种备份方案，要不要做，万一说本地的所有文件丢失了; 从备份中挑选一份rdb去恢复master; 这样才能确保master启动的时候，是有数据的\n\n即使采用了后续讲解的高可用机制，slave node可以自动接管master node，但是也可能sentinal还没有检测到master failure，master node就自动重启了，还是可能导致上面的所有slave node数据清空故障","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3661,"question":"】Redis高并发如何优化？一主多从（高并发通常是读瓶颈）","simplecontent":null,"content":"一主多从（高并发通常是读瓶颈）","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3662,"question":"】Redis的一主多从作用？主负责写，从复制读","simplecontent":null,"content":"主负责写，从复制读","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3663,"question":"】单机redis可以支撑多少并发量？几万","simplecontent":null,"content":"几万","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3664,"question":"】Redis存储结构分别用在什么场景？String在简单kv缓存、list放入文章列表和粉丝列表、hash在对象、set在去重和交集并集差集、sort在设置分数进行排序","simplecontent":null,"content":"（1）string\n\n这是最基本的类型了，没啥可说的，就是普通的set和get，做简单的kv缓存\n\n（2）hash\n\n这个是类似map的一种结构，这个一般就是可以将结构化的数据，比如一个对象（前提是这个对象没嵌套其他的对象）给缓存在redis里，然后每次读写缓存的时候，可以就操作hash里的某个字段。\n\nkey=150\n\nvalue={\n  “id”: 150,\n  “name”: “zhangsan”,\n  “age”: 20\n}\n\nhash类的数据结构，主要是用来存放一些对象，把一些简单的对象给缓存起来，后续操作的时候，你可以直接仅仅修改这个对象中的某个字段的值\n\nvalue={\n  “id”: 150,\n  “name”: “zhangsan”,\n  “age”: 21\n}\n\n\n（3）list\n\n有序列表，这个是可以玩儿出很多花样的\n\n微博，某个大v的粉丝，就可以以list的格式放在redis里去缓存\n\nkey=某大v\n\nvalue=[zhangsan, lisi, wangwu]\n\n比如可以通过list存储一些列表型的数据结构，类似粉丝列表了、文章的评论列表了之类的东西\n\n比如可以通过lrange命令，就是从某个元素开始读取多少个元素，可以基于list实现分页查询，这个很棒的一个功能，基于redis实现简单的高性能分页，可以做类似微博那种下拉不断分页的东西，性能高，就一页一页走\n\n比如可以搞个简单的消息队列，从list头怼进去，从list尾巴那里弄出来\n\n（4）set\n\n无序集合，自动去重\n\n直接基于set将系统里需要去重的数据扔进去，自动就给去重了，如果你需要对一些数据进行快速的全局去重，你当然也可以基于jvm内存里的HashSet进行去重，但是如果你的某个系统部署在多台机器上呢？\n\n得基于redis进行全局的set去重\n\n可以基于set玩儿交集、并集、差集的操作，比如交集吧，可以把两个人的粉丝列表整一个交集，看看俩人的共同好友是谁？对吧\n\n把两个大v的粉丝都放在两个set中，对两个set做交集\n\n（5）sorted set\n\n排序的set，去重但是可以排序，写进去的时候给一个分数，自动根据分数排序，这个可以玩儿很多的花样，最大的特点是有个分数可以自定义排序规则\n\n比如说你要是想根据时间对数据排序，那么可以写入进去的时候用某个时间作为分数，人家自动给你按照时间排序了\n\n排行榜：将每个用户以及其对应的什么分数写入进去，zadd board score username，接着zrevrange board 0 99，就可以获取排名前100的用户；zrank board username，可以看到用户在排行榜里的排名\n\nzadd board 85 zhangsan\nzadd board 72 wangwu\nzadd board 96 lisi\nzadd board 62 zhaoliu\n\n96 lisi\n85 zhangsan\n72 wangwu\n62 zhaoliu\n\nzrevrange board 0 3\n\n获取排名前3的用户\n\n96 lisi\n85 zhangsan\n72 wangwu\n\nzrank board zhaoliu","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3665,"question":"】Redis的线程模型？","simplecontent":null,"content":"1）文件事件处理器\n\nredis基于reactor模式开发了网络事件处理器，这个处理器叫做文件事件处理器，file event handler。这个文件事件处理器，是单线程的，redis才叫做单线程的模型，采用IO多路复用机制同时监听多个socket，根据socket上的事件来选择对应的事件处理器来处理这个事件。\n\n如果被监听的socket准备好执行accept、read、write、close等操作的时候，跟操作对应的文件事件就会产生，这个时候文件事件处理器就会调用之前关联好的事件处理器来处理这个事件。\n\n文件事件处理器是单线程模式运行的，但是通过IO多路复用机制监听多个socket，可以实现高性能的网络通信模型，又可以跟内部其他单线程的模块进行对接，保证了redis内部的线程模型的简单性。\n\n文件事件处理器的结构包含4个部分：多个socket，IO多路复用程序，文件事件分派器，事件处理器（命令请求处理器、命令回复处理器、连接应答处理器，等等）。\n\n多个socket可能并发的产生不同的操作，每个操作对应不同的文件事件，但是IO多路复用程序会监听多个socket，但是会将socket放入一个队列中排队，每次从队列中取出一个socket给事件分派器，事件分派器把socket给对应的事件处理器。\n\n然后一个socket的事件处理完之后，IO多路复用程序才会将队列中的下一个socket给事件分派器。文件事件分派器会根据每个socket当前产生的事件，来选择对应的事件处理器来处理。\n\n2）文件事件\n\n当socket变得可读时（比如客户端对redis执行write操作，或者close操作），或者有新的可以应答的sccket出现时（客户端对redis执行connect操作），socket就会产生一个AE_READABLE事件。\n\n当socket变得可写的时候（客户端对redis执行read操作），socket会产生一个AE_WRITABLE事件。\n\nIO多路复用程序可以同时监听AE_REABLE和AE_WRITABLE两种事件，要是一个socket同时产生了AE_READABLE和AE_WRITABLE两种事件，那么文件事件分派器优先处理AE_REABLE事件，然后才是AE_WRITABLE事件。\n\n3）文件事件处理器\n\n如果是客户端要连接redis，那么会为socket关联连接应答处理器\n如果是客户端要写数据到redis，那么会为socket关联命令请求处理器\n如果是客户端要从redis读数据，那么会为socket关联命令回复处理器\n\n4）客户端与redis通信的一次流程\n\n在redis启动初始化的时候，redis会将连接应答处理器跟AE_READABLE事件关联起来，接着如果一个客户端跟redis发起连接，此时会产生一个AE_READABLE事件，然后由连接应答处理器来处理跟客户端建立连接，创建客户端对应的socket，同时将这个socket的AE_READABLE事件跟命令请求处理器关联起来。\n\n当客户端向redis发起请求的时候（不管是读请求还是写请求，都一样），首先就会在socket产生一个AE_READABLE事件，然后由对应的命令请求处理器来处理。这个命令请求处理器就会从socket中读取请求相关数据，然后进行执行和处理。\n\n接着redis这边准备好了给客户端的响应数据之后，就会将socket的AE_WRITABLE事件跟命令回复处理器关联起来，当客户端这边准备好读取响应数据时，就会在socket上产生一个AE_WRITABLE事件，会由对应的命令回复处理器来处理，就是将准备好的响应数据写入socket，供客户端来读取。\n\n命令回复处理器写完之后，就会删除这个socket的AE_WRITABLE事件和命令回复处理器的关联关系。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3666,"question":"】redis和memcached有什么区别？单多线程、数据结构、redis的hash更好，memcached存储一个数据很大会更好，集群","simplecontent":null,"content":"redis最基本的一个内部原理和特点，就是redis实际上是个单线程工作模型。\n另外一个友情提示，要听明白redis的线程模型，你需要了解socket网络相关的基本知识，如果不懂。。。那我觉得你java没学好吧。初学者都该学习java的socket网络通信相关知识的。。。\n\n4、面试题剖析\n\n（1）redis和memcached有啥区别\n\n这个事儿吧，你可以比较出N多个区别来，但是我还是采取redis作者给出的几个比较吧\n\n1）Redis支持服务器端的数据操作：Redis相比Memcached来说，拥有更多的数据结构和并支持更丰富的数据操作，通常在Memcached里，你需要将数据拿到客户端来进行类似的修改再set回去。这大大增加了网络IO的次数和数据体积。在Redis中，这些复杂的操作通常和一般的GET/SET一样高效。所以，如果需要缓存能够支持更复杂的结构和操作，那么Redis会是不错的选择。\n\n2）内存使用效率对比：使用简单的key-value存储的话，Memcached的内存利用率更高，而如果Redis采用hash结构来做key-value存储，由于其组合式的压缩，其内存利用率会高于Memcached。\n\n3）性能对比：由于Redis只使用单核，而Memcached可以使用多核，所以平均每一个核上Redis在存储小数据时比Memcached性能更高。而在100k以上的数据中，Memcached性能要高于Redis，虽然Redis最近也在存储大数据的性能上进行优化，但是比起Memcached，还是稍有逊色。\n\n4）集群模式：memcached没有原生的集群模式，需要依靠客户端来实现往集群中分片写入数据；但是redis目前是原生支持cluster模式的，redis官方就是支持redis cluster集群模式的，比memcached来说要更好","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3667,"question":"】redis的线程模型是什么？","simplecontent":null,"content":"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3668,"question":"】为什么单线程的redis比多线程的memcached效率要高得多？内存、io多路复用、单线程","simplecontent":null,"content":"1）纯内存操作\n2）核心是基于非阻塞的IO多路复用机制\n3）单线程反而避免了多线程的频繁上下文切换问题（百度）\nIO多路复用接受请求放入队列就返回处理下一个任务","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3669,"question":"】Redis如何做高并发优化？分段加锁+合并扣减","simplecontent":null,"content":"Redis可支持上万请求没问题的\n比如减少库存，将一个商品的库存放在不同的字段，这些字段加起来等于库存数量，那么加锁会对不同字段进行分布式加锁，减少库存时随机选择字段进行加锁减少库存","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3670,"question":"】项目如何使用redis缓存？EnableCaching、@Cacheable、@CacheEvict","simplecontent":null,"content":"@EnableCaching\n\n\npublic interface TdDhgateSupplieridService extends ISuperService<TdDhgateSupplierid> {\n\n    public List<TdDhgateSupplierid> findTdDhgateSupplierid(TdDhgateSupplierid tdDhgateSupplierid);\n\n    @Cacheable(value = \"TdDhgateSupplierid\", key=\"'supplierid=' + #supplierid\" , unless=\"#result == null\")\n    public List<TdDhgateSupplierid> findTdDhgateSupplierid1(String supplierid);\n\n    @CacheEvict(value = \"TdDhgateSupplierid\", key=\"'supplierid=' + #tdDhgateSupplierid.supplierid\")\n    public int updateTdDhgateSupplierid(TdDhgateSupplierid tdDhgateSupplierid);\n\n    List<TdDhgateSupplierid> selectTdDhgateSupplierid(String supplierid);\n}","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3671,"question":"】@Cacheable的方法有那些？查询缓存起来，value、key和condition","simplecontent":null,"content":" @Cacheable可以标记在一个方法上，也可以标记在一个类上。当标记在一个方法上时表示该方法是支持缓存的，当标记在一个类上时则表示该类所有的方法都是支持缓存的。对于一个支持缓存的方法，Spring会在其被调用后将其返回值缓存起来，以保证下次利用同样的参数来执行该方法时可以直接从缓存中获取结果，而不需要再次执行该方法。Spring在缓存方法的返回值时是以键值对进行缓存的，值就是方法的返回结果，至于键的话，Spring又支持两种策略，默认策略和自定义策略。\n@Cacheable可以指定三个属性，value、key和condition。\n value属性是必须指定的，其表示当前方法的返回值是会被缓存在哪个Cache上的，对应Cache的名称。其可以是一个Cache也可以是多个Cache，当需要指定多个Cache时其是一个数组。\n   @Cacheable(\"cache1\")//Cache是发生在cache1上的\n   public User find(Integer id) {\n      returnnull;\n   }\n \n   @Cacheable({\"cache1\", \"cache2\"})//Cache是发生在cache1和cache2上的\n   public User find(Integer id) {\n      returnnull;\n   }\n key属性是用来指定Spring缓存方法的返回结果时对应的key的。该属性支持SpringEL表达式。当我们没有指定该属性时，Spring将使用默认策略生成key。\n\n  自定义策略是指我们可以通过Spring的EL表达式来指定我们的key。这里的EL表达式可以使用方法参数及它们对应的属性。使用方法参数时我们可以直接使用“#参数名”或者“#p参数index”。下面是几个使用参数作为key的示例。\n   @Cacheable(value=\"users\", key=\"#id\")\n   public User find(Integer id) {\n      returnnull;\n   }\n \n   @Cacheable(value=\"users\", key=\"#p0\")\n   public User find(Integer id) {\n      returnnull;\n   }\n \n   @Cacheable(value=\"users\", key=\"#user.id\")\n   public User find(User user) {\n      returnnull;\n   }\n \n   @Cacheable(value=\"users\", key=\"#p0.id\")\n   public User find(User user) {\n      returnnull;\n   }\n\n condition属性指定发生的条件\n       有的时候我们可能并不希望缓存一个方法所有的返回结果。通过condition属性可以实现这一功能。condition属性默认为空，表示将缓存所有的调用情形。其值是通过SpringEL表达式来指定的，当为true时表示进行缓存处理；当为false时表示不进行缓存处理，即每次调用该方法时该方法都会执行一次。如下示例表示只有当user的id为偶数时才会进行缓存。\n   @Cacheable(value={\"users\"}, key=\"#user.id\", condition=\"#user.id%2==0\")\n   public User find(User user) {\n      System.out.println(\"find user by user \" + user);\n      return user;\n   }\n ","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3672,"question":"】@CacheEvict的方法有哪些？清除缓存，value、key和condition、allEntries、beforeInvocation","simplecontent":null,"content":"  @CacheEvict是用来标注在需要清除缓存元素的方法或类上的。当标记在一个类上时表示其中所有的方法的执行都会触发缓存的清除操作。@CacheEvict可以指定的属性有value、key、condition、allEntries和beforeInvocation。其中value、key和condition的语义与@Cacheable对应的属性类似。即value表示清除操作是发生在哪些Cache上的（对应Cache的名称）；key表示需要清除的是哪个key，如未指定则会使用默认策略生成的key；condition表示清除操作发生的条件。\n\nallEntries属性\n       allEntries是boolean类型，表示是否需要清除缓存中的所有元素。默认为false，表示不需要。当指定了allEntries为true时，Spring Cache将忽略指定的key。有的时候我们需要Cache一下清除所有的元素，这比一个一个清除元素更有效率。\n   @CacheEvict(value=\"users\", allEntries=true)\n   public void delete(Integer id) {\n      System.out.println(\"delete user by id: \" + id);\n   }\nbeforeInvocation属性\n       清除操作默认是在对应方法成功执行之后触发的，即方法如果因为抛出异常而未能成功返回时也不会触发清除操作。使用beforeInvocation可以改变触发清除操作的时间，当我们指定该属性值为true时，Spring会在调用该方法之前清除缓存中的指定元素。\n   @CacheEvict(value=\"users\", beforeInvocation=true)\n   public void delete(Integer id) {\n      System.out.println(\"delete user by id: \" + id);\n   }","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3673,"question":"】@CachePut作用是什么？每次查询放入缓存","simplecontent":null,"content":"       在支持Spring Cache的环境下，对于使用@Cacheable标注的方法，Spring在每次执行前都会检查Cache中是否存在相同key的缓存元素，如果存在就不再执行该方法，而是直接从缓存中获取结果进行返回，否则才会执行并将返回结果存入指定的缓存中。@CachePut也可以声明一个方法支持缓存功能。与@Cacheable不同的是使用@CachePut标注的方法在执行前不会去检查缓存中是否存在之前执行过的结果，而是每次都会执行该方法，并将执行结果以键值对的形式存入指定的缓存中。\n       @CachePut也可以标注在类上和方法上。使用@CachePut时我们可以指定的属性跟@Cacheable是一样的。\n   @CachePut(\"users\")//每次都会执行方法，并将结果存入指定的缓存中\n   public User find(Integer id) {\n      returnnull;\n   }","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3674,"question":"】高可用集群解决方式？主备、双主","simplecontent":null,"content":"《主备方式、双主方式（不包含主备）》\n\n手段：冗余方案（redundant）\n\n集群主机分为：active/passive（一主多备），active/active（双主）\n\n主备方式\n集群中的节点以主备的方式运行，主机处于工作状态，备机处于监控准备状态；当主机出现宕机状态时，备机接管主机的一切工作， 待主机恢复正常后，备机再根据事先设置的设定来决定是否把服务切换到主机上运行。\n双主方式\n集群中的节点均已主机方式运行，互相之间同时运行维护各自的服务工作并相互检测。当任意一台主机宕机后，另一台主机会接管它的一切工作，保证服务正常运行。\n\n解决方案的开源软件有：keepalived 、heartbeat、corosyns\n一般采用奇数主机方案3/5/7","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3675,"question":"】Redis全量同步原理？从库启动发送同步命令，主发送快照到所有从，然后再发送写命令","simplecontent":null,"content":"从库启动发送同步命令，主发送快照到所有从，然后再发送写命令","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:34","updateTime":"2021-05-26 01:06:34","isExist":null},{"id":3645,"question":"】Redis主从架构数据丢失解决异步复制和脑裂导致的数据丢失？设置主机超过一段时间没有接受到从机的ack信号，主机不能再写数据了（不管主机是否挂了还是连不上从机以后都不能再接收数据而是通过mq存储进行消费，只能用从机转为主机的新机器）《一个是主机赋值数据到从机但是这个时间间隔太久了，不能写；另一个是主机连不上从机无法发数据了也不能写》","simplecontent":null,"content":"min-slaves-to-write 1\nmin-slaves-max-lag 10\n\n要求至少有1个slave，数据复制和同步的延迟不能超过10秒\n\n如果说一旦所有的slave，数据复制和同步的延迟都超过了10秒钟，那么这个时候，master就不会再接收任何请求了\n\n上面两个配置可以减少异步复制和脑裂导致的数据丢失\n\n（1）减少异步复制的数据丢失\n\n有了min-slaves-max-lag这个配置，就可以确保说，一旦slave复制数据和ack延时太长，就认为可能master宕机后损失的数据太多了，那么就拒绝写请求，这样可以把master宕机时由于部分数据未同步到slave导致的数据丢失降低的可控范围内\n\n（2）减少脑裂的数据丢失\n\n如果一个master出现了脑裂，跟其他slave丢了连接，那么上面两个配置可以确保说，如果不能继续给指定数量的slave发送数据，而且slave超过10秒没有给自己ack消息，那么就直接拒绝客户端的写请求\n\n这样脑裂后的旧master就不会接受client的新数据，也就避免了数据丢失\n\n上面的配置就确保了，如果跟任何一个slave丢了连接，在10秒后发现没有slave给自己ack，那么就拒绝新的写请求\n\n因此在脑裂场景下，最多就丢失10秒的数据","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3646,"question":"】sentinal哨兵主要功能有哪些？心跳监控是否可用、故障转移","simplecontent":null,"content":"（1）集群监控，负责监控redis master和slave进程是否正常工作\n（2）消息通知，如果某个redis实例有故障，那么哨兵负责发送消息作为报警通知给管理员\n（3）故障转移，如果master node挂掉了，会自动转移到slave node上\n（4）配置中心，如果故障转移发生了，通知client客户端新的master地址\n\n哨兵本身也是分布式的，作为一个哨兵集群去运行，互相协同工作\n\n（1）故障转移时，判断一个master node是宕机了，需要大部分的哨兵都同意才行，涉及到了分布式选举的问题\n（2）即使部分哨兵节点挂掉了，哨兵集群还是能正常工作的，因为如果一个作为高可用机制重要组成部分的故障转移系统本身是单点的，那就很坑爹了\n\n目前采用的是sentinal 2版本，sentinal 2相对于sentinal 1来说，重写了很多代码，主要是让故障转移的机制和算法变得更加健壮和简单","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3647,"question":"】哨兵如何部署？至少3个实例，进行分布式选举选择其中一台从机","simplecontent":null,"content":"（1）哨兵至少需要3个实例，来保证自己的健壮性\n（2）哨兵 + redis主从的部署架构，是不会保证数据零丢失的，只能保证redis集群的高可用性\n（3）对于哨兵 + redis主从这种复杂的部署架构，尽量在测试环境和生产环境，都进行充足的测试和演练","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3648,"question":"】为什么redis哨兵集群只有2个节点无法正常工作？主机宕机了，主机和其中同机器的哨兵也会挂，而从机和同机器的哨兵虽然存活，但是不会执行故障转移","simplecontent":null,"content":"哨兵集群必须部署2个以上节点\n\n如果哨兵集群仅仅部署了个2个哨兵实例，quorum=1\n\n+----+         +----+\n| M1|------ -------| R1 |\n| S1 |         | S2 |\n+----+         +----+\n\nConfiguration: quorum = 1\n\nmaster宕机，s1和s2中只要有1个哨兵认为master宕机就可以还行切换，同时s1和s2中会选举出一个哨兵来执行故障转移\n\n同时这个时候，需要majority（同意数量），也就是大多数哨兵都是运行的，2个哨兵的majority就是2（2的majority=2，3的majority=2，5的majority=3，4的majority=2），2个哨兵都运行着，就可以允许执行故障转移\n\n但是如果整个M1和S1运行的机器宕机了，那么哨兵只有1个了，此时就没有majority来允许执行故障转移，虽然另外一台机器还有一个R1，但是故障转移不会执行","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3649,"question":"】经典的3节点哨兵集群？3个哨兵，如果主机挂了，剩下2个哨兵，同意数量有2个可以转移","simplecontent":null,"content":"+----+\n       | M1 |\n       | S1 |\n       +----+\n        \n+----+    |    +----+\n| R2 |----+---   -| R3 |\n| S2 |         | S3 |\n+----+         +----+\n\nConfiguration: quorum = 2，majority\n\n如果M1所在机器宕机了，那么三个哨兵还剩下2个，S2和S3可以一致认为master宕机，然后选举出一个来执行故障转移，同时3个哨兵的majority是2，所以还剩下的2个哨兵运行着，就可以允许执行故障转移","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3650,"question":"】选举理解？1个人自己同意没用，2个人都同意才行，3个以上要多数服从少数原则","simplecontent":null,"content":"1个人自己同意没用，2个人都同意才行，3个以上要多数服从少数原则","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3651,"question":"】什么是高可用？全年99.99%时间都可用","simplecontent":null,"content":"全年99.99%时间都可用","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3652,"question":"】Redis主从结构如何实现高可用？主从切换，主机挂了，在几秒或几分钟从机转换成从机","simplecontent":null,"content":"主从切换，主机挂了，在几秒或几分钟从机转换成从机","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3653,"question":"】Redis主从架构不可用情况？仅有的一台主机挂了，不可写，只可读了","simplecontent":null,"content":"仅有的一台主机挂了，不可写，只可读了","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3654,"question":"】主从架构的核心原理？启动slave发送PSYNC命令给master，master生成RDB快照发送给slave，slave会先写入本地磁盘，然后再从本地磁盘加载到内存；master会将内存中缓存的写命令发送给slave，slave也会同步这些数据","simplecontent":null,"content":"当启动一个slave node的时候，它会发送一个PSYNC命令给master node\n\n如果这是slave node重新连接master node，那么master node仅仅会复制给slave部分缺少的数据; 否则如果是slave node第一次连接master node，那么会触发一次full resynchronization\n\n开始full resynchronization的时候，master会启动一个后台线程，开始生成一份RDB快照文件，同时还会将从客户端收到的所有写命令缓存在内存中。RDB文件生成完毕之后，master会将这个RDB发送给slave，slave会先写入本地磁盘，然后再从本地磁盘加载到内存中。然后master会将内存中缓存的写命令发送给slave，slave也会同步这些数据。\n\n\n1、复制的完整流程\n\n（1）slave node启动，仅仅保存master node的信息，包括master node的host和ip，但是复制流程没开始\n\nmaster host和ip是从哪儿来的，redis.conf里面的slaveof配置的\n\n（2）slave node内部有个定时任务，每秒检查是否有新的master node要连接和复制，如果发现，就跟master node建立socket网络连接\n（3）slave node发送ping命令给master node\n（4）口令认证，如果master设置了requirepass，那么salve node必须发送masterauth的口令过去进行认证\n（5）master node第一次执行全量复制，将所有数据发给slave node\n（6）master node后续持续将写命令，异步复制给slave node\n\n2、数据同步相关的核心机制\n\n指的就是第一次slave连接msater的时候，执行的全量复制，那个过程里面你的一些细节的机制\n\n（1）master和slave都会维护一个offset\n\nmaster会在自身不断累加offset，slave也会在自身不断累加offset\nslave每秒都会上报自己的offset给master，同时master也会保存每个slave的offset\n\n这个倒不是说特定就用在全量复制的，主要是master和slave都要知道各自的数据的offset，才能知道互相之间的数据不一致的情况\n\n（2）backlog\n\nmaster node有一个backlog，默认是1MB大小\nmaster node给slave node复制数据时，也会将数据在backlog中同步写一份\nbacklog主要是用来做全量复制中断候的增量复制的\n\n（3）master run id\n\ninfo server，可以看到master run id\n如果根据host+ip定位master node，是不靠谱的，如果master node重启或者数据出现了变化，那么slave node应该根据不同的run id区分，run id不同就做全量复制\n如果需要不更改run id重启redis，可以使用redis-cli debug reload命令\n\n（4）psync\n\n从节点使用psync从master node进行复制，psync runid offset\nmaster node会根据自身的情况返回响应信息，可能是FULLRESYNC runid offset触发全量复制，可能是CONTINUE触发增量复制\n\n3、全量复制\n\n（1）master执行bgsave，在本地生成一份rdb快照文件\n（2）master node将rdb快照文件发送给salve node，如果rdb复制时间超过60秒（repl-timeout），那么slave node就会认为复制失败，可以适当调节大这个参数\n（3）对于千兆网卡的机器，一般每秒传输100MB，6G文件，很可能超过60s\n（4）master node在生成rdb时，会将所有新的写命令缓存在内存中，在salve node保存了rdb之后，再将新的写命令复制给salve node\n（5）client-output-buffer-limit slave 256MB 64MB 60，如果在复制期间，内存缓冲区持续消耗超过64MB，或者一次性超过256MB，那么停止复制，复制失败\n（6）slave node接收到rdb之后，清空自己的旧数据，然后重新加载rdb到自己的内存中，同时基于旧的数据版本对外提供服务\n（7）如果slave node开启了AOF，那么会立即执行BGREWRITEAOF，重写AOF\n\nrdb生成、rdb通过网络拷贝、slave旧数据的清理、slave aof rewrite，很耗费时间\n\n如果复制的数据量在4G~6G之间，那么很可能全量复制时间消耗到1分半到2分钟\n\n4、增量复制\n\n（1）如果全量复制过程中，master-slave网络连接断掉，那么salve重新连接master时，会触发增量复制\n（2）master直接从自己的backlog中获取部分丢失的数据，发送给slave node，默认backlog就是1MB\n（3）msater就是根据slave发送的psync中的offset来从backlog中获取数据的\n\n5、heartbeat\n\n主从节点互相都会发送heartbeat信息\n\nmaster默认每隔10秒发送一次heartbeat，salve node每隔1秒发送一个heartbeat\n\n6、异步复制\n\nmaster每次接收到写命令之后，现在内部写入数据，然后异步发送给slave node","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3655,"question":"】主从是异步还是同步复制？异步","simplecontent":null,"content":"异步","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3656,"question":"】主从机构中如果多个slave网络故障后重连如何复制了？启动一个rdb save操作，用一份数据服务所有slave node","simplecontent":null,"content":"slave node如果跟master node有网络故障，断开了连接，会自动重连。master如果发现有多个slave node都来重新连接，仅仅会启动一个rdb save操作，用一份数据服务所有slave node。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3657,"question":"】主从复制的断点续传？主从复制过程中网络连接断掉，可以接着上次复制的地方，继续复制下去","simplecontent":null,"content":"从redis 2.8开始，就支持主从复制的断点续传，如果主从复制过程中，网络连接断掉了，那么可以接着上次复制的地方，继续复制下去，而不是从头开始复制一份\n\nmaster node会在内存中常见一个backlog，master和slave都会保存一个replica offset还有一个master id，offset就是保存在backlog中的。如果master和slave网络连接断掉了，slave会让master从上次的replica offset开始继续复制\n\n但是如果没有找到对应的offset，那么就会执行一次resynchronization","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3658,"question":"】无磁盘化复制？master在内存中直接创建rdb，然后发送给slave","simplecontent":null,"content":"master在内存中直接创建rdb，然后发送给slave，不会在自己本地落地磁盘了\n\nrepl-diskless-sync\nrepl-diskless-sync-delay，等待一定时长再开始复制，因为要等更多slave重新连接过来","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3659,"question":"】主从架构过期key如何同步？slave不会过期key，只会等待master过期key，master过期一个key或通过LRU淘汰了key，会模拟一条del命令发送给slave","simplecontent":null,"content":"slave不会过期key，只会等待master过期key。如果master过期了一个key，或者通过LRU淘汰了一个key，那么会模拟一条del命令发送给slave。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:33","updateTime":"2021-05-26 01:06:33","isExist":null},{"id":3625,"question":"】cluster获取数据？","simplecontent":null,"content":"      如果存入一个值，按照redis cluster哈希槽的算法： CRC16('key')%16384 = 6782。 那么就会把这个key 的存储分配到 B 上了。同样，当我连接(A,B,C)任何一个节点想获取'key'这个key时，也会这样的算法，然后内部跳转到B节点上获取数据 ","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3626,"question":"】Abc和a1 b1 c1 如果b挂了可以工作吗，b和b1都挂了可以工作吗？","simplecontent":null,"content":"上面那个例子里, 集群有ABC三个主节点, 如果这3个节点都没有加入从节点，如果B挂掉了，我们就无法访问整个集群了。A和C的slot也无法访问。\n\n     所以我们在集群建立的时候，一定要为每个主节点都添加了从节点, 比如像这样, 集群包含主节点A、B、C, 以及从节点A1、B1、C1, 那么即使B挂掉系统也可以继续正确工作。\n\n     B1节点替代了B节点，所以Redis集群将会选择B1节点作为新的主节点，集群将会继续正确地提供服务。 当B重新开启后，它就会变成B1的从节点。\n\n    不过需要注意，如果节点B和B1同时挂了，Redis集群就无法继续正确地提供服务了。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3627,"question":"】cluster新增和删除一个主节点？2中方式（1.从某个节点分一部分给他  2。重新分配，各个节点取出一部分进行迁移）从各个节点的前面各拿取一部分，同样删除一个节点也是类似，移动完成后就可以删除这个节点了","simplecontent":null,"content":"https://www.cnblogs.com/xifenglou/p/9173419.html\n      新增一个节点D，redis cluster的这种做法是从各个节点的前面各拿取一部分slot到D上，我会在接下来的实践中实验。大致就会变成这样：\n  \n节点A覆盖1365-5460\n    节点B覆盖6827-10922\n    节点C覆盖12288-16383\n    节点D覆盖0-1364,5461-6826,10923-12287\n】redis cluster功能上的限制？\n1.目前只支持同一个槽上的key的批量操作；\n2.目前只支持同一个槽上的key事务；\n3.只能使用数据库0(每个redis实例有16个数据库，可通过select {index}命令来切换)；\n4.不能将一个大的key(如hash、list)映射到不同的节点上；\n5.目前集群主从复制只支持一层，不支持嵌套树状架构；","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3628,"question":"】cluster高可用性与主备切换原理？","simplecontent":null,"content":"redis cluster的高可用的原理，几乎跟哨兵是类似的\n\n1、判断节点宕机\n\n如果一个节点认为另外一个节点宕机，那么就是pfail，主观宕机\n\n如果多个节点都认为另外一个节点宕机了，那么就是fail，客观宕机，跟哨兵的原理几乎一样，sdown，odown\n\n在cluster-node-timeout内，某个节点一直没有返回pong，那么就被认为pfail\n\n如果一个节点认为某个节点pfail了，那么会在gossip ping消息中，ping给其他节点，如果超过半数的节点都认为pfail了，那么就会变成fail\n\n2、从节点过滤\n\n对宕机的master node，从其所有的slave node中，选择一个切换成master node\n\n检查每个slave node与master node断开连接的时间，如果超过了cluster-node-timeout * cluster-slave-validity-factor，那么就没有资格切换成master\n\n这个也是跟哨兵是一样的，从节点超时过滤的步骤\n\n3、从节点选举\n\n哨兵：对所有从节点进行排序，slave priority，offset，run id\n\n每个从节点，都根据自己对master复制数据的offset，来设置一个选举时间，offset越大（复制数据越多）的从节点，选举时间越靠前，优先进行选举\n\n所有的master node开始slave选举投票，给要进行选举的slave进行投票，如果大部分master node（N/2 + 1）都投票给了某个从节点，那么选举通过，那个从节点可以切换成master\n\n从节点执行主备切换，从节点切换为主节点","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3629,"question":"】Cluster与哨兵比较？集中了哨兵","simplecontent":null,"content":"整个流程跟哨兵相比，非常类似，所以说，redis cluster功能强大，直接集成了replication和sentinal的功能\n\n\n没有办法去给大家深入讲解redis底层的设计的细节，核心原理和设计的细节，那个除非单独开一门课，redis底层原理深度剖析，redis源码\n\n对于咱们这个架构课来说，主要关注的是架构，不是底层的细节，对于架构来说，核心的原理的基本思路，是要梳理清晰的","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3630,"question":"】redis cluster数据分布的算法？hash算法","simplecontent":null,"content":"hash算法 -> 一致性hash算法（memcached） -> redis cluster，hash slot算法\n\n用不同的算法，就决定了在多个master节点的时候，数据如何分布到这些节点上去，解决这个问题\n\n1、redis cluster介绍\n\nredis cluster\n\n（1）自动将数据进行分片，每个master上放一部分数据\n（2）提供内置的高可用支持，部分master不可用时，还是可以继续工作的\n\n在redis cluster架构下，每个redis要放开两个端口号，比如一个是6379，另外一个就是加10000的端口号，比如16379\n\n16379端口号是用来进行节点间通信的，也就是cluster bus的东西，集群总线。cluster bus的通信，用来进行故障检测，配置更新，故障转移授权\n\ncluster bus用了另外一种二进制的协议，主要用于节点间进行高效的数据交换，占用更少的网络带宽和处理时间","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3631,"question":"最老土的hash算法和弊端（大量缓存重建）?","simplecontent":null,"content":"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3632,"question":"一致性hash算法（自动缓存迁移）+虚拟节点（自动负载均衡）?","simplecontent":null,"content":"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3633,"question":"】redis cluster的hash slot算法？哈希槽有1.6万个","simplecontent":null,"content":"redis cluster有固定的16384个hash slot，对每个key计算CRC16值，然后对16384取模，可以获取key对应的hash slot\n\nredis cluster中每个master都会持有部分slot，比如有3个master，那么可能每个master持有5000多个hash slot\n\nhash slot让node的增加和移除很简单，增加一个master，就将其他master的hash slot移动部分过去，减少一个master，就将它的hash slot移动到其他master上去\n\n移动hash slot的成本是非常低的\n\n客户端的api，可以对指定的数据，让他们走同一个hash slot，通过hash tag来实现","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3634,"question":"一主多从和多主多从在springboot如何配置ip？","simplecontent":null,"content":"","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3635,"question":"】redis的集群架构是如何？redis cluster（多master + 读写分离 + 高可用）（不需要搭建哨兵了和主从复制那些东西）","simplecontent":null,"content":"一主多从结构实际还是单机，容纳数据量有限，支持高并发但是不支持高容量\nredis cluster\n\n支撑N个redis master node，每个master node都可以挂载多个slave node\n\n读写分离的架构，对于每个master来说，写就写到master，然后读就从mater对应的slave去读\n\n高可用，因为每个master都有salve节点，那么如果mater挂掉，redis cluster这套机制，就会自动将某个slave切换成master\n\nredis cluster（多master + 读写分离 + 高可用）\n\n我们只要基于redis cluster去搭建redis集群即可，不需要手工去搭建replication复制+主从架构+读写分离+哨兵集群+高可用","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3636,"question":"】redis cluster vs. replication + sentinal是如何的？","simplecontent":null,"content":"如果你的数据量很少，主要是承载高并发高性能的场景，比如你的缓存一般就几个G，单机足够了\n\nreplication，一个mater，多个slave，要几个slave跟你的要求的读吞吐量有关系，然后自己搭建一个sentinal集群，去保证redis主从架构的高可用性，就可以了\n\nredis cluster，主要是针对海量数据+高并发+高可用的场景，海量数据，如果你的数据量很大，那么建议就用redis cluster","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3637,"question":"】sdown和odown转换机制是什么？一个和多个发现主机是否宕机","simplecontent":null,"content":"sdown和odown两种失败状态\n\nsdown是主观宕机，就一个哨兵如果自己觉得一个master宕机了，那么就是主观宕机\n\nodown是客观宕机，如果quorum数量的哨兵都觉得一个master宕机了，那么就是客观宕机\n\nsdown达成的条件很简单，如果一个哨兵ping一个master，超过了is-master-down-after-milliseconds指定的毫秒数之后，就主观认为master宕机\n\nsdown到odown转换的条件很简单，如果一个哨兵在指定时间内，收到了quorum指定数量的其他哨兵也认为那个master是sdown了，那么就认为是odown了，客观认为master宕机","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3638,"question":"】哨兵集群的自动发现机制？","simplecontent":null,"content":"哨兵互相之间的发现，是通过redis的pub/sub系统实现的，每个哨兵都会往__sentinel__:hello这个channel里发送一个消息，这时候所有其他哨兵都可以消费到这个消息，并感知到其他的哨兵的存在\n\n每隔两秒钟，每个哨兵都会往自己监控的某个master+slaves对应的__sentinel__:hello channel里发送一个消息，内容是自己的host、ip和runid还有对这个master的监控配置\n\n每个哨兵也会去监听自己监控的每个master+slaves对应的__sentinel__:hello channel，然后去感知到同样在监听这个master+slaves的其他哨兵的存在\n\n每个哨兵还会跟其他哨兵交换对master的监控配置，互相进行监控配置的同步","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3639,"question":"】slave配置的自动纠正？","simplecontent":null,"content":"哨兵会负责自动纠正slave的一些配置，比如slave如果要成为潜在的master候选人，哨兵会确保slave在复制现有master的数据; 如果slave连接到了一个错误的master上，比如故障转移之后，那么哨兵会确保它们连接到正确的master上","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3640,"question":"】slave->master选举算法是怎么样的？客观宕机，考虑断开时长、offset位置高低","simplecontent":null,"content":"如果一个master被认为odown了，而且majority哨兵都允许了主备切换，那么某个哨兵就会执行主备切换操作，此时首先要选举一个slave来\n\n会考虑slave的一些信息\n\n（1）跟master断开连接的时长\n（2）slave优先级\n（3）复制offset\n（4）run id\n\n如果一个slave跟master断开连接已经超过了down-after-milliseconds的10倍，外加master宕机的时长，那么slave就被认为不适合选举为master\n\n(down-after-milliseconds * 10) + milliseconds_since_master_is_in_SDOWN_state\n\n接下来会对slave进行排序\n\n（1）按照slave优先级进行排序，slave priority越低，优先级就越高\n（2）如果slave priority相同，那么看replica offset，哪个slave复制了越多的数据，offset越靠后，优先级就越高\n（3）如果上面两个条件都相同，那么选择一个run id比较小的那个slave","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3641,"question":"】quorum和majority是什么？确认odown的最少的哨兵数量、授权进行主从切换的最少的哨兵数量","simplecontent":null,"content":"quorum：确认odown的最少的哨兵数量\nmajority：授权进行主从切换的最少的哨兵数量\n每次一个哨兵要做主备切换，首先需要quorum数量的哨兵认为odown，然后选举出一个哨兵来做切换，这个哨兵还得得到majority哨兵的授权，才能正式执行切换\n如果quorum < majority，比如5个哨兵，majority就是3，quorum设置为2，那么就3个哨兵授权就可以执行切换，但是如果quorum >= majority，那么必须quorum数量的哨兵都授权，比如5个哨兵，quorum是5，那么必须5个哨兵都同意授权，才能执行切换\n\n\n每次一个哨兵要做主备切换，首先需要quorum数量的哨兵认为odown，然后选举出一个哨兵来做切换，这个哨兵还得得到majority哨兵的授权，才能正式执行切换\n\n如果quorum < majority，比如5个哨兵，majority就是3，quorum设置为2，那么就3个哨兵授权就可以执行切换\n\n但是如果quorum >= majority，那么必须quorum数量的哨兵都授权，比如5个哨兵，quorum是5，那么必须5个哨兵都同意授权，才能执行切换","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3642,"question":"configuration epoch?","simplecontent":null,"content":"哨兵会对一套redis master+slave进行监控，有相应的监控的配置\n\n执行切换的那个哨兵，会从要切换到的新master（salve->master）那里得到一个configuration epoch，这就是一个version号，每次切换的version号都必须是唯一的\n\n如果第一个选举出的哨兵切换失败了，那么其他哨兵，会等待failover-timeout时间，然后接替继续执行切换，此时会重新获取一个新的configuration epoch，作为新的version号","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3643,"question":"configuraiton传播?","simplecontent":null,"content":"哨兵完成切换之后，会在自己本地更新生成最新的master配置，然后同步给其他的哨兵，就是通过之前说的pub/sub消息机制\n\n这里之前的version号就很重要了，因为各种消息都是通过一个channel去发布和监听的，所以一个哨兵完成一次新的切换之后，新的master配置是跟着新的version号的\n\n其他的哨兵都是根据版本号的大小来更新自己的master配置的","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3644,"question":"】Redis主从架构数据丢失原因？主机挂了存在部分数据复制过程中断或者未复制，脑裂","simplecontent":null,"content":"1、两种数据丢失的情况\n\n主备切换的过程，可能会导致数据丢失\n\n（1）异步复制导致的数据丢失\n\n因为master -> slave的复制是异步的，所以可能有部分数据还没复制到slave，master就宕机了，此时这些部分数据就丢失了\n\n（2）脑裂导致的数据丢失\n\n脑裂，也就是说，某个master所在机器突然脱离了正常的网络，跟其他slave机器不能连接，但是实际上master还运行着\n\n此时哨兵可能就会认为master宕机了，然后开启选举，将其他slave切换成了master\n\n这个时候，集群里就会有两个master，也就是所谓的脑裂\n\n此时虽然某个slave被切换成了master，但是可能client还没来得及切换到新的master，还继续写向旧master的数据可能也丢失了\n\n因此旧master再次恢复的时候，会被作为一个slave挂到新的master上去，自己的数据会清空，重新从新的master复制数据\n\n------------------------------------------------------------------","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:32","updateTime":"2021-05-26 01:06:32","isExist":null},{"id":3606,"question":"】一个Redis 实例最多能存放多少的 keys？232 的 keys","simplecontent":null,"content":"232 的 keys","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3607,"question":"】List、Set、Sorted Set 他们最多能存放多少元素？","simplecontent":null,"content":"答：理论上 Redis 可以处理多达 232 的 keys，并且在实际中进行了测试，每个实例至少存放了 2 亿 5 千万的 keys。我们正在测试一些较大的值。任何 list、set、和 sorted set 都可以放 232 个元素。换句话说， Redis 的存储极限是系统中的可用内存值。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3608,"question":"】redis 分布式锁有什么缺陷？超时设置不是原子性","simplecontent":null,"content":"Redis 分布式锁不能解决超时的问题，分布式锁有一个超时时间，程序的执行如果超出了锁的超时时间就会出现问题。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3609,"question":"】redis 如何做内存优化？尽可能使用散列表","simplecontent":null,"content":"尽可能使用散列表（hashes），散列表（是说散列表里面存储的数少）使用的内存非常小，所以你应该尽可能的将你的数据模型抽象到一个散列表里面。\n\n比如你的web系统中有一个用户对象，不要为这个用户的名称，姓氏，邮箱，密码设置单独的key,而是应该把这个用户的所有信息存储到一张散列表里面。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3610,"question":"】redis 常见的性能问题有哪些、该如何解决？主服务器写内存快照持久化时，会阻塞主线程的，会间断性暂停服务、主从复制的速度和连接的稳定性","simplecontent":null,"content":"主服务器写内存快照，会阻塞主线程的工作，当快照比较大时对性能影响是非常大的，会间断性暂停服务，所以主服务器最好不要写内存快照。\nRedis 主从复制的性能问题，为了主从复制的速度和连接的稳定性，主从库最好在同一个局域网内。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3611,"question":"】redis事务有哪些？命令放入队列中、提交全部执行，按照先后顺序","simplecontent":null,"content":"Redis事务功能是通过MULTI、EXEC、DISCARD和WATCH    四个原语实现的\nRedis会将一个事务中的所有命令序列化，然后按顺序执行。\n1.redis 不支持回滚“Redis 在事务失败时不进行回滚，而是继续执行余下的命令”， 所以 Redis 的内部可以保持简单且快速。\n2.如果在一个事务中的命令出现错误，那么所有的命令都不会执行；\n3.如果在一个事务中出现运行错误，那么正确的命令会被执行。\n1）MULTI命令用于开启一个事务，它总是返回OK。  MULTI执行之后，客户端可以继续向服务器发送任意多条命令，这些命令不会立即被执行，而是被放到一个队列中，当EXEC命令被调用时，所有队列中    的 命 令 才 会 被 执 行 。                                                                                                2）EXEC：执行所有事务块内的命令。返回事务块内所有命令的返回值，按命令执行的先后顺序排列。  当操作被打断时，返回空值 nil 。\n3）通过调用DISCARD，客户端可以清空事务队列，并放弃执行事务，  并且客户端会从事务状态中退出。\n4）WATCH 命令可以为 Redis 事务提供 check-and-set （CAS）行为。 可以监控一个或多个键，一旦其中有一个键被修改（或删除），之后的事务就不会执行，监控一直持续到EXEC命令。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3612,"question":"】热点数据和冷数据是什么？热点数据，缓存才有价值","simplecontent":null,"content":"对于冷数据而言，大部分数据可能还没有再次访问到就已经被挤出内存，不仅占用内存，而且价值不 大。频繁修改的数据，看情况考虑使用缓存\n对于上面两个例子，寿星列表、导航信息都存在一个特点，就是信息修改频率不高，读取通常非常高的场景。\n对于热点数据，比如我们的某IM产品，生日祝福模块，当天的寿星列表，缓存以后可能读取数十万次。 再举个例子，某导航产品，我们将导航信息，缓存以后可能读取数百万次。\n数据更新前至少读取两次，缓存才有意义。这个是最基本的策略，如果缓存还没有起作用就失效了，那 就没有太大价值了。\n那存不存在，修改频率很高，但是又不得不考虑缓存的场景呢？有！比如，这个读取接口对数据库的压 力很大，但是又是热点数据，这个时候就需要考虑通过缓存手段，减少数据库的压力，比如我们的某助 手产品的，点赞数，收藏数，分享数等是非常典型的热点数据，但是又不断变化，此时就需要将数据同 步保存到Redis缓存，减少数据库压力。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3613,"question":"】setIfAbsent作用？如果为空就set值，并返回1","simplecontent":null,"content":"如果存在(不为空)不进行操作，并返回0\n\n104","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3614,"question":"】stringredistemplate和redistemplate区别？序列化、区数据不同","simplecontent":null,"content":"两者的数据是不共通的；也就是说StringRedisTemplate只能管理StringRedisTemplate里面的数据，RedisTemplate只能管理RedisTemplate中的数据。\n\n1）RedisTemplate不能取StringRedisTemplate存入的数据。\n\n2）StringRedisTemplate不能取RedisTemplate存入的数据 。\n\n其实他们两者之间的区别主要在于他们使用的序列化类:\n　　　　RedisTemplate使用的是JdkSerializationRedisSerializer    存入数据会将数据先序列化成字节数组然后在存入Redis数据库。 \n\n　　 　  StringRedisTemplate使用的是StringRedisSerializer\n\n使用时注意事项：\n　　　当你的redis数据库里面本来存的是字符串数据或者你要存取的数据就是字符串类型数据的时候，那么你就使用StringRedisTemplate即可。\n　　　但是如果你的数据是复杂的对象类型，而取出的时候又不想做任何的数据转换，直接从Redis里面取出一个对象，那么使用RedisTemplate是更好的选择。\n\n1、 关系不同\nStringRedisTemplate继承RedisTemplate。\n\n2、序列化策略不同\nSDR默认采用的序列化策略有两种：\n\n1）StringRedisTemplate是String的序列化策略；\n\nStringRedisTemplate默认采用的是String的序列化策略，保存的key和value都是采用此策略序列化保存的。\n\n2）RedisTemplate是JDK的序列化策略。\n\nRedisTemplate默认采用的是JDK的序列化策略，保存的key和value都是采用此策略序列化保存的。\n\n\n105","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3615,"question":"】RedisTemplate使用时常见问题？只能存储字节数组","simplecontent":null,"content":"　　　　redisTemplate 中存取数据都是字节数组。当redis中存入的数据是可读形式而非字节数组时，使用redisTemplate取值的时候会无法获取导出数据，获得的值为null。可以使用 StringRedisTemplate 试试。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3616,"question":"】setIfAbsent作用？如果键不存在则新增,存在则不改变已经有的值。","simplecontent":null,"content":"如果键不存在则新增,存在则不改变已经有的值。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3617,"question":"】redis分布式锁原理和代码？使用了setIfAbsent","simplecontent":null,"content":"@RequestMapping(value = \"test\")\npublic void test() {\n    String key = \"hello\";\n    String value = UUID.randomUUID().toString();\n    try {\n        if (lockUtils.lock(key, value)) {\n            Thread.sleep(10000);\n            log.info(\"获取锁成功\");\n        } else {\n            log.error(\"获取锁失败\");\n        }\n\n    }catch (Exception e){\n        e.printStackTrace();\n    } finally {\n        lockUtils.unlock(key,value);\n    }\n}\n\n\n\npackage com.niezhiliang.redis.local.utils;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.data.redis.core.StringRedisTemplate;\nimport org.springframework.data.redis.core.script.DefaultRedisScript;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Arrays;\nimport java.util.concurrent.TimeUnit;\n\n@Component\npublic class LockUtils {\n\n    @Autowired\n    private StringRedisTemplate stringRedisTemplate;\n    @Autowired\n    private DefaultRedisScript<Long> redisScript;\n\n    private final Long RELEASE_SUCCESS = 1L;\n\n    private final Long TIME_OUT = 5L;\n    \n    public boolean lock(String key,String value) {\n        return stringRedisTemplate.opsForValue().setIfAbsent(key,value, TIME_OUT, TimeUnit.SECONDS);\n    }\n\n\n    public boolean unlock(String key,String value) {\n        //使用Lua脚本：先判断是否是自己设置的锁，再执行删除\n        Long result = stringRedisTemplate.execute(redisScript, Arrays.asList(key,value));\n        //返回最终结果\n        return RELEASE_SUCCESS.equals(result);\n    }\n\n\n    @Bean\n    public DefaultRedisScript<Long> defaultRedisScript() {\n        DefaultRedisScript<Long> defaultRedisScript = new DefaultRedisScript<>();\n        defaultRedisScript.setResultType(Long.class);\n        defaultRedisScript.setScriptText(\"if redis.call('get', KEYS[1]) == KEYS[2] then return redis.call('del', KEYS[1]) else return 0 end\");\n        return defaultRedisScript;\n    }\n\n\n}","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3618,"question":"】如何保证redis和mysql数据一致性？非高并发，使用先删除缓存，在插入或修改或者删除mysql，高并发下则1.先把数据放入到redis，直接修改删除redis，通过异步定时更改mysql，2.使用canel","simplecontent":null,"content":"非高并发，使用先删除缓存，在插入或修改或者删除mysql，高并发下则1.先把数据放入到redis，直接修改删除redis，通过异步定时更改mysql，2.使用canel","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3619,"question":"】为什么lua脚本具有原子性？排他性","simplecontent":null,"content":"redis会为lua脚本执行创建伪客户端模拟客户端调用redis执行命令，伪客户端执行lua脚本是排他的\nRedis使用同一个Lua解释器来执行所有命令，同时，Redis保证以一种原子性的方式来执行脚本：当lua脚本在执行的时候，不会有其他脚本和命令同时执行，这种语义类似于 MULTI/EXEC。从别的客户端的视角来看，一个lua脚本要么不可见，要么已经执行完。\n然而这也意味着，执行一个较慢的lua脚本是不建议的，由于脚本的开销非常低，构造一个快速执行的脚本并非难事。但是你要注意到，当你正在执行一个比较慢的脚本时，所以其他的客户端都无法执行命令。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3620,"question":"】使用分布式锁注意的问题？引入try-finally代码块、引入Redis超时机制","simplecontent":null,"content":"们在向Redis中设置锁标志位的时候就设置了超时时间。此时，只要向Redis中成功设置了数据，则即使我们的业务系统宕机，Redis中的数据过期后，也会自动删除。后续的线程进入提交订单的方法后，就会成功的设置锁标志位，并向下执行正常的下单流程。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3621,"question":"】redis分布式锁原理？使用setIfAbsent和lua","simplecontent":null,"content":"假设当线程A首先执行stringRedisTemplate.opsForValue()的setIfAbsent()方法返回true，继续向下执行，正在执行业务代码时，抛出了异常，线程A直接退出了JVM。此时，stringRedisTemplate.delete(PRODUCT_ID);代码还没来得及执行，之后所有的线程进入提交订单的方法时，调用stringRedisTemplate.opsForValue()的setIfAbsent()方法都会返回false。导致后续的所有下单操作都会失败。这就是分布式场景下的死锁问题。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3622,"question":"】redis cluster节点间通信原理?gossip协议，互相之间不断通信","simplecontent":null,"content":"（1）redis cluster节点间采取gossip协议进行通信\n\n跟集中式不同，不是将集群元数据（节点信息，故障，等等）集中存储在某个节点上，而是互相之间不断通信，保持整个集群所有节点的数据是完整的\n\n维护集群的元数据用得，集中式，一种叫做gossip\n\n集中式：好处在于，元数据的更新和读取，时效性非常好，一旦元数据出现了变更，立即就更新到集中式的存储中，其他节点读取的时候立即就可以感知到; 不好在于，所有的元数据的跟新压力全部集中在一个地方，可能会导致元数据的存储有压力\n\ngossip：好处在于，元数据的更新比较分散，不是集中在一个地方，更新请求会陆陆续续，打到所有节点上去更新，有一定的延时，降低了压力; 缺点，元数据更新有延时，可能导致集群的一些操作会有一些滞后\n\n我们刚才做reshard，去做另外一个操作，会发现说，configuration error，达成一致\n\n（2）10000端口\n\n每个节点都有一个专门用于节点间通信的端口，就是自己提供服务的端口号+10000，比如7001，那么用于节点间通信的就是17001端口\n\n每隔节点每隔一段时间都会往另外几个节点发送ping消息，同时其他几点接收到ping之后返回pong\n\n（3）交换的信息\n\n故障信息，节点的增加和移除，hash slot信息，等等","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3623,"question":"gossip协议?","simplecontent":null,"content":"gossip协议包含多种消息，包括ping，pong，meet，fail，等等\n\nmeet: 某个节点发送meet给新加入的节点，让新节点加入集群中，然后新节点就会开始与其他节点进行通信\n\nredis-trib.rb add-node\n\n其实内部就是发送了一个gossip meet消息，给新加入的节点，通知那个节点去加入我们的集群\n\nping: 每个节点都会频繁给其他节点发送ping，其中包含自己的状态还有自己维护的集群元数据，互相通过ping交换元数据\n\n每个节点每秒都会频繁发送ping给其他的集群，ping，频繁的互相之间交换数据，互相进行元数据的更新\n\npong: 返回ping和meet，包含自己的状态和其他信息，也可以用于信息广播和更新\n\nfail: 某个节点判断另一个节点fail之后，就发送fail给其他节点，通知其他节点，指定的节点宕机了","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3624,"question":"ping消息深入?","simplecontent":null,"content":"ping很频繁，而且要携带一些元数据，所以可能会加重网络负担\n\n每个节点每秒会执行10次ping，每次会选择5个最久没有通信的其他节点\n\n当然如果发现某个节点通信延时达到了cluster_node_timeout / 2，那么立即发送ping，避免数据交换延时过长，落后的时间太长了\n\n比如说，两个节点之间都10分钟没有交换数据了，那么整个集群处于严重的元数据不一致的情况，就会有问题\n\n所以cluster_node_timeout可以调节，如果调节比较大，那么会降低发送的频率\n\n每次ping，一个是带上自己节点的信息，还有就是带上1/10其他节点的信息，发送出去，进行数据交换\n\n至少包含3个其他节点的信息，最多包含总节点-2个其他节点的信息\n\n-------------------------------------------------------------------------------------------------------\n\n1、基于重定向的客户端\n\nredis-cli -c，自动重定向\n\n（1）请求重定向\n\n客户端可能会挑选任意一个redis实例去发送命令，每个redis实例接收到命令，都会计算key对应的hash slot\n\n如果在本地就在本地处理，否则返回moved给客户端，让客户端进行重定向\n\ncluster keyslot mykey，可以查看一个key对应的hash slot是什么\n\n用redis-cli的时候，可以加入-c参数，支持自动的请求重定向，redis-cli接收到moved之后，会自动重定向到对应的节点执行命令\n\n（2）计算hash slot\n\n计算hash slot的算法，就是根据key计算CRC16值，然后对16384取模，拿到对应的hash slot\n\n用hash tag可以手动指定key对应的slot，同一个hash tag下的key，都会在一个hash slot中，比如set mykey1:{100}和set mykey2:{100}\n\n（3）hash slot查找\n\n节点间通过gossip协议进行数据交换，就知道每个hash slot在哪个节点上\n\n2、smart jedis\n\n（1）什么是smart jedis\n\n基于重定向的客户端，很消耗网络IO，因为大部分情况下，可能都会出现一次请求重定向，才能找到正确的节点\n\n所以大部分的客户端，比如java redis客户端，就是jedis，都是smart的\n\n本地维护一份hashslot -> node的映射表，缓存，大部分情况下，直接走本地缓存就可以找到hashslot -> node，不需要通过节点进行moved重定向\n\n（2）JedisCluster的工作原理\n\n在JedisCluster初始化的时候，就会随机选择一个node，初始化hashslot -> node映射表，同时为每个节点创建一个JedisPool连接池\n\n每次基于JedisCluster执行操作，首先JedisCluster都会在本地计算key的hashslot，然后在本地映射表找到对应的节点\n\n如果那个node正好还是持有那个hashslot，那么就ok; 如果说进行了reshard这样的操作，可能hashslot已经不在那个node上了，就会返回moved\n\n如果JedisCluter API发现对应的节点返回moved，那么利用该节点的元数据，更新本地的hashslot -> node映射表缓存\n\n重复上面几个步骤，直到找到对应的节点，如果重试超过5次，那么就报错，JedisClusterMaxRedirectionException\n\njedis老版本，可能会出现在集群某个节点故障还没完成自动切换恢复时，频繁更新hash slot，频繁ping节点检查活跃，导致大量网络IO开销\n\njedis最新版本，对于这些过度的hash slot更新和ping，都进行了优化，避免了类似问题\n\n（3）hashslot迁移和ask重定向\n\n如果hash slot正在迁移，那么会返回ask重定向给jedis\n\njedis接收到ask重定向之后，会重新定位到目标节点去执行，但是因为ask发生在hash slot迁移过程中，所以JedisCluster API收到ask是不会更新hashslot本地缓存\n\n已经可以确定说，hashslot已经迁移完了，moved是会更新本地hashslot->node映射表缓存的\n\n\n】为了动态增删节点的时候，不至于丢失数据么？\n节点增删时不丢失数据和hash算法没什么关系，不丢失数据要求的是一份数据有多个副本。\n】还有集群总共有2的14次方，16384个哈希槽，那么每一个哈希槽中存的key 和 value是什么？一个哈希槽有很多个key\n当你往Redis Cluster中加入一个Key时，会根据crc16(key) mod 16384计算这个key应该分布到哪个hash slot中，一个hash slot中会有很多key和value。你可以理解成表的分区，使用单节点时的redis时只有一个表，所有的key都放在这个表里；改用Redis Cluster以后会自动为你生成16384个分区表，你insert数据时会根据上面的简单算法来决定你的key应该存在哪个分区，每个分区里有很多key。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:31","updateTime":"2021-05-26 01:06:31","isExist":null},{"id":3595,"question":"】是否使用过Redis 集群，集群的原理是什么？Redis Sentinal 着眼于高可用、Redis Cluster 着眼于扩展","simplecontent":null,"content":"1)、Redis Sentinal 着眼于高可用， 在 master 宕机时会自动将 slave 提升为master， 继续提供服务。\n\n2)、Redis Cluster 着眼于扩展性， 在单个 redis 内存不足时， 使用 Cluster 进行分片存储。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3596,"question":"】Redis 集群方案什么情况下会导致整个集群不可用？","simplecontent":null,"content":"答： 有 A， B， C 三个节点的集群,在没有复制模型的情况下,如果节点 B 失败了， 那么整个集群就会以为缺少 5501-11000 这个范围的槽而不可用。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3597,"question":"】Jedis 与 Redisson 对比有什么优缺点？Redisson 功能较为简单， 不支持排序、事务、管道、分区等 Redi","simplecontent":null,"content":"答： Jedis 是 Redis 的 Java 实现的客户端， 其 API 提供了比较全面的 Redis 命令的支持；Redisson 实现了分布式和可扩展的 Java 数据结构，和 Jedis 相比，功能较为简单， 不支持字符串操作， 不支持排序、事务、管道、分区等 Redis 特性。Redisson 的宗旨是促进使用者对 Redis 的关注分离，从而让使用者能够将精力更集中地放在处理业务逻辑上。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3598,"question":"】Redis 如何设置密码及验证密码？","simplecontent":null,"content":"设置密码： config set requirepass 123456 授权密码： auth 123456\n\n140","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3599,"question":"】Redis 集群的主从复制模型是怎样的？","simplecontent":null,"content":"答： 为了使在部分节点失败或者大部分节点无法通信的情况下集群仍然可用， 所以集群使用了主从复制模型,每个节点都会有 N-1 个复制品.","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3600,"question":"】Redis 集群之间是如何复制的？异步复制","simplecontent":null,"content":"异步复制","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3601,"question":"】Redis 集群最大节点个数是多少？ 16384 个。","simplecontent":null,"content":" 16384 个。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3602,"question":"】Redis key 的过期时间和永久有效分别怎么设置？EXPIRE 和 PERSIST 命令。","simplecontent":null,"content":"EXPIRE 和 PERSIST 命令。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3603,"question":"】Redis 回收进程如何工作的？根据设定好的策略进行回收","simplecontent":null,"content":"答： 一个客户端运行了新的命令， 添加了新的数据。Redi 检查内存使用情况， 如果大于 maxmemory 的限制, 则根据设定好的策略进行回收。一个新的命令被执行， 等等。所以我们不断地穿越内存限制的边界， 通过不断达到边界然后不断地回收回到边界以下。如果一个命令的结果导致大量内存被使用（ 例如很大的集合的交集保存到一个新的键），    不用多久内存限制就会被这个内存使用量超越。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3604,"question":"】都有哪些办法可以降低Redis 的内存使用情况呢？","simplecontent":null,"content":"答：如果你使用的是 32 位的 Redis 实例，可以好好利用 Hash,list,sorted set,set 等集合类型数据， 因为通常情况下很多小的 Key-Value 可以用更紧凑的方式存放到一起","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3605,"question":"】Redis 的内存用完了会发生什么？写命令会返回错误信息（ 但是读命令还可以正常返回","simplecontent":null,"content":"答：如果达到设置的上限，Redis 的写命令会返回错误信息（ 但是读命令还可以正常返回。） 或者你可以将 Redis 当缓存来使用配置淘汰机制， 当 Redis 达到内存上限时会冲刷掉旧的内容。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:30","updateTime":"2021-05-26 01:06:30","isExist":null},{"id":3578,"question":"】redis 如何给锁续命？是属于Redisson分布式锁，就是lock锁，每隔10秒检查一下，锁的时间是30秒，如果lock没执行完，继续延长30秒，如果执行完使用了释放所就设置空时间","simplecontent":null,"content":"只要客户端一旦加锁成功，就会启动一个watch dog看门狗，他是一个后台线程，会每隔10秒检查一下，如果客户端还持有锁key，那么就会不断的延长锁key的生存时间。\n默认情况下,加锁的时间是30秒,.如果加锁的业务没有执行完,那么到 30-10 = 20秒的时候,就会进行一次续期,把锁重置成30秒.那这个时候可能又有同学问了,那业务的机器万一宕机了呢?宕机了定时任务跑不了,就续不了期,那自然30秒之后锁就解开了呗.\n客户端1加锁的锁key默认生存时间才30秒，如果超过了30秒，客户端1还想一直持有这把锁，怎么办呢？\n简单！只要客户端1一旦加锁成功，就会启动一个watch dog看门狗，他是一个后台线程，会每隔10秒检查一下，如果客户端1还持有锁key，那么就会不断的延长锁key的生存时间。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3579,"question":"】MySQL里有 2000w 数据，redis 中只存 20w 的数据，如何保证redis 中的数据都是热点数据？施行数据淘汰策略","simplecontent":null,"content":"答： Redis 内存数据集大小上升到一定大小的时候， 就会。相关知识： Redis 提供 6 种数据淘汰策略：\nvolatile-lru：从已设置过期时间的数据集（ server.db[i].expires）中挑选最近最少使用的数据淘汰\n\nvolatile-ttl： 从已设置过期时间的数据集（ server.db[i].expires） 中挑选将要过期的数据淘汰\n\n\n\nvolatile-random： 从已设置过期时间的数据集（ server.db[i].expires） 中任意选择数据淘汰\n\nallkeys-lru： 从数据集（ server.db[i].dict） 中挑选最近最少使用的数据淘汰\n\nallkeys-random： 从数据集（ server.db[i].dict） 中任意选择数据淘汰\n\nno-enviction（ 驱逐） ： 禁止驱逐数据\n\n\n149","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3580,"question":"】Redis 最适合的场景？会话、缓存、队列、计数器、发布订阅","simplecontent":null,"content":"1、会话缓存（ Session Cache）\n\n最常用的一种使用 Redis 的情景是会话缓存（ session cache）。用 Redis 缓存会话比其他存储（ 如 Memcached）的优势在于：Redis 提供持久化。当维护一个不是严格要求一致性的缓存时， 如果用户的购物车信息全部丢失， 大部分人都会不高兴的， 现在， 他们还会这样吗？ 幸运的是， 随着 Redis 这些年的改进， 很容易找到怎么恰当的使用 Redis 来缓存会话的文档。甚至广为人知的商业平台\nMagento 也提供 Redis 的插件。\n\n2、全页缓存（ FPC）\n\n除基本的会话 token 之外， Redis 还提供很简便的 FPC 平台。回到一致性问题， 即使重启了 Redis 实例， 因为有磁盘的持久化， 用户也不会看到页面加载速度的下降，这是一个极大改进，类似 PHP 本地 FPC。 再次以 Magento 为例，Magento 提供一个插件来使用 Redis 作为全页缓存后端。 此外， 对 WordPress 的用户来说， Pantheon 有一个非常好的插件 wp-redis， 这个插件能帮助你以最快速度加载你曾浏览过的页面。\n\n3、队列\nReids 在内存存储引擎领域的一大优点是提供  list 和  set  操作， 这使得 Redis 能作为一个很好的消息队列平台来使用。Redis 作为队列使用的操作，就类似于本地程序语言（ 如 Python）对 list 的 push/pop 操作。 如果你快速的在 Google 中搜索“ Redis queues”， 你马上就能找到大量的开源项目， 这些项目的目的就是利用 Redis 创建非常好的后端工具， 以满足各种队列需求。例如， Celery 有一个后台就是使用 Redis 作为 broker， 你可以从这里去查看。\n\n4， 排行榜/计数器\nRedis 在内存中对数字进行递增或递减的操作实现的非常好。集合（ Set） 和有序集合（ Sorted Set）也使得我们在执行这些操作的时候变的非常简单，Redis 只是正好提供了这两种数据结构。所以， 我们要从排序集合中获取到排名最靠前的 10 个用户– 我们称之为“ user_scores”， 我们只需要像下面一样执行即可： 当然， 这是假定你是根据你用户的分数做递增的排序。如果你想返回用户及用户的分数，   你需要这样执行：  ZRANGE user_scores 0 10 WITHSCORES Agora Games 就是一个很好的例子， 用 Ruby 实现的， 它的排行榜就是使用 Redis 来存储数据的， 你可以在这里看到。\n\n5、发布/订阅\n最后（ 但肯定不是最不重要的）是 Redis 的发布/订阅功能。发布/订阅的使用场景确实非常多。我已看见人们在社交网络连接中使用，  还可作为基于发布/订阅的脚本触发器， 甚至用 Redis 的发布/订阅功能来建立聊天系统！","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3581,"question":"】假如Redis 里面有 1 亿个key，其中有 10w 个key 是以某个固定的已知的前缀开头的，如果将它们全部找出来？ keys 指令","simplecontent":null,"content":"redis 127.0.0.1:6379> KEYS PATTERN\n\n答： 使用 keys 指令可以扫出指定模式的 key 列表。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3582,"question":"】如果这个 redis 正在给线上的业务提供服务， 那使用 keys 指令会有什么问题？redis 的单线程的。keys 指令会导致线程阻塞一段时间， 线上服务会停顿， 直到指令执行完毕， 服务才能恢复","simplecontent":null,"content":"这个时候你要回答 redis 关键的一个特性：redis 的单线程的。keys 指令会导致线程阻塞一段时间， 线上服务会停顿， 直到指令执行完毕， 服务才能恢复。这个时候可以使用 scan 指令， scan 指令可以无阻塞的提取出指定模式的 key 列表， 但是会有一定的重复概率， 在客户端做一次去重就可以了， 但是整体所花费的时间会比直接用 keys 指令长。\n\n\n151","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3583,"question":"】如果有大量的key 需要设置同一时间过期，一般需要注意什么？时间上加一个随机值， 使得过期时间分散","simplecontent":null,"content":"答：如果大量的 key 过期时间设置的过于集中，到过期的那个时间点，redis 可能会出现短暂的卡顿现象。一般需要在时间上加一个随机值， 使得过期时间分散一些。\n\n152","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3584,"question":"】使用过Redis 做异步队列么，你是怎么用的？使用 list 结构作为队列","simplecontent":null,"content":"答：一般使用 list 结构作为队列，rpush 生产消息，lpop 消费消息。当 lpop 没有消息的时候， 要适当 sleep 一会再重试。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3585,"question":"】如果对方追问可不可以不用 sleep 呢？","simplecontent":null,"content":"list 还有个指令叫 blpop，在没有消息的时候，它会阻塞住直到消息到来。如果对方追问能不能生产一次消费多次呢？ 使用 pub/sub 主题订阅者模式， 可以实现\n1:N 的消息队列。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3586,"question":"】如果对方追问 pub/sub 有什么缺点？生产的消息会丢失","simplecontent":null,"content":"在消费者下线的情况下，生产的消息会丢失，得使用专业的消息队列如 RabbitMQ 等。\n\n153","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3587,"question":"】如果对方追问 redis 如何实现延时队列？","simplecontent":null,"content":"使用 sortedset，拿时间戳作为score，消息内容作为 key 调用 zadd 来生产消息，消费者用 zrangebyscore 指令获取 N 秒之前的数据轮询进行处理。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3588,"question":"】使用Redis 有哪些好处？速度、数据类型、事务","simplecontent":null,"content":"1、速度快， 因为数据存在内存中， 类似于 HashMap， HashMap 的优势就是查找和操作的时间复杂度都是 O1)\n\n2、支持丰富数据类型， 支持 string， list， set， Zset， hash 等\n\n3、支持事务， 操作都是原子性， 所谓的原子性就是对数据的更改要么全部执行， 要么全部不执行\n\n4、丰富的特性：可用于缓存，消息，按 key 设置过期时间，过期后将会自动删除","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3589,"question":"】一个字符串类型的值能存储最大容量是多少？","simplecontent":null,"content":"答： 512M\n130","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3590,"question":"】Redis 的持久化机制是什么？","simplecontent":null,"content":"Redis 提供两种持久化机制 RDB 和 AOF 机制:\n\n1、RDB Redis DataBase)持久化方式： 是指用数据集快照的方式半持久化模式) 记录 redis 数据库的所有键值对,在某个时间点将数据写入一个临时文件， 持久化结束后， 用这个临时文件替换上次持久化的文件， 达到数据恢复。\n\n优点：\n\n1、只有一个文件 dump.rdb， 方便持久化。\n\n2、容灾性好，   一个文件可以保存到安全的磁盘。\n\n3、性能最大化， fork 子进程来完成写操作， 让主进程继续处理命令， 所以是 IO 最大化。使用单独子进程来进行持久化，主进程不会进行任何 IO 操作，保证了 redis 的高性能) 4.相对于数据集大时， 比 AOF 的启动效率更高。\n\n缺点：\n\n1、数据安全性低。RDB 是间隔一段时间进行持久化，如果持久化之间 redis 发生故障，     会发生数据丢失。所以这种方式更适合数据要求不严谨的时候)\n\n2、AOFAppend-only file)持久化方式： 是指所有的命令行记录以 redis 命令请求协议的格式完全持久化存储)保存为 aof 文件。\n\n优点：\n1、数据安全， aof 持久化可以配置 appendfsync 属性， 有 always， 每进行一次命令操作就记录到 aof 文件中一次。\n\n2、通过 append 模式写文件， 即使中途服务器宕机， 可以通过 redis-check-aof 工具解决数据一致性问题。\n\n3、AOF 机制的 rewrite 模式。AOF 文件没被 rewrite 之前（ 文件过大时会对命令进行合并重写）， 可以删除其中的某些命令（ 比如误操作的 flushall）)\n\n缺点：\n1、AOF 文件比 RDB 文件大， 且恢复速度慢。\n2、数据集大的时候， 比 rdb 启动效率低。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3591,"question":"】Redis 常见性能问题和解决方案？","simplecontent":null,"content":"1、Master 最好不要写内存快照，如果 Master 写内存快照，save 命令调度 rdbSave函数， 会阻塞主线程的工作， 当快照比较大时对性能影响是非常大的， 会间断性暂停服务\n2、如果数据比较重要， 某个 Slave 开启 AOF 备份数据， 策略设置为每秒同步一\n3、为了主从复制的速度和连接的稳定性， Master 和 Slave 最好在同一个局域网\n4、尽量避免在压力很大的主库上增加从\n5、主从复制不要用图状结构， 用单向链表结构更为稳定， 即：Master <- Slave1\n<- Slave2 <- Slave3 … 这样的结构方便解决单点故障问题，实现 Slave 对 Master 的替换。如果 Master 挂了， 可以立刻启用 Slave1 做 Master， 其他不变。\n\n133","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3592,"question":"】为什么redis 需要把所有数据放到内存中？最快的读写速度","simplecontent":null,"content":"答：Redis 为了达到最快的读写速度将数据都读到内存中，并通过异步的方式将数据写入磁盘。所以 redis 具有快速和数据持久化的特征。如果不将数据放在内存中， 磁盘 I/O 速度为严重影响 redis 的性能。在内存越来越便宜的今天， redis 将会越来越受欢迎。如果设置了最大使用的内存， 则数据已有记录数达到内存限值后不能继续插入新值。\n134","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3593,"question":"】Redis 的同步机制了解么？","simplecontent":null,"content":"答：Redis 可以使用主从同步，从从同步。第一次同步时，主节点做一次 bgsave， 并同时将后续修改操作记录到内存 buffer， 待完成后将 rdb 文件全量同步到复制节点， 复制节点接受完成后将 rdb 镜像加载到内存。加载完成后， 再通知主节点将期间修改的操作记录同步到复制节点进行重放就完成了同步过程。\n\n135","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3594,"question":"】Pipeline 有什么好处，为什么要用pipeline？次 IO 往返的时间缩减为一次","simplecontent":null,"content":"答：可以将多次 IO 往返的时间缩减为一次，前提是 pipeline 执行的指令之间没有因果相关性。使用 redis-benchmark 进行压测的时候可以发现影响 redis 的 QPS 峰值的一个重要因素是 pipeline 批次指令的数目。","filterContent":null,"type":"java-redis","status":0,"createTime":"2021-05-26 01:06:29","updateTime":"2021-05-26 01:06:29","isExist":null},{"id":3563,"question":"详细描述一下Elasticsearch更新和删除文档的过程?","simplecontent":null,"content":"删除和更新也都是写操作，但是Elasticsearch中的文档是不可变的，因此不能被删除或者改动以展示其变更；\n磁盘上的每个段都有一个相应的.del文件。当删除请求发送后，文档并没有真的被删除，而是在.del文件中被标记为删除。该文档依然能匹配查询，但是会在结果中被过滤掉。当段合并时，在.del文件中被标记为删除的文档将不会被写入新段。\n在新的文档被创建时，Elasticsearch会为该文档指定一个版本号，当执行更新时，旧版本的文档在.del文件中被标记为删除，新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，但是会在结果中被过滤掉。\n6.详细描述一下Elasticsearch搜索的过程\n\n搜索被执行成一个两阶段过程，我们称之为 Query Then Fetch；\n在初始查询阶段时，查询会广播到索引中每一个分片拷贝（主分片或者副本分片）。 每个分片在本地执行搜索并构建一个匹配文档的大小为 from + size 的优先队列。PS：在搜索的时候是会查询Filesystem Cache的，但是有部分数据还在Memory Buffer，所以搜索是近实时的。\n每个分片返回各自优先队列中 所有文档的 ID 和排序值 给协调节点，它合并这些值到自己的优先队列中来产生一个全局排序后的结果列表。\n接下来就是 取回阶段，协调节点辨别出哪些文档需要被取回并向相关的分片提交多个 GET 请求。每个分片加载并 丰富 文档，如果有需要的话，接着返回文档给协调节点。一旦所有的文档都被取回了，协调节点返回结果给客户端。\n补充：Query Then Fetch的搜索类型在文档相关性打分的时候参考的是本分片的数据，这样在文档数量较少的时候可能不够准确，DFS Query Then Fetch增加了一个预查询的处理，询问Term和Document frequency，这个评分更准确，但是性能会变差。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3564,"question":"Elasticsearch在部署时，对Linux的设置有哪些优化方法？","simplecontent":null,"content":"64 GB 内存的机器是非常理想的， 但是32 GB 和16 GB 机器也是很常见的。少于8 GB 会适得其反。\n\n如果你要在更快的 CPUs 和更多的核心之间选择，选择更多的核心更好。多个内核提供的额外并发远胜过稍微快一点点的时钟频率。\n\n如果你负担得起 SSD，它将远远超出任何旋转介质。 基于 SSD 的节点，查询和索引性能都有提升。如果你负担得起，SSD 是一个好的选择。\n\n即使数据中心们近在咫尺，也要避免集群跨越多个数据中心。绝对要避免集群跨越大的地理距离。\n\n请确保运行你应用程序的 JVM 和服务器的 JVM 是完全一样的。 在 Elasticsearch 的几个地方，使用 Java 的本地序列化。\n\n通过设置gateway.recover_after_nodes、gateway.expected_nodes、gateway.recover_after_time可以在集群重启的时候避免过多的分片交换，这可能会让数据恢复从数个小时缩短为几秒钟。\n\nElasticsearch 默认被配置为使用单播发现，以防止节点无意中加入集群。只有在同一台机器上运行的节点才会自动组成集群。最好使用单播代替组播。\n\n不要随意修改垃圾回收器（CMS）和各个线程池的大小。\n\n把你的内存的（少于）一半给 Lucene（但不要超过 32 GB！），通过ES_HEAP_SIZE 环境变量设置。\n\n内存交换到磁盘对服务器性能来说是致命的。如果内存交换到磁盘上，一个 100 微秒的操作可能变成 10 毫秒。 再想想那么多 10 微秒的操作时延累加起来。 不难看出 swapping 对于性能是多么可怕。\n\nLucene 使用了大量的文件。同时，Elasticsearch 在节点和 HTTP 客户端之间进行通信也使用了大量的套接字。 所有这一切都需要足够的文件描述符。你应该增加你的文件描述符，设置一个很大的值，如 64,000。\n\n补充：索引阶段性能提升方法\n\n使用批量请求并调整其大小：每次批量数据 5–15 MB 大是个不错的起始点。\n\n存储：使用 SSD\n\n段和合并：Elasticsearch 默认值是 20 MB/s，对机械磁盘应该是个不错的设置。如果你用的是 SSD，可以考虑提高到 100–200 MB/s。如果你在做批量导入，完全不在意搜索，你可以彻底关掉合并限流。另外还可以增加 index.translog.flush_threshold_size 设置，从默认的 512 MB 到更大一些的值，比如 1 GB，这可以在一次清空触发的时候在事务日志里积累出更大的段。\n\n如果你的搜索结果不需要近实时的准确度，考虑把每个索引的index.refresh_interval 改到30s。\n\n如果你在做大批量导入，考虑通过设置index.number_of_replicas: 0 关闭副本。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3565,"question":"对于GC方面，在使用Elasticsearch时要注意什么？","simplecontent":null,"content":"SEE：https://elasticsearch.cn/article/32\n倒排词典的索引需要常驻内存，无法GC，需要监控data node上segment memory增长趋势。\n各类缓存，field cache, filter cache, indexing cache, bulk queue等等，要设置合理的大小，并且要应该根据最坏的情况来看heap是否够用，也就是各类缓存全部占满的时候，还有heap空间可以分配给其他任务吗？避免采用clear cache等“自欺欺人”的方式来释放内存。\n避免返回大量结果集的搜索与聚合。确实需要大量拉取数据的场景，可以采用scan & scroll api来实现。\ncluster stats驻留内存并无法水平扩展，超大规模集群可以考虑分拆成多个集群通过tribe node连接。\n想知道heap够不够，必须结合实际应用场景，并对集群的heap使用情况做持续的监控。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3566,"question":"Elasticsearch对于大数据量（上亿量级）的聚合如何实现？","simplecontent":null,"content":"​\tElasticsearch 提供的首个近似聚合是cardinality 度量。它提供一个字段的基数，即该字段的distinct或者unique值的数目。它是基于HLL算法的。HLL 会先对我们的输入作哈希运算，然后根据哈希运算的结果中的 bits 做概率估算从而得到基数。其特点是：可配置的精度，用来控制内存的使用（更精确 ＝ 更多内存）；小的数据集精度是非常高的；我们可以通过配置参数，来设置去重需要的固定内存使用量。无论数千还是数十亿的唯一值，内存使用量只与你配置的精确度相关 .","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3567,"question":"】在并发情况下，Elasticsearch如果保证读写一致？版本号使用乐观","simplecontent":null,"content":"可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突；\n另外对于写操作，一致性级别支持quorum/one/all，默认为quorum，即只有当大多数分片可用时才允许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，分片将会在一个不同的节点上重建。\n对于读操作，可以设置replication为sync(默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置replication为async时，也可以通过设置搜索请求参数_preference为primary来查询主分片，确保文档是最新版本。\n11.如何监控Elasticsearch集群状态？\n\n​\tMarvel 让你可以很简单的通过 Kibana 监控 Elasticsearch。你可以实时查看你的集群健康状态和性能，也可以分析过去的集群、索引和节点指标","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3568,"question":"是否了解字典树？","simplecontent":null,"content":"常用字典数据结构如下所示：\n\n\nTrie的核心思想是空间换时间，利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的。它有3个基本性质：\n根节点不包含字符，除根节点外每一个节点都只包含一个字符。\n从根节点到某一节点，路径上经过的字符连接起来，为该节点对应的字符串。\n每个节点的所有子节点包含的字符都不相同。\n1\n2\n3\n\n\n可以看到，trie树每一层的节点数是26^i级别的。所以为了节省空间，我们还可以用动态链表，或者用数组来模拟动态。而空间的花费，不会超过单词数×单词长度。\n实现：对每个结点开一个字母集大小的数组，每个结点挂一个链表，使用左儿子右兄弟表示法记录这棵树；\n对于中文的字典树，每个节点的子节点用一个哈希表存储，这样就不用浪费太大的空间，而且查询速度上可以保留哈希的复杂度O(1)。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3569,"question":"拼写纠错是如何实现的？","simplecontent":null,"content":"拼写纠错是基于编辑距离来实现；编辑距离是一种标准的方法，它用来表示经过插入、删除和替换操作从一个字符串转换到另外一个字符串的最小操作步数；\n编辑距离的计算过程：比如要计算batyu和beauty的编辑距离，先创建一个7×8的表（batyu长度为5，coffee长度为6，各加2），接着，在如下位置填入黑色数字。其他格的计算过程是取以下三个值的最小值：\n如果最上方的字符等于最左方的字符，则为左上方的数字。否则为左上方的数字+1。（对于3,3来说为0）\n\n\n\n左方数字+1（对于3,3格来说为2）\n\n\n\n上方数字+1（对于3,3格来说为2）\n1\n2\n3\n4\n5\n6\n7\n8\n9\n最终取右下角的值即为编辑距离的值3。\n\n\n\n对于拼写纠错，我们考虑构造一个度量空间（Metric Space），该空间内任何关系满足以下三条基本条件：\nd(x,y) = 0 -- 假如x与y的距离为0，则x=y\n\nd(x,y) = d(y,x)  -- x到y的距离等同于y到x的距离\n\nd(x,y) + d(y,z) >= d(x,z) -- 三角不等式\n1\n2\n3\n4\n5\n根据三角不等式，则满足与query距离在n范围内的另一个字符转B，其与A的距离最大为d+n，最小为d-n。\nBK树的构造就过程如下：每个节点有任意个子节点，每条边有个值表示编辑距离。所有子节点到父节点的边上标注n表示编辑距离恰好为n。比如，我们有棵树父节点是”book”和两个子节点”cake”和”books”，”book”到”books”的边标号1，”book”到”cake”的边上标号4。从字典里构造好树后，无论何时你想插入新单词时，计算该单词与根节点的编辑距离，并且查找数值为d(neweord, root)的边。递归得与各子节点进行比较，直到没有子节点，你就可以创建新的子节点并将新单词保存在那。比如，插入”boo”到刚才上述例子的树中，我们先检查根节点，查找d(“book”, “boo”) = 1的边，然后检查标号为1的边的子节点，得到单词”books”。我们再计算距离d(“books”, “boo”)=2，则将新单词插在”books”之后，边标号为2。\n查询相似词如下：计算单词与根节点的编辑距离d，然后递归查找每个子节点标号为d-n到d+n（包含）的边。假如被检查的节点与搜索单词的距离d小于n，则返回该节点并继续查询。比如输入cape且最大容忍距离为1，则先计算和根的编辑距离d(“book”, “cape”)=4，然后接着找和根节点之间编辑距离为3到5的，这个就找到了cake这个节点，计算d(“cake”, “cape”)=1，满足条件所以返回cake，然后再找和cake节点编辑距离是0到2的，分别找到cape和cart节点，这样就得到cape这个满足条件的结果。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3570,"question":"ElasticSearch中的集群、节点、索引、文档、类型是什么？","simplecontent":null,"content":"群集是一个或多个节点（服务器）的集合，它们共同保存您的整个数据，并提供跨所有节点的联合索引和搜索功能。群集由唯一名称标识，默认情况下为“elasticsearch”。此名称很重要，因为如果节点设置为按名称加入群集，则该节点只能是群集的一部分。\n节点是属于集群一部分的单个服务器。它存储数据并参与群集索引和搜索功能。\n索引就像关系数据库中的“数据库”。它有一个定义多种类型的映射。索引是逻辑名称空间，映射到一个或多个主分片，并且可以有零个或多个副本分片。 MySQL =>数据库 ElasticSearch =>索引\n文档类似于关系数据库中的一行。不同之处在于索引中的每个文档可以具有不同的结构（字段），但是对于通用字段应该具有相同的数据类型。 MySQL => Databases => Tables => Columns / Rows ElasticSearch => Indices => Types =>具有属性的文档\n类型是索引的逻辑类别/分区，其语义完全取决于用户。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3571,"question":"ElasticSearch中的分片是什么?","simplecontent":null,"content":"在大多数环境中，每个节点都在单独的盒子或虚拟机上运行。\n\n索引 - 在Elasticsearch中，索引是文档的集合。\n分片 -因为Elasticsearch是一个分布式搜索引擎，所以索引通常被分割成分布在多个节点上的被称为分片的元素。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3572,"question":"elasticsearch 了解多少，说说你们公司 es 的集群架构，索引数据大小，分片有多少，以及一些调优手段?","simplecontent":null,"content":"2、elasticsearch 的倒排索引是什么\n3、elasticsearch 索引数据多了怎么办，如何调优，部署\n4、elasticsearch 是如何实现 master 选举的\n5、详细描述一下 Elasticsearch 索引文档的过程\n6、详细描述一下 Elasticsearch 搜索的过程？\n7、Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法\n8、lucence 内部结构是什么？\n9、Elasticsearch 是如何实现 Master 选举的？\n10、Elasticsearch 中的节点（比如共 20 个），其中的 10 个选了一个master，另外 10 个选了另一个 master，怎么办？\n11、客户端在和集群连接时，如何选择特定的节点执行请求的？\n12、详细描述一下 Elasticsearch 索引文档的过程。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3573,"question":"Elasticsearch 是一个分布式的 RESTful 风格的搜索和数据分析引擎。?","simplecontent":null,"content":"（1）查询 ： Elasticsearch 允许执行和合并多种类型的搜索 — 结构化、非结构化、地理位置、度量指标 — 搜索方式随心而变。\n（2）分析 ： 找到与查询最匹配的十个文档是一回事。但是如果面对的是十亿行日志，又该如何解读呢？Elasticsearch 聚合让您能够从大处着眼，探索数据的趋势和模式。\n（3）速度 ： Elasticsearch 很快。真的，真的很快。\n（4）可扩展性 ： 可以在笔记本电脑上运行。 也可以在承载了 PB 级数据的成百上千台服务器上运行。\n（5）弹性 ： Elasticsearch 运行在一个分布式的环境中，从设计之初就考虑到了这一点。\n（6）灵活性 ： 具备多个案例场景。数字、文本、地理位置、结构化、非结构化。所有的数据类型都欢迎。\n（7）HADOOP & SPARK ： Elasticsearch + Hadoop\n ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3574,"question":"Elasticsearch是一个高度可伸缩的开源全文搜索和分析引擎。它允许您快速和接近实时地存储、搜索和分析大量数据。?","simplecontent":null,"content":"这里有一些使用Elasticsearch的用例：\n（1）你经营一个网上商店，你允许你的顾客搜索你卖的产品。在这种情况下，您可以使用Elasticsearch来存储整个产品目录和库存，并为它们提供搜索和自动完成建议。\n（2）你希望收集日志或事务数据，并希望分析和挖掘这些数据，以查找趋势、统计、汇总或异常。在这种情况下，你可以使用loghide (Elasticsearch/ loghide /Kibana堆栈的一部分)来收集、聚合和解析数据，然后让loghide将这些数据输入到Elasticsearch中。一旦数据在Elasticsearch中，你就可以运行搜索和聚合来挖掘你感兴趣的任何信息。\n（3）你运行一个价格警报平台，允许精通价格的客户指定如下规则:“我有兴趣购买特定的电子设备，如果下个月任何供应商的产品价格低于X美元，我希望得到通知”。在这种情况下，你可以抓取供应商的价格，将它们推入到Elasticsearch中，并使用其反向搜索(Percolator)功能来匹配价格走势与客户查询，并最终在找到匹配后将警报推送给客户。\n（4）你有分析/业务智能需求，并希望快速调查、分析、可视化，并对大量数据提出特别问题(想想数百万或数十亿的记录)。在这种情况下，你可以使用Elasticsearch来存储数据，然后使用Kibana (Elasticsearch/ loghide /Kibana堆栈的一部分)来构建自定义仪表板，以可视化对您来说很重要的数据的各个方面。此外，还可以使用Elasticsearch聚合功能对数据执行复杂的业务智能查询。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3575,"question":"elasticsearch 了解多少，说说你们公司 es 的集群架构，索引数据大小，分片有多少，以及一些调优手段 。?","simplecontent":null,"content":"面试官：想了解应聘者之前公司接触的 ES 使用场景、规模，有没有做过比较大规模的索引设计、规划、调优。\n解答：如实结合自己的实践场景回答即可。\n比如：ES 集群架构 13 个节点，索引根据通道不同共 20+索引，根据日期，每日递增 20+，索引：10 分片，每日递增 1 亿+数据，每个通道每天索引大小控制：150GB 之内。\n仅索引层面调优手段：\n1.1、设计阶段调优\n（1）根据业务增量需求，采取基于日期模板创建索引，通过 roll over API 滚动索引；\n（2）使用别名进行索引管理；\n（3）每天凌晨定时对索引做 force_merge 操作，以释放空间；\n（4）采取冷热分离机制，热数据存储到 SSD，提高检索效率；冷数据定期进行 shrink操作，以缩减存储；\n（5）采取 curator 进行索引的生命周期管理；\n（6）仅针对需要分词的字段，合理的设置分词器；\n（7）Mapping 阶段充分结合各个字段的属性，是否需要检索、是否需要存储等。……..\n1.2、写入调优\n（1）写入前副本数设置为 0；\n（2）写入前关闭 refresh_interval 设置为-1，禁用刷新机制；\n（3）写入过程中：采取 bulk 批量写入；\n（4）写入后恢复副本数和刷新间隔；\n（5）尽量使用自动生成的 id。\n1.3、查询调优\n（1）禁用 wildcard；\n（2）禁用批量 terms（成百上千的场景）；\n（3）充分利用倒排索引机制，能 keyword 类型尽量 keyword；\n（4）数据量大时候，可以先基于时间敲定索引再检索；\n（5）设置合理的路由机制。\n1.4、其他调优\n部署调优，业务调优等。\n上面的提及一部分，面试者就基本对你之前的实践或者运维经验有所评估了。\n ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3576,"question":"】elasticsearch 的倒排索引是什么？根据关键词找记录的位置","simplecontent":null,"content":"《根据关键词找记录的位置》\n面试官：想了解你对基础概念的认知。\n解答：通俗解释一下就可以。\n传统的我们的检索是通过文章，逐个遍历找到对应关键词的位置。\n而倒排索引，是通过分词策略，形成了词和文章的映射关系表，这种词典+映射表即为倒排索引。有了倒排索引，就能实现 o（1）时间复杂度的效率检索文章了，极大的提高了检索效率。\n\n学术的解答方式：\n倒排索引，相反于一篇文章包含了哪些词，它从词出发，记载了这个词在哪些文档中出现过，由两部分组成——词典和倒排表。\n加分项：倒排索引的底层实现是基于：FST（Finite State Transducer）数据结构。\nlucene 从 4+版本后开始大量使用的数据结构是 FST。FST 有两个优点：\n（1）空间占用小。通过对词典中单词前缀和后缀的重复利用，压缩了存储空间；\n（2）查询速度快。O(len(str))的查询时间复杂度。\n ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3577,"question":"elasticsearch 索引数据多了怎么办，如何调优，部署?","simplecontent":null,"content":"面试官：想了解大数据量的运维能力。\n解答：索引数据的规划，应在前期做好规划，正所谓“设计先行，编码在后”，这样才能有效的避免突如其来的数据激增导致集群处理能力不足引发的线上客户检索或者其他业务受到影响。\n如何调优，正如问题 1 所说，这里细化一下：\n3.1 动态索引层面\n基于模板+时间+rollover api 滚动创建索引，举例：设计阶段定义：blog 索引的模板格式为：blog_index_时间戳的形式，每天递增数据。这样做的好处：不至于数据量激增导致单个索引数据量非常大，接近于上线 2 的32 次幂-1，索引存储达到了 TB+甚至更大。\n一旦单个索引很大，存储等各种风险也随之而来，所以要提前考虑+及早避免。\n3.2 存储层面\n冷热数据分离存储，热数据（比如最近 3 天或者一周的数据），其余为冷数据。\n对于冷数据不会再写入新数据，可以考虑定期 force_merge 加 shrink 压缩操作，节省存储空间和检索效率。\n3.3 部署层面\n一旦之前没有规划，这里就属于应急策略。\n结合 ES 自身的支持动态扩展的特点，动态新增机器的方式可以缓解集群压力，注意：如果之前主节点等规划合理，不需要重启集群也能完成动态新增的。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:59","updateTime":"2021-05-26 01:04:59","isExist":null},{"id":3548,"question":"正向索引和倒序索引的区别?","simplecontent":null,"content":"正向索引就是，每一个页面都包含哪些关键词。\n倒序索引就是，某一个关键词，都有哪些页面包含。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3549,"question":"】Es可视化工具端口?是 kibana","simplecontent":null,"content":"浏览器中输入http://localhost:9100/可以看到对应UI","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3550,"question":"】Es可视化工具?","simplecontent":null,"content":"elasticsearch-head","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3551,"question":"】分布式日志需要使用什么?","simplecontent":null,"content":"kafka+logstash+elasticsearch+kibana  ELK+kafka","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3552,"question":"elasticsearch的模糊查询?","simplecontent":null,"content":"searchRequestBuilder。QueryBuilders。matchQuery，自动分词，需要高亮显示\nkibana是什么\t和 Elasticsearch 一起用的可视化平台，搜索、查看数据","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3553,"question":"elasticsearch通配符查询例子?","simplecontent":null,"content":"?用来匹配1个任意字符，*用来匹配零个或者多个字符","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3554,"question":"】elasticsearch有哪些查询？模糊，通配符，范围，分词，id查询，正规则","simplecontent":null,"content":"模糊，通配符，范围，分词，id查询，正规则","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3555,"question":"】elasticsearch倒排索引？关键词到文档 ID 的映射，方便地响应用户的查询","simplecontent":null,"content":"关键词到文档 ID 的映射，方便地响应用户的查询","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3556,"question":"Elasticsearch中的倒排索引是什么？ ","simplecontent":null,"content":"倒排索引是搜索引擎的核心。搜索引擎的主要目标是在查找发生搜索条件的文档时提供快速搜索。倒排索引是一种像数据结构一样的散列图，可将用户从单词导向文档或网页。它是搜索引擎的核心。其主要目标是快速搜索从数百万文件中查找数据。 ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3557,"question":"IK分词器原理?","simplecontent":null,"content":"内存中初始化词典，逐个读取字符，匹配就把所有词语拆分","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3558,"question":"ElasticSearch 使用场景?","simplecontent":null,"content":"1.数据库模糊查询是全表扫描，不支持索引\n2. 全文搜索引擎，分词，权重匹配度\"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3559,"question":"】为什么要使用Elasticsearch?","simplecontent":null,"content":"《分词搜索、模糊搜索使用到索引、权重搜索、提高速度》\n​\t因为在我们商城中的数据，将来会非常多，所以采用以往的模糊查询，模糊查询前置配置，会放弃索引，导致商品查询是全表扫面，在百万级别的数据库中，效率非常低下，而我们使用ES做一个分布式全文搜索引擎，我们将经常查询的商品的某些字段，比如说商品名，描述、价格还有id这些字段我们放入我们索引库里，可以提高查询速度。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3560,"question":"Elasticsearch是如何实现Master选举的？","simplecontent":null,"content":"Elasticsearch的选主是ZenDiscovery模块负责的，主要包含Ping（节点之间通过这个RPC来发现彼此）和Unicast（单播模块包含一个主机列表以控制哪些节点需要ping通）这两部分；\n对所有可以成为master的节点（node.master: true）根据nodeId字典排序，每次选举每个节点都把自己所知道节点排一次序，然后选出第一个（第0位）节点，暂且认为它是master节点。\n如果对某个节点的投票数达到一定的值（可以成为master节点数n/2+1）并且该节点自己也选举自己，那这个节点就是master。否则重新选举一直到满足上述条件。\n补充：master节点的职责主要包括集群、节点和索引的管理，不负责文档级别的管理；data节点可以关闭http功能。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3561,"question":"Elasticsearch中的节点（比如共20个），其中的10个选了一个master，另外10个选了另一个master，怎么办？","simplecontent":null,"content":"当集群master候选数量不小于3个时，可以通过设置最少投票通过数量（discovery.zen.minimum_master_nodes）超过所有候选节点一半以上来解决脑裂问题；\n当候选数量为两个时，只能修改为唯一的一个master候选，其他作为data节点，避免脑裂问题。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3562,"question":"详细描述一下Elasticsearch索引文档的过程。?","simplecontent":null,"content":"协调节点默认使用文档ID参与计算（也支持通过routing），以便为路由提供合适的分片。\nshard = hash(document_id) % (num_of_primary_shards)\n1\n当分片所在的节点接收到来自协调节点的请求后，会将请求写入到Memory Buffer，然后定时（默认是每隔1秒）写入到Filesystem Cache，这个从Momery Buffer到Filesystem Cache的过程就叫做refresh；\n当然在某些情况下，存在Momery Buffer和Filesystem Cache的数据可能会丢失，ES是通过translog的机制来保证数据的可靠性的。其实现机制是接收到请求后，同时也会写入到translog中，当Filesystem cache中的数据写入到磁盘中时，才会清除掉，这个过程叫做flush；\n在flush过程中，内存中的缓冲将被清除，内容被写入一个新段，段的fsync将创建一个新的提交点，并将内容刷新到磁盘，旧的translog将被删除并开始一个新的translog。\nflush触发的时机是定时触发（默认30分钟）或者translog变得太大（默认为512M）时；","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:58","updateTime":"2021-05-26 01:04:58","isExist":null},{"id":3535,"question":"组合查询（复杂查询）?","simplecontent":null,"content":"must(QueryBuilders) : AND\nmustNot(QueryBuilders): NOT\nshould(QueryBuilders):OR \npublic void boolQuery(){\n      SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n              .setQuery(QueryBuilders.boolQuery()\n                      .must(QueryBuilders.matchQuery(\"address\", \"程序员\"))\n                      .must(QueryBuilders.termQuery(\"male\", \"女\"))).get();\n      SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n      Iterator<SearchHit> iterator = hits.iterator();\n      while (iterator.hasNext()) {\n          SearchHit next = iterator.next();\n          System.out.println(\"得分：\"+next.getScore());\n          System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n          System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n          System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n          System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n          System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n          System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n          System.out.println(\"age : \"+ next.getSource().get(\"age\"));\n          System.out.println(\"===============================================\");\n      }\n  }","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3536,"question":"范围查询?","simplecontent":null,"content":"范围查询使我们能够找到在某一字段值在某个范围里的文档，字段可以是数值型，也可以是\n基于字符串的\nincludeLower(true)：包含上界\nIncludeUpper(true)：包含下界\n/**\n 范围查询使我们能够找到在某一字段值在某个范围里的文档，字段可以是数值型，也可以是\n 基于字符串的\n includeLower(true)：包含上界\n IncludeUpper(true)：包含下界\n * */\n@Test\npublic void rangeQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.rangeQuery(\"age\").from(18).to(22) \n                    .includeLower(true)\n                    .includeUpper(false))\n            .get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"得分：\"+next.getScore());\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"age : \"+ next.getSource().get(\"age\"));\n        System.out.println(\"===============================================\");\n    }\n}\n​","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3537,"question":"相似度查询（模糊查询）?","simplecontent":null,"content":"\"query\" : \"李小冉晒麻雀海报：国家利益高于一\",\n \"minimum_should_match\": \"90%\"\nfuzzy查询是模糊查询中的第三种类型，它基于编辑距离算法来匹配文档\n/**\n * 相似度查询：fuzzy查询是模糊查询中的第三种类型，它基于编辑距离算法来匹配文档\n * */\n@Test\npublic void fuzzyQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.fuzzyQuery(\"address\", \"北京市\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"得分：\"+next.getScore());\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n     }\n}\n​\n模糊查询，这个用到了莱文斯坦算法，用于计算两个字符串的相似度，如果在设置的相似度之内，那么会被命中\nprivate void search() {\n        SearchResponse searchResponse = client.prepareSearch(\"test1\").setTypes(\"user1\")\n                .setQuery(QueryBuilders.fuzzyQuery(\"name\", \"yb\").fuzziness(Fuzziness.ONE))\n                .get();\n        SearchHits hits = searchResponse.getHits();\n        System.out.println(JSON.toJSONString(hits));\n    }\n这里我的如果把相似度改为Fuzziness.ZERO，那么yb和cyb的相似度是1，所以是命中失败的，默认是Fuzziness.AUTO\n当然, 一个字符串的单次编辑次数依赖于它的长度. 对 hat 进行两次编辑可以得到 mad, 所以允许对长度为3的字符串进行两次修改就太过了. fuzziness 参数可以被设置成 AUTO, 结果会在下面的最大编辑距离中:\n0 、1或2个字符的字符串\n1 、3、4或5个字符的字符串\n2 、多于5个字符的字符串\n当然, 你可能发现编辑距离为2 仍然是太过了, 返回的结果好像并没有什么关联. 把 fuzziness 设置为 1 ,你可能会获得更好的结果和性能.","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3538,"question":"只查询ID（标识符查询）?","simplecontent":null,"content":"标识符查询是一个简单的查询，仅用提供的标识符来过滤返回的文档。\n/**\n * 按照id进行查询，通过id返回我们想要的结果\n * */\n@Test\npublic void idsQuery() {\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.idsQuery().addIds(\"AWNkQSCJzU0_wTuf7egi\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3539,"question":"termQuery和termsQuery区别?","simplecontent":null,"content":"SearchResponse searchResponse = client.prepareSearch(\"test1\").setTypes(\"user1\")\n                .setQuery(QueryBuilders.termQuery(\"name\", \"cyb\"))\n                .get();\n        SearchHits hits = searchResponse.getHits();\n        System.out.println(JSON.toJSONString(hits));\n\nQueryBuilders.termsQuery(\"name\", \"zqj\", \"cyb\")\nterms query\n逻辑和term query一样，只是匹配多个字段，只要匹配一个就代表命中","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3540,"question":"Matchquery 和termquery的区别?","simplecontent":null,"content":"match：匹配的时候，会将查询的关键字进行分词，然后根据分词后的结果进行查询。\nterm：直接使用关键字进行查询，不对关键字进行分词。\nmultiMatchQuery(\"text\", \"field1\", \"field2\"..); 匹配多个字段\nmutilMatchQuery：\n/**\n * multiMatchQuery（要搜索的值 ， 在哪些字段上）\n * */\n@Test\npublic void mutileMatchQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.multiMatchQuery(\"北京\", \"address\",\"name\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3541,"question":"字段匹配查询（matchQuery）?","simplecontent":null,"content":"match**查询把query参数中的值拿出来，加以分析，然后构建相应的查询**。使用match查询时，Elasticsearch将对一个字段选择合适的分析器，所以可以确定，传给match查询的词条将被建立索引时相同的分析器处理。\n \n/**\n *  match query搜索的时候，首先会解析查询字符串，进行分词，然后查询，\n 而term query,输入的查询内容是什么，就会按照什么去查询，并不会解析查询内容，对它分词。\n * */\n@Test\npublic void MatchQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n .setQuery(QueryBuilders.matchQuery(\"address\", \" 上海\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\nQueryBuilders.matchQuery(\"name\", \"cyb ccc\")","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3542,"question":"词条查询（termQuery）?","simplecontent":null,"content":"词条查询是Elasticsearch中的一个简单查询。它仅匹配在给定字段中含有该词条的文档，而且是确切的、未经分析的词条\ntermQuery(\"key\", obj) 完全匹配\ntermsQuery(\"key\", obj1, obj2..)\n一次匹配多个值，有一个值是正确的，就可以查询出数据\n/**\n * 词条查询是Elasticsearch中的一个简单查询。它仅匹配在给定字段中含有该词条的文档，而\n 且是确切的、未经分析的词条\n termQuery(\"key\", obj) 完全匹配\n termsQuery(\"key\", obj1, obj2..)   一次匹配多个值，只有有一个值是正确的，就可以查询出数据\n​\n * */\n@Test\npublic void termQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.termsQuery(\"name\", \"张飞\",\"刘备\",\"关羽\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\n}\n​\n​","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3543,"question":"通配符查询（wildcardQuery）?","simplecontent":null,"content":"*匹配多个字符，?匹配1个字符  wildcardQuery(\"name\", \"c?b\")\n\n注意：避免* 开始, 会检索大量内容造成效率缓慢\n/**\n * *匹配多个字符，?匹配1个字符\n 注意：避免* 开始, 会检索大量内容造成效率缓慢\n * */\n@Test\npublic void wildcardQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.wildcardQuery(\"address\", \"广东*\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3544,"question":"es之java各种查询操作?","simplecontent":null,"content":"matchAllQuery\t匹配所有文档\nqueryStringQuery\t基于Lucene的字段检索\nwildcardQuery\t通配符查询匹配多个字符，?匹配1个字符*\ntermQuery\t词条查询\nmatchQuery\t字段查询\nidsQuery\t标识符查询\nfuzzyQuery\t文档相似度查询\nincludeLower includeUpper\t范围查询\nboolQuery\t组合查询（复杂查询）\nSortOrder\t排序查询","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3545,"question":"Es查询页数?","simplecontent":null,"content":"// 第几页 searchSourceBuilder.from(0); \n// 每页多少条数据 searchSourceBuilder.size(1);","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3546,"question":"es中的MatchQuery?","simplecontent":null,"content":"Match Query 是最常用的 Full Text Query 。无论需要查询什么字段， match 查询都应该会是首选的查询方式。它既能处理全文字段，又能处理精确字段。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3547,"question":"es的分词器analyzer?","simplecontent":null,"content":"- 查询时通过analyzer指定分词器","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3532,"question":"多字段查询query_string?","simplecontent":null,"content":"相比其他可用的查询，query_string查询支持全部的Apache Lucene查询语法\n针对多字段的query_string查询\n/**\n * 相比其他可用的查询，query_string查询支持全部的Apache Lucene查询语法\n 针对多字段的query_string查询\n​\n * */\n@Test\npublic void query_String(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.queryStringQuery(\"孙尚香\")).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\n}\nhttps://www.cnblogs.com/niutao/p/10909274.html","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3533,"question":"查询所有?","simplecontent":null,"content":"matchAllQuery()匹配所有文件\nmatch_all查询是Elasticsearch中最简单的查询之一。它使我们能够匹配索引中的所有文件。\n/**\n *matchAllQuery()匹配所有文件\n match_all查询是Elasticsearch中最简单的查询之一。它使我们能够匹配索引中的所有文件\n * */\n@Test\npublic void searchAll(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\")\n            .setTypes(\"dahan\").setQuery(QueryBuilders.matchAllQuery())\n            .get();\n​\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    System.out.println(\"查询结果有：\" + hits.getTotalHits() + \"条\");\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"studentNo : \"+ next.getSource().get(\"studentNo\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"birthday : \"+ next.getSource().get(\"birthday\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"===============================================\");\n    }\n}\n​","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3534,"question":"排序查询?","simplecontent":null,"content":"/**\n * ASC : 正序（从小到大）\n * DESC: 倒序（从大到小）\n * */\n@Test\npublic void SortOrderQuery(){\n    SearchResponse searchResponse = client.prepareSearch(\"sanguo\").setTypes(\"dahan\")\n            .setQuery(QueryBuilders.matchAllQuery())\n            .addSort(\"age\", SortOrder.ASC).get();\n    SearchHits hits = searchResponse.getHits(); // 获取命中次数，查询结果有多少对象\n    Iterator<SearchHit> iterator = hits.iterator();\n    while (iterator.hasNext()) {\n        SearchHit next = iterator.next();\n        System.out.println(\"name : \"+ next.getSource().get(\"name\"));\n        System.out.println(\"male : \"+ next.getSource().get(\"male\"));\n        System.out.println(\"classNo : \"+ next.getSource().get(\"classNo\"));\n        System.out.println(\"address : \"+ next.getSource().get(\"address\"));\n        System.out.println(\"age : \"+ next.getSource().get(\"age\"));\n        System.out.println(\"===============================================\");\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:57","updateTime":"2021-05-26 01:04:57","isExist":null},{"id":3514,"question":"设置是否按查询匹配度排序?","simplecontent":null,"content":"searchRequestBuilder.setExplain(true);","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3515,"question":"】更新数据使用什么方法？UpdateRequest","simplecontent":null,"content":"UpdateRequest updateRequest = new UpdateRequest();\n\n        updateRequest.index(index).type(type).id(id).doc(jsonObject);","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3516,"question":"】删除数据用什么方法？DeleteResponse","simplecontent":null,"content":"DeleteResponse response = client.prepareDelete(index, type, id).execute().actionGet();","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3517,"question":"】插入数据用什么方法？IndexResponse","simplecontent":null,"content":"public  void insert() throws Exception {\n\t\t//获取es连接\n         EsTestVo esTestVo = new EsTestVo(2l, \"创建客户端1测试数据\", \"这是一条测试数据，可以用来进行测试\");\n          EsTestVo esvo=new EsTestVo(3l, \"张一\", 5, \"张一是个好人\");\n          EsTestVo esvo1=new EsTestVo(4l, \"张二\", 5, \"张二是个坏人\");\n          EsTestVo esvo2=new EsTestVo(5l, \"张三\", 20, \"张三是个好人\");\n          EsTestVo esvo3=new EsTestVo(6l, \"张四\", 30, \"张四是个坏人\");\n          EsTestVo esvo5=new EsTestVo(6l, \"张五\", 30, \"张五有点傻\");\n         String json = JsonUtil.toJson(esvo);\n        //插入数据时不给id赋值，自动生成id。\n        IndexResponse response =client.prepareIndex(\"accesstest\", \"test01\").setSource(json).execute().actionGet();\n        //多次index这个版本号会变  \n        System.out.println(\"response.version():\"+response.getVersion());  \n\n\n     BulkRequestBuilder bulkRequest = client.prepareBulk();\n// either use client#prepare, or use Requests# to directly build index/delete requests\n        bulkRequest.add(client.prepareIndex(\"weibo\", \"article\", \"1\")\n                .setSource(jsonBuilder()\n                        .startObject()\n                        .field(\"user\", \"张三\")\n                        .field(\"postDate\", new Date())\n                        .field(\"message\", \"近段时间关于马蓉的消息传得到处都是，而且我们也发现她这一段时间似乎小动作不断。对于她近期的所做所为，王宝强方面则显得冷静一些，要求法庭二审选择公开审理。\")\n                        .endObject()\n                )\n        );\nIndexResponse response = client.prepareIndex(index, type, id).setSource(jsonObject).get();","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3518,"question":"】分词查询用什么方法？SearchResponse","simplecontent":null,"content":"/**\n     * 条件分词查询\n     */\n    @Test\n    public void search() {\n        SearchRequestBuilder srb=client.prepareSearch(\"book\").setTypes(\"kehuan\");\n        SearchResponse sr=srb.setQuery(QueryBuilders.matchQuery(\"title\", \"三体\").analyzer(ANALYZER))\n                .setFetchSource(new String[] {\"title\",\"price\"},null)\n                .execute()\n                .actionGet();\n        SearchHits hits=sr.getHits();\n        for(SearchHit hit:hits){\n            System.out.println(hit.getSourceAsString());\n        }\n    }\n    /**\n     * 多字段条件分词查询\n     */\n    @Test\n    public void search2() {\n        SearchRequestBuilder srb=client.prepareSearch(\"book\").setTypes(\"kehuan\");\n        SearchResponse sr=srb.setQuery(QueryBuilders.multiMatchQuery(\"美国宇宙红岸\", \"title\",\"content\")\n                .analyzer(ANALYZER))\n                .setFetchSource(new String[] {\"title\",\"price\"},null)\n                .execute()\n                .actionGet();\n        SearchHits hits=sr.getHits();\n        for(SearchHit hit:hits){\n            System.out.println(hit.getSourceAsString());\n        }\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3519,"question":"模糊查询分类?","simplecontent":null,"content":"1.通配符查询 2.matchPhraseQuery是没有用分词起，matchQuery会使用分词器，matchPhraseQuery是没有用分词起，matchQuery会使用分词器\n3.复合模糊查询must 和should\n4.//搜索name字段或interest字段中包含有cyb的数据，并且这两个字段中的值必须等于cyb\nQueryBuilder queryBuilder = QueryBuilders.multiMatchQuery(\"cyb\",\"name\", \"interest\");","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3520,"question":"复合查询?","simplecontent":null,"content":"价格范围，分类精准，标题分词，编码字典表，分页\n\nBoolQueryBuilder qb = QueryBuilders.boolQuery(); \nqb.must(QueryBuilders.termQuery(\"key\", value)); \n日期 \nqb.must(QueryBuilders.rangeQuery(\"datekey\").gte(value)); \n精确查询 \nqb.must(QueryBuilders.matchQuery(name, value));","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3521,"question":"】权重如何设置？字段权重boost","simplecontent":null,"content":"字段权重boost","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3522,"question":"分词器?","simplecontent":null,"content":"默认分词器是将中文拆分成了单字，在查询时虽能返回包含相关字的结果，但是和整句的意思差别太大，无法直接根据一段文本精准查询。使用ik_analyze后，也只是好一点","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3523,"question":"得分查询?","simplecontent":null,"content":"  FunctionScoreQueryBuilder functionScoreQueryBuilder = QueryBuilders.functionScoreQuery() \n                .add(QueryBuilders.boolQuery().should(QueryBuilders.matchQuery(\"cityname\", searchContent)), \n                    ScoreFunctionBuilders.weightFactorFunction(1000)) \n                .add(QueryBuilders.boolQuery().should(QueryBuilders.matchQuery(\"description\", searchContent)), \n                        ScoreFunctionBuilders.weightFactorFunction(100));\n   // 创建搜索 DSL 查询 \n        SearchQuery searchQuery = new NativeSearchQueryBuilder() \n                .withPageable(pageable) \n                .withQuery(functionScoreQueryBuilder).build(); \n \n        LOGGER.info(\"\\n searchCity(): searchContent [\" + searchContent + \"] \\n DSL  = \\n \" + searchQuery.getQuery().toString()); \n \n        Page<City> searchPageResults = cityRepository.search(searchQuery); \n        return searchPageResults.getContent();\n先创建分页参数，然后用 FunctionScoreQueryBuilder 定义 Function Score Query，并设置对应字段的权重分值。城市名称 1000 分，description 100 分。\n然后创建该搜索的 DSL 查询，并打印出来。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3524,"question":"operator参数?","simplecontent":null,"content":"表示字段如何匹配分词后的搜索词\noperator为or时，查询条件如下\n\nif (doc.eventname contains \"key1\" or doc.eventname contains \"key2\" or doc.eventname contains \"key3\") \noperator为and时，查询条件如下\n\nif (doc.eventname contains \"key1\" and doc.eventname contains \"key2\" and doc.eventname contains \"key3\") \noperator这个对搜索精确度影响很大。\n\nminium_should_match参数表示字段匹配关键词的数量最小限制，可以是数字字符串，也可以是百分比。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3525,"question":"多字段搜索匹配多个关键词的查询?","simplecontent":null,"content":"multi_match的type有三个 best_fields,most_fields,cross_fields。\n其中best_fields,most_fields是以字段为中心的\ncross_fields是以词条为中心的\n如：查询关键词 “常德市  小明” 分别对应索引文档中的 area, user字段。   area^6,user^4的配置\n如果使用best_fields，most_fields，不出意外应该是先将area字段中包含“常德市”的文档先检索出来。\n如果使用cross_fields，会将area字段中包含“常德市”，user字段中包含“小明”的文档检索出来。\ncross_fields把几个相关字段合并成了一个大字段，进行词频统计，当我们搜索多字段多关键词时，明显这种处理更符合我们的需求。\nMultiMatchQueryBuilder entireReg = QueryBuilders.multiMatchQuery(key, \"areaName\",\"username\")\n          .fields(fields)\n          .type(Type.CROSS_FIELDS)  //合并字段查询\n          .operator(Operator.AND);","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3526,"question":"设计查询方法?","simplecontent":null,"content":"按 两个文本字段 t1和t2 分词搜索，然后按搜索得分、一个数值型字段d1、 一个逻辑型字段 b1 来排序输出，权重如下：\n\nscore * 30% \nd1 * 50%\nb1 * 20% \n1.直接 addSort() 只能按多个字段排序，并且有优先级，无法设置权重；\n2. 自定义 function score ? 如何处理 d1 的归一化问题？ 如何处理 b1 的逻辑值问题？ \n\n主要方案有两种：\n1. function score \n2. script \n\n原理都差不多，主要区别是后者要开script，而且可以先在es里写好脚本，查询时指定脚本名即可。 \n\n权重方面重点在于自己的设计，以及合理地按照业务需求使用归一化函数，实现没有问题。\n{\n\"query\": {\n\"function_score\": {\n\"functions\": [\n{\n\"script_score\": {\n\"params\": {\n\"param1\": 0.3,\n\"param2\": 0.5,\n\"param3\": 0.2\n},\n\"script\": \"_score *param1+ doc['d1'].value * param2 + doc['b1'].value * param23\"\n}\n}\n],\n\"query\": {\n\"match\": {\n\"brief\": \"智能\"\n}\n},\n\"score_mode\": \"first\"\n}\n}\n}\n_score 就是es对doc的打分，d1和bi需要是数值类型。param1，2，3可以不用赋值的形式，直接写在script里面也可以。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3527,"question":"Es提升索引权重?","simplecontent":null,"content":"当在多个索引中搜索时，可以使用参数 indices_boost 来提升整个索引的权重，在下面例子中，当要为最近索引的文档分配更高权重时，可以这么做：\n\n\t\n这个多索引查询涵盖了所有以字符串 docs_2014_ 开始的索引。\n\n\n其中，索引 docs_2014_10 中的所有文件的权重是 3 ，索引 docs_2014_09 中是 2 ，其他所有匹配的索引权重为默认值 1 。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3528,"question":"ES设置字段搜索权重?","simplecontent":null,"content":"title 查询语句的重要性是 content 查询的 2 倍，因为它的权重提升值为 2 。\n\n\n没有设置 boost 的查询语句的值为 1 。\n\n写法一：\nBoolQueryBuilder qb = QueryBuilders.boolQuery()\n          .should(QueryBuilders.matchQuery(\"columnA\",key).boost(6.0f))\n          .should(QueryBuilders.matchQuery(\"columnB\",key).boost(5.0f))\n          .should(QueryBuilders.matchQuery(\"columnC\",key).boost(4.0f))\n          .should(QueryBuilders.matchQuery(\"columnD\",key).boost(3.0f).analyzer(\"ik_smart\").operator(Operator.AND))\n          .should(QueryBuilders.matchQuery(\"columnE\",key).boost(2.0f).analyzer(\"ik_smart\"))\n          .should(QueryBuilders.matchQuery(\"columnF\",key).boost(1.0f));\n这里是罗列了所有需要查询的列，并指定boost(类似权重,是提升文档搜索评分的重要因素)的大小，还根据不同的字段的数据类型指定不同的分词器analyzer，并指定分词的搜索方式operator\n写法二：\nMap fields = new HashMap(8);\n      fields.put(\"columnA\", 5.0f);\n      fields.put(\"columnB\", 4.0f);\n      fields.put(\"columnC\", 3.0f);\n      fields.put(\"columnD\", 2.0f);\n      fields.put(\"columnE\", 1.0f);\n      fields.put(\"columnF\", 6.0f);\nMultiMatchQueryBuilder entireReg = QueryBuilders.multiMatchQuery(key, \"username\").fields(fields);","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3529,"question":"Es评分?","simplecontent":null,"content":"我们查询的所有文档，会在内部做一次相关性的评分score;然后会根据这个score从大到小的排序，依次展示给客户端；\nElasticsearch使用的计算评分公式TF-IDF算法的实用计算公式如下: \nscore(q,d) coord(q,d)queryNorm(q)(tf (tind)idf (t)2 boost(t)norm(t,d)) \n\n1.TF：词频，词在文档中出现的频度是多少？ 频度越高，权重 越高\n2.IDF：逆向文档率，词在集合所有文档里出现的频率是多少？频次越高，权重 越低\n3.文档长度归一值\n字段的长度是多少？ 字段越短，字段的权重 越高 。如果词出现在类似标题 title 这样的字段，要比它出现在内容body 这样的字段中的相关度更高。字段长度的归一值公式如下：\n\n我们经常会控制boost来调整score（boost默认值是1）\n词频/逆向文档频率（TF/IDF）\n\n当匹配到一组文档后，需要根据相关度排序这些文档，不是所有的文档都包含所有词，有些词比其他的词更重要。一个文档的相关度评分部分取决于每个查询词在文档中的 权重 。\n\n将参数 index_options 设置为 docs 可以禁用词频统计及词频位置，这个映射的字段不会计算词的出现次数，对于短语或近似查询也不可用。要求精确查询的 not_analyzed 字符串字段会默认使用该设置。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3530,"question":"正则表达式匹配查询?","simplecontent":null,"content":"private void search() {\n        SearchResponse searchResponse = client.prepareSearch(\"test1\").setTypes(\"user1\")\n                .setQuery(QueryBuilders.regexpQuery(\"name\", \"c[a-z]{1}b?\"))\n                .get();\n        SearchHits hits = searchResponse.getHits();\n        System.out.println(JSON.toJSONString(hits));\n    }","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3531,"question":"前缀查询prefix query?","simplecontent":null,"content":"查询词条的前缀是指定字符的记录\n    private void search() {\n        SearchResponse searchResponse = client.prepareSearch(\"test1\").setTypes(\"user1\")\n                .setQuery(QueryBuilders.prefixQuery(\"name\", \"cy\"))\n                .get();\n\n        SearchHits hits = searchResponse.getHits();\n        System.out.println(JSON.toJSONString(hits));\n    }","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:56","updateTime":"2021-05-26 01:04:56","isExist":null},{"id":3504,"question":"如何在集群进行分片?","simplecontent":null,"content":"有集群两个节点，并使用了默认的分片配置. ES自动把这5个主分片分配到2个节点上, 而它们分别对应的副本则在完全不同的节点上。其中 node1 有某个索引的分片1、2、3和副本分片4、5，node2 有该索引的分片4、5和副本分片1、2、3。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3505,"question":"如何修改分片?","simplecontent":null,"content":"调节节点在分配分片时的权重。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3506,"question":"es写数据?","simplecontent":null,"content":"1.客户端向任意节点发送请求，处理请求的节点就是协调节点。\n2.协调节点将请求路由到主分片节点，\n3.主分片处理请求后，同步到副本分片\n4.协调节点返回响应。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3507,"question":"如何搜索数据?","simplecontent":null,"content":"搜索数据：\n最强大的就是全文检索，根据关键词来搜索，找到相关的文档。\n1.客户端向某节点发送请求，该节点变身协调节点，\n2.协调节点将请求转发到所有的shard。\n3.query phase：每个shard将自己的搜索结果（doc id）返回给协调节点，由协调节点进行数据的合并、排序、分页等操作，产生最终结果。\n4.fetch phase：协调节点根据doc id去各个节点拉取实际的doc数据，最终返回给客户端。\n   ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3508,"question":"Elasticsearch搜索原理?","simplecontent":null,"content":"　搜索被执行成一个两阶段过程，我们称之为 Query Then Fetch；\n　　在初始查询阶段时，查询会广播到索引中每一个分片拷贝（主分片或者副本分片）。 每个分片在本地执行搜索并构建一个匹配文档的大小为 from + size 的优先队列。PS：在搜索的时候是会查询Filesystem Cache的，但是有部分数据还在Memory Buffer，所以搜索是近实时的。\n　　每个分片返回各自优先队列中 所有文档的 ID 和排序值 给协调节点，它合并这些值到自己的优先队列中来产生一个全局排序后的结果列表。\n　　接下来就是 取回阶段，协调节点辨别出哪些文档需要被取回并向相关的分片提交多个 GET 请求。每个分片加载并 丰富 文档，如果有需要的话，接着返回文档给协调节点。一旦所有的文档都被取回了，协调节点返回结果给客户端。\n　　补充：Query Then Fetch的搜索类型在文档相关性打分的时候参考的是本分片的数据，这样在文档数量较少的时候可能不够准确，DFS Query Then Fetch增加了一个预查询的处理，询问Term和Document frequency，这个评分更准确，但是性能会变差。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3509,"question":"Elasticsearch中的节点（比如共20个），其中的10个选了一个master，另外10个选了另一个master，怎么办？","simplecontent":null,"content":"当集群master候选数量不小于3个时，可以通过设置最少投票通过数量（discovery.zen.minimum_master_nodes）超过所有候选节点一半以上来解决脑裂问题；\n当候选数量为两个时，只能修改为唯一的一个master候选，其他作为data节点，避免脑裂问题。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3510,"question":"为什么要使用到ES？","simplecontent":null,"content":"因为在我们商城中的数据，将来会非常多，所以采用以往的模糊查询，模糊查询前置配置，会放弃索引，导致商品查询是全表扫面，在百万级别的数据库中，效率非常低下，而我们使用ES做一个全文索引，我们将经常查询的商品的某些字段，比如说商品名，描述、价格还有id这些字段我们放入我们索引库里，可以提高查询速度。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3511,"question":"创建索引?","simplecontent":null,"content":"IndexResponse response = client.prepareIndex(\"twitter\", \"_doc\", \"1\")\n\t\t\t\t\t.setSource(jsonBuilder()\n\t\t\t\t\t\t\t.startObject()\n\t\t\t\t\t\t\t.field(\"user\", \"kimchy\")\n\t\t\t\t\t\t\t.field(\"postDate\", new Date())\n\t\t\t\t\t\t\t.field(\"message\", \"trying out Elasticsearch\")\n\t\t\t\t\t\t\t.endObject()).get();\n————————————————\n版权声明：本文为CSDN博主「清风自来&amp;静等花开」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_32403063/article/details/102412457","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3512,"question":"解析对象?","simplecontent":null,"content":"List<Map<String, Object>>","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3513,"question":"】高亮显示用什么方法？highlightBuilder","simplecontent":null,"content":"HighlightBuilder highlightBuilder = new HighlightBuilder();\n\n            //highlightBuilder.preTags(\"<span style='color:red' >\");//设置前缀\n            //highlightBuilder.postTags(\"</span>\");//设置后缀\n\n            // 设置高亮字段\n            highlightBuilder.field(highlightField);\n            searchRequestBuilder.highlighter(highlightBuilder);","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:55","updateTime":"2021-05-26 01:04:55","isExist":null},{"id":3491,"question":"主从节点?","simplecontent":null,"content":"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3492,"question":"什么是分片?","simplecontent":null,"content":"分片可以是主分片(primary shard)或者是复制分片(replica shard)。你索引中的每个文档属于一个单独的主分片，所以主分片的数量决定了索引最多能存储多少数据。\n理论上主分片能存储的数据大小是没有限制的，限制取决于你实际的使用情况。分片的最大容量完全取决于你的使用状况：硬件存储的大小、文档的大小和复杂度、如何索引和查询你的文档，以及你期望的响应时间。\n复制分片只是主分片的一个副本，它可以防止硬件故障导致的数据丢失，同时可以提供读请求，比如搜索或者从别的shard取回文档。\n当索引创建完成的时候，主分片的数量就固定了，但是复制分片的数量可以随时调整。\n让我们在集群中唯一一个空节点上创建一个叫做blogs的索引。默认情况下，一个索引被分配5个主分片，但是为了演示的目的，我们只分配3个主分片和一个复制分片（每个主分片都有一个复制分片）：","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3493,"question":"到底什么是ES索引？","simplecontent":null,"content":"你会发现，其实在ES里面，索引扮演的角色其实并不是存储，而是“索引”，看起来有点傻，但是其实我之前一直理解索引是存储，其实从命名上可以看出来，索引其实是分片的索引，分片的字典，记录了每个分片的位置，索引范围；当需要查询的时候，可以定位到对应的分片来进行数据操作；最后进行汇总。所以index本质作用就是记录分片；所谓查询，有向无环图（DAG）都是基于index来进行分析绘制的，然后基于该图下放数据操作。\n\n索引是具有相似特征的文档的集合。 例如，可以为客户数据创建索引，为产品目录创建另一个索引，为订单数据创建另一个索引。\n索引由名称标识（必须全为小写），并且对该索引中的文档执行索引，搜索，更新和删除操作时，该名称用于引用索引。\n一个分片(shard)是一个最小级别“工作单元(worker unit)”,它只是保存了索引中所有数据的一部分。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3494,"question":"分片对应的存储实体是什么？","simplecontent":null,"content":"　　存储的实体是索引","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3495,"question":"分片是不是越多越好？","simplecontent":null,"content":"　　不是","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3496,"question":"分片多有什么影响？","simplecontent":null,"content":"分片多浪费存储空间、占用资源、影响性能","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3497,"question":"分片过多的影响：?","simplecontent":null,"content":"每个分片本质上就是一个Lucene索引, 因此会消耗相应的文件句柄, 内存和CPU资源。\n每个搜索请求会调度到索引的每个分片中. 如果分片分散在不同的节点倒是问题不太. 但当分片开始竞争相同的硬件资源时, 性能便会逐步下降。\nES使用词频统计来计算相关性. 当然这些统计也会分配到各个分片上. 如果在大量分片上只维护了很少的数据, 则将导致最终的文档相关性较差。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3498,"question":"分片设置的可参考原则：?","simplecontent":null,"content":"ElasticSearch推荐的最大JVM堆空间是30~32G, 所以把你的分片最大容量限制为30GB, 然后再对分片数量做合理估算. 例如, 你认为你的数据能达到200GB, 推荐你最多分配7到8个分片。\n在开始阶段, 一个好的方案是根据你的节点数量按照1.5~3倍的原则来创建分片. 例如,如果你有3个节点, 则推荐你创建的分片数最多不超过9(3x3)个。当性能下降时，增加节点，ES会平衡分片的放置。\n对于基于日期的索引需求, 并且对索引数据的搜索场景非常少. 也许这些索引量将达到成百上千, 但每个索引的数据量只有1GB甚至更小. 对于这种类似场景, 建议只需要为索引分配1个分片。如日志管理就是一个日期的索引需求，日期索引会很多，但每个索引存放的日志数据量就很少。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3499,"question":"索引应该设置多少个分片？","simplecontent":null,"content":"说明：分片数指定后不可变，除非重索引。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3500,"question":"脑裂问题：?","simplecontent":null,"content":"一个集群中只有一个A主节点，A主节点因为需要处理的东西太多或者网络过于繁忙，从而导致其他从节点ping不通A主节点，这样其他从节点就会认为A主节点不可用了，就会重新选出一个新的主节点B。过了一会A主节点恢复正常了，这样就出现了两个主节点，导致一部分数据来源于A主节点，另外一部分数据来源于B主节点，出现数据不一致问题，这就是脑裂。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3501,"question":"ElasticSearch中的分片是什么?","simplecontent":null,"content":"　　在大多数环境中，每个节点都在单独的盒子或虚拟机上运行。\n　　索引 - 在Elasticsearch中，索引是文档的集合。\n　　分片 -因为Elasticsearch是一个分布式搜索引擎，所以索引通常被分割成分布在多个节点上的被称为分片的元素。\n ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3502,"question":"在并发情况下，Elasticsearch如果保证读写一致？","simplecontent":null,"content":"　　可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突；\n　　另外对于写操作，一致性级别支持quorum/one/all，默认为quorum，即只有当大多数分片可用时才允许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，分片将会在一个不同的节点上重建。\n　　对于读操作，可以设置replication为sync(默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置replication为async时，也可以通过设置搜索请求参数_preference为primary来查询主分片，确保文档是最新版本。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3503,"question":"ElasticSearch中的集群、节点、索引、文档、类型，副本是什么？多个节点、一个节点、数据库、一行、分区、","simplecontent":null,"content":"群集是一个或多个节点（服务器）的集合，它们共同保存您的整个数据，并提供跨所有节点的联合索引和搜索功能。群集由唯一名称标识，默认情况下为“elasticsearch”。此名称很重要，因为如果节点设置为按名称加入群集，则该节点只能是群集的一部分。\n　　节点是属于集群一部分的单个服务器。它存储数据并参与群集索引和搜索功能。\n　　索引就像关系数据库中的“数据库”。它有一个定义多种类型的映射。索引是逻辑名称空间，映射到一个或多个主分片，并且可以有零个或多个副本分片。 MySQL =>数据库 　　         ElasticSearch =>索引\n　　文档类似于关系数据库中的一行。不同之处在于索引中的每个文档可以具有不同的结构（字段），但是对于通用字段应该具有相同的数据类型。 MySQL => Databases => 　             Tables => Columns / Rows ElasticSearch => Indices => Types =>具有属性的文档\n　　类型是索引的逻辑类别/分区，其语义完全取决于用户。\n\n集群(cluster): 由一个或多个节点组成, 并通过集群名称与其他集群进行区分\n \n节点(node): 单个 ElasticSearch 实例. 通常一个节点运行在一个隔离的容器或虚拟机中\n索引(index): 在 ES 中, 索引是一组文档的集合，1、索引：\n索引（index）是elasticsearch的一个逻辑存储，可以理解为关系型数据库中的数据库，es可以把索引数据存放到一台服务器上，也可以sharding后存到多台服务器上，每个索引有一个或多个分片，每个分片可以有多个副本。\n2、索引类型（index_type）：\n在es中，一个索引对象可以存储多个不同用途的对象，通过索引类型（index_type）可以区分单个索引中的不同对象，可以理解为关系型数据库中的表。每个索引类型可以有不同的结构，但是不同的索引类型不能为相同的属性设置不同的类型。\n3、文档（document）：\n存储在es中的主要实体叫文档（document），可以理解为关系型数据库中表的一行记录。每个文档由多个字段构成，es是一个非结构化的数据库，每个文档可以有不同的字段，并且有一个唯一的标识符。\n4、映射（mapping）：\nES默认是动态创建索引和索引类型的mapping的。这就相当于无需定义Solr中的Schema，无需指定各个字段的索引规则就可以索引文件，很方便。但有时方便就代表着不灵活。比如，ES默认一个字段是要做分词的，但我们有时要搜索匹配整个字段却不行。如有统计工作要记录每个城市出现的次数。对于NAME字段，若记录“new york”文本，ES可能会把它拆分成“new”和“york”这两个词，分别计算这个两个单词的次数，而不是我们期望的“new york”。\n\n这时，就需要我们在创建索引时定义mapping。此外，es支持多字段结构，例如：我们希望两个字段中有相同的值，一个用于搜索，一个用户排序；或者一个用于分词器分析，一个用于空白字符。例如：编写mapping文件如下：\n{\t\n\t   \"index_type\":{  \n\t\t  \"properties\":{  \n\t\t\t \"ID\":{  \n\t\t\t\t\"type\":\"string\",  \n\t\t\t\t\"index\":\"not_analyzed\"   \n\t\t\t },  \t\t\t \n\t\t\t \"NAME\":{\n\t\t\t\t\"type\":\"string\",\n\t\t\t\t\"fields\":{\n\t\t\t\t\t\"NAME\":{\n\t\t\t\t\t\t\"type\":\"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"raw\":{\n\t\t\t\t\t\t\"type\":\"string\",\n\t\t\t\t\t\t\"index\":\"not_analyzed\"\t\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\t\n\t\t\t } \t\t \t \t\t\n\t\t  }  \n\t   }   \n}\n以上文件是说我们对于index_type这个索引类型，定义了它的mapping。重点是将NAME这个字段映射为两个，一个是需要做索引分析的NAME，另一个是不分析的raw，即不会拆分new york这种词组。这样我们在做搜索的时候，就可以对NAME.raw这个字段做term aggregation，获得所有城市出现的次数了。\n————————————————\n分片(shard): 因为 ES 是个分布式的搜索引擎, 所以索引通常都会分解成不同部分, 而这些分布在不同节点的数据就是分片. ES自动管理和组织分片, 并在必要的时候对分片数据进行再平衡分配, 所以用户基本上不用担心分片的处理细节.\n副本(replica): ES 默认为一个索引创建 5 个主分片, 并分别为其创建一个副本分片. 也就是说每个索引都由 5 个主分片成本, 而每个主分片都相应的有一个 copy。对于分布式搜索引擎来说, 分片及副本的分配将是高可用及快速搜索响应的设计核心.主分片与副本都能处理查询请求，它们的唯一区别在于只有主分片才能处理索引请求.副本对搜索性能非常重要，同时用户也可在任何时候添加或删除副本。额外的副本能给带来更大的容量, 更高的呑吐能力及更强的故障恢复能力。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:54","updateTime":"2021-05-26 01:04:54","isExist":null},{"id":3474,"question":"理解bool 和dis_max查询？","simplecontent":null,"content":"bestFileds返回的是全中的商品\n1.1 bool查询\n# 返回的文档必须满足must子句，并且参与计算分值\n# 返回的文档必须满足filter子句，不计算分值\n# 返回的文档可能满足should子句的条件。如果一个没有must和filter的有一个或者多个should子句，那么只要按满足一个就可以返回，minimum_should_match表示至少满足几个子句\n# 返回的文档必须不满足must_not条件\n1.2 dis_max查询\ndismax查询就是Disjuction Max Query，就是OR的意思，返回匹配了任何查询的文档，并且是产生了最佳匹配的查询所对应的分值。\n \n我们添加2条文档数据：\nPUT /ecommerce/product/2\n{\n     \"name\": \"Fender\",\n     \"desc\": \" Fender California Series Kingman SCE CutawayElectric Bass\",\n     \"price\": 599.99,\n     \"type\": \"Acoustic\",\n     \"reviews\": 50,\n     \"tags\": [\n        \"Bass\",\n        \"Acoustic\",\n        \"Gibson Cool\"\n      ]\n}\n\nPUT /ecommerce/product/3\n{\n     \"name\": \"Gibson\",\n     \"desc\": \"Gibson 2017 Les Paul Studio Gold Series ElectricGuitar\",\n     \"price\": 599.99,\n     \"type\": \"Acoustic\",\n     \"reviews\": 50,\n     \"tags\": [\n        \"Bass\",\n        \"Acoustic\",\n        \"Gibson\"\n      ]\n}\n\n现在我们进行一个bool查询\nPOST /ecommerce/_search\n{\n  \"query\":{\n       \"bool\":{\n           \"should\":[\n               {\"match\":{\"desc\":\"Gibson Cool\"}},\n               {\"match\":{\"tags\":\"Gibson Cool\"}}\n            ]\n        }\n   }\n}\n\n我们期望如果字段包含Gibson Cool的相关度更高，分值应该更高。这个查询结果是什么呢？\n它的结果是doc3 分值比doc2大，为什么？\n我们看一下是如何计算分值的吧：\n# 执行should中的两个match，每一个match如果匹配到了，就会有一个打分，如果没有匹配我们认为分数为0\n# 让这些分数相加，比如1.1 和 1.3 那么相加分数为2.4\n# 再由相加的乘以匹配到的文档数，比如这里匹配到的是2个，那么2.4 * 2 = 4.8\n# 再将乘以的结果除以查询的数量 ，这儿是2个查询，故\n4.8/2 =2.4\n \n二 best_fields 策略：\n指的就是搜索结果中应该返回某一个字段匹配到了最多的关键词的文档。我们可以你使用dis_max查询实现。\n方案一：使用dis_max查询实现，因为dis_max查询就是返回最高分数的那个文档\nPOST /ecommerce/glasses/_search\n{\n   \"query\":{\n       \"dis_max\": {\n          \"queries\": [\n              {\"match\":{\"record.desc\":\"Hadoop Spark\"}},\n              {\"match\":{\"record.content\":\"HadoopSpark\"}}\n            ]\n        }\n    }\n}\n方案二：使用multi_match查询,使用type指定best_fields类型\nPOST /ecommerce/glasses/_search\n{\n   \"query\": {\n       \"multi_match\": {\n          \"query\": \"Hadoop Spark\",\n          \"type\":\"best_fields\",\n          \"minimum_should_match\":\"50%\",\n          \"fields\":[\"record.desc^3\",\"record.content\"]\n        }\n    }\n}\n \n三 most_fields策略：\n指的就是搜索结果应该返回匹配了更多的字段的document优先返回回来。\nPOST /ecommerce/glasses/_search\n{\n   \"query\": {\n       \"multi_match\": {\n          \"query\": \"Hadoop Spark\",\n          \"type\":\"most_fields\",\n          \"fields\": [\"record.desc\",\"record.content\"]\n        }\n    }\n}\n \n四 cross_fields策略：\n指的是一个唯一标识，跨域了多个字段，比如人的标识是名字，一个建筑的标识是地址，姓名跨域散落在多个field中，比如first_name和last_name，一个地址也可以散落在多个字段中，比如country,province,city中。\n跨域多个字段搜索一个标识就是cross_fields搜索。\n4.1 首先我们使用most_fileds来实现会有什么问题呢\n# 只是尽可能找到匹配的文档，比如我搜索Red Round，我可能搜搜出很多只包含Red或者Round的文档，但是同时满足我跨字段搜索条件的可能很少\n# most_fields，没办法用minimum_should_match去掉长尾数据\n \n4.2 使用copy_to，将多个field组合成一个新field，也能实现跨字段搜索的功能\n首先,索引映射文件中国使用copy_to，比如：\nPUT /ecommerce/_mapping/glasses\n{\n \"properties\": {\n     \"first_name\": {\n         \"type\":    \"string\",\n         \"copy_to\": \"full_name\"\n      },\n     \"last_name\": {\n         \"type\":    \"string\",\n         \"copy_to\": \"full_name\"\n      },\n     \"full_name\": {\n         \"type\":    \"string\"\n      }\n  }\n}\nPOST /ecommerce/glasses/_search\n{\n \"query\": {\n   \"match\": {\"full_name\":\"Nicky Zhang\"}\n  }\n}\n \n4.3 使用multi_match，指定类型为cross_fields\nPOST /ecommerce/glasses/_search\n{\n   \"query\": {\n       \"multi_match\": {\n          \"query\": \"Red Round\",\n          \"type\":\"cross_fields\",\n          \"operator\":\"and\",\n          \"fields\": [\"record.color\",\"record.shape\"]\n        }\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3475,"question":" functionScore 里的scoreMode与boostMode区别有什么区别?","simplecontent":null,"content":"     ","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3476,"question":"】搜索类型？best_fields（先完整、后完整但分开、后部分词语，后单个字，多次查询顺序不变）、most_fields（多个字段权重相加，但是完整权重最高，单个字段展示跟best_fields一样）、cross_fields、phrase（完整、分开或缺少不会查出来，跟sql前后模糊查询一样）、phrase_prefix","simplecontent":null,"content":"best_fields：所有输入的Token必须在一个字段上全部匹配。跟best_fields类型相同的查询类型是dis_max，字母dis是单词“Disjunction”的简写，意思是分离，dis_max查询类型有一个子查询数组，每一个子查询都单独计算评分，返回子查询中最高的评分。如果忽略评分，那么dis_max查询类型的含义是执行指定的子查询，返回匹配的文档。\nmost_fields：所有输入的Token必须在一个字段上全部匹配。\n与best_fields不同之处在于相关性评分，best_fields取最大匹配得分（max计算），而most_fields取所有匹配之和（sum计算）\ncross_fields：所有输入的Token必须在同一组的字段上全部匹配。\n4，cross_fields类型\n该查询类型是把query条件拆分成各个分词，然后在各个字段上执行匹配分词，默认情况下，只要有一个字段匹配，那么返回文档。\n例如，query参数拆分成will和smith两个分词，当参数operator为and时，字段first_name或last_name必须包含will ，并且 first_name或last_name必须包含smith。\n\nphrase：           对每个字段运行match_phrase查询，并合并每个字段的权重，详情参见：phrase and phrase_prefix.\nphrase_prefix：对每个字段运行match_phrase_prefix查询，并合并每个字段的权重，详情参见：phrase and phrase_prefix","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3477,"question":"】max_expansions作用？前缀匹配数量优先展示","simplecontent":null,"content":" match_phrase_prefix 查询中有个参数max_expansions 说的是参数 max_expansions 控制着可以与前缀匹配的词的数量，默认值是 50。\n以 I like swi 查询为例，它会先查找第一个与前缀 swi 匹配的词，然后依次查找搜集与之匹配的词（按字母顺序），直到没有更多可匹配的词或当数量超过 max_expansions 时结束。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3478,"question":"】Boot权重设置？分类是5，标题是2，短描是0.1","simplecontent":null,"content":"boost值来控制每个查询子句的相对权重，该值默认为1。一个大于1的boost会增加该查询子句的相对权重","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3479,"question":"】Ik分词器效果？将词语分开","simplecontent":null,"content":"analyzer\n{\n \"analyzer\":\"ik_smart\",\n \"text\":\"北京人民欢迎您\"\n}\nhttps://www.cnblogs.com/java-spring/p/11766450.html\n说明ik_max_word分词比ik_smart分词粒度更细","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3480,"question":"】es如何操作商品？同步商品到es、分页搜索商品，修改和删除增加会修改单个商品，搜索支持权重搜索","simplecontent":null,"content":"《同步商品到es、分页搜索商品，修改和删除增加会修改单个商品，搜索支持权重搜索》\n支持排序，多条件查询，超时设置60秒\n模糊查询、精准查询","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3481,"question":"】Es操作流程？创建索引、创建默认的doctype，往es插入json文档","simplecontent":null,"content":"《创建索引、创建默认的doctype，往es插入json文档》","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3482,"question":"】Es端口？9300","simplecontent":null,"content":"ES中API的端口号是9300而不是9200。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3483,"question":"】为什么es的主分片对应的备份分片不在同一节点存在？一台机挂了就不能使用挂了的数据","simplecontent":null,"content":"如果p1和r1都在同一个台机，如果一台机挂了就不能使用挂了的数据","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3484,"question":"】如何防止数据不一致？哈希算法存储数据","simplecontent":null,"content":"哈希算法存储数据","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3485,"question":"3台机器如何分配节点?","simplecontent":null,"content":"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3486,"question":"】Es创建索引方法？createIndex","simplecontent":null,"content":"《elasticsearchTemplate.createIndex》\nesService.initIndex();初始化索引\n\n  boolean index = elasticsearchTemplate.createIndex(Library.class, EsData.DEFAULT_SETTING);\n  boolean putMapping = elasticsearchTemplate.putMapping(Library.class);\n\n    /**\n     * 不建议使用ElasticsearchTemplate对索引进行管理（创建，更新映射，删除索引）\n     * 索引就像是数据库或者是数据库中的表，我们平时不会通过java代码频繁的去创建修改删除数据库或表\n     * 我们只会针对数据做crud的操作\n     * 在es中也是同理，我们尽量使用ElasticsearchTemplate 对文档数据做CRUD操作\n     */\n\n    @Test    //创建索引并插入文档\n    public void createIndexStu() {\n        Stu stu = new Stu();\n        stu.setStuId(1001L);\n        stu.setName(\"为道日损\");\n        stu.setAge(18);\n        IndexQuery indexQuery = new IndexQueryBuilder().withObject(stu).build();\n        esTemplate.index(indexQuery);\n    }\n\n    @Test    //新增文档\n    public void createIndexStu0() {\n        Stu stu = new Stu();\n        stu.setStuId(1002L);\n        stu.setName(\"为道日损11\");\n        stu.setAge(20);\n        stu.setMoney(18.2f);\n        stu.setSign(\"I am super man\");\n        stu.setDescription(\"hey man,I belive I would to be a superman\");\n        IndexQuery indexQuery = new IndexQueryBuilder().withObject(stu).build();\n        esTemplate.index(indexQuery);\n    }\n\n    @Test    //删除索引\n    public void deleteIndexStu() {\n        esTemplate.deleteIndex(Stu.class);\n    }\n\n\n    //-------------------------------------------分割线-----------------------------------------\n    @Test    //更新文档\n    public void updateStuDoc(){\n        Map<String ,Object> sourcemap = new HashMap<>();\n        sourcemap.put(\"sign\", \"I am not super man\");\n        sourcemap.put(\"money\", 22.3f);\n        sourcemap.put(\"age\",44);\n\n        IndexRequest indexRequest = new IndexRequest();\n        indexRequest.source(sourcemap);\n\n        UpdateQuery updateQuery = new UpdateQueryBuilder()\n                .withClass(Stu.class)\n                .withId(\"1002\")\n                .withIndexRequest(indexRequest)\n                .build();\n        esTemplate.update(updateQuery);\n    }\n\n    @Test    //根据ID查询文档\n    public void getIndexStuDoc() {\n\n        GetQuery getQuery = new GetQuery();\n        getQuery.setId(\"1002\");\n\n        Stu stu = esTemplate.queryForObject(getQuery, Stu.class);\n        System.out.print(stu);\n    }\n\n\n    @Test    //删除文档\n    public void deleteStuDoc(){\n        esTemplate.delete(Stu.class,\"1002\");\n    }\n\n    @Test    //查询文档\n    public void searchStuDoc() {\n\n        Pageable pageable = PageRequest.of(0, 3);\n\n        SearchQuery query = new NativeSearchQueryBuilder()\n                .withQuery(QueryBuilders.matchQuery(\"name\",\"为\"))\n                .withPageable(pageable)\n                .build();\n        AggregatedPage<Stu> pageStu = esTemplate.queryForPage(query, Stu.class);\n        System.out.println(\"检索后的总分页数目为：\"+pageStu.getTotalPages());\n        List<Stu> stuList = pageStu.getContent();\n        for (Stu s : stuList) {\n            System.out.println(s);\n        }\n    }\n\n    @Test    //高亮显示\n    public void highlightStuDoc() {\n\n        String preTag = \"<font color='red'>\";\n        String postTag = \"</font>\";\n\n        Pageable pageable = PageRequest.of(0, 3);\n        //排序条件\n        SortBuilder sortBuilder = new FieldSortBuilder(\"money\").order(SortOrder.ASC);\n        SearchQuery query = new NativeSearchQueryBuilder()\n                .withQuery(QueryBuilders.matchQuery(\"name\",\"为\"))\n                .withPageable(pageable)\n                .withSort(sortBuilder)\n                .withHighlightFields(new HighlightBuilder.Field(\"name\")\n                                        .preTags(preTag)\n                                        .postTags(postTag))\n                .build();\n        AggregatedPage<Stu> pageStu = esTemplate.queryForPage(query, Stu.class, new SearchResultMapper() {\n            @Override\n            public <T> AggregatedPage<T> mapResults(SearchResponse searchResponse, Class<T> aClass, Pageable pageable) {\n                SearchHits his = searchResponse.getHits();\n\n                List<Stu> stuList = new ArrayList<>();\n                for (SearchHit h : his) {\n                    HighlightField highlightField = h.getHighlightFields().get(\"name\");\n                    String name = highlightField.getFragments()[0].toString();\n                    Object stuId =  h.getSourceAsMap().get(\"stuId\");\n                    Integer age = (Integer) h.getSourceAsMap().get(\"age\");\n                    Stu stuHL = new Stu();\n                    stuHL.setName(name);\n                    stuHL.setAge(age);\n                    stuHL.setStuId(Long.valueOf(stuId.toString()));\n                    stuList.add(stuHL);\n                }\n                if (stuList.size()>0){\n                    return new AggregatedPageImpl<>((List<T>)stuList);\n                }\n                return null;\n            }\n        });\n        System.out.println(\"检索后的总分页数目为：\"+pageStu.getTotalPages());\n        List<Stu> stuList = pageStu.getContent();\n        for (Stu s : stuList) {\n            System.out.println(s);\n        }\n    }\n}","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3487,"question":"es主分片和副本不能在同一台机器?","simplecontent":null,"content":"方法一、设置cluster.routing.allocation.same_shard.host: true。\n这个设置是告诉es,将同一shard的primary shard和replica shard分步在不同的主机上（官方文档说按照不同的IP或主机名称来判断是否是同一主机）。这个值，ES默认是false。注意：如果是已经在生产环境使用的ES（每个机器的节点大于1个时），修改完配置重启节点时，可能会导致最后一个节点没有数据（因为最后一个节点在重启的时候，其他节点已经将他这个节点上的数据分配到同一机器上的另外一个节点）。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3488,"question":"Elasticsearch 正/倒排索引与分词详解?","simplecontent":null,"content":"1.正排索引和倒排索引简介\n    对于搜索引擎来讲。\n    正排索引是文档 Id 到文档内容、单词的关联关系，也就是说可以通过 Id获取到文档的内容。\n    倒排索引是单词到文档 Id 的关联关系，也就是说了一通过单词搜索到文档 Id。\n    倒排索引的查询流程是：首先根据关键字搜索到对应的文档 Id，然后根据正排索引查询文档 Id 的完整内容，最后返回给用户想要的结果。\n \n2.倒排索引\n    倒排索引是搜索引擎的核心，主要包含两个部分：\n    • 单词词典（Trem Dictionary）：记录的是所有的文档分词后的结果\n    • 倒排列表（Posting List）：记录了单词对应文档的集合，由倒排索引项（Posting）组成。\n    单词字典的实现一般采用B+Tree的方式，来保证高效\n2.1 倒排索引项（Posting）主要包含如下的信息：\n    • 文档ID，用于获取原始文档的信息\n    • 单词频率（TF，Term Frequency），记录该单词在该文档中出现的次数，用于后续相关性算分。\n    • 位置（Position），记录单词在文档中的分词位置（多个），用于做词语搜索。\n    • 偏移（Offset），记录单词在文档的开始和结束位置，用于高亮显示。\n    es存储的是一个json的内容，其中包含很多字段，每个字段都会有自己的倒排索引。\n \n3.正排索引\n    搜索的时候，要依靠倒排索引：排序的时候，需要依靠正排索引，看到每个document的每个field，然后进行排序，所谓的正排索引，其实就是doc values。\n    在建立索引的时候，一方面会建立倒排索引，以供搜索用；一方面建立正排索引，也就是doc values，以供排序，聚合，过滤等操作使用。\n    doc values是被保存在硬盘上的，此时如果内存足够，os会自动将其缓存在内存中，性能还是会很高的，如果内存不足够，os会将其写入磁盘上。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3489,"question":"】单机多少个分片？一个","simplecontent":null,"content":"单机正常一个分片","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3490,"question":"集群默认多少个分片?","simplecontent":null,"content":"主分片确定好了不能改了，但是副分片可以更改","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:53","updateTime":"2021-05-26 01:04:53","isExist":null},{"id":3457,"question":"】如何更好做关联表查询？将关联数据存储到es","simplecontent":null,"content":"订单表：id order_code total_price\n\n1 测试订单 5000\n\n订单条目表：id order_id goods_id purchase_count price\n\n1 1 1 2 2000\n2 1 2 5 200\n\n我在mysql里，都是select * from order join order_item on order.id=order_item.order_id where order.id=1\n写入es的时候，搞成两个索引，order索引，orderItem索引\n\norder索引，里面就包含id order_code total_price\norderItem索引，里面写入进去的时候，就完成join操作，id order_code total_price id order_id goods_id purchase_count price\n\n写入es的java系统里，就完成关联，将关联好的数据直接写入es中，搜索的时候，就不需要利用es的搜索语法去完成join来搜索了\n\ndocument模型设计是非常重要的，很多操作，不要在搜索的时候才想去执行各种复杂的乱七八糟的操作。es能支持的操作就是那么多，不要考虑用es做一些它不好操作的事情。如果真的有那种操作，尽量在document模型设计的时候，写入的时候就完成。另外对于一些太复杂的操作，比如join，nested，parent-child搜索都要尽量避免，性能都很差的。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3458,"question":"】Es可以进行复杂关联查询吗？性能不好","simplecontent":null,"content":"在es里该怎么玩儿，es里面的复杂的关联查询，复杂的查询语法，尽量别用，一旦用了性能一般都不太好","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3459,"question":"】es如何进行性能优化？给filesystem cache更多内存+存储少量字段+数据预热，文件写入是先到磁盘文件，然后再自动同步到内存","simplecontent":null,"content":"os cache，操作系统的缓存\n\n你往es里写的数据，实际上都写到磁盘文件里去了，磁盘文件里的数据操作系统会自动将里面的数据缓存到os cache里面去\n\nes的搜索引擎严重依赖于底层的filesystem cache，你如果给filesystem cache更多的内存，尽量让内存可以容纳所有的indx segment file索引数据文件，那么你搜索的时候就基本都是走内存的，性能会非常高。\n性能差距可以有大，我们之前很多的测试和压测，如果走磁盘一般肯定上秒，搜索性能绝对是秒级别的，1秒，5秒，10秒。但是如果是走filesystem cache，是走纯内存的，那么一般来说性能比走磁盘要高一个数量级，基本上就是毫秒级的，从几毫秒到几百毫秒不等。\n\n如果你此时，你整个，磁盘上索引数据文件，在3台机器上，一共占用了1T的磁盘容量，你的es数据量是1t，每台机器的数据量是300g\n\n你觉得你的性能能好吗？filesystem cache的内存才100g，十分之一的数据可以放内存，其他的都在磁盘，然后你执行搜索操作，大部分操作都是走磁盘，性能肯定差\n\n\n你要让es性能要好，最佳的情况下，就是你的机器的内存，至少可以容纳你的总数据量的一半\n比如说，你一共要在es中存储1T的数据，那么你的多台机器留个filesystem cache的内存加起来综合，至少要到512G，至少半数的情况下，搜索是走内存的，性能一般可以到几秒钟，2秒，3秒，5秒\n\n如果最佳的情况下，我们自己的生产环境实践经验，所以说我们当时的策略，是仅仅在es中就存少量的数据，就是你要用来搜索的那些索引，内存留给filesystem cache的，就100G，那么你就控制在100gb以内，相当于是，你的数据几乎全部走内存来搜索，性能非常之高，一般可以在1秒以内\n\n比如说你现在有一行数据\n\nid name age ....30个字段\n\n但是你现在搜索，只需要根据id name age三个字段来搜索\n\n如果你傻乎乎的往es里写入一行数据所有的字段，就会导致说70%的数据是不用来搜索的，结果硬是占据了es机器上的filesystem cache的空间，单挑数据的数据量越大，就会导致filesystem cahce能缓存的数据就越少\n\n仅仅只是写入es中要用来检索的少数几个字段就可以了，比如说，就写入es id name age三个字段就可以了，然后你可以把其他的字段数据存在mysql里面，我们一般是建议用es + hbase的这么一个架构。\n\n（2）数据预热\n\n假如说，哪怕是你就按照上述的方案去做了，es集群中每个机器写入的数据量还是超过了filesystem cache一倍，比如说你写入一台机器60g数据，结果filesystem cache就30g，还是有30g数据留在了磁盘上。\n\n举个例子，就比如说，微博，你可以把一些大v，平时看的人很多的数据给提前你自己后台搞个系统，每隔一会儿，你自己的后台系统去搜索一下热数据，刷到filesystem cache里去，后面用户实际上来看这个热数据的时候，他们就是直接从内存里搜索了，很快。\n\n电商，你可以将平时查看最多的一些商品，比如说iphone 8，热数据提前后台搞个程序，每隔1分钟自己主动访问一次，刷到filesystem cache里去。\n对于那些你觉得比较热的，经常会有人访问的数据，最好做一个专门的缓存预热子系统，就是对热数据，每隔一段时间，你就提前访问一下，让数据进入filesystem cache里面去。这样期待下次别人访问的时候，一定性能会好一些。\n（3）冷热分离\n\n\n关于es性能优化，数据拆分，我之前说将大量不搜索的字段，拆分到别的存储中去，这个就是类似于后面我最后要讲的mysql分库分表的垂直拆分。\n\nes可以做类似于mysql的水平拆分，就是说将大量的访问很少，频率很低的数据，单独写一个索引，然后将访问很频繁的热数据单独写一个索引\n\n你最好是将冷数据写入一个索引中，然后热数据写入另外一个索引中，这样可以确保热数据在被预热之后，尽量都让他们留在filesystem os cache里，别让冷数据给冲刷掉。\n\n你看，假设你有6台机器，2个索引，一个放冷数据，一个放热数据，每个索引3个shard\n\n3台机器放热数据index；另外3台机器放冷数据index\n\n然后这样的话，你大量的时候是在访问热数据index，热数据可能就占总数据量的10%，此时数据量很少，几乎全都保留在filesystem cache里面了，就可以确保热数据的访问性能是很高的。\n\n但是对于冷数据而言，是在别的index里的，跟热数据index都不再相同的机器上，大家互相之间都没什么联系了。如果有人访问冷数据，可能大量数据是在磁盘上的，此时性能差点，就10%的人去访问冷数据；90%的人在访问热数据。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3460,"question":"如果是删除操作?","simplecontent":null,"content":"commit的时候会生成一个.del文件，里面将某个doc标识为deleted状态，那么搜索的时候根据.del文件就知道这个doc被删除了","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3461,"question":"如果是更新操作?","simplecontent":null,"content":"就是将原来的doc标识为deleted状态，然后新写入一条数据","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3462,"question":"】Es丢数据怎么办？写数据如buffer时就写入磁盘日志文件","simplecontent":null,"content":"如果你希望一定不能丢失数据的话，你可以设置个参数，官方文档，百度一下。每次写入一条数据，都是写入buffer，同时写入磁盘上的translog，但是这会导致写性能、写入吞吐量会下降一个数量级。本来一秒钟可以写2000条，现在你一秒钟只能写200条，都有可能。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3463,"question":"】为什么叫es是准实时的？每秒刷新一次","simplecontent":null,"content":"NRT，near real-time，准实时。默认是每隔1秒refresh一次的，所以es是准实时的，因为写入的数据1秒之后才能被看到。\n\n可以通过es的restful api或者java api，手动执行一次refresh操作，就是手动将buffer中的数据刷入os cache中，让数据立马就可以被搜索到。\n\n只要数据被输入os cache中，buffer就会被清空了，因为不需要保留buffer了，数据在translog里面已经持久化到磁盘去一份了\n\n3）只要数据进入os cache，此时就可以让这个segment file的数据对外提供搜索了\n\n4）重复1~3步骤，新的数据不断进入buffer和translog，不断将buffer数据写入一个又一个新的segment file中去，每次refresh完buffer清空，translog保留。随着这个过程推进，translog会变得越来越大。当translog达到一定长度的时候，就会触发commit操作。\n\nbuffer中的数据，倒是好，每隔1秒就被刷到os cache中去，然后这个buffer就被清空了。所以说这个buffer的数据始终是可以保持住不会填满es进程的内存的。\n\n每次一条数据写入buffer，同时会写入一条日志到translog日志文件中去，所以这个translog日志文件是不断变大的，当translog日志文件大到一定程度的时候，就会执行commit操作。\n\n5）commit操作发生第一步，就是将buffer中现有数据refresh到os cache中去，清空buffer\n\n6）将一个commit point写入磁盘文件，里面标识着这个commit point对应的所有segment file\n\n7）强行将os cache中目前所有的数据都fsync到磁盘文件中去","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3464,"question":"】es写数据底层原理？数据写入buffer，每秒刷新到磁盘文件","simplecontent":null,"content":"1）先写入buffer，在buffer里的时候数据是搜索不到的；同时将数据写入translog日志文件\n\n2）如果buffer快满了，或者到一定时间，就会将buffer数据refresh到一个新的segment file中，但是此时数据不是直接进入segment file的磁盘文件的，而是先进入os cache的。这个过程就是refresh。\n\n每隔1秒钟，es将buffer中的数据写入一个新的segment file，每秒钟会产生一个新的磁盘文件，segment file，这个segment file中就存储最近1秒内buffer中写入的数据\n\n但是如果buffer里面此时没有数据，那当然不会执行refresh操作咯，每秒创建换一个空的segment file，如果buffer里面有数据，默认1秒钟执行一次refresh操作，刷入一个新的segment file中\n\n操作系统里面，磁盘文件其实都有一个东西，叫做os cache，操作系统缓存，就是说数据写入磁盘文件之前，会先进入os cache，先进入操作系统级别的一个内存缓存中去\n\n只要buffer中的数据被refresh操作，刷入os cache中，就代表这个数据就可以被搜索到了","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3465,"question":"translog日志文件的作用是什么？","simplecontent":null,"content":"就是在你执行commit操作之前，数据要么是停留在buffer中，要么是停留在os cache中，无论是buffer还是os cache都是内存，一旦这台机器死了，内存中的数据就全丢了。\n\n所以需要将数据对应的操作写入一个专门的日志文件，translog日志文件中，一旦此时机器宕机，再次重启的时候，es会自动读取translog日志文件中的数据，恢复到内存buffer和os cache中去。\n\ncommit操作：1、写commit point；2、将os cache数据fsync强刷到磁盘上去；3、清空translog日志文件\n\n8）将现有的translog清空，然后再次重启启用一个translog，此时commit操作完成。默认每隔30分钟会自动执行一次commit，但是如果translog过大，也会触发commit。整个commit的过程，叫做flush操作。我们可以手动执行flush操作，就是将所有os cache数据刷到磁盘文件中去。\n\n不叫做commit操作，flush操作。es中的flush操作，就对应着commit的全过程。我们也可以通过es api，手动执行flush操作，手动将os cache中的数据fsync强刷到磁盘上去，记录一个commit point，清空translog日志文件。\n\n9）translog其实也是先写入os cache的，默认每隔5秒刷一次到磁盘中去，所以默认情况下，可能有5秒的数据会仅仅停留在buffer或者translog文件的os cache中，如果此时机器挂了，会丢失5秒钟的数据。但是这样性能比较好，最多丢5秒的数据。也可以将translog设置成每次写操作必须是直接fsync到磁盘，但是性能会差很多。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3466,"question":"】es搜索数据过程？协调节点将搜索请求转发到所有的shard，每个shard将自己的搜索结果，返回给协调节点，由协调节点进行数据的合并、排序、分页等操作，产出最终结果","simplecontent":null,"content":"es最强大的是做全文检索，就是比如你有三条数据\n\njava真好玩儿啊\njava好难学啊\nj2ee特别牛\n\n你根据java关键词来搜索，将包含java的document给搜索出来\n\nes就会给你返回：java真好玩儿啊，java好难学啊\n\n1）客户端发送请求到一个coordinate node\n2）协调节点将搜索请求转发到所有的shard对应的primary shard或replica shard也可以\n3）query phase：每个shard将自己的搜索结果（其实就是一些doc id），返回给协调节点，由协调节点进行数据的合并、排序、分页等操作，产出最终结果\n4）fetch phase：接着由协调节点，根据doc id去各个节点上拉取实际的document数据，最终返回给客户端","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3467,"question":"】Es如何分片？主备在同一台机器，但是这个备是不同机器的，不是自己的","simplecontent":null,"content":"接着你搞一个索引，这个索引可以拆分成多个shard，每个shard存储部分数据。\n\n接着就是这个shard的数据实际是有多个备份，就是说每个shard都有一个primary shard，负责写入数据，但是还有几个replica shard。primary shard写入数据之后，会将数据同步到其他几个replica shard上去。\n\n通过这个replica的方案，每个shard的数据都有多个备份，如果某个机器宕机了，没关系啊，还有别的数据副本在别的机器上呢。高可用了吧。\n\nes集群多个节点，会自动选举一个节点为master节点，这个master节点其实就是干一些管理的工作的，比如维护索引元数据拉，负责切换primary shard和replica shard身份拉，之类的。\n\n要是master节点宕机了，那么会重新选举一个节点为master节点。\n\n如果是primary 节点宕机了，那么会由master节点，让那个宕机节点上的primary shard的身份转移到其他机器上的replica shard。急着你要是修复了那个宕机机器，重启了之后，master节点会控制将缺失的replica shard分配过去，同步后续修改的数据之类的，让集群恢复正常。\n\n其实上述就是elasticsearch作为一个分布式搜索引擎最基本的一个架构设计","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3468,"question":"】Es中的index -> type -> mapping -> document -> field区别？document 是一条记录、index 是表、type 的将表再细分什么表、mapping 是字段类型","simplecontent":null,"content":"es中存储数据的基本单位是索引，比如说你现在要在es中存储一些订单数据，你就应该在es中创建一个索引，order_idx，所有的订单数据就都写到这个索引里面去，一个索引差不多就是相当于是mysql里的一张表。index -> type -> mapping -> document -> field。\n\nindex：mysql里的一张表\n\ntype：没法跟mysql里去对比，一个index里可以有多个type，每个type的字段都是差不多的，但是有一些略微的差别。\n\n好比说，有一个index，是订单index，里面专门是放订单数据的。就好比说你在mysql中建表，有些订单是实物商品的订单，就好比说一件衣服，一双鞋子；有些订单是虚拟商品的订单，就好比说游戏点卡，话费充值。就两种订单大部分字段是一样的，但是少部分字段可能有略微的一些差别。\n\n所以就会在订单index里，建两个type，一个是实物商品订单type，一个是虚拟商品订单type，这两个type大部分字段是一样的，少部分字段是不一样的。\n\n很多情况下，一个index里可能就一个type，但是确实如果说是一个index里有多个type的情况，你可以认为index是一个类别的表，具体的每个type代表了具体的一个mysql中的表\n\n每个type有一个mapping，如果你认为一个type是一个具体的一个表，index代表了多个type的同属于的一个类型，mapping就是这个type的表结构定义，你在mysql中创建一个表，肯定是要定义表结构的，里面有哪些字段，每个字段是什么类型。。。\n\nmapping就代表了这个type的表结构的定义，定义了这个type中每个字段名称，字段是什么类型的，然后还有这个字段的各种配置\n\n实际上你往index里的一个type里面写的一条数据，叫做一条document，一条document就代表了mysql中某个表里的一行给，每个document有多个field，每个field就代表了这个document中的一个字段的值","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3469,"question":"es的分布式架构原理能说一下么（es是如何实现分布式的啊）？","simplecontent":null,"content":"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3470,"question":"es写入数据的工作原理是什么啊？es查询数据的工作原理是什么啊？","simplecontent":null,"content":"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3471,"question":"es在数据量很大的情况下（数十亿级别）如何提高查询性能啊？","simplecontent":null,"content":"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3472,"question":"es生产集群的部署架构是什么？每个索引的数据量大概有多少？每个索引大概有多少个分片？","simplecontent":null,"content":"","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3473,"question":"】2个should作用？并行2个只要有一个起作用就好，2个会合并查询结果，相当于or，而一个should里有多个值就相当于in","simplecontent":null,"content":"并行2个只要有一个起作用就好，2个会合并查询结果，相当于or，而一个should里有多个值就相当于in","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:52","updateTime":"2021-05-26 01:04:52","isExist":null},{"id":3443,"question":"】elasticsearch 索引数据多了怎么办，如何调优，部署？基于模板+时间+rollover api 滚动创建索引、冷热数据分离存储","simplecontent":null,"content":"3.1动态索引层面\n\n基于模板+时间+rollover api 滚动创建索引， 举例： 设计阶段定义： blog 索引的模板格式为： blog_index_时间戳的形式， 每天递增数据。\n\n这样做的好处： 不至于数据量激增导致单个索引数据量非常大， 接近于上线 2 的\n32 次幂-1， 索引存储达到了 TB+甚至更大。\n\n一旦单个索引很大，   存储等各种风险也随之而来，   所以要提前考虑+及早避免。\n\n\n3.2存储层面\n\n冷热数据分离存储，热数据（ 比如最近 3 天或者一周的数据）， 其余为冷数据。对于冷数据不会再写入新数据， 可以考虑定期 force_merge 加 shrink 压缩操作， 节省存储空间和检索效率。\n\n3.3部署层面\n\n一旦之前没有规划，   这里就属于应急策略。\n结合 ES 自身的支持动态扩展的特点，动态新增机器的方式可以缓解集群压力，注意： 如果之前主节点等规划合理， 不需要重启集群也能完成动态新增的。\n\n\n115","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3444,"question":"】elasticsearch 是如何实现master 选举的？","simplecontent":null,"content":"1、只有候选主节点（ master： true） 的节点才能成为主节点。\n2、最小主节点数（ min_master_nodes） 的目的是防止脑裂。这个我看了各种网上分析的版本和源码分析的书籍，    云里雾里。\n核对了一下代码，核心入口为 findMaster，选择主节点成功返回对应 Master，否则返回 null。选举流程大致描述如下：\n\n第一步： 确认候选主节点数达标， elasticsearch.yml 设置的值discovery.zen.minimum_master_nodes；\n\n第二步： 比较： 先判定是否具备 master 资格， 具备候选主节点资格的优先返回； 若两节点都为候选主节点，则 id 小的值会主节点。注意这里的 id 为 string 类型。\n\n题外话： 获取节点 id 的方法。\n\n1GET /_cat/nodes?v&h=ip,port,heapPercent,heapMax,id,name\n2ip\tport heapPercent heapMax id\tname\n\n\n116","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3445,"question":"】详细描述一下Elasticsearch 搜索的过程？取数据、路由节点获取所有文档，返回给客户端","simplecontent":null,"content":"搜索拆解为“ query then fetch”  两个阶段。\nquery 阶段的目的： 定位到位置， 但不取。步骤拆解如下：\n\n1、假设一个索引数据有 5 主+1 副本 共 10 分片， 一次请求会命中（ 主或者副本分片中） 的一个。\n\n2、每个分片在本地进行查询，     结果返回到本地有序的优先队列中。\n\n3、第 2） 步骤的结果发送到协调节点， 协调节点产生一个全局的排序列表。\n\nfetch 阶段的目的： 取数据。\n路由节点获取所有文档，   返回给客户端。\n\n117","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3446,"question":"】elasticsearch 在部署时，对Linux 的设置有哪些优化方法？","simplecontent":null,"content":"1、关闭缓存 swap;\n\n2、堆内存设置为： Min（ 节点内存/2, 32GB）;\n\n3、设置最大文件句柄数；\n\n4、线程池+队列大小根据业务需要做调整；\n\n5、磁盘存储 raid 方式— — 存储有条件使用 RAID10，增加单节点性能以及避免单节点存储故障。\n118","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3447,"question":"】Elasticsearch 是如何实现Master 选举的？","simplecontent":null,"content":"1、Elasticsearch 的选主是 ZenDiscovery 模块负责的， 主要包含 Ping（ 节点之间通过这个 RPC 来发现彼此） 和 Unicast（ 单播模块包含一个主机列表以控制哪些节点需要 ping 通） 这两部分；\n\n\n\n2、对所有可以成为 master 的节点（ node.master: true） 根据 nodeId 字典排序，每次选举每个节点都把自己所知道节点排一次序，然后选出第一个（ 第 0 位） 节点， 暂且认为它是 master 节点。\n\n3、如果对某个节点的投票数达到一定的值（ 可以成为 master 节点数 n/2+1） 并且该节点自己也选举自己， 那这个节点就是 master。否则重新选举一直到满足上述条件。\n\n4、补充： master 节点的职责主要包括集群、节点和索引的管理， 不负责文档级别的管理； data 节点可以关闭 http 功能*。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3448,"question":"】Elasticsearch 中的节点（比如共 20 个），其中的 10 个选了一个master，另外 10 个选了另一个master，怎么办？","simplecontent":null,"content":"1、当集群 master 候选数量不小于 3 个时， 可以通过设置最少投票通过数量\n（ discovery.zen.minimum_master_nodes） 超过所有候选节点一半以上来解决脑裂问题；\n2、当候选数量为两个时， 只能修改为唯一的一个 master 候选， 其他作为 data 节点， 避免脑裂问题。\n\n120","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3449,"question":"】客户端在和集群连接时，如何选择特定的节点执行请求的？","simplecontent":null,"content":"1、TransportClient 利用 transport 模块远程连接一个 elasticsearch 集群。它并不加入到集群中，只是简单的获得一个或者多个初始化的 transport 地址，并以 轮询  的方式与这些地址进行通信。\n\n122","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3450,"question":"】详细描述一下Elasticsearch 更新和删除文档的过程？","simplecontent":null,"content":"1、删除和更新也都是写操作， 但是 Elasticsearch 中的文档是不可变的， 因此不能被删除或者改动以展示其变更；\n\n2、磁盘上的每个段都有一个相应的.del 文件。当删除请求发送后，文档并没有真的被删除， 而是在.del 文件中被标记为删除。该文档依然能匹配查询， 但是会在结果中被过滤掉。当段合并时， 在.del 文件中被标记为删除的文档将不会被写入新段。\n\n123","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3451,"question":"】Elasticsearch 在部署时，对Linux 的设置有哪些优化方法？","simplecontent":null,"content":"1、64 GB 内存的机器是非常理想的， 但是 32 GB 和 16 GB 机器也是很常见的。少于 8 GB  会适得其反。\n\n2、如果你要在更快的 CPUs 和更多的核心之间选择， 选择更多的核心更好。多个内核提供的额外并发远胜过稍微快一点点的时钟频率。\n\n3、如果你负担得起 SSD， 它将远远超出任何旋转介质。 基于 SSD  的节点， 查询和索引性能都有提升。如果你负担得起， SSD 是一个好的选择。\n\n4、即使数据中心们近在咫尺，  也要避免集群跨越多个数据中心。绝对要避免集群跨越大的地理距离。\n\n5、请确保运行你应用程序的 JVM 和服务器的 JVM 是完全一样的。 在Elasticsearch 的几个地方， 使用  Java  的本地序列化。\n\n\n\n\n6、通过设置 gateway.recover_after_nodes、gateway.expected_nodes、\ngateway.recover_after_time 可以在集群重启的时候避免过多的分片交换， 这可能会让数据恢复从数个小时缩短为几秒钟。\n\n7、Elasticsearch 默认被配置为使用单播发现， 以防止节点无意中加入集群。只有在同一台机器上运行的节点才会自动组成集群。最好使用单播代替组播。\n\n8、不要随意修改垃圾回收器（ CMS） 和各个线程池的大小。\n\n9、把你的内存的（ 少于） 一半给 Lucene（ 但不要超过 32 GB！）， 通过ES_HEAP_SIZE 环境变量设置。\n\n10、内存交换到磁盘对服务器性能来说是致命的。如果内存交换到磁盘上，      一个\n100 微秒的操作可能变成 10 毫秒。  再想想那么多  10  微秒的操作时延累加起来。  不难看出  swapping 对于性能是多么可怕。\n\n11、Lucene 使用了大量的文件。同时， Elasticsearch 在节点和 HTTP 客户端之间进行通信也使用了大量的套接字。 所有这一切都需要足够的文件描述符。你应该增加你的文件描述符， 设置一个很大的值， 如  64,000。\n\n补充： 索引阶段性能提升方法\n\n1、使用批量请求并调整其大小： 每次批量数据  5– 15 MB  大是个不错的起始点。\n\n2、存储： 使用  SSD\n\n3、段和合并：Elasticsearch 默认值是 20 MB/s，对机械磁盘应该是个不错的设置。如果你用的是 SSD，可以考虑提高到 100– 200 MB/s 。如果你在做批量导入， 完全不在意搜索，    你可以彻底关掉合并限流。另外还可以增加\n\n\n\nindex.translog.flush_threshold_size 设置， 从默认的 512 MB 到更大一些的值， 比如  1 GB， 这可以在一次清空触发的时候在事务日志里积累出更大的段。\n\n4、如果你的搜索结果不需要近实时的准确度， 考虑把每个索引的index.refresh_interval 改到 30s。\n\n5、如果你在做大批量导入，考虑通过设置 index.number_of_replicas: 0 关闭副本。\n\n\n3、在新的文档被创建时，Elasticsearch 会为该文档指定一个版本号，当执行更新时， 旧版本的文档在.del 文件中被标记为删除， 新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，    但是会在结果中被过滤掉。\n\n124","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3452,"question":"】Elasticsearch 对于大数据量（上亿量级）的聚合如何实现？","simplecontent":null,"content":"Elasticsearch 提供的首个近似聚合是 cardinality 度量。它提供一个字段的基数， 即该字段的 distinct 或者 unique 值的数目。它是基于 HLL 算法的。HLL 会先对我们的输入作哈希运算，然后根据哈希运算的结果中的 bits 做概率估算从而得到基数。其特点是： 可配置的精度， 用来控制内存的使用（ 更精确 ＝ 更多内存）； 小的数据集精度是非常高的； 我们可以通过配置参数， 来设置去重需要的固定内存使用量。无论数千还是数十亿的唯一值，      内存使用量只与你配置的精确度相关。\n\n125","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3453,"question":"】在并发情况下，Elasticsearch 如果保证读写一致？版本号使用乐观、","simplecontent":null,"content":"1、可以通过版本号使用乐观并发控制，  以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突；\n\n2、另外对于写操作， 一致性级别支持 quorum/one/all， 默认为 quorum， 即只有当大多数分片可用时才允许写操作。但即使大多数可用， 也可能存在因为网络等原因导致写入副本失败， 这样该副本被认为故障， 分片将会在一个不同的节点上重建。\n\n3、对于读操作， 可以设置 replication 为 sync(默认)， 这使得操作在主分片和副本分片都完成后才会返回；如果设置 replication 为 async 时，也可以通过设置搜索请求参数_preference 为 primary 来查询主分片， 确保文档是最新版本。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3454,"question":"】如何监控Elasticsearch 集群状态？","simplecontent":null,"content":"Marvel 让你可以很简单的通过 Kibana 监控 Elasticsearch。你可以实时查看你的集群健康状态和性能，     也可以分析过去的集群、索引和节点指标。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3455,"question":"】Es在线上部署的情况是如何？5台，64g，共320g，有5个索引，每天2000万数据","simplecontent":null,"content":"（1）es生产集群我们部署了5台机器，每台机器是6核64G的，集群总内存是320G\n\n（2）我们es集群的日增量数据大概是2000万条，每天日增量数据大概是500MB，每月增量数据大概是6亿，15G。目前系统已经运行了几个月，现在es集群里数据总量大概是100G左右。\n\n（3）目前线上有5个索引（这个结合你们自己业务来，看看自己有哪些数据可以放es的），每个索引的数据量大概是20G，所以这个数据量之内，我们每个索引分配的是8个shard，比默认的5个shard多了3个shard。","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3456,"question":"】Es分页性能优化？不允许深度分页、推荐商品不断下拉出来","simplecontent":null,"content":"es的分页是较坑的，为啥呢？举个例子吧，假如你每页是10条数据，你现在要查询第100页，实际上是会把每个shard上存储的前1000条数据都查到一个协调节点上，如果你有个5个shard，那么就有5000条数据，接着协调节点对这5000条数据进行一些合并、处理，再获取到最终第100页的10条数据。\n\n分布式的，你要查第100页的10条数据，你是不可能说从5个shard，每个shard就查2条数据？最后到协调节点合并成10条数据？你必须得从每个shard都查1000条数据过来，然后根据你的需求进行排序、筛选等等操作，最后再次分页，拿到里面第100页的数据。\n\n你翻页的时候，翻的越深，每个shard返回的数据就越多，而且协调节点处理的时间越长。非常坑爹。所以用es做分页的时候，你会发现越翻到后面，就越是慢。\n\n我们之前也是遇到过这个问题，用es作分页，前几页就几十毫秒，翻到10页之后，几十页的时候，基本上就要5~10秒才能查出来一页数据了\n\n1）不允许深度分页/默认深度分页性能很惨\n\n你系统不允许他翻那么深的页，pm，默认翻的越深，性能就越差\n\n2）类似于app里的推荐商品不断下拉出来一页一页的\n\n类似于微博中，下拉刷微博，刷出来一页一页的，你可以用scroll api，自己百度\n\nscroll会一次性给你生成所有数据的一个快照，然后每次翻页就是通过游标移动，获取下一页下一页这样子，性能会比上面说的那种分页性能也高很多很多\n\n针对这个问题，你可以考虑用scroll来进行处理，scroll的原理实际上是保留一个数据快照，然后在一定时间内，你如果不断的滑动往后翻页的时候，类似于你现在在浏览微博，不断往下刷新翻页。那么就用scroll不断通过游标获取下一页数据，这个性能是很高的，比es实际翻页要好的多的多。\n\n但是唯一的一点就是，这个适合于那种类似微博下拉翻页的，不能随意跳到任何一页的场景。同时这个scroll是要保留一段时间内的数据快照的，你需要确保用户不会持续不断翻页翻几个小时。\n\n无论翻多少页，性能基本上都是毫秒级的\n\n因为scroll api是只能一页一页往后翻的，是不能说，先进入第10页，然后去120页，回到58页，不能随意乱跳页。所以现在很多产品，都是不允许你随意翻页的，app，也有一些网站，做的就是你只能往下拉，一页一页的翻","filterContent":null,"type":"java-elasticsearch","status":0,"createTime":"2021-05-26 01:04:51","updateTime":"2021-05-26 01:04:51","isExist":null},{"id":3433,"question":"】Hashmap如何扩容？1.单线程创建一个新的map，是原先map的两倍      2.复制旧的map到新的map","simplecontent":null,"content":" 《1.单线程创建一个新的map，是原先map的两倍      \n2.复制旧的map到新的map》","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3434,"question":"】为什么当链表长度为8的时候才做转换？查询时间成本和生成树的时间成本对比","simplecontent":null,"content":"因为Map中桶的元素初始化是链表保存的，其查找性能是O(n)，而树结构能将查找性能提升到O(log(n))。当链表长度很小的时候，即使遍历，速度也非常快，但是当链表长度不断变长，肯定会对查询性能有一定的影响，所以才需要转成树。至于为什么阈值是8，我想，去源码中找寻答案应该是最可靠的途径。\n\n红黑树的平均查找长度是log(n)，如果长度为8，平均查找长度为log(8)=3，链表的平均查找长度为n/2，当长度为8时，平均查找长度为8/2=4，这才有转换成树的必要；链表长度如果是小于等于6，6/2=3，而log(6)=2.6，虽然速度也很快的，但是转化为树结构和生成树的时间并不会太短。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3435,"question":"】ConcurrentHashMap 和 Hashtable 区别？数据量大Hashtable 性能下降，Concurrent是链表首字节的同步锁和cas乐观锁，上锁的时间短","simplecontent":null,"content":"它们都可以用于多线程的环境，但是当Hashtable的大小增加到一定的时候，性能会急剧下降，因为迭代时需要被锁定很长的时间。\n因为ConcurrentHashMap引入了分割(segmentation)，不论它变得多么大，仅仅需要锁定map的某个部分，而其它的线程不需要等到迭代完成才能访问map。简而言之，在迭代的过程中，ConcurrentHashMap仅仅锁定map的某个部分，而Hashtable则会锁定整个map。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3436,"question":"】Hashmap扩容机制是什么？添加元素元素个数>=阈值,且发生哈希冲突","simplecontent":null,"content":"hashMap的数组长度一定保持2的次幂，比如16的二进制表示为 10000，那么length-1就是15，二进制为01111，同理扩容后的数组长度为32，二进制表示为100000，length-1为31，二进制表示为011111。从下图可以我们也能看到这样会保证低位全为1，而扩容后只有一位差异，也就是多出了最左位的1，这样在通过 h&(length-1)的时候，只要h对应的最左边的那一个差异位为0，就能保证得到的新的数组索引和老数组索引一致(大大减少了之前已经散列良好的老数组的数据位置重新调换)，个人理解。\n初始默认的容量为16\n添加元素会判断当前容器的元素个数，》=阈值\n（当前数组的长度16乘以加载因子0.75的值）  扩容为2倍\n16-32-64","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3437,"question":"】什么是哈希冲突？数组位置有2个，可能key不等，但是哈希值相等","simplecontent":null,"content":"数组位置有2个，可能key不等，但是哈希值相等","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3438,"question":" 】扩容必须满足两个条件？大于阈值、发生hash碰撞","simplecontent":null,"content":"存放新值的时候当前已有元素必须大于阈值；\n存放新值的时候当前存放数据发生hash碰撞（当前key计算的hash值计算出的数组索引位置已经存在值）\n HashMap在添加值的时候，它默认能存储16个键值对，直到你使用这个HashMap时，它才会给HashMap分配16个键值对的存储空间，（负载因子为0.75,阈值为12），当16个键值对已经存储满了，我们在添加第17个键值对的时候才会发生扩容现象，因为前16个值，每个值在底层数组中分别占据一个位置，并没有发生hash碰撞。\nHashMap最多存储多少个元素才扩容\n也有可能存储更多的键值对，最多可以存储26个键值对，我们来算一下：存储的前11个值全部发生hash碰撞，存到数组的同一个位置中，（这时元素个数小于阈值12，不会扩容），之后存入15个值全部分散到数组剩下的15个位置中，（这时元素个数大于等于阈值，但是每次存入元素并没有发生hash碰撞，不会扩容），11+15=26，当我们存入第27个值得时候满足以上两个条件，HashMap才会发生扩容；","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3439,"question":"】Hashmap最多发生么多少才哈希冲突?11+15=26","simplecontent":null,"content":"《11+15=26》","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3440,"question":"】Hashmap结构？数组+链表+红黑树","simplecontent":null,"content":"《数组+链表+红黑树》\n新建一个HashMap的时候，就会初始化一个数组。Entry就是数组中的元素，每个Entry其实就是一个key-value的键值对，它持有一个指向下一个元素的引用，这就构成了链表，HashMap底层将key-value当成一个整体来处理，这个整体就是一个Entry对象。HashMap底层采用一个Entry数组来保存所有的key-value键值对，当需要存储一个Entry对象时，会根据hash算法来决定在其数组中的位置，在根据equals方法决定其在该数组位置上的链表中的存储位置；当需要取出一个Entry对象时，也会根据hash算法找到其在数组中的存储位置， 在根据equals方法从该位置上的链表中取出Entry;\n\n遍历table[i] ,判断链表长度是否大于8，大于8的话把链表转换成红黑树，进行插入操作，否则进行链表插入操作；便利时遇到相同key直接覆盖value；","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3441,"question":"】Hashmap如何获取元素?指定key通过hash函数得到key的hash值","simplecontent":null,"content":"《指定key通过hash函数得到key的hash值》\n调用内部方法getNode（），得到桶号（一般为hash值对桶数求摸）；\n比较桶的内部元素是否和key相等，如不相等，则没有找到，相等，则取出相等记录的value；\n如果得到key所在桶的头结点恰好是红黑树节点，就调用红黑树节点的getTreeNode（）方法，否则就遍历链表节点。getTreeNode（）方法通过调用树形节点的find（）方法进行查找。由于之前添加时已经保证这个树是有序的，因此查找时基本就是折半查找，效率高；\n如果对比节点的哈希值和要查找的哈希值相等，就会判断key是否相等，相等就直接返回；不相等就从子树中递归查找；","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3442,"question":"】Hashmap存储数据方法？put","simplecontent":null,"content":"  put：（key-value）方法是HashMap中最重要的方法，使用HashMap最主要使用的就是put，get两个方法。\n\n判断键值对数组table[i]是否为空或者为null，否则执行resize（）进行扩容；\n根据键值key计算hash值得到插入的数组索引  i  ,如果table[i] == null ，直接新建节点添加即可，转入6，如果table[i] 不为空，则转向3；\n判断table[i] 的首个元素是否和key一样，如果相同（hashCode和equals）直接覆盖value，否则转向4；\n判断table[i] 是否为treeNode，即table[i]是否为红黑树，如果是红黑树，则直接插入键值对，否则转向5；\n遍历table[i] ,判断链表长度是否大于8，大于8的话把链表转换成红黑树，进行插入操作，否则进行链表插入操作；便利时遇到相同key直接覆盖value；\n插入成功后，判断实际存在的键值对数量size是否超过了threshold，如果超过，则扩容；\n\nhttps://www.baidu.com/link?url=1t-Vmf01ZOTg5847ofAgsAsuaEupksq1ZG8DiYNX0OQPSf3-4OS_Vf5LuWbDL0bqmfoaUUsDn6aWQpbWe6e_m6BhRVFip2SHxQCq2eKiBwO&wd=&eqid=efca75400004f364000000055e8838a4","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:48","updateTime":"2021-05-26 01:03:48","isExist":null},{"id":3416,"question":"】迭代器 Iterator 是什么？遍历元素","simplecontent":null,"content":"《遍历元素》\nIterator 接口提供遍历任何 Collection 的接口。我们可以从一个 Collection 中使用迭代器方法来获取迭代器实例。迭代器取代了 Java 集合框架中的 Enumeration，迭代器允许调用者在迭代过程中移除元素。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3417,"question":"】Iterator 使用哪些方法？ list. Iterator()、it.hasNext()、it. next()","simplecontent":null,"content":"《 list. Iterator()、it.hasNext()、it. next()》\nIterator 使用代码如下：\nList<String> list = new ArrayList<>();\nIterator<String> it = list. iterator();\nwhile(it. hasNext()){\n  String obj = it. next();\n  System. out. println(obj);\n}\nIterator 的特点是更加安全，因为它可以确保，在当前遍历的集合元素被更改的时候，就会抛出 ConcurrentModificationException 异常。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3418,"question":"】迭代器可以修改数据吗？可以","simplecontent":null,"content":"可以","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3419,"question":"】For和迭代器哪个可以移除数据？For不可以，因为使用移除，i只能取到减少后的size大小，而迭代器的it.remove不会改变size大小","simplecontent":null,"content":"《For不可以，因为使用移除，i只能取到减少后的size大小，而迭代器的it.remove不会改变size大小》\n\n《在迭代器方法使用迭代后去删除可以修改成功，但是使用集合去添加或者删除就报错》\n对集合进行迭代器遍历的时候，调用hashNext(),查看下一个元素的索引是否和集合的大小相等，相等表示已经到了集合的末尾，不存在下一个元素返回false；调用next（）方法会先调用checkForComodification（）方法来确保对集合修改次数一致，不一致抛异常，如果此时我们调用集合的remove（int index）,就会去修改modCount 字段的次数，等下次再调用迭代器的next（）方法的时候，值就会不一致 ，出现异常。同时，从逻辑的角度上来说，当我们对集合进行迭代的时候，如果对集合进行结构上的修改，直接会影响迭代器的遍历，产生不可预知的结果，所以在迭代器进行遍历的时候集合是不能对集合自身进行修改的。\n @Test\n    public void  test_Iterator() {\n        List<String> list = new ArrayList<>();\n        list.add(\"唐三藏\");\n        list.add(\"孙悟空\");\n        list.add(\"猪八戒\");\n        list.add(\"沙和尚\");\n        list.add(\"白龙马\");\n        for(Iterator<String> iter = list.iterator();iter.hasNext();{\n            if(\"猪八戒\".equals(iter.next())) {\n                list.add(\"高小姐\");\n或list.remove(str);  \n\n            }\n        }\n}\n\n\n for(Iterator<String> iter = list.iterator();iter.hasNext();{\n    if(\"猪八戒\".equals(iter.next())) {\niter.remove(str);  \n    }\n }\n这样正常删除了\n\n没有添加功能\n\n测试结果：java.util.ConcurrentModificationException\n\nList<String> all=  new ArrayList<String>() ;    //\nall.add(\"hello\") ;\nall.add(\"_\") ;\nall.add(\"world\") ;\nIterator<String> iter = all.iterator() ;   // 为Iterator接口实例化\nwhile(iter.hasNext()){ // 判断是否有内容\n    String str = iter.next() ;\n    if(\"_\".equals(str)){\n        iter.remove() ;    // 删除元素    all.remove()是错误的！！！\n    }else{\n        System.out.println(str) ;  // 输出内容\n    }\n}\nSystem.out.println(\"删除之后的集合：\" + all) ;\n这个执行也是正确的\n\n————————————————\n版权声明：本文为CSDN博主「医药小白鼠」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/wangheng_2017/article/details/81236761","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3420,"question":"】迭代器和for循环产出数据区别？For删除不是这个值，而是下面索引值，再一次查询索引值会重新调整","simplecontent":null,"content":"public static void main(String[] args) {\n    List<String> str = new ArrayList<>();\n    str.add(\"11\");\n    str.add(\"22\");\n    str.add(\"33\");\n    str.add(\"44\");\n    str.add(\"55\");\n    for (int i = 0; i <str.size() ; i++) {\n        System.out.println(\"---\"+str.get(i));\n        if(i==2){\n            str.remove(\"33\");\n        }\n        System.out.println(str.get(i));\n    }\n\n    for (int i = 0; i <str.size() ; i++) {\n        System.out.println(\"===\"+str.get(i));\n    }\n}\n---11\n11\n---22\n22\n---33\n44\n---55\n55\n===11\n===22\n===44\n===55\n\n比如你要遍历一知个集合，当满足某条件时候，删除一个元素，\n如果用的是for循环，就用集合自带的remove(),而这样就改道变了集合的Size（）循环的时候会出错但如果把集合放入迭代回器答，既iterator\n迭代可以遍历并选择集合中的每个对象而不改变集合的结构，而把集合放入迭代器，用迭代器的remove（）就不会出现问题\n\n迭代器是一种模式、详细可见其设计模式，可以使得序列类型的数据结构的遍历行为与被遍历的对象分离，即我们无需关心该序列的底层结构是什么样子的。只要拿到这个对象,使用迭代器就可以遍历这个对象的内部。\n\n  Java集合中保存的元素实质是对象的引用，而非对象本身。\n        迭代出的对象也是引用的拷贝，结果还是引用。那么如果集合中保存的元素是可变类型的，那么可以通过迭代出的元素修改原集合中的对象。\n 采用ArrayList对随机访问比较快，而for循环中的get()方法，采用的即是随机访问的方法，因此在ArrayList里，for循环较快\n\n        采用LinkedList则是顺序访问比较快，iterator中的next()方法，采用的即是顺序访问的方法，因此在LinkedList里，使用iterator较快\n\n从数据结构角度分析,for循环适合访问顺序结构,可以根据下标快速获取指定元素.而Iterator 适合访问链式结构,因为迭代器是通过next()和Pre()来定位的.可以访问没有顺序的集合.\n\n        而使用 Iterator 的好处在于可以使用相同方式去遍历集合中元素，而不用考虑集合类的内部实现（只要它实现了 java.lang.Iterable 接口），如果使用 Iterator 来遍历集合中元素，一旦不再使用 List 转而使用 Set 来组织数据，那遍历元素的代码不用做任何修改，如果使用 for 来遍历，那所有遍历此集合的算法都得做相应调整,因为List有序,Set无序,结构不同,他们的访问算法也不一样.","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3421,"question":"为什么list.Remove会异常?","simplecontent":null,"content":"(数据结构中应该算是双向链表吧（双向还是单向不太清楚））\n//从链表中取东西，用到了迭代器\n（数组遍历和集合遍历是不同的，集合是容器，数组是模具，你也可以将集合用一个数组储存，再用数组遍历，但是这样不如迭代器来的更方便）","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3422,"question":"Set是什么结构?","simplecontent":null,"content":"set结构似于数组，但是成员的值都是唯一的，没有重复的值。\n参数可以是数组，类似数组的对象，字符串。\neg:   new Set([1, 2, 3, 4, 4]) ;     new Set(document.querySelectorAll('div'));  new Set(‘abbc’) ;  ","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3423,"question":"】为什么set是无序的？底层是hashmap一样","simplecontent":null,"content":"Set : 无序不可重\n其实，有序或无序是指是否按照其添加的顺序来存储对象。List 是按照元素的添加顺序来存储的。而 Set 的实现类都有一套自己的排序算法，每添加一个元素，都会按照其内部算法将元素添加到合适的位置，所以不能保证内部存储是按元素添加的顺序而存储的。\n\nTreeSet底层应该是由TreeMap来实现的，它里面的对象通过compare方法的结果来决定其顺序。\n\nHashSet集合的元素为什么是无序的，是如何实现元素无序的。\n因为set集合底层是基于哈希表存储的。\njdk1.8之前，哈希表是由：数组和链表组成的，\njdk1.8之后，哈希表是由：数组+链表+排序二叉树组成\nJDK 1.8之后，如果链表的长度超过或者等于了阈值（7）的时候会自动转成红黑树，性能进一步提高了","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3424,"question":"】Set为什么不能使用for？没有顺序","simplecontent":null,"content":"没有顺序","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3425,"question":"】Set为什么使用迭代器？Set不是数组结构，是无序的，使用for无法循环","simplecontent":null,"content":"Set不是数组结构，是无序的，使用for无法循环","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3426,"question":"迭代器特点?","simplecontent":null,"content":"迭代器是集合内部类，可用通过list.iterator调用hashnext判断，next下一个，remove遍历集合数据","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3427,"question":"迭代器如何添加元素?","simplecontent":null,"content":"List<String> all=  new ArrayList<String>() ;    //\nall.add(\"hello\") ;\nall.add(\"_\") ;\nall.add(\"world\") ;\nListIterator in = all.listIterator();\nwhile(in.hasNext()){   // 判断是否有内容\n    Object obj = in.next();\n    if(\"_\".equals(obj)){\n        in.remove() ;  // 删除元素    all.remove()是错误的！！！\n        in.add(\"new\");\n    }else{\n        System.out.println(obj) ;  // 输出内容\n    }\n}\nSystem.out.println(\"删除之后的集合：\" + all) ;\n正确执行\nhello\nworld\n删除之后的集合：[hello, new, world]","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3428,"question":"】Iterator 和 ListIterator 有什么区别？单向双向，遍历Set与List和只能遍历 List","simplecontent":null,"content":"《单向双向，遍历Set与List和只能遍历 List》\nIterator 可以遍历 Set 和 List 集合，而 ListIterator 只能遍历 List。\nIterator 只能单向遍历，而 ListIterator 可以双向遍历（向前/后遍历）。\nListIterator 从 Iterator 接口继承，然后添加了一些额外的功能，比如添加一个元素、替换一个元素、获取前面或后面元素的索引位置。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3429,"question":"怎么确保一个集合不能被修改？","simplecontent":null,"content":"可以使用 Collections. unmodifiableCollection(Collection c) 方法来创建一个只读集合，这样改变集合的任何操作都会抛出 Java. lang. UnsupportedOperationException 异常。\n示例代码如下：\nList<String> list = new ArrayList<>();\nlist. add(\"x\");\nCollection<String> clist = Collections. unmodifiableCollection(list);\nclist. add(\"y\"); // 运行时此行报错\nSystem. out. println(list. size());","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3430,"question":"】hashmap链表什么时候转红黑树?发生哈希冲突、数组元素个数大于64、链表长度大于8个","simplecontent":null,"content":"《发生哈希冲突、数组元素个数大于64、链表长度大于8个》\nHashMap处理“碰撞”增加了红黑树这种数据结构，当碰撞结点较少时，采用链表存储，当较大时（>8个），且数组元素个数大于64时，采用红黑树（特点是查询时间是O（logn））存储（有一个阀值控制，大于阀值(8个)，将链表存储转换成红黑树存储）","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3431,"question":"】Hashmap红黑树什么时候转链表？当红黑树元素个数小于6的时候，就会转换回链表","simplecontent":null,"content":"《当红黑树元素个数小于6的时候，就会转换回链表>\n1、调用map的remove方法删除元素\nhashMap的remove方法，会进入到removeNode方法，找到要删除的节点，并判断node类型是否为treeNode，然后进入删除红黑树节点逻辑的removeTreeNode方法中，该方法有关解除红黑树结构的分支如下：\n2、resize的时候，对红黑树进行了拆分\nresize的时候，判断节点类型，如果是链表，则将链表拆分，如果是TreeNode，则执行TreeNode的split方法分割红黑树，而split方法中将红黑树转换为链表的分支如下：\n这里才用到了 UNTREEIFY_THRESHOLD 的判断，当红黑树节点元素小于等于6时，才调用untreeify方法转换回链表\n总结\n1、hashMap并不是在链表元素个数大于8就一定会转换为红黑树，而是先考虑扩容，扩容达到默认限制后才转换\n2、hashMap的红黑树不一定小于6的时候才会转换为链表，而是只有在resize的时候才会根据 UNTREEIFY_THRESHOLD 进行转换。（原因？不太明白hhh）","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3432,"question":"】什么情况会导致扩容？发生哈希冲突、大于阈值 16*0.75=12","simplecontent":null,"content":"  《发生哈希冲突、大于阈值 16*0.75=12》\n    1.链表转换为红黑树时(链表节点个数达到8个可能会转换为红黑树)。如果转换时map长度小于64则直接扩容一倍，不转化为红黑树。如果此时map长度大于64，则不会扩容，直接进行链表转红黑树的操作。\n      2.map中总节点数大于阈值(即大于map长度的0.75倍)时会进行扩容。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:47","updateTime":"2021-05-26 01:03:47","isExist":null},{"id":3399,"question":"】map的实现类有哪些？HashMap 、HashTable和TreeMap","simplecontent":null,"content":"Map接口的实现类主要有HashMap 、HashTable和TreeMap；\n当元素的顺序很重要时选用TreeMap，当元素不必以特定的顺序进行存储时，使用HashMap。HashMap不是同步的，Hashtable是同步的，但Hashtable不推荐使用，因为HashMap提供了所有类似的功能，并且速度更快。当需要在多线程环境下使用时，HashMap也可以转换为同步的。HashMap没法保证映射的顺序一直不变，但是作为HashMap的子类LinkedHashMap可以。\nHashMap可以通过Map m = Collections.synchronizedMap（hashMap）来达到同步的效果。\n】HashMap 和 Hashtable 有什么区别？Hashtable是线程安全，Hashtable不允许null，hashmap允许null\n《Hashtable是线程安全，Hashtable不允许null，hashmap允许null》\n存储：HashMap 运行 key 和 value 为 null，而 Hashtable 不允许。\n线程安全：Hashtable 是线程安全的，而 HashMap 是非线程安全的。\n推荐使用：在 Hashtable 的类注释可以看到，Hashtable 是保留类不建议使用，推荐在单线程环境下使用 HashMap 替代，如果需要多线程使用则用 ConcurrentHashMap 替代。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3400,"question":"如何决定使用 HashMap 还是 TreeMap？","simplecontent":null,"content":"对于在 Map 中插入、删除、定位一个元素这类操作，HashMap 是最好的选择，因为相对而言 HashMap 的插入会更快，但如果你要对一个 key 集合进行有序的遍历，那 TreeMap 是更好的选择。\nHashMap 是数组链表结构、而treemap是树结构插入会慢","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3401,"question":"h】HashMap 的实现原理？","simplecontent":null,"content":"HashMap 基于 Hash 算法实现的，我们通过 put(key,value)存储，get(key)来获取。当传入 key 时，HashMap 会根据 key. hashCode() 计算出 hash 值，根据 hash 值将 value 保存在 bucket 里。当计算出的 hash 值相同时，我们称之为 hash 冲突，HashMap 的做法是用链表和红黑树存储相同 hash 值的 value。当 hash 冲突的个数比较少时，使用链表否则使用红黑树。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3402,"question":"】HashSet 的实现原理？跟hashmap一样，但是不允许重复的值","simplecontent":null,"content":"HashSet 是基于 HashMap 实现的，HashSet 底层使用 HashMap 来保存所有元素，因此 HashSet 的实现比较简单，相关 HashSet 的操作，基本上都是直接调用底层 HashMap 的相关方法来完成，HashSet 不允许重复的值。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3403,"question":"ConcurrentHashMap使用原理?","simplecontent":null,"content":"1、工作机制（分片思想）：它引入了一个“分段锁”的概念，具体可以理解为把一个大的Map拆分成N个小的segment，根据key.hashCode()\n来决定把key放到哪个HashTable中。可以提供相同的线程安全，但是效率提升N倍，默认提升16倍。\n2、应用：当读>写时使用，适合做缓存，在程序启动时初始化，之后可以被多个线程访问；\n3、hash冲突：\n1、简介：HashMap中调用hashCode()方法来计算hashCode。由于在Java中两个不同的对象可能有一样的hashCode,所以不同的键可    能有一样hashCode，从而导致冲突的产生。\n2、hash冲突解决：使用平衡树来代替链表，当同一hash中的元素数量超过特定的值便会由链表切换到平衡树\n4、无锁读：ConcurrentHashMap之所以有较好的并发性是因为ConcurrentHashMap是无锁读和加锁写，并且利用了分段锁（不是在所有的\nentry上加锁，而是在一部分entry上加锁）；\n读之前会先判断count(jdk1.6)，其中的count是被volatile修饰的(当变量被volatile修饰后，每次更改该变量的时候会将更改结果写到            系统主内存中，利用多处理器的缓存一致性，其他处理器会发现自⼰己的缓存行对应的内存地址被修改，就会将自⼰己处理器的缓存行设置为失效，并强制                从系统主内存获取最新的数据。)，故可以实现无锁读。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3404,"question":"】jdk1.7的Currenthashmap 的扩容机制？新数组长度扩大一倍、数组元素迁移到新数组","simplecontent":null,"content":"《新数组长度扩大一倍、数组元素迁移到新数组》\nJDK1.7：\n先对数组的长度增加一倍，然后遍历原来的旧的 table 数组，把每一个数组元素也就是 Node 链表迁移到新的数组里面，最后迁移完毕之后，把新数组的引用直接替换旧的。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3405,"question":"】jdk1.8的Currenthashmap 的扩容机制?多个线程同时帮助扩容，加速数据转移过程","simplecontent":null,"content":"《多个线程同时帮助扩容，加速数据转移过程》\nJDK1.8：\n扩容时候会判断这个值，如果超过阈值就要扩容，首先根据运算得到需要遍历的次数\ni，然后利用 tabAt 方法获得 i 位置的元素 f，初始化一个 forwardNode 实例 fwd， 如果 f == null，则在 table 中的 i 位置放入 fwd，否则采用头插法的方式把当前旧\ntable 数组的指定任务范围的数据给迁移到新的数组中，然后 给旧 table 原位置赋值\nfwd。直到遍历过所有的节点以后就完成了复制工作，把 table 指向 nextTable，并更新 sizeCtl 为新数组大小的 0.75 倍 ，扩容完成。在此期间如果其他线程的有读写操作都会判断 head 节点是否为 forwardNode 节点，如果是就帮助扩容。\n参考文章：https://blog.csdn.net/axibaaa/article/details/97109455\n\nConcurrentHashMap是JDK提供的一种线程安全的HashMap实现，JDK1.8对ConcurrentHashMap进行了大量优化，除了增加了函数式编程特性，还对加锁方式进行了优化，它抛弃了JDK1.6中分段锁的设计，而是直接对Map中Table数组的每个节点进行加锁，进一步减少了锁粒度，并且不再采用ReentrantLock加锁 ，直接使用synchronized同步块（JDK1.6开始已经对synchronized 做了大量优化，加入了自旋锁、偏向锁、轻量级锁、重量级锁等）。\n为了提高查询效率，采用了数组+链表+红黑树的设计，当链表中的元素个数大于64，且数组中链表节点长度大于8，则会自动把链表转化为红黑树，当两个条件有一个不满足时，会回退到数组+单链表的数据结构。\n在JDK1.8的实现中，还实现了并发扩容机制，也就是可以由多个线程同时帮助扩容，加速数据转移过程，极大提升了效率，本文尝试着把这个扩容过程解释清楚。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3406,"question":"】解决map的并发问题方案？使用hashtable、ConcurrentHashMa","simplecontent":null,"content":"《使用hashtable、ConcurrentHashMap》\nHashMap不是线程安全的；Hashtable线程安全，但效率低，因为是Hashtable是使用synchronized的，所有线程竞争同一把锁；而ConcurrentHashMap不仅线程安全而且效率高，因为它包含一个segment数组，将数据分段存储，给每一段数据配一把锁，也就是所谓的锁分段技  术。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3407,"question":"】ArrayList 和 LinkedList 的区别是什么？数组、双向链表、查询快、插入和删除快","simplecontent":null,"content":"数据结构实现：ArrayList 是动态数组的数据结构实现，而 LinkedList 是双向链表的数据结构实现。\n随机访问效率：ArrayList 比 LinkedList 在随机访问的时候效率要高，因为 LinkedList 是线性的数据存储方式，所以需要移动指针从前往后依次查找。\n增加和删除效率：在非首尾的增加和删除操作，LinkedList 要比 ArrayList 效率要高，因为 ArrayList 增删操作要影响数组内的其他数据的下标。\n综合来说，在需要频繁读取集合中的元素时，更推荐使用 ArrayList，而在插入和删除操作较多时，更推荐使用 LinkedList。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3408,"question":"如何实现数组和 List 之间的转换？","simplecontent":null,"content":"数组转 List：使用 Arrays. asList(array) 进行转换。\nList 转数组：使用 List 自带的 toArray() 方法。\n代码示例：\n// list to array\nList<String> list = new ArrayList<String>();\nlist. add(\"王磊\");\nlist. add(\"的博客\");\nlist. toArray();// array to list\nString[] array = new String[]{\"王磊\",\"的博客\"};\nArrays. asList(array);","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3409,"question":"】ArrayList 和 Vector 的区别是什么？不安全、安全、扩容不同","simplecontent":null,"content":"线程安全：Vector 使用了 Synchronized 来实现线程同步，是线程安全的，而 ArrayList 是非线程安全的。\n性能：ArrayList 在性能方面要优于 Vector。\n扩容：ArrayList 和 Vector 都会根据实际的需要动态的调整容量，只不过在 Vector 扩容每次会增加 1 倍，而 ArrayList 只会增加 50%。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3410,"question":"Arraylist和 Vector 的扩容机制?","simplecontent":null,"content":"默认为10，按照1.5倍增长；之后扩容会按照1.5倍增长（10、15、22、、、）","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3411,"question":"】Vector 容量是多少？10","simplecontent":null,"content":"10","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3412,"question":"】Vector 扩容公式是什么？2*n","simplecontent":null,"content":"2*n\nVector的初始大小为10，如果没有指定每次增长的大小，则默认是翻倍增长。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3413,"question":"】Array 和 ArrayList 有何区别？Array存储对象和基本类型、固定大小；arraylist存数是对象、不固定大小","simplecontent":null,"content":"Array 可以存储基本数据类型和对象，ArrayList 只能存储对象。\nArray 是指定固定大小的，而 ArrayList 大小是自动扩展的。\nArray 内置方法没有 ArrayList 多，比如 addAll、removeAll、iteration 等方法只有 ArrayList 有。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3414,"question":"】在 Queue 中 poll()和 remove()有什么区别？相同点：删除元素；不同点：没有元素返回null、没有元素抛出异常","simplecontent":null,"content":"《相同点：删除元素；不同点：没有元素返回null、没有元素抛出异常》\n相同点：都是返回第一个元素，并在队列中删除返回的对象。\n不同点：如果没有元素 poll()会返回 null，而 remove()会直接抛出 NoSuchElementException 异常。\n代码示例：\nQueue<String> queue = new LinkedList<String>();\nqueue. offer(\"string\"); // add\nSystem. out. println(queue. poll());\nSystem. out. println(queue. remove());\nSystem. out. println(queue. size());","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3415,"question":"】哪些集合类是线程安全的？Vector、Hashtable、Stack、concurentHashMap","simplecontent":null,"content":"《Vector、Hashtable、Stack、concurentHashMap》\nVector、Hashtable、Stack、concurentHashMap 都是线程安全的，而像 HashMap 则是非线程安全的，不过在 JDK 1.5 之后随着 Java. util. concurrent 并发包的出现，它们也有了自己对应的线程安全类，比如 HashMap 对应的线程安全类就是 ConcurrentHashMap。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:46","updateTime":"2021-05-26 01:03:46","isExist":null},{"id":3377,"question":"】TreeSet 对存入对数据有什么要求呢？排序、唯一无null","simplecontent":null,"content":"TreeSet集合是用来对象元素进行排序的,同样他也可以保证元素的唯一","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3378,"question":"】hashtable可以存放null吗？不可以、多线程无法区分是0位置的null还是没有值","simplecontent":null,"content":"HashMap在put的时候会调用hash()方法来计算key的hashcode值，可以从hash算法中看出当key==null时返回的值为0。因此key为null时，hash算法返回值为0，不会调用key的hashcode方法。\n当Hashtable存入的value为null时，抛出NullPointerException异常。如果value不为null，而key为空，在执行到int  hash = key.hashCode()时同样会抛出NullPointerException异常","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3379,"question":"】为什么Hashtable ConcurrentHashmap不支持key或者value为null？Key无法区分是0还是没有设置、而value要调用contain判断不能保证原子性","simplecontent":null,"content":"ConcurrentHashmap和Hashtable都是支持并发的，这样会有一个问题，当你通过get(k)获取对应的value时，如果获取到的是null时，你无法判断，它是put（k,v）的时候value为null，还是这个key从来没有做过映射。HashMap是非并发的，可以通过contains(key)来做这个判断。而支持并发的Map在调用m.contains（key）和m.get(key),m可能已经不同了。对于单线程来讲，这个问题是可以解决的，通过map.contains(key)就可以判断，但是对于多线程来讲，要解决这个问题就很复杂了，必须由外部保证contains 与 get操作的原子性，正是出于对这个问题考虑，所以不允许value为null；（实际上HashTable中并没有提供contains方法，也是因为这个原因）","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3380,"question":"】为什么key也不能是null呢？Null不是对象不能调用equals或.hashCode判断哈希值","simplecontent":null,"content":"由于null不是对象，因此不能在其上调用.equals（）或.hashCode（），因此Hashtable无法将其计算哈希值以用作键。但是HashMap对此做了特殊处理；","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3381,"question":"】hashmap put 方法存放的时候怎么判断是否是重复的？hashCode()和equals()","simplecontent":null,"content":"先比较key的hashCode，再比较相等或equals的，所以重写hashCode()和equals()方法即可实现添加重复元素。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3382,"question":"Hashtable和hashmap初始容量是多少，如何扩容?","simplecontent":null,"content":"区别：Hashtable是线程安全的，效率比较低\nHashtable既不支持Null key也不支持Null value。Hashtable的put()方法的注释中有说明\nHashtable默认的初始大小为11，之后每次扩充，容量变为原来的2n+1。\nHashMap默认的初始化大小为16。之后每次扩充，容量变为原来的2倍\nHashtable在计算元素的位置时需要进行一次除法运算，而除法运算是比较耗时的\nHashMap为了提高计算效率，将哈希表的大小固定为了2的幂，这样在取模预算时，不需要做除法，只需要做位运算。位运算比除法的效率要高很多。\nHashMap是继承自AbstractMap类，而HashTable是继承自Dictionary类。不过它们都实现了同时实现了map、Cloneable（可复制）、Serializable（可序列化）这三个接口\n\nconcurrent包下有哪些常用类？\n1.CountDownLatch:api解释：⼀一个同步辅助类，在完成⼀一组正在其他线程中执行的操作之前，它允许⼀一个或多个线程⼀一直等待。 个⼈人理解是CountDownLatch让可以让⼀一组线程同时执行，然后在这组线程全部执行完前，可以让另⼀一个线程等待。\n2.ReentrantLock：可重入互斥锁\n3.Condition：此类是同步的条件对象，每个Condition实例绑定到⼀一个ReetrantLock中，以便争用同⼀一个锁的多线程之间可以通过Condition的状态来获取通知。\n注意：使用Condition前，⾸首先要获得ReentantLock，当条件不满⾜足线程1等待时，ReentrantLock会被释放，以能让其他线程争\n用，其他线程获得reentrantLock，然后满⾜足条件，唤醒线程1继续执行。\n\n红黑树左旋与右旋的区别？\n当在对红黑树进行插入和删除等操作时，对树做了修改可能会破坏红黑树的性质。为了继续保持红黑树的性质，可以通过对结点 进行重新着⾊色，以及对树进行相关的旋转操作，即通过修改树中某些结点的颜⾊色及指针结构，来达到对红黑树进行插入或删除结点等操作        后继续保持它的性质或平衡的目的。\n树的旋转分为左旋和右旋，下面借助图来介绍⼀一下左旋和右旋这两种操作。\n1.左旋\n\n\n如上图所示，当在某个结点pivot上，做左旋操作时，我们假设它的右孩子y不是NIL[T]，pivot可以为任何不是NIL[T]的左子结      点。左旋以pivot到Y之间的链为“⽀支轴”进行，它使Y成为该子树的新根，而Y的左孩子b则成为pivot的右孩子。\n\n\n\n2.右旋\n右旋与左旋差不多，再此不做详细介绍。\n\n树在经过左旋右旋之后，树的搜索性质保持不变，但树的红黑性质则被破坏了，所以，红黑树插入和删除数据后，需要利用旋转     与颜⾊色重涂来重新恢复树的红黑性质。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3383,"question":"】HashMap 对于key是null值的存储？没有hashcode，放在数组位置0的链表标头","simplecontent":null,"content":"《没有hashcode，放在数组位置0的链表标头》\nHashMap 允许插入键为 null 的键值对。但是因为无法调用 null 的 hashCode() 方法，也就无法确定该键值对的桶下标，只能通过强制指定一个桶下标来存放。HashMap 使用第 0 个桶存放键为 null 的键值对。\n\n当HashMap的put方法，第二个判断就是key为null的判断后进入putForNullKey(V value)这个方法\n可以看到，前面那个for循环，是在talbe[0]链表中查找key为null的元素，如果找到，则将value重新赋值给这个元素的value，并返回原来的value。\n如果上面for循环没找到则将这个元素添加到talbe[0]链表的表头。 \n————————————————\n版权声明：本文为CSDN博主「马丁半只瞄」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/fenglongmiao/article/details/79656198","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3384,"question":"】红黑树什么转回链表？小于6","simplecontent":null,"content":"小于6","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3385,"question":"】为什么不使用AVL树而使用红黑树？红黑树在插入删除更快，而AVL在查询更快","simplecontent":null,"content":"红黑树和AVL树都是最常用的平衡二叉搜索树，它们的查找、删除、修改都是O(lgn) time\nAVL树和红黑树有几点比较和区别：\n（1）AVL树是更加严格的平衡，因此可以提供更快的查找速度，一般读取查找密集型任务，适用AVL树。\n（2）红黑树更适合于插入修改密集型任务。\n（3）通常，AVL树的旋转比红黑树的旋转更加难以平衡和调试。\n总结：\n（1）AVL以及红黑树是高度平衡的树数据结构。它们非常相似，真正的区别在于在任何添加/删除操作时完成的旋转操作次数。\n（2）两种实现都缩放为a O(lg N)，其中N是叶子的数量，但实际上AVL树在查找密集型任务上更快：利用更好的平衡，树遍历平均更短。另一方面，插入和删除方面，AVL树速度较慢：需要更高的旋转次数才能在修改时正确地重新平衡数据结构。\n（3）在AVL树中，从根到任何叶子的最短路径和最长路径之间的差异最多为1。在红黑树中，差异可以是2倍。\n（4）两个都给O（log n）查找，但平衡AVL树可能需要O（log n）旋转，而红黑树将需要最多两次旋转使其达到平衡（尽管可能需要检查O（log n）节点以确定旋转的位置）。旋转本身是O（1）操作，因为你只是移动指针。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3386,"question":"】既然红黑树那么好，为啥hashmap不直接采用红黑树，而是当大于8个的时候才转换红黑树？查询成本","simplecontent":null,"content":"如果元素小于8个，查询成本高，新增成本低\n如果元素大于8个，查询成本低，新增成本高","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3387,"question":"】为什么索引不使用红黑树？不能范围查询、不支持排序、不支持组合索引、量大哈希冲突大","simplecontent":null,"content":"《不能范围查询、不支持排序、不支持组合索引、量大哈希冲突大》\n1、hash表只能匹配是否相等，不能实现范围查找\n2、当需要按照索引进行order by时，hash值没办法支持排序\n\n3、组合索引可以支持部分索引查询，如(a,b,c)的组合索引，查询中只用到了阿和b也可以查询的，如果使用hash表，组合索引会将几个字段合并hash，没办法支持部分索引\n4、当数据量很大时，hash冲突的概率也会非常大\n5、B+树作为索引时，非叶子节点只保存索引，叶子节点才会保存数据，这样方便扫库，只需要扫一遍叶子结点即可，但是B树因为其分支结点同样存储着数据，我们要找到具体的数据，需要进行一次中序遍历按序来扫，所以B+树更加适合在区间查询的情况，所以通常B+树用于数据库索引。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3388,"question":"】为什么不适用b数而使用b+树？b树不支持范围查询和排序查询","simplecontent":null,"content":"《b树不支持范围查询》\nB+树作为索引时，非叶子节点只保存索引，叶子节点才会保存数据，这样方便扫库，只需要扫一遍叶子结点即可，但是B树因为其分支结点同样存储着数据，我们要找到具体的数据，需要进行一次中序遍历按序来扫，所以B+树更加适合在区间查询的情况，所以通常B+树用于数据库索引。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3389,"question":"】MyISAM 和 InnoDB 索引的区别1？","simplecontent":null,"content":"同样也是一颗B+Tree，data域保存数据记录的地址。因此，MyISAM中索引检索的算法为首先按照B+Tree搜索算法搜索索引，如果指定的Key存在，则取出其data域的值，然后以data域的值为地址，读取相应数据记录。\nMyISAM的索引方式也叫做“非聚集”的，之所以这么称呼是为了与InnoDB的聚集索引区分。\n\n2 辅助索引\n  InnoDB的所有辅助索引都引用主键作为data域。下图为定义在Col3上的一个辅助索引\n\n因此InnoDB 的索引能提供一种非常快速的主键查找性能。不过，它的辅助索引也会包含主键列，所以如果主键定义的比较大，其他索引也将很大。InnoDB 不会压缩索引。\n聚集索引这种实现方式使得按主键的搜索十分高效，但是辅助索引搜索需要检索两遍索引：首先检索辅助索引获得主键，然后用主键到主索引中检索获得记录。\n不同存储引擎的索引实现方式对于正确使用和优化索引都非常有帮助，例如知道了InnoDB的索引实现后，就很容易明白为什么不建议使用过长的字段作为主键，因为所有辅助索引都引用主索引，过长的主索引会令辅助索引变得过大。再例如，用非单调的字段作为主键在InnoDB中不是个好主意，因为InnoDB数据文件本身是一颗B+Tree，非单调的主键会造成在插入新记录时数据文件为了维持B+Tree的特性而频繁的分裂调整，十分低效，而使用自增字段作为主键则是一个很好的选择。\n ","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3390,"question":"】MyISAM 和 InnoDB 索引的区别2？主索引和数据是否分开","simplecontent":null,"content":"1 存储结构（主索引／辅助索引）\nInnoDB的数据文件本身就是主索引文件。而MyISAM的主索引和数据是分开的。\nInnoDB的辅助索引data域存储相应记录主键的值而不是地址。而MyISAM的辅助索引和主索引没有多大区别。\ninnoDB是聚簇索引，数据挂在逐渐索引之下。\n2 锁\nMyISAM使用的是表锁\nInnoDB使用行锁\n3 事务\nMyISAM没有事务支持和MVCC\nInnoDB支持事务和MVCC\n4 全文索引\nMyISAM支持FULLTEXT类型的全文索引\nInnoDB不支持FULLTEXT类型的全文索引，但是InnoDB可以使用sphinx插件支持全文索引，并且效果更好\n5 主键\nMyISAM允许没有任何索引和主键的表存在，索引都是保存行的地址\nInnoDB如果没有设定主键或非空唯一索引，就会自动生成一个6字节的主键，数据是主索引的一部分，附加索引保存的是主索引的值\n6 外键\n MyISAM不支持\nInnoDB支持\n\n\n】mysql哪个版本哪个存储引擎的索引使用的B+tree？都有\n需要先理解B+tree、红黑树的实现原理。B+tree带有顺序访问指针，是红黑树不具备的。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3391,"question":"红黑树原理是什么?","simplecontent":null,"content":"1.节点是红色或黑色。\n2.根节点是黑色。\n3.每个叶子节点都是黑色的空节点（NIL节点）。\n4 每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点)\n从任一节点到其每个叶子的所有路径都包含相同数目的黑色节点。\n由此我们可以得出结论：对于给定的黑色高度为n的红黑树，从根到叶结点的简单路径的最短长度为n-1，最大长度为2(n-1)。  \n\n\n红黑树并不是真正的平衡二叉树，但在实际应用中，红黑树的统计性能要高于平衡二叉树，但极端性能略差。\n由此我们可以得出结论：对于给定的黑色高度为 N 的红黑树，从根到叶子节点的最短路径长度为 N-1，最长路径长度为 2 * (N-1)。\n提示：排序二叉树的深度直接影响了检索的性能，正如前面指出，当插入节点本身就是由小到大排列时，排序二叉树将变成一个链表，这种排序二叉树的检索性能最低：N 个节点的二叉树深度就是 N-1。\n红黑树通过上面这种限制来保证它大致是平衡的——因为红黑树的高度不会无限增高，这样保证红黑树在最坏情况下都是高效的，不会出现普通排序二叉树的情况。\n由于红黑树只是一个特殊的排序二叉树，因此对红黑树上的只读操作与普通排序二叉树上的只读操作完全相同，只是红黑树保持了大致平衡，因此检索性能比排序二叉树要好很多。\n但在红黑树上进行插入操作和删除操作会导致树不再符合红黑树的特征，因此插入操作和删除操作都需要进行一定的维护，以保证插入节点、删除节点后的树依然是红黑树","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3392,"question":"】Java容器都有哪些？Collection 和 Map","simplecontent":null,"content":"Java 容器分为 Collection 和 Map 两大类，其下又有很多子类，如下所示：","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3393,"question":"】List下接口有哪些？ArrayList、LinkedList、Vector、Stack","simplecontent":null,"content":"ArrayList、LinkedList、Vector、Stack","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3394,"question":"】Set下接口有哪些？HashSet、LinkedHashSet、TreeSet","simplecontent":null,"content":"HashSet、LinkedHashSet、TreeSet","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3395,"question":"】Map下接口有哪些？HashMap、LinkedHashMap、TreeMap、ConcurrentHashMap、Hashtable","simplecontent":null,"content":"HashMap、LinkedHashMap、TreeMap、ConcurrentHashMap、Hashtable","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3396,"question":"】Collection 和 Collections 有什么区别？是集合上接口；工具类：排序、线程安全","simplecontent":null,"content":"《是集合上接口；工具类：排序、线程安全》\nCollection 是一个集合接口，它提供了对集合对象进行基本操作的通用接口方法，所有集合都是它的子类，比如 List、Set 等。\nCollections 是一个包装类，包含了很多静态方法，不能被实例化，就像一个工具类，比如提供的排序方法： Collections. sort(list)。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3397,"question":"】List、Set、Map 之间的区别是什么？元素是否有序、是否允许元素重复、数组和链表结构","simplecontent":null,"content":"《元素是否有序、是否允许元素重复、数组和链表结构》\nList、Set、Map 的区别主要体现在两个方面：元素是否有序、是否允许元素重复、数组和链表结构。\n三者之间的区别，如下表：\nList子接口：有序，可以有重复元素。和数组类似，List可以动态增长，查找元素效率高，相对的插入删除元素效率低，因为会引起其他元素位置改变。\nSet子接口:无序，不允许重复。检索元素效率低下，删除和插入效率高，插入和删除不会引起元素位置改变。set集合中的元素不按特定方式排序，只是简单的把对象加入集合中，就像往口袋里放东西。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3398,"question":"List的实现类区别?","simplecontent":null,"content":"《查增删改速度，数组链表结构，安全性》\nList接口下有三个实现类ArrayList 、LinkedList和Vector\n\nVector是一种老的动态数组，是线程同步的，效率低，一般不赞成使用。\n\nArrayList  实现一个动态数组，它的规模可变并且能像链表一样被访问。它提供的功能类似Vector类但不同步，它是以Array方式实现的List，允许快速随机存取。特点是读快改慢；\n\nLinkedList实现一个链表，提供最佳顺序存取，适合插入和移除元素。由这个类定义的链表也可以像栈或队列一样被使用。提供最佳顺序存取，适合插入和移除元素。特点是改快读慢","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:45","updateTime":"2021-05-26 01:03:45","isExist":null},{"id":3358,"question":"】HashMap和HashSet区别？实现接口、添加元素判重、计算hashcode值不同","simplecontent":null,"content":"实现接口、添加元素判重、计算hashcode值不同","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3359,"question":"】Hashtable底层原理？跟hashmap一样，但是多了hashcode和equals方法保证","simplecontent":null,"content":"跟hashmap一样，但是多了hashcode和equals方法保证","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3360,"question":"】LinkedHashSet集合的特点是什么？底层是哈希表（数组+链表/红黑树），多了一条链表（记录元素的存储顺序），保证元素的有序","simplecontent":null,"content":"底层是哈希表（数组+链表/红黑树），多了一条链表（记录元素的存储顺序），保证元素的有序","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3361,"question":"】MAP使用containsKey和containsValue方法？判断是否存在key或者value的值，返回boolean","simplecontent":null,"content":"判断是否存在key或者value的值，返回boolean","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3362,"question":"TreeSet特点与实现机制?","simplecontent":null,"content":"TreeSet中存放的元素是有序的（不是插入时的顺序，是有按关键字大小排序的），且元素不能重复。 \n而如何实现有序存储，就需要有一个比较器，其实说起来，TreeSet更受关注的是不重复且有序，这个有序就需要有一个compare的过程，因此会需要参数实现Comparable接口。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3363,"question":"foreach和while的区别?","simplecontent":null,"content":"\"while读一行输入，存入某个变量执行循环体，再找其他行的输入，适用于不确定循环次数；\nforeach是增强for循环，逐条读取，在循环开始前会将所有输入全部读入，适用于数组、集合等确定长度的情况；当内容非常大foreach内存多\"","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3364,"question":"】Arraylist默认容量是多少？10","simplecontent":null,"content":"10","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3365,"question":"】Arraylist自动扩容公式?*1.5+1","simplecontent":null,"content":"《容量长度*1.5+1》\n第一位16，第二为25，第三为38","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3366,"question":"】ArrayList自动扩充原理？把原来的数组复制到另一个内存空间更大的数组中","simplecontent":null,"content":"把原来的数组复制到另一个内存空间更大的数组中","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3367,"question":"】数据量大的时候,迭代和for循环哪个比较好?数组用for、链表用foreach和迭代器","simplecontent":null,"content":"《1.顺序存储（数组，ArrayList..） for循环快\n2.链接存储(LinkedList..)  foreach和迭代器快》","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3368,"question":"map的遍历方式?","simplecontent":null,"content":"1.在for循环中使用entries实现Map的遍历\nfor (Map.Entry<Integer, String> entry : map.entrySet()) {\n2.通过Iterator遍历；\nIterator<Entry<String, String>> entries = map.entrySet().iterator();\nwhile(entries.hasNext()){\n3.在for循环中遍历key或者values\nfor(String key : map.keySet()){\nfor(String value : map.values()){\"","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3369,"question":"Comparable 和 Comparator 的区别?","simplecontent":null,"content":"\"用来排序，而Comparable的调用lang包的compareTo 传1个参数 与其它对象比较\nComparator调用util包的compare  传2个参数  2个对象比较\"","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3370,"question":"队列的使用和特点?","simplecontent":null,"content":"Queue<String> queue = new LinkedList<String>();\n先进先出，插入offer（满返false）和add（满抛异常），删除poll无异常和remove无返null，LinkedList 没有禁止添加 null，但是添加null无数据不易判断是无还是null\n尽量使用offer()和poll()\n返回第一个元素element和peek\n最先插入的元素将是最先被删除的元素\"","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3371,"question":"】用哪两种方式来实现集合的排序？1.TreeSet 或 TreeMap 2.list通过 Collections.sort() 来排序","simplecontent":null,"content":"1.TreeSet 或 TreeMap 2.list通过 Collections.sort() 来排序","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3372,"question":"】ArrayList集合加入1万条数据，应该怎么提高效率?","simplecontent":null,"content":"指定容量","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3373,"question":"】Map重复取哪个？","simplecontent":null,"content":"最后一次添加为准","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3374,"question":"】ConcurrentHashMap底层结构？数组+链表+红黑树","simplecontent":null,"content":"https://www.jianshu.com/p/865c813f2726\n在JDK1.7版本中，ConcurrentHashMap的数据结构是由一个Segment数组和多个HashEntry组成，如下图所示：Segment数组的意义就是将一个大的table分割成多个小的table来进行加锁，也就是上面的提到的锁分离技术，而每一个Segment元素存储的是HashEntry数组+链表，这个和HashMap的数据存储结构一样\nJDK1.8的实现\nJDK1.8的实现已经摒弃了Segment的概念，而是直接用Node数组+链表+红黑树的数据结构来实现，并发控制使用Synchronized和CAS来操作，整个看起来就像是优化过且线程安全的HashMap，虽然在JDK1.8中还能看到Segment的数据结构，但是已经简化了属性，只是为了兼容旧版本","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3375,"question":"】concurrenthashmap默认容量加载因子、扩容是多少？跟hashmap一样","simplecontent":null,"content":"在ConcurrentHashMap有一个参数LOAD_FACTOR，默认值为0.75f。假设当前map容量为16，当其中的元素个数达到16*0.75f，也就是12个的时候，map为了最大化利用hash的作用，会进行扩容，也就是map中的元素个数一般不会达到容量的大小。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3376,"question":"Concurrenthashmap 是怎么做到线程安全的？","simplecontent":null,"content":"ConcurrentHashMap的大部分操作和HashMap是相同的，例如初始化，扩容和链表向红黑树的转变等。但是，在ConcurrentHashMap中，大量使用了U.compareAndSwapXXX\n的方法，这个方法是利用一个CAS算法实现无锁化的修改值的操作，他可以大大降低锁代理的性能消耗。这个算法的基本思想就是不断地去比较当前内存中的变量值与你指定的\n一个变量值是否相等，如果相等，则接受你指定的修改的值，否则拒绝你的操作。因为当前线程中的值已经不是最新的值，你的修改很可能会覆盖掉其他线程修改的结果。这一\n点与乐观锁，SVN的思想是比较类似的。\n同时，在ConcurrentHashMap中还定义了三个原子操作，用于对指定位置的节点进行操作。这三种原子操作被广泛的使用在ConcurrentHashMap的get和put等方法中，\n正是这些原子操作保证了ConcurrentHashMap的线程安全。\n在ConcurrentHashMap没有出现以前，jdk使用hashtable来实现线程安全，但是hashtable是将整个hash表锁住，所以效率很低下。\nConcurrentHashMap将数据分别放到多个Segment中，默认16个，每一个Segment中又包含了多个HashEntry列表数组，\n对于一个key，需要经过三次hash操作，才能最终定位这个元素的位置，这三次hash分别为：\n对于一个key，先进行一次hash操作，得到hash值h1，也即h1 = hash1(key)；\n将得到的h1的高几位进行第二次hash，得到hash值h2，也即h2 = hash2(h1高几位)，通过h2能够确定该元素的放在哪个Segment；\n将得到的h1进行第三次hash，得到hash值h3，也即h3 = hash3(h1)，通过h3能够确定该元素放置在哪个HashEntry。\n每一个Segment都拥有一个锁，当进行写操作时，只需要锁定一个Segment，而其它Segment中的数据是可以访问的。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:44","updateTime":"2021-05-26 01:03:44","isExist":null},{"id":3341,"question":"】hashCode 对什么对象重要？Hash","simplecontent":null,"content":"《HashMap、HashSet、HashTable》\nhashCode 重要么？不重要，对于 List 集合、数组而言，但是对于 HashMap、HashSet、HashTable 而言，它变得异常重要。所以在使用 HashMap、HashSet、HashTable 时一定要注意 hashCode。对于一个对象而言，其 hashCode 过程就是一个简单的 Hash 算法的实现，其实现过程对你实现对象的存取过程起到非常重要的作用。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3342,"question":"】为什么在重写  equals 方法的时候需要重写  hashCode 方法？强制的规范指定","simplecontent":null,"content":"因为有强制的规范指定需要同时重写 hashcode 与 equal 是方法，许多容器类， 如  HashMap、HashSet 都依赖于  hashcode 与  equals 的规定。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3343,"question":"】有没有可能两个不相等的对象有有相同的 hashcode？有可能","simplecontent":null,"content":"有可能， 两个不相等的对象可能会有相同的  hashcode 值， 这就是为什么在\nhashmap 中会有冲突。相等 hashcode 值的规定只是说如果两个对象相等， 必须有相同的 hashcode 值， 但是没有关于不相等对象的任何规定。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3344,"question":"你重写过 hashcode 和 equals 么?","simplecontent":null,"content":"1.hashCode介绍\nhashCode() 的作用是获取哈希码，也称为散列码；它实际上是返回一个int整数。这个散列码的作用是确定该对象在散列表中的索引位置\n1.当两个对象进行equalsb方法比较相等时，则hashcode码一定相等，但是相反，通过hashcode方法相等，但equals却不一定相等 \n2.当重写equals方法时，一定要同时把hashcode方法一并重写，因为要保证在实现hash表的扩展性","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3345,"question":"】hashcode方法作用？当集合添加新的元素时，先调用这个元素的hashCode方法，能定位到它应该放置的物理位置","simplecontent":null,"content":"《当集合添加新的元素时，先调用这个元素的hashCode方法，能定位到它应该放置的物理位置》\nhashCode方法可以这样理解：它返回的就是根据对象的内存地址换算出的一个值。这样一来，当集合要添加新的元素时，先调用这个元素的hashCode方法，就一下子能定位到它应该放置的物理位置上。如果这个位置上没有元素，它就可以直接存储在这个位置上，不用再进行任何比较了；如果这个位置上已经有元素了，就调用它的equals方法与新元素进行比较，相同的话就不存了，不相同就散列其它的地址。这样一来实际调用equals方法的次数就大大降低了，几乎只需要一两次。\n\n我们new一个对象会把这个对象放到哈希表中，在这个过程中java虚拟机会为这个对象产生一个hashcode，作为键值（类似地址）存放到hashmap中。当这个hashcode已经存在了也就是hash key起冲突了就会在这个key上产生一个链表，然后将这个对象放到这个链表中，也就是说如果两个对象的equals方法相等那么他们的hashcode肯定相等，但是hashcode相等不一定两个对象就相等，所以我们将hashcode方法用于查询或者存入一个不允许重复的集合如set集合，这种操作如果执行一千次一万次的话，使用equals方法会极大的影响性能，如果通过hashcode方法来判断呢？如果hashcode不相等那么肯定不是同一个对象就没有必要进行equals的判断了，只有在hashcode相等的情况下才会进行equals判断，这一点上极大的提高了使用性能！","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3346,"question":"】HashSet作用是什么？不允许有重复的值，重写equals()和hashCode()，调用add方法在Set中添加元素，当元素值重复则立即返回false，如果成功添加会返回true","simplecontent":null,"content":"HashSet实现了Set接口，它不允许集合中有重复的值，当我们提到HashSet时，第一件事情就是在将对象存储在HashSet之前，要先确保对象重写equals()和hashCode()方法，这样才能比较对象的值是否相等，以确保set中没有储存相等的对象。如果我们没有重写这两个方法，将会使用这个方法的默认实现。\npublic boolean add(Object o)方法用来在Set中添加元素，当元素值重复时则会立即返回false，如果成功添加的话会返回true。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3347,"question":"】treeset、hashset和hashmap的区别？Hashset和hashmap不允许重复，且treemap不允许存null，map键值对可以存null，hashmap和hashset都是不允许有重复的键和值","simplecontent":null,"content":"HashSet实现了Set接口，它不允许集合中有重复的值，当我们提到HashSet时，第一件事情就是在将对象存储在HashSet之前，要先确保对象重写equals()和hashCode()方法，这样才能比较对象的值是否相等，以确保set中没有储存相等的对象。如果我们没有重写这两个方法，将会使用这个方法的默认实现。\n\nHashMap实现了Map接口，Map接口对键值对进行映射。Map中不允许重复的键。Map接口有两个基本的实现，HashMap和TreeMap。TreeMap保存了对象的排列次序，而HashMap则不能。HashMap允许键和值为null。HashMap是非synchronized的，但collection框架提供方法能保证HashMap synchronized，这样多个线程同时访问HashMap时，能保证只有一个线程更改Map。\n\n*HashMap*\t*HashSet*\nHashMap实现了Map接口\tHashSet实现了Set接口\nHashMap储存键值对\tHashSet仅仅存储对象\n使用put()方法将元素放入map中\t使用add()方法将元素放入set中\nHashMap中使用键对象来计算hashcode值\tHashSet使用成员对象来计算hashcode值，对于两个对象来说hashcode可能相同，所以equals()方法用来判断对象的相等性，如果两个对象不同的话，那么返回false\nHashMap比较快，因为是使用唯一的键来获取对象\tHashSet较HashMap来说比较慢","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3348,"question":"】为什么hashmap需要计算hashcode不直接用equals？Equals效率慢","simplecontent":null,"content":"程序执行的过程中会多次地调用equals()，从而影响程序执行的效率。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3349,"question":"】Hashset如何保证数据不重复？Hashcode、equals","simplecontent":null,"content":"比较hashcode和equals\nHashSet会通过元素的hashcode()和equals()方法进行判断，当试图将元素加入到Set集合中，HashSet首先会使用对象的hashcode来判断对象加入的位置。同时也会与其他已经加入的对象的hashcode进行比较，如果没有相等的hashcode，HashSet就认为这个对象之前不存在，如果之前存在同样的hashcode值，就会进一步的比较equals()方法，如果equals()比较返回结果是true，那么认为该对象在集合中的对象是一模一样的，不会将其加入；如果比较返回的是false,那么HashSet认为新加入的对象没有重复，可以正确加入。 ","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3350,"question":"】HashSet 是不是线程安全的？不能保证原子性","simplecontent":null,"content":"《不能保证原子性》\n说白了，HashSet就是限制了功能的HashMap，所以了解HashMap的实现原理","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3351,"question":"】Treeset底层是什么?红黑树","simplecontent":null,"content":"红黑树","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3352,"question":"】Treeset的排序如何实现？自然排序用Comparable的compareTo、比较器排序用Comparator的compare","simplecontent":null,"content":"自然排序(元素具备比较性) \n让元素所属的类实现Comparable接口，重写其中的compareTo方法\n\n比较器排序(集合具备比较性) \n让集合构造方法接收Comparator的实现类对象,在实现类中重写compare()方法","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3353,"question":"】ArrayList的默认容量、加载因子、扩容公式是多少？10,1，n*0.5","simplecontent":null,"content":"10,1，n*0.5","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3354,"question":"】Vector的默认容量、加载因子、扩容公式是多少？10,1，n*2","simplecontent":null,"content":"ArrayList、默认初始容量为10\nVector：线程安全，但速度慢\n底层数据结构是数组结构\n加载因子为1：即当 元素个数 超过 容量长度 时，进行扩容\n扩容增量：原容量的 1倍\n如 Vector的容量为10，一次扩容后是容量为20\nArrayList：线程不安全，查询速度快\n底层数据结构是数组结构\n扩容增量：原容量的 0.5倍\n如 ArrayList的容量为10，一次扩容后是容量为15","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3355,"question":"】HashTable的默认容量、加载因子、扩容公式是多少？11、0.75、2*n+1","simplecontent":null,"content":"线程安全，但是速度慢，不允许key/value为null\n加载因子为0.75：即当 元素个数 超过 容量长度的0.75倍 时，进行扩容\n扩容增量：2*原数组长度+1\n如 HashTable的容量为11，一次扩容后是容量为23","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3356,"question":"】Hashset默认容量和加载因子和扩容公式是多少？16、0.75、2*n","simplecontent":null,"content":"https://blog.csdn.net/weixin_43258908/article/details/89247443\n默认容量static final int DEFAULT_INITIAL_CAPACITY = 1 << 4; // aka 16\n加载因子（用来扩容的） static final float DEFAULT_LOAD_FACTOR = 0.75f;","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3357,"question":"】HashSet 的底层实现是什么？是数组+链表+红黑树结构、根据哈希值确定存储位置","simplecontent":null,"content":"https://blog.csdn.net/m0_37461645/article/details/82084499\nHashSet是基于HashMap存储的数据，结构是数组 + 链表\nHashSet底层就是一个HashMap，一个哈希表有三列，第一列是hash码，第二列是key，第三列是value，往哈希表中存进一个元素（即调用add()方法），会调用 key的hashCode()方法算出哈希值，根据哈希值得出该key在哈希表中的索引，接着就会遍历该索引中的所有的元素，调用key的equals() 方法，如果equals()方法返回true，则会覆盖哈希表中的元素，返回覆盖之前的值，否则就返回null。\nhashSet的底层是数组，其查询效率非常高。而且在增加和删除的时候由于运用的hashCode的比较开确定添加元素的位置，所以不存在元素的偏移，所以效率也非常高。因为hashSet查询和删除和增加元素的效率都非常高。\n但是hashSet增删的高效率是通过花费大量的空间换来的：因为空间越大，取余数相同的情况就越小。HashSet这种算法会建立许多无用的空间。\n使用hashSet接口时要注意，如果发生冲突，就会出现遍历整个数组的情况，这样就使得效率非常的低。\n\nHashSet实现Set接口，由哈希表（实际上是一个HashMap实例）支持。它不保证set 的迭代顺序；特别是它不保证该顺序恒久不变，此类允许使用null元素。 \n在HashSet中，元素都存到HashMap键值对的Key上面，而Value时有一个统一的值private static final Object PRESENT = new Object();，(定义一个虚拟的Object对象作为HashMap的value，将此对象定义为static final。)\n虽说是Set是对于重复的元素不放入，倒不如直接说是底层的Map直接把原值替代了（这个Set的put方法的返回值真有意思）\n\nHashSet存放的是哈希值，是按照哈希值来存的，所以是无序的，HashSet不存入重复元素的规则：使用hashcode和equals","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:43","updateTime":"2021-05-26 01:03:43","isExist":null},{"id":3324,"question":"】ConcurrentHashMap在jdk1.7和jdk1.8中的不同？1.7用了分段锁，对数组分割上锁；1.8用了synchronized 和cas，sync锁住链表或红黑树的首节点，只要hash不冲突就不会产生并发，冲突修改数据用cas和volatile保证数据更改","simplecontent":null,"content":"Hashtable使用什么作为锁\n<JDK1.7>，\n分段锁 对整个桶数组进行了分割分段(Segment)，每一把锁只锁容器其中一部分数据，多线程访问容器里不同数据段的数据，就不会存在锁竞争，提高并发访问率。\n<jdk1.8>\n使用的是优化的synchronized 关键字同步代码块 和 cas操作了维护并发。\n\n通过使用Synchroized关键字来同步代码块，而且只是在put方法中加锁，在get方法中没有加锁\n\nsynchronized只锁定当前链表或红黑二叉树的首节点，这样只要hash不冲突，就不会产生并发，效率又提升N倍。\n\n大量的利用了volatile，final，CAS等lock-free技术来减少锁竞争对于性能的影响。\n\nCAS是compare and swap的缩写，即我们所说的比较交换。cas是一种基于锁的操作，而且是乐观锁。在java中锁分为乐观锁和悲观锁。悲观锁是将资源锁住，等一个之前获得锁的线程释放锁之后，下一个线程才可以访问。而乐观锁采取了一种宽泛的态度，通过某种方式不加锁来处理资源，比如通过给记录加version来获取数据，性能较悲观锁有很大的提高。\n\n改进一：取消segments字段，直接采用transient volatile HashEntry<K,V>[] table保存数据，采用table数组元素作为锁，从而实现了对每一行数据进行加锁，进一步减少并发冲突的概率。\n\nHashtable通过synchronized修饰方法 来保证线程安全\n通过segment（继承了ReentrantLock）调用父类的锁对象加锁来实现，","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3325,"question":"】为什么map不能使用迭代器？Map转set才行，Set set ＝ map.keySet()","simplecontent":null,"content":"只有实现的collection集合才有iterator方法，比如List和set接口；而Map接口不能使用iterator方法，需要现获取set视图，即Set set ＝ map.keySet()；\nset就可以使用了。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3326,"question":"】foreach如何遍历map？使用map.for快捷键","simplecontent":null,"content":"放入set再迭代\nMap<Integer,String> map = new HashMap<Integer, String>();\n        Set<Map.Entry<Integer, String>> entries = map.entrySet();\n        Iterator<Map.Entry<Integer, String>> iteratorMap = entries.iterator();\n        while (iteratorMap.hasNext()){\n            Map.Entry<Integer, String> next = iteratorMap.next();\n            System.out.println(next);\n        }\n\n//2.迭代Set集合\n\t\tIterator<Map.Entry<Integer, String>> it = set.iterator();\n\t\twhile(it.hasNext()){\n\t\t\t//3.获取出的Set集合的元素,是映射关系对象\n\t\t\t//it.next()获取的是什么对象,取出来也是Map.Entry键值对对象\n\t\t\tMap.Entry<Integer, String> entry = it.next();\n\t\t\t//4.通过映射关系对象方法getKey(),getValue()获取键值对\n\t\t\tInteger key = entry.getKey();\n\t\t\tString value = entry.getValue();\n\t\t\tSystem.out.println(key + \"...\" + value);\n\t\t}","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3327,"question":"】Iterator 和 ListIterator 有什么区别？List和set可操作，仅向前遍历","simplecontent":null,"content":"《Iterator可用来遍历Set和List集合，但是ListIterator只能用来遍历List。 \nIterator对集合只能是前向遍历，ListIterator既可以前向也可以后向。 》\nListIterator实现了Iterator接口，并包含其他的功能，比如：增加元素，替换元素，获取前一个和后一个元素的索引，等等。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3328,"question":"】ConcurrentHashMap为何不支持null键和null值？无法判断是null存放在0还是没值","simplecontent":null,"content":"《没法判断是没有找到还是null其实有值为0存放的》\nHashMap在put的时候会调用hash()方法来计算key的hashcode值，可以从hash算法中看出当key==null时返回的值为0。因此key为null时，hash算法返回值为0，不会调用key的hashcode方法。\n执行顺序：Get>containsKey>是否取值\n先假定ConcurrentHashMap也可以存放value为null的值。那不管是HashMap还是ConcurrentHashMap调用map.get(key)的时候，如果返回了null，那么这个null，都有两重含义:\n**1.这个key从来没有在map中映射过。\n**2.这个key的value在设置的时候，就是null。\n在非线程安全的map集合(HashMap)中可以使用map.contains(key)方法来判断，而ConcurrentHashMap却不可以。\nhashmap正确使用场景是单线程下，\n由于是单线程，当得到的value是null的时候，可以用hashMap.containsKey(key)方法来区分上面说的两重含义（保证在单线程下 线程安全 不存在并发场景，所以不会存在二义性）。\n但是如果是ConcurrentHashMap呢?\n它的使用场景是多线程的情况下。假设concurrentHashMap允许存放值为null的value。\n这时有A、B两个线程。\n线程A调用concurrentHashMap.get(key)方法,返回为null，我们还是不知道这个null是没有映射的null还是存的值就是null。\n我们假设此时返回为null的真实情况就是因为这个key没有在map里面映射过。那么我们可以用concurrentHashMap.containsKey(key)来验证我们的假设是否成立，我们期望的结果是返回false。\n但是在我们调用concurrentHashMap.get(key)方法之后，containsKey方法之前，有一个线程B执行了concurrentHashMap.put(key,null)的操作。那么我们调用containsKey方法返回的就是true了。这就与我们的假设的真实情况不符合了。\n \n总结：在map容器里面，调用map.get(key)方法得到的值是null，那你无法判断这个key是在map里面没有映射过，还是这个key在map里面根本就不存在。这种情况下，在非并发安全的map中，你可以通过map.contains(key)的方法来判断。但是在考虑并发安全的map中，在两次调用的过程中，这个值是有可能被改变的。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3329,"question":"】为什么hashmap的初始值为16？二进制位运算更快、减少扩容","simplecontent":null,"content":"《二进制位运算更快、减少扩容》\nhttps://www.cnblogs.com/minikobe/p/12095293.html\n因为2的幂次方拥有更低的碰撞几率和更高的查询速率\n\n位运算(&)效率要比代替取模运算(%)高很多，主要原因是位运算直接对内存数据进行操作，不需要转成十进制，因此处理速度非常快。\n\n，因为位运算直接对内存数据进行操作，不需要转成十进制，所以位运算要比取模运算的效率更高，所以HashMap在计算元素要存放在数组中的index的时候，使用位运算代替了取模运算。之所以可以做等价代替，前提是要求HashMap的容量一定要是2^n 。那么，既然是2^n \n\nength为2的整数次幂的话，h&(length-1)就相当于对length取模，这样便保证了散列的均匀，同时也提升了效率；其次，length为2的整数次幂的话，为偶数，这样length-1为奇数，奇数的最后一位是1，这样便保证了h&(length-1)的最后一位可能为0，也可能为1（这取决于h的值），即与后的结果可能为偶数，也可能为奇数，这样便可以保证散列的均匀性，而如果length为奇数的话，很明显length-1为偶数，它的最后一位是0，这样h&(length-1)的最后一位肯定为0，即只能为偶数，这样任何hash值都只会被散列到数组的偶数下标位置上，这便浪费了近一半的空间，因此，length取2的整数次幂，是为了使不同hash值发生碰撞的概率较小，这样就能使元素在哈希表中均匀地散列 \n\n1&1=1\n1&0=0\n0&1=0\n0&0=0\n\n因为位运算直接对内存数据进行操作，不需要转成十进制，所以位运算要比取模运算的效率更高，放在数组中的index的时候，使用位运算代替了取模运算。\n\n既然一定要设置一个默认的2^n 作为初始值，那么就需要在效率和内存使用上做一个权衡。这个值既不能太小，也不能太大。太小了就有可能频繁发生扩容，影响效率。太大了又浪费空间，不划算。所以，16就作为一个经验值被采用了。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3330,"question":"】Iterator it = set.iterator();这段代码是什么意思？赋值给Iterator对象，set是不连续，而Iterator是连续","simplecontent":null,"content":"这段代码是集合set调用iterator方法，然后赋值给Iterator这个接口的对象\n至于为什么这样做，原因是set中的元素在内存中存放的时候并不连续，而Iterator就像是指针一样，next（）就能找到它的下一个元素。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3331,"question":"Set遍历方法?","simplecontent":null,"content":"1.迭代遍历：\nSet<String> set = new HashSet<String>();\nIterator<String> it = set.iterator();\nwhile (it.hasNext()) {\n  String str = it.next();\n  System.out.println(str);\n}\n\n2.for循环遍历：\nfor (String str : set) {\n      System.out.println(str);\n}","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3332,"question":"对list的实体多个字段排序?","simplecontent":null,"content":"// age升序\nComparator<Student> byIdASC = Comparator.comparing(Student::getAge);\n\n// named不分区大小写降序\nComparator<Student> byNameDESC = Comparator.comparing(Student::getName, String.CASE_INSENSITIVE_ORDER)\n        .reversed();\n\n// birthday 降序\nComparator<Student> byBirthdayDESC = Comparator.comparing(Student::getBirthday).reversed();\n\n// 联合排序\nComparator<Student> finalComparator = byIdASC.thenComparing(byNameDESC).thenComparing(byBirthdayDESC);\n\nList<Student> result = stuList.stream().sorted(finalComparator).collect(Collectors.toList());\nfor (int i = 0; i < result.size(); i++) {\n    System.out.println(result.get(i));\n}","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3333,"question":"】在 Queue 中 poll()和 remove()有什么区别？都是从队列中取出一个元素，但是 poll() 在获取元素失败会返回空，remove() 失败会抛出异常。","simplecontent":null,"content":"都是从队列中取出一个元素，但是 poll() 在获取元素失败会返回空，remove() 失败会抛出异常。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3334,"question":"】如何实现数组转List ？ arrays.aslist","simplecontent":null,"content":"《List list = Arrays.asList(strArray);》","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3335,"question":"】如何实现List转 数组？ list.toarrays","simplecontent":null,"content":"《String[] str = new String[list.size()];\nstr = list.toArray(strs);》\n\nList转换成为数组：调用ArrayList的toArray方法。\nList list = Arrays.asList(strArray);\nString[] str = new String[list.size()];\nstr = list.toArray(strs);\n\n\n数组转换成为List：调用Arrays的asList方法。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3336,"question":"】如何决定使用 HashMap 还是 TreeMap？插删查、排序","simplecontent":null,"content":"《插入、删除和定位元素这类操作，HashMap是最好；需要对有序的key集合遍历，TreeMap是更好》\n对于在Map中插入、删除和定位元素这类操作，HashMap是最好的选择。然而，假如你需要对一个有序的key集合进行遍历，TreeMap是更好的选择。基于你的collection的大小，也许向HashMap中添加元素会更快，将map换为TreeMap进行有序key的遍历。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3337,"question":"】能否让HashMap线程安全？Synchronize  Map","simplecontent":null,"content":"《Map m = Collections.synchronizeMap(hashMap);》\nHashMap可以通过下面的语句进行同步：\nMap m = Collections.synchronizeMap(hashMap);","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3338,"question":"】HashMap与HashTable、HashSet的区别？Table安全、set不重复","simplecontent":null,"content":"《HashTable安全、HashSet不会重复》\n安全性、重复性、速度、\n区别二：线程安全性不同，Hashtable是线程安全，而HashMap则非线程安全\nHashtable的实现方法里面都添加了synchronized关键字来确保线程同步，因此相对而言HashMap性能会高一些，我们平时使用时若无特殊需求建议使用HashMap，在多线程环境下若使用HashMap如何保证线程安全  \n需要使用Collections.synchronizedMap()方法来获取一个线程安全的集合\n HashSet：\n\n　　HashSet实现了Set接口，它不允许集合中出现重复元素。当我们提到HashSet时，第一件事就是在将对象存储在\n\nHashSet之前，要确保重写hashCode（）方法和equals（）方法，这样才能比较对象的值是否相等，确保集合中没有\n\n储存相同的对象。如果不重写上述两个方法，那么将使用下面方法默认实现：\n\n　public boolean add(Object obj)方法用在Set添加元素时，如果元素值重复时返回 \"false\"，如果添加成功则返回\"true\"\n\nHashMap：\n\n　　HashMap实现了Map接口，Map接口对键值对进行映射。Map中不允许出现重复的键（Key）。Map接口有两个基本的实现\n\nTreeMap和HashMap。TreeMap保存了对象的排列次序，而HashMap不能。HashMap可以有空的键值对（Key（null）-Value（null））\n\nHashMap是非线程安全的（非Synchronize）\nHashMap\tHashSet\n实现了Map接口\t实现Set接口\n存储键值对\t仅存储对象\n调用put（）向map中添加元素\t调用add（）方法向Set中添加元素\nHashMap使用键（Key）计算Hashcode\t\nHashSet使用成员对象来计算hashcode值，\n对于两个对象来说hashcode可能相同，\n所以equals()方法用来判断对象的相等性，\n如果两个对象不同的话，那么返回false","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3339,"question":"】foreach和while的区别?foreach已知循环次数，逐条读取; while循环不确定循环次数，逐行读取,满足条件一直循环","simplecontent":null,"content":"《foreach已知循环次数，逐条读取; while循环不确定循环次数，逐行读取,满足条件一直循环》\n在while循环里，Perl会读入一行输入，把它存入某个变量并且执行循环主体。然后，它再回头去找其他的输入行。\n在foreach循环中，整行输入操作符会在列表上下文中执行（因为foreach需要逐行处理列表的内容）。在循环开始执行之前，它必须先将输入全部读进来。\n当输入大容量的文件时，使用foreach会占用大量的内存。两者的差异会十分明显。因此，最好的做法，通常是尽量使用while循环的简写，让它每次处理一行。\nforeach加强for循环，已知循环次数，逐条读取，一般用于对象集合。 while循环不确定循环次数，逐行读取。只要满足条件就一直循环下去。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3340,"question":"Arrays.sort实现原理和Collection实现原理?","simplecontent":null,"content":"Collections.sort方法底层就是调用的array.sort方法\nCollections.sort(strings);//sort方法在这里\nCollections.sort的底层调用的也是Arrays.sort.\nArrays.sort有很多重载的方法，一类是针对基本数据类型的，一类是针对引用类型的。\n对于基本数据类型，采用的是快排。\n对于引用数据类型，采用改进的归并排序。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:42","updateTime":"2021-05-26 01:03:42","isExist":null},{"id":3305,"question":"】Java 中的 TreeMap 是采用什么树实现的？红黑树","simplecontent":null,"content":"Java 中的  TreeMap 是使用红黑树实现的。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3306,"question":"】Java 中的 LinkedList 是单向链表还是双向链表？双向","simplecontent":null,"content":"是双向链表，你可以检查 JDK 的源码。在 Eclipse，你可以使用快捷键 Ctrl + T， 直接在编辑器中打开该类。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3307,"question":"】Map中第一次赋正常值，第二次赋null，那么返回什么？null","simplecontent":null,"content":"Map<String,Object> map = new HashMap<String,Object>();\nmap.put(\"aa\",\"bb\");\nmap.put(\"aa\",null);\nSystem.out.println(map.get(\"aa\"));\n返回null","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3308,"question":"】CopyOnWriteArrayList的优点和缺点？并发、2个数组+不是实时的插入和读写不一定是一致的","simplecontent":null,"content":"优点:\n1.解决的开发工作中的多线程的并发问题。\n缺点:\n1.内存占有问题:很明显，两个数组同时驻扎在内存中，如果实际应用中，数据比较多，而且比较大的情况下，占用内存会比较大，针对这个其实可以用ConcurrentHashMap来代替。\n2.数据一致性:CopyOnWrite容器只能保证数据的最终一致性，不能保证数据的实时一致性。所以如果你希望写入的的数据，马上能读到，请不要使用CopyOnWrite容器","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3309,"question":"】CopyOnWriteArrayList的原理和使用方法？保证arraylist的线程安全","simplecontent":null,"content":"CopyOnWriteArrayList这是一个ArrayList的线程安全的变体，其原理大概可以通俗的理解为:初始化的时候只有一个容器，很常一段时间，这个容器数据、数量等没有发生变化的时候，大家(多个线程)，都是读取(假设这段时间里只发生读取的操作)同一个容器中的数据，所以这样大家读到的数据都是唯一、一致、安全的，但是后来有人往里面增加了一个数据，这个时候CopyOnWriteArrayList 底层实现添加的原理是先copy出一个容器(可以简称副本)，再往新的容器里添加这个新的数据，最后把新的容器的引用地址赋值给了之前那个旧的的容器地址，但是在添加这个数据的期间，其他线程如果要去读取数据，仍然是读取到旧的容器里的数据。\n\n在同一时间多个线程无法对同一个List进行读取和增删，否则就会抛出并发异常。\n\nCopyOnWriteArrayList完美解决了并发的问题。\n\nlock.lock();\n首先使用上面的两行代码加上了锁，保证同一时间只能有一个线程在添加元素。\n然后使用Arrays.copyOf(...)方法复制出另一个新的数组，而且新的数组的长度比原来数组的长度+1，副本复制完毕，新添加的元素也赋值添加完毕，最后又把新的副本数组赋值给了旧的数组，最后在finally语句块中将锁释放。\n然后我们再来看一个remove，删除元素，很简单，就是判断要删除的元素是否最后一个，如果最后一个直接在复制副本数组的时候，复制长度为旧数组的length-1即可；但是如果不是最后一个元素，就先复制旧的数组的index前面元素到新数组中，然后再复制旧数组中index后面的元素到数组中，最后再把新数组复制给旧数组的引用。\n最后在finally语句块中将锁释放。\n其他的一些重载的增删、修改方法其实都是一样的逻辑，这里就不重复讲解了。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3310,"question":"】为什么数组插入慢？增加要移动元素","simplecontent":null,"content":"《数组中增加一个元素，需要移动大量的元素》\n数组和链表就拿增加数据来说，数组中增加一个元素，需要移动大量的元素，在内存中空出一个元素的空间，然后将增加的元素放到空出的空间中；而链表就是将链表中最后的一个元素的指针指向新增的元素，在指出新增元素是尾元素就好了。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3311,"question":"Comparator和Comparable区别?","simplecontent":null,"content":"　Comparable是排序接口，若一个类实现了Comparable接口，就意味着“该类支持排序”。而Comparator是比较器，我们若需要控制某个类的次序，可以建立一个“该类的比较器”来进行排序。\n　　Comparable相当于“内部比较器”，而Comparator相当于“外部比较器”。\n　　两种方法各有优劣， 用Comparable 简单， 只要实现Comparable 接口的对象直接就成为一个可以比较的对象，但是需要修改源代码。 用Comparator 的好处是不需要修改源代码， 而是另外实现一个比较器， 当某个自定义的对象需要作比较的时候，把比较器和对象一起传递过去就可以比大小了， 并且在Comparator 里面用户可以自己实现复杂的可以通用的逻辑，使其可以匹配一些比较简单的对象，那样就可以节省很多重复劳动了。\n\n2、Comparable接口使用\n 2.1、如果bean类继承Comparable接口，那么它的集合使用Collections.sort(list);可以默认调用bean类中复写的compareTo这个方法，进行排序\n 2.2、也可以使用compareTo单独比较两个类\n\n\n 1、自然排序 \n   在JDK类库中，有一部分类实现了Comparable接口,如Integer Double和String等。 \nComparable接口有一个comparTo(Object o)方法,它返回整数类型。对于表达式x.compareTo(y),如果返回值为0，则表示x和y相等,如果返回值大于0，则表示x大于y,如果返回值小于0，则表示x小于y.TreeSet集合调用对象的compareTo()方法比较集合中的大小,注意鸟 不是TreeSet调用它自己的comparTo()方法而是它调用集合中对象的comparTo()方法.TreeSet类本身并没有实现Comparable接口,然后进行升序排列,这种方式称为自然排序. \n   有人可能要问TreeSet集合怎么给对象排序的按对象的什么排序的? \n   下面简单总结一哈 \n    JDK类库中实现了Comparable接口的一些类的排序方式 \n类 BigDecimal BigInteger Byte Double Float Integer Long Short 排序方式是\t按数字大小排序\n类 Character是\t按字符的Unicode值的数字大小排序\n类 String是\t按字符中字符的Unicode值排序\n\n\nComparable 是一个对象本身就已经支持自比较所需要实现的接口（如 String、Integer 自己就可以完成比较大小操作，已经实现了Comparable接口）  此接口强行对实现它的每个类的对象进行整体排序。这种排序被称为类的自然排序，类的 compareTo 方法被称为它的自然比较方法。 \n\n  比如你有一个Customer类 想让这个类的实例加入集合后自动就具有某种排序功能只要这些实例加入集合后 就会按照你给Customer对象设定的方式排序 \n\npublic class Customer implements Comparable {  \n    private String name;  \n  \n    private int age;  \n  \n    public Customer(String name, int age) {  \n        this.age = age;  \n        this.name = name;  \n    }  \n  \n    public int getAge() {  \n        return age;  \n    }  \n  public int compareTo(Object o) {  \n        Customer other = (Customer) o;  \n  \n        // 先按照name属性排序  \n        if (this.name.compareTo(other.getName()) > 0)  \n            return 1;  \n        if (this.name.compareTo(other.getName()) < 0)  \n            return -1;  \n  \n        // 在按照age属性排序  \n        if (this.age > other.getAge())  \n            return 1;  \n        if (this.age < other.getAge())  \n            return -1;  \n        return 0;  \n    }  \n————————————————\n版权声明：本文为CSDN博主「youcanping2008」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/youcanping2008/article/details/8606296","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3312,"question":"】Treeset如何保证元素不重复的？实现Comparable接口，重写该接口的compareTo方法","simplecontent":null,"content":"比较性要实现Comparable接口，重写该接口的compareTo方法\nTreeSet属于Set集合，该集合的元素是不能重复的，TreeSet如何保证元素的唯一性\n通过compareTo或者compare方法中的来保证元素的唯一性。\n添加的元素必须要实现Comparable接口。当compareTo()函数返回值为0时，说明两个对象相等，此时该对象不会添加进来。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3313,"question":"为什么使用TreeSet存入字符串,字符串默认输出是按升序排列的?","simplecontent":null,"content":"因为字符串实现了一个接口,叫做Comparable 接口.字符串重写了该接口的compareTo 方法,所以String对象具备了比较性.那么同样道理,我的自定义元素(例如Person类,Book类)想要存入TreeSet集合,就需要实现该接口,也就是要让自定义对象具备比较性.","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3314,"question":"当Comparable比较方式和Comparator比较方式同时存在时?","simplecontent":null,"content":"，以Comparator的比较方式为主；\n注意：在重写compareTo或者compare方法时，必须要明确比较的主要条件相等时要比较次要条件。（假设姓名和年龄一直的人为相同的人，如果想要对人按照年龄的大小来排序，如果年龄相同的人，需要如何处理？不能直接return 0，因为可能姓名不同（年龄相同姓名不同的人是不同的人）。此时就需要进行次要条件判断（需要判断姓名），只有姓名和年龄同时相等的才可以返回0.）\n通过return 0来判断唯一性","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3315,"question":"给TreeSet指定排序规则?","simplecontent":null,"content":"方式一：元素自身具备比较性\n元素自身具备比较性，需要元素实现Comparable接口，重写compareTo方法，也就是让元素自身具备比较性，这种方式叫做元素的自然排序也叫做默认排序。\n方式二：容器具备比较性\n当元素自身不具备比较性，或者自身具备的比较性不是所需要的。那么此时可以让容器自身具备。需要定义一个类实现接口Comparator，重写compare方法，并将该接口的子类实例对象作为参数传递给TreeMap集合的构造方法。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3316,"question":"使用HashSet存储自定义对象，并尝试添加重复对象（对象的重复的判定）?","simplecontent":null,"content":"@Override  \n    public int hashCode() {  \n        System.out.println(\"hashCode:\" + this.name);  \n        return this.name.hashCode() + age * 37;  \n    }  \n  \n    @Override  \n    public boolean equals(Object obj) {  \n        System.out.println(this + \"---equals---\" + obj);  \n        if (obj instanceof Person) {  \n            Person p = (Person) obj;  \n            return this.name.equals(p.name) && this.age == p.age;  \n        } else {  \n            return false;  \n        }  \n    }  ","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3317,"question":"Comparable Comparator元素比较?","simplecontent":null,"content":"","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3318,"question":"】hashmap并发会发生什么问题？闭环、扩容无限、存储同哈希丢失值","simplecontent":null,"content":"查找闭环、存储时键同位置数据可能丢失、扩容无限下去了","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3319,"question":"假如我们有两个线程Thread1和Thread2,假如在遍历的过程中，Thread1此时在链表的节点上e1，next指针会下一层指向e2;而此时Thread2遍历在e2节点上，它往回遍历next指针指向e1，那么此时的链表结构就被破坏了，形成了双向指针，构成了一个闭环（如图所示），就造成“死锁了”，我们来复习一下造成死锁的4个条件。?","simplecontent":null,"content":"HashMap在多线程put后可能导致get无限循环\n1、多线程put时可能会导致get无限循环，具体表现为CPU使用率100%；\n原因：在向HashMap put元素时，会检查HashMap的容量是否足够，如果不足，则会新建一个比原来容量大两倍的Hash表，然后把数组从老的Hash表中迁移到新的Hash表中，迁移的过程就是一个rehash()的过程，多个线程同时操作就有可能会形成循环链表，所以在使用get()时，就会出现Infinite Loop的情况\n\n2、多线程put时可能导致元素丢失\n原因：当多个线程同时执行addEntry(hash,key ,value,i)时，如果产生哈希碰撞，导致两个线程得到同样的bucketIndex去存储，就可能会发生元素覆盖丢失的情况","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3320,"question":"ConcurrentHashMap方法的执行流程?","simplecontent":null,"content":"1.计算 key 的哈希值\n2.如果 table 为空，则执行初始化\n3.否则，计算 key 哈希值对应的下标，并获取 table 中对应下标的头结点\n4.如果头结点为 null，则基于 CAS 尝试添加头结点\n5.否则，如果头结点不为 null，但是头结点的哈希值为 MOVED，说明目前正在执行扩容操作，则帮助扩容\n6.否则，如果头结点不为 null，且未处于扩容状态，则尝试添加或更新结点\n7.判断当前 bin 范围内结点数目是否大于阈值，如果大于阈值则执行扩容操作","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3321,"question":"】不使用分段锁原因？竞争同一个锁的概率小，造成更新等操作的长时间等待","simplecontent":null,"content":".加入多个分段锁浪费内存空间。\n.生产环境中， map 在放入时竞争同一个锁的概率非常小，分段锁反而会造成更新等操作的长时间等待。\n.为了提高 GC 的效率","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3322,"question":"】ConcurrentHashMap读为什么不需要锁？数组的引用加了volatile、保证线程更改可见性","simplecontent":null,"content":"我们通常使用读写锁来保护对一堆数据的读写操作。读时加读锁，写时加写锁。在什么样的情况下可以不需要读锁呢？\n如果对数据的读写是一个原子操作，那么此时是可以不需要读锁的。如ConcurrentHashMap对数据的读写，写操作是不需要分2次写的（没有中间状态），读操作也是不需要2次读取的。假如一个写操作需要分多次写，必然会有中间状态，如果读不加锁，那么可能就会读到中间状态，那就不对了。\n假如ConcurrentHashMap提供put(key1,value1,key2,value2)，写入的时候必然会存在中间状态即key1写完成，但是key2还未写，此时如果读不加锁，那么就可能读到key1是新数据而key2是老数据的中间状态。\n虽然ConcurrentHashMap的读不需要锁，但是需要保证能读到最新数据，所以必须加volatile。即数组的引用需要加volatile，同时一个Node节点中的val和next属性也必须要加volatile。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3323,"question":"】ConcurrentHashMap为什么要用synchronized，cas不是已经可以保证操作的线程安全吗？高并发造成循环","simplecontent":null,"content":"原因：\nCAS也是适用一些场合的，比如资源竞争小时，是非常适用的，不用进行内核态和用户态之间\n的线程上下文切换，同时自旋概率也会大大减少，提升性能，但资源竞争激烈时（比如大量线\n程对同一资源进行写和读操作）并不适用，自旋概率会大大增加，从而浪费CPU资源，降低性能","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:41","updateTime":"2021-05-26 01:03:41","isExist":null},{"id":3299,"question":"】CopyOnWriteList例子？","simplecontent":null,"content":"private static CopyOnWriteArrayList<String> list = new CopyOnWriteArrayList<>();\n\n    static {\n        list.add(\"AA\");\n        list.add(\"BB\");\n        list.add(\"CC\");\n    }","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:40","updateTime":"2021-05-26 01:03:40","isExist":null},{"id":3300,"question":"】CopyOnWriteList介绍，场景，优缺点？复制并添加，后指引替换、解决并发原子问题，存在不能实时一致性和内存占用、","simplecontent":null,"content":"CopyOnWrite容器即写时复制的容器。通俗的理解是当我们往一个容器添加元素的时候，不直接往当前容器添加，而是先将当前容器进行Copy，复制出一个新的容器，然后新的容器里添加元素，添加完元素之后，再将原容器的引用指向新的容器。这样做的好处是我们可以对CopyOnWrite容器进行并发的读，而不需要加锁，因为当前容器不会添加任何元素。所以CopyOnWrite容器也是一种读写分离的思想，读和写不同的容器。\n\nCopyOnWrite容器有很多优点，但是同时也存在两个问题，即内存占用问题和数据一致性问题。所以在开发的时候需要注意一下。\n　　内存占用问题。因为CopyOnWrite的写时复制机制，所以在进行写操作的时候，内存里会同时驻扎两个对象的内存，旧的对象和新写入的对象（注意:在复制的时候只是复制容器里的引用，只是在写的时候会创建新对象添加到新容器里，而旧容器的对象还在使用，所以有两份对象内存）。如果这些对象占用的内存比较大，比如说200M左右，那么再写入100M数据进去，内存就会占用300M，那么这个时候很有可能造成频繁的Yong GC和Full GC。之前我们系统中使用了一个服务由于每晚使用CopyOnWrite机制更新大对象，造成了每晚15秒的Full GC，应用响应时间也随之变长。\n　　针对内存占用问题，可以通过压缩容器中的元素的方法来减少大对象的内存消耗，比如，如果元素全是10进制的数字，可以考虑把它压缩成36进制或64进制。或者不使用CopyOnWrite容器，而使用其他的并发容器，如ConcurrentHashMap。\n　　数据一致性问题。CopyOnWrite容器只能保证数据的最终一致性，不能保证数据的实时一致性。所以如果你希望写入的的数据，马上能读到，请不要使用CopyOnWrite容器。【当执行add或remove操作没完成时，get获取的仍然是旧数组的元素】\n转自：https://www.cnblogs.com/dolphin0520/p/3938914.html\n-----------------\nCopyOnWriteArrayList读取时不加锁只是写入和删除时加锁，所以一个线程X读取的时候另一个线程Y可能执行remove操作。remove操作首先要获取独占锁，然后进行写时复制操作，就是复制一份当前的array数组，然后在复制的新数组里面删除线程X通过get访问的元素，比如：1。删除完成后让array指向这个新的数组。\n在线程x执行get操作的时候并不是直接通过全局array访问数组元素而是通过方法的形参a访问的，a指向的地址和array指向的地址在调用get方法的那一刻是一样的，都指向了堆内存的数组对象。之后改变array指向的地址并不影响get的访问，因为在调用get方法的那一刻形参a指向的内存地址就已经确定了，不会改变。所以读的仍然是旧数组。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:40","updateTime":"2021-05-26 01:03:40","isExist":null},{"id":3301,"question":"】数组和链表如何存储元素？数组节点和链表都会存储元素，是不是说数组用来存链表","simplecontent":null,"content":"数组节点和链表都会存储元素，是不是说数组用来存链表","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:40","updateTime":"2021-05-26 01:03:40","isExist":null},{"id":3302,"question":"】hashmap 红黑树转成链表？若桶中元素小于等于6","simplecontent":null,"content":"HashMap在jdk1.8之后引入了红黑树的概念，表示若桶中链表元素超过8时，会自动转化成红黑树；若桶中元素小于等于6时，树结构还原成链表形式。","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:40","updateTime":"2021-05-26 01:03:40","isExist":null},{"id":3303,"question":"】hashmap put原理、如何判断是否重复、什么情况哈希冲突、什么时候扩容？哈希值、数组key、数组节点结构、是否转二叉树、是否扩容","simplecontent":null,"content":"哈希值、数组key、数组节点结构、是否转二叉树、是否扩容","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:40","updateTime":"2021-05-26 01:03:40","isExist":null},{"id":3304,"question":"】Java 中的 HashSet，内部是如何工作的？","simplecontent":null,"content":"HashSet 的内部采用  HashMap 来实现。由于  Map  需要  key  和  value，所以所有 key 的都有一个默认 value。类似于 HashMap， HashSet 不允许重复的key，只允许有一个 null key，意思就是  HashSet  中只允许存储一个  null  对象","filterContent":null,"type":"java-容器","status":0,"createTime":"2021-05-26 01:03:40","updateTime":"2021-05-26 01:03:40","isExist":null},{"id":3288,"question":"】synchronized 和 Lock 有什么区别？加锁类型类、方法、代码块和代码块；自动和手动获取锁和释放锁；synchronized 会造成死锁；Lock 知道是否获取锁","simplecontent":null,"content":"《加锁类型类、方法、代码块和代码块；自动和手动获取锁和释放锁；synchronized 会造成死锁；Lock 知道是否获取锁；》\n\nsynchronized 可以给类、方法、代码块加锁；而 lock 只能给代码块加锁。\nsynchronized 不需要手动获取锁和释放锁，使用简单，发生异常会自动释放锁，不会造成死锁；而 lock 需要自己加锁和释放锁，如果使用不当没有 unLock()去释放锁就会造成死锁。\n通过 Lock 可以知道有没有成功获取锁，而 synchronized 却无法办到。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3289,"question":"synchronized 和 ReentrantLock 区别是什么？","simplecontent":null,"content":"等待时，Synchronized（）中断，ReentrantLock （）中断\n\nsynchronized 早期的实现比较低效，对比 ReentrantLock，大多数场景性能都相差较大，但是在 Java 6 中对 synchronized 进行了非常多的改进。\n主要区别如下：\nReentrantLock 使用起来比较灵活，但是必须有释放锁的配合动作；\nReentrantLock 必须手动获取与释放锁，而 synchronized 不需要手动释放和开启锁；\nReentrantLock 只适用于代码块锁，而 synchronized 可用于修饰方法、代码块等。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3290,"question":"】Atomic好处？操作数值安全","simplecontent":null,"content":"在多线程场景中的自增操作是可以保证线程安全的。但是有aba问题","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3291,"question":"多线程高并发问题？","simplecontent":null,"content":"处理高并发一般有分流和队列两种分式。分流可以用集群实现。队列可以用activeMQ消息队列或者线程锁。集群我搭建过nginx+tomcat+redis的集群；消息队列就是把所有的线程消息集中管理，排成对一个一个的进行。具体的实现方式，我没有去转入的研究过。线程锁的方式在生成订单编号时用到过，就是在生成编号的方法上加上syn开头的同步锁。对了我们做项目中有个同事提到了用redis可以实现，说redis是单线程的。如果把库存放到redis里边，就可以防止负库存的实现。还有就是我们项目中有时候会用到线程池的技术，比如做数据的批量导入时，如果使用单线程方式，速度会很慢，如果引入线程池，同时开启n个线程，同时进行就可以增加很大的效率。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3294,"question":"】CAS的三个参数是什么？内存值，预期值，新值","simplecontent":null,"content":"内存值，预期值，新值\n】cas原理是什么？当预期值和内存值相同时，将内存值修改为新值\n当预期值和内存值相同时，将内存值修改为新值\n\n《内存值，新值，预期值;\n内存==预期 内存=新值》\n\n内存值V，旧的预期值A，要修改的新值B。当且仅当预期值A和内存值V相同时，将内存值V修改为B\n对CAS的理解，CAS是一种无锁算法，CAS有3个操作数，内存值V，旧的预期值A，要修改的新值B。当且仅当预期值A和内存值V相同时，将内存值V修改为B，否则什么都不做。\nCAS比较与交换的伪代码可以表示为：\ndo{\n备份旧数据；\n基于旧数据构造新数据；\n}while(!CAS( 内存地址，备份的旧数据，新数据 ))\n\n\n因为t1和t2线程都同时去访问同一变量56，所以他们会把主内存的值完全拷贝一份到自己的工作内存空间，所以t1和t2线程的预期值都为56。\n假设t1在与t2线程竞争中线程t1能去更新变量的值，而其他线程都失败。（失败的线程并不会被挂起，而是被告知这次竞争中失败，并可以再次发起尝试）。t1线程去更新变量值改为57，然后写到内存中。此时对于t2来说，内存值变为了57，与预期值56不一致，就操作失败了（想改的值不再是原来的值）。\n\n\n（上图通俗的解释是：CPU去更新一个值，但如果想改的值不再是原来的值，操作就失败，因为很明显，有其它操作先改变了这个值。）\n就是指当两者进行比较时，如果相等，则证明共享数据没有被修改，替换成新值，然后继续往下运行；如果不相等，说明共享数据已经被修改，放弃已经所做的操作，然后重新执行刚才的操作。容易看出 CAS 操作是基于共享数据不会被修改的假设，采用了类似于数据库的commit-retry 的模式。当同步冲突出现的机会很少时，这种假设能带来较大的性能提升。\n\nCAS算法在JDK中的应用\n在原子类变量中，如java.util.concurrent.atomic中的AtomicXXX，都使用了这些底层的JVM支持为数字类型的引用类型提供一种高效的CAS操作，而在java.util.concurrent中的大多数类在实现时都直接或间接的使用了这些原子变量类。\n《atomic，currenthashmap》\n\n\nCAS的缺点有哪些？仅一个变量，循环开销长，ABA\n《仅一个变量，循环开销长，ABA》\nCAS虽然很高效的解决了原子操作问题，但是CAS仍然存在三大问题。\n\n循环时间长开销很大。\n只能保证一个共享变量的原子操作。\nABA问题。\n循环时间长开销很大：\n\n我们可以看到getAndAddInt方法执行时，如果CAS失败，会一直进行尝试。如果CAS长时间一直不成功，可能会给CPU带来很大的开销。\n\n \n\n只能保证一个共享变量的原子操作：\n\n当对一个共享变量执行操作时，我们可以使用循环CAS的方式来保证原子操作，但是对多个共享变量操作时，循环CAS就无法保证操作的原子性，这个时候就可以用锁来保证原子性。\n\n ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3295,"question":"】什么是ABA问题？内存值是a，在于预期值比较之间，被别的线程改成b，有被改成a，其实有变化","simplecontent":null,"content":"《带有标记，控制变量值的版本来保证CAS的正确性》\n《初次读取的值是A，检查到它的值仍然为A，在这段期间它的值曾经被改成了B，后来又被改回为A》\n如果内存地址V初次读取的值是A，并且在准备赋值的时候检查到它的值仍然为A，那我们就能说它的值没有被其他线程改变过了吗？\n\n如果在这段期间它的值曾经被改成了B，后来又被改回为A，那CAS操作就会误认为它从来没有被改变过。这个漏洞称为CAS操作的“ABA”问题。Java并发包","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3296,"question":"】ABA问题怎么解决？版本号","simplecontent":null,"content":"《版本号》\n为了解决这个问题，提供了一个带有标记的原子引用类“AtomicStampedReference”，它可以通过控制变量值的版本来保证CAS的正确性。因此，在使用CAS前要考虑清楚“ABA”问题是否会影响程序并发的正确性，如果需要解决ABA问题，改用传统的互斥同步可能会比原子类更高效。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3297,"question":"】Synchronized特点？保证线程原子性，可见性，有序性","simplecontent":null,"content":"保证线程原子性，可见性，有序性","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3298,"question":"】synchronized保证可见性?","simplecontent":null,"content":"获得锁从内存获取最新数据，释放锁把数据刷新到内存","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:53","updateTime":"2021-05-26 01:02:53","isExist":null},{"id":3277,"question":"】线程池都有哪些状态？接收新任务且处理队列、不接受但处理队列、不接受且不处理队列、","simplecontent":null,"content":"RUNNING：这是最正常的状态，接受新的任务，处理等待队列中的任务。\nSHUTDOWN：不接受新的任务提交，但是会继续处理等待队列中的任务。\nSTOP：不接受新的任务提交，不再处理等待队列中的任务，中断正在执行任务的线程。\nTIDYING：所有的任务都销毁了，workCount 为 0，线程池的状态在转换为 TIDYING 状态时，会执行钩子方法 terminated()。\nTERMINATED：terminated()方法结束后，线程池的状态就会变成这个。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3278,"question":"】线程池中 submit() 和 execute() 方法有什么区别？有返回值和没有返回值","simplecontent":null,"content":"execute()：只能执行 Runnable 类型的任务。\nsubmit()：可以执行 Runnable 和 Callable 类型的任务。\nCallable 类型的任务可以获取执行的返回值，而 Runnable 执行无返回值。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3280,"question":"synchronized 锁升级的原理是什么？","simplecontent":null,"content":"synchronized 锁升级原理：在锁对象的对象头里面有一个 threadid 字段，在第一次访问的时候 threadid 为空，jvm 让其持有偏向锁，并将 threadid 设置为其线程 id，再次进入的时候会先判断 threadid 是否与其线程 id 一致，如果一致则可以直接使用此对象，如果不一致，则升级偏向锁为轻量级锁，通过自旋循环一定次数来获取锁，执行一定次数之后，如果还没有正常获取到要使用的对象，此时就会把锁从轻量级升级为重量级锁，此过程就构成了 synchronized 锁的升级。\n锁的升级的目的：锁升级是为了减低了锁带来的性能消耗。在 Java 6 之后优化 synchronized 的实现方式，使用了偏向锁升级为轻量级锁再升级到重量级锁的方式，从而减低了锁带来的性能消耗。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3281,"question":"】什么是死锁？线程相互占有对方想要的资源","simplecontent":null,"content":"《线程相互占有对方想要的资源》\n当线程 A 持有独占锁a，并尝试去获取独占锁 b 的同时，线程 B 持有独占锁 b，并尝试获取独占锁 a 的情况下，就会发生 AB 两个线程由于互相持有对方需要的锁，而发生的阻塞现象，我们称为死锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3282,"question":"】怎么防止死锁？使用tryLock并设置超时时间，减少同步快代码，不同功能少使用同一把锁","simplecontent":null,"content":"《使用tryLock并设置超时时间，减少同步快代码，不同功能少使用同一把锁》\n尽量使用 tryLock(long timeout, TimeUnit unit)的方法(ReentrantLock、ReentrantReadWriteLock)，设置超时时间，超时可以退出防止死锁。\n尽量使用 Java. util. concurrent 并发类代替自己手写锁。\n尽量降低锁的使用粒度，尽量不要几个功能用同一把锁。\n尽量减少同步的代码块。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3283,"question":"】ThreadLocal 是什么？线程存储数据的地方，在多线程不共享","simplecontent":null,"content":"《线程存储数据的地方，在多线程不共享》\nThreadLocal 为每个使用该变量的线程提供独立的变量副本，所以每一个线程都可以独立地改变自己的副本，而不会影响其它线程所对应的副本。\nThreadLocal 的经典使用场景是数据库连接和 session 管理等。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3284,"question":"】可重入锁区别是什么？ReentrantLock可中断，手写加解锁；synchronize不可中断，自动加解锁","simplecontent":null,"content":"《ReentrantLock 和 synchronize》\n《ReentrantLock可中断，手写加解锁；不可中断，自动加解锁》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3286,"question":"synchronized 底层实现原理？","simplecontent":null,"content":"synchronized 是由一对 monitorenter/monitorexit 指令实现的，monitor 对象是同步的基本实现单元。在 Java 6 之前，monitor 的实现完全是依靠操作系统内部的互斥锁，因为需要进行用户态到内核态的切换，所以同步操作是一个无差别的重量级操作，性能也很低。但在 Java 6 的时候，Java 虚拟机 对此进行了大刀阔斧地改进，提供了三种不同的 monitor 实现，也就是常说的三种不同的锁：偏向锁（Biased Locking）、轻量级锁和重量级锁，大大改进了其性能。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3287,"question":"】synchronized 和 volatile 的区别是什么？可见性|可见原子；是否阻塞","simplecontent":null,"content":"《可见性|可见原子；是否阻塞》\nvolatile 是变量修饰符；synchronized 是修饰类、方法、代码段。\nvolatile 仅能实现变量的修改可见性，不能保证原子性；而 synchronized 则可以保证变量的修改可见性和原子性。\nvolatile 不会造成线程的阻塞；synchronized 可能会造成线程的阻塞。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:52","updateTime":"2021-05-26 01:02:52","isExist":null},{"id":3273,"question":"】线程池等待时间作用？","simplecontent":null,"content":"线程大于核心线程数，但是线程不工作了，且超过等待时间，则释放这些线程，知道等于核心线程不在释放，但是核心的线程池也设置了等待时间，当时间超过后也会停止释放\n\n当提交一个新任务到线程池时首先线程池判断基本线程池(corePoolSize)是否已满？没满，创建一个工作线程来执行任务。满了，则进入下个流程；其次线程池判断工作队列(workQueue)是否已满？没满，则将新提交的任务存储在工作队列里。满了，则进入下个流程；最后线程池判断整个线程池(maximumPoolSize)是否已满？没满，则创建一个新的工作线程来执行任务，满了，则交给饱和策略来处理这个任务；如果线程池中的线程数量大于 corePoolSize 时，如果某线程空闲时间超过keepAliveTime，线程将被终止，直至线程池中的线程数目不大于corePoolSize；如果允许为核心池中的线程设置存活时间，那么核心池中的线程空闲时间超过 keepAliveTime，线程也会被终止。\n————————————————\n版权声明：本文为CSDN博主「qq_19006739」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_19006739/article/details/79688506","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:51","updateTime":"2021-05-26 01:02:51","isExist":null},{"id":3274,"question":"线程池设置大小?","simplecontent":null,"content":"1.FixedThreadPool（0，）\n    public static ExecutorService newFixedThreadPool(int nThreads) {\n        return new ThreadPoolExecutor(nThreads, nThreads,\n                                      0L, TimeUnit.MILLISECONDS,\n                                      new LinkedBlockingQueue<Runnable>());\n    }\ncorePoolSize与maximumPoolSize相等，即其线程全为核心线程，是一个固定大小的线程池，是其优势；\nkeepAliveTime = 0 该参数默认对核心线程无效，而FixedThreadPool全部为核心线程；\nworkQueue 为LinkedBlockingQueue（无界阻塞队列），队列最大值为Integer.MAX_VALUE。如果任务提交速度持续大余任务处理速度，会造成队列大量阻塞。因为队列很大，很有可能在拒绝策略前，内存溢出。是其劣势；\nFixedThreadPool的任务执行是无序的；\n\n\n2.CachedThreadPool\n     public static ExecutorService newCachedThreadPool() {\n        return new ThreadPoolExecutor(0, Integer.MAX_VALUE,\n                                      60L, TimeUnit.SECONDS,\n                                      new SynchronousQueue<Runnable>());\n    }\ncorePoolSize = 0，maximumPoolSize = Integer.MAX_VALUE，即线程数量几乎无限制；\nkeepAliveTime = 60s，线程空闲60s后自动结束。\nworkQueue 为 SynchronousQueue 同步队列，这个队列类似于一个接力棒，入队出队必须同时传递，因为CachedThreadPool线程创建无限制，不会有队列等待，所以使用SynchronousQueue；\n适用场景：快速处理大量耗时较短的任务，如Netty的NIO接受请求时，可使用CachedThreadPool。\n\n\n3.SingleThreadExecutor\n    public static ExecutorService newSingleThreadExecutor() {\n        return new FinalizableDelegatedExecutorService\n            (new ThreadPoolExecutor(1, 1,\n                                    0L, TimeUnit.MILLISECONDS,\n                                    new LinkedBlockingQueue<Runnable>()));\n    }\n咋一瞅，不就是newFixedThreadPool(1)吗？定眼一看，这里多了一层FinalizableDelegatedExecutorService包装，这一层有什么用呢，写个dome来解释一下：\n    public static void main(String[] args) {\n        ExecutorService fixedExecutorService = Executors.newFixedThreadPool(1);\n        ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) fixedExecutorService;\n        System.out.println(threadPoolExecutor.getMaximumPoolSize());\n        threadPoolExecutor.setCorePoolSize(8);\n        \n        ExecutorService singleExecutorService = Executors.newSingleThreadExecutor();//      运行时异常 java.lang.ClassCastException//      ThreadPoolExecutor threadPoolExecutor2 = (ThreadPoolExecutor) singleExecutorService;\n    }\n对比可以看出，FixedThreadPool可以向下转型为ThreadPoolExecutor，并对其线程池进行配置，而SingleThreadExecutor被包装后，无法成功向下转型。因此，SingleThreadExecutor被定以后，无法修改，做到了真正的Single。\n\n\n\n4.ScheduledThreadPool\n    public static ScheduledExecutorService newScheduledThreadPool(int corePoolSize) {\n        return new ScheduledThreadPoolExecutor(corePoolSize);\n    }\nnewScheduledThreadPool调用的是ScheduledThreadPoolExecutor的构造方法，而ScheduledThreadPoolExecutor继承了ThreadPoolExecutor，构造是还是调用了其父类的构造方法。\n    public ScheduledThreadPoolExecutor(int corePoolSize) {\n        super(corePoolSize, Integer.MAX_VALUE, 0, NANOSECONDS,\n              new DelayedWorkQueue());\n    }\n\n\nScheduledExecutorService scheduledThreadPool = Executors.newScheduledThreadPool(5);","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:51","updateTime":"2021-05-26 01:02:51","isExist":null},{"id":3276,"question":"自定义线程池判断线程怎么走向?","simplecontent":null,"content":"自定义线程池\n以下是自定义线程池，使用了有界队列，自定义ThreadFactory和拒绝策略的demo：\npublic class ThreadTest {\n\n    public static void main(String[] args) throws InterruptedException, IOException {\n        int corePoolSize = 2;\n        int maximumPoolSize = 4;\n        long keepAliveTime = 10;\n        TimeUnit unit = TimeUnit.SECONDS;\n        BlockingQueue<Runnable> workQueue = new ArrayBlockingQueue<>(2);\n        ThreadFactory threadFactory = new NameTreadFactory();\n        RejectedExecutionHandler handler = new MyIgnorePolicy();\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(corePoolSize, maximumPoolSize, keepAliveTime, unit,\n                workQueue, threadFactory, handler);\n        executor.prestartAllCoreThreads(); // 预启动所有核心线程\n        \n        for (int i = 1; i <= 10; i++) {\n            MyTask task = new MyTask(String.valueOf(i));\n            executor.execute(task);\n        }\n\n        System.in.read(); //阻塞主线程\n    }\n\n    static class NameTreadFactory implements ThreadFactory {\n\n        private final AtomicInteger mThreadNum = new AtomicInteger(1);\n\n        @Override\n        public Thread newThread(Runnable r) {\n            Thread t = new Thread(r, \"my-thread-\" + mThreadNum.getAndIncrement());\n            System.out.println(t.getName() + \" has been created\");\n            return t;\n        }\n    }\n\n    public static class MyIgnorePolicy implements RejectedExecutionHandler {\n\n        public void rejectedExecution(Runnable r, ThreadPoolExecutor e) {\n            doLog(r, e);\n        }\n\n        private void doLog(Runnable r, ThreadPoolExecutor e) {\n            // 可做日志记录等\n            System.err.println( r.toString() + \" rejected\");//          System.out.println(\"completedTaskCount: \" + e.getCompletedTaskCount());\n        }\n    }\n\n    static class MyTask implements Runnable {\n        private String name;\n\n        public MyTask(String name) {\n            this.name = name;\n        }\n\n        @Override\n        public void run() {\n            try {\n                System.out.println(this.toString() + \" is running!\");\n                Thread.sleep(3000); //让任务执行慢点\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        @Override\n        public String toString() {\n            return \"MyTask [name=\" + name + \"]\";\n        }\n    }}\n\n\n其中线程线程1-4先占满了核心线程和最大线程数量，然后4、5线程进入等待队列，7-10线程被直接忽略拒绝执行，等1-4线程中有线程执行完后通知4、5线程继续执行。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:51","updateTime":"2021-05-26 01:02:51","isExist":null},{"id":3269,"question":"】线程的 run() 和 start() 有什么区别？  启动、执行任务","simplecontent":null,"content":"《启动、执行任务》\nstart() 方法用于启动线程，run() 方法用于执行线程的运行时代码。run() 可以重复调用，而 start() 只能调用一次。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:50","updateTime":"2021-05-26 01:02:50","isExist":null},{"id":3270,"question":"】run() 和 start()调用多少次?多次、一次","simplecontent":null,"content":"《多次、一次》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:50","updateTime":"2021-05-26 01:02:50","isExist":null},{"id":3271,"question":"java四种线程池类型以及可选择的阻塞队列?","simplecontent":null,"content":"在重复一下新任务进入时线程池的执行策略： \n如果运行的线程少于corePoolSize，则 Executor始终首选添加新的线程，而不进行排队。（如果当前运行的线程小于corePoolSize，则任务根本不会存入queue中，而是直接运行） \n如果运行的线程大于等于 corePoolSize，则 Executor始终首选将请求加入队列，而不添加新的线程。 \n如果无法将请求加入队列，则创建新的线程，除非创建此线程超出 maximumPoolSize，在这种情况下，任务将被拒绝。 \n主要有3种类型的BlockingQueue：\n无界队列\n队列大小无限制，常用的为无界的LinkedBlockingQueue，使用该队列做为阻塞队列时要尤其当心，当任务耗时较长时可能会导致大量新任务在队列中堆积最终导致OOM。阅读代码发现，Executors.newFixedThreadPool 采用就是 LinkedBlockingQueue，而楼主踩到的就是这个坑，当QPS很高，发送数据很大，大量的任务被添加到这个无界LinkedBlockingQueue 中，导致cpu和内存飙升服务器挂掉。\n\n有界队列\n常用的有两类，一类是遵循FIFO原则的队列如ArrayBlockingQueue，另一类是优先级队列如PriorityBlockingQueue。PriorityBlockingQueue中的优先级由任务的Comparator决定。 \n使用有界队列时队列大小需和线程池大小互相配合，线程池较小有界队列较大时可减少内存消耗，降低cpu使用率和上下文切换，但是可能会限制系统吞吐量。\n在我们的修复方案中，选择的就是这个类型的队列，虽然会有部分任务被丢失，但是我们线上是排序日志搜集任务，所以对部分对丢失是可以容忍的。\n\n同步移交队列\n如果不希望任务在队列中等待而是希望将任务直接移交给工作线程，可使用SynchronousQueue作为等待队列。SynchronousQueue不是一个真正的队列，而是一种线程之间移交的机制。要将一个元素放入SynchronousQueue中，必须有另一个线程正在等待接收这个元素。只有在使用无界线程池或者有饱和策略时才建议使用该队列。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:50","updateTime":"2021-05-26 01:02:50","isExist":null},{"id":3250,"question":"当一个线程进入一个对象的synchronized方法A之后，其它线程是否可进入此对象的synchronized方法B？","simplecontent":null,"content":"答：不能。其它线程只能访问该对象的非同步方法，同步方法则不能进入。因为非静态方法上的synchronized修饰符要求执行方法时要获得对象的锁，如果已经进入A方法说明对象锁已经被取走，那么试图进入B方法的线程就只能在等锁池（注意不是等待池哦）中等待对象的锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3251,"question":"newFixedThreadPool使用什么队列?","simplecontent":null,"content":"看Executors源码可知：newFixedThreadPool使用了LinkedBlockingQueue。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3252,"question":"你知道哪些常用的阻塞队列列？","simplecontent":null,"content":"JDK7 提供了 7 个阻塞队列列。分别是\nArrayBlockingQueue ：⼀一个由数组结构组成的有界阻塞队列列。LinkedBlockingQueue ：⼀一个由链表结构组成的有界阻塞队列列。PriorityBlockingQueue      ：⼀一个⽀支持优先级排序的无界阻塞队列列。\nDelayQueue：⼀一个使用优先级队列列实现的无界阻塞队列列。\nSynchronousQueue：⼀一个不存储元素的阻塞队列列。\nLinkedTransferQueue：⼀一个由链表结构组成的无界阻塞队列列。\nLinkedBlockingDeque：⼀一个由链表结构组成的双向阻塞队列列。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3253,"question":"项目中有没有用到多线程？","simplecontent":null,"content":"1、发送邮件、短信，使用多线程异步发送；\n2、定时任务使用线程池；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3254,"question":"并行和并发有什么区别？","simplecontent":null,"content":"并行：多个处理器或多核处理器同时处理多个任务。\n并发：多个任务在同一个 CPU 核上，按细分的时间片轮流(交替)执行，从逻辑上来看那些任务是同时执行。\n如下图：\n\n并发 = 两个队列和一台咖啡机。\n并行 = 两个队列和两台咖啡机。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3255,"question":"】哪些是守护线程？保护主线程正常执行，垃圾回收器是守护线程","simplecontent":null,"content":"《保护主线程正常执行，垃圾回收器是守护线程》\n守护线程是运行在后台的一种特殊进程。它独立于控制终端并且周期性地执行某种任务或等待处理某些发生的事件。在 Java 中垃圾回收线程就是特殊的守护线程。\n】创建线程有哪几种方式？继承 Thread、实现 Runnable 接口、实现Callable接口、线程池\n\n创建线程有三种方式：\n继承 Thread 重写 run 方法；\n实现 Runnable 接口；\n实现 Callable 接口。\n线程池","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3256,"question":"】runnable 和 callable 有什么区别？runnable 没有返回值，callable 有返回值","simplecontent":null,"content":"runnable 没有返回值，callable 有返回值，callable 可以看作是 runnable 的补充。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3257,"question":"线程有哪些状态？","simplecontent":null,"content":"线程的状态：\nNEW 尚未启动\nRUNNABLE 正在执行中\nBLOCKED 阻塞的（被同步锁或者IO锁阻塞）\nWAITING 永久等待状态\nTIMED_WAITING 等待指定的时间重新被唤醒的状态\nTERMINATED 执行完成","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3259,"question":"】Java 线程如何进入五中基本状态？New、start、cpu、sleep+wait+sync+join、run完","simplecontent":null,"content":"1、新建状态（ New）：当线程对象对创建后，即进入了新建状态，如：Thread t\n= new MyThread()；\n2、就绪状态（ Runnable） ： 当调用线程对象的 start()方法（ t.start();）， 线程即进入就绪状态。处于就绪状态的线程， 只是说明此线程已经做好了准备， 随时等待 CPU 调度执行， 并不是说执行了 t.start()此线程立即就会执行；\n3、运行状态（ Running） ： 当 CPU 开始调度处于就绪状态的线程时， 此时线程才得以真正执行， 即进入到运行状态。注： 就 绪状态是进入到运行状态的唯一入口， 也就是说， 线程要想进入运行状态执行， 首先必须处于就绪状态中；\n4、阻塞状态（ Blocked）：处于运行状态中的线程由于某种原因，暂时放弃对 CPU 的使用权， 停止执行， 此时进入阻塞状态， 直到其进入到就绪状态， 才 有机会再次被 CPU 调用以进入到运行状态。\n根据阻塞产生的原因不同，    阻塞状态又可以分为三种：\n1、等待阻塞：运行状态中的线程执行 wait()方法，使本线程进入到等待阻塞状态；\n2、同步阻塞：线程在获取 synchronized 同步锁失败(因为锁被其它线程所占用)， 它会进入同步阻塞状态；\n3、其他阻塞：通过调用线程的 sleep()或 join()或发出了 I/O 请求时，线程会进入到阻塞状态。当 sleep()状态超时、join()等待线程终止或者超时、或者 I/O 处理完毕时， 线程重新转入就绪状态。\n5、死亡状态（ Dead）：线程执行完了或者因异常退出了 run()方法，该线程结束生命周期。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3260,"question":"】线程阻塞状态有哪些？等待阻塞、同步阻塞、其它","simplecontent":null,"content":"1、等待阻塞：运行状态中的线程执行 wait()方法，使本线程进入到等待阻塞状态；\n2、同步阻塞：线程在获取 synchronized 同步锁失败(因为锁被其它线程所占用)， 它会进入同步阻塞状态；\n3、其他阻塞：通过调用线程的 sleep()或 join()或发出了 I/O 请求时，线程会进入到阻塞状态。当 sleep()状态超时、join()等待线程终止或者超时、或者 I/O 处理完毕时， 线程重新转入就绪状态。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3261,"question":"】sleep() 和 wait() 有什么区别？父类不同（thread、object）、释放锁、唤醒不同","simplecontent":null,"content":"类的不同：sleep() 来自 Thread，wait() 来自 Object。\n释放锁：sleep() 不释放锁；wait() 释放锁。\n用法不同：sleep() 时间到会自动恢复；wait() 可以使用 notify()/notifyAll()直接唤醒。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3262,"question":"】Sleep和wait进入哪些状态？sleep进入阻塞、wait进入阻塞","simplecontent":null,"content":"《sleep进入阻塞、wait进入阻塞》\nsleep() 方法：\n线程主动放弃CPU，使得线程在指定的时间内进入阻塞状态，不能得到CPU 时间，指定的时间一过，线程重新进入可执行状态。典型地，sleep()被用在等待某个资源就绪的情形：测试发现条件不满足后，让线程阻塞一段时间后重新测试，直到条件满足为止。\nwait( )方法 ：\n与notify()配套使用，wait()使得线程进入阻塞状态，它有两种形式，一种允许指定以毫秒为单位的一段时间作为参数，另一种没有参数，当指定时间参数时对应的 notify() 被调用或者超出指定时间时线程重新进入可执行状态，后者则必须对应的 notify() 被调用。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3263,"question":"】Join和yield区别？join是让步，让指定线程执行完再执行；yield是让自己暂停，别人执行（不确定是谁）","simplecontent":null,"content":"《join是让步，让别人执行完在执行；yield是让自己暂停，别人执行》\n A.join，在API中的解释是，堵塞当前线程B，直到A执行完毕并死掉，再执行B。首先b线程执行，a线程join后，直接执行完a，然后才执行b，证实上述说法。\n2、A.yield，A让出位置，给B执行，B执行结束A再执行。跟join意思正好相反！首先B执行，然后A执行；在B的循环中，i=2时，A执行yield；接着B执行完，才轮到A执行。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3264,"question":"】Join和yield相同点？让别的线程先执行","simplecontent":null,"content":"让别的线程先执行","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3265,"question":"】Join和yield不同点？join不会释放cpu资源、而yield会释放cpu资源;join指定线程先执行、yield无法指定线程先执行；join进入阻塞、而yield进入就绪重新获取cpu即可执行","simplecontent":null,"content":"《join不会释放cpu资源、而yield会释放cpu资源;join指定线程先执行、yield无法指定线程先执行；join进入阻塞、而yield进入就绪重新获取cpu即可执行》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3266,"question":"】Join，Yield,wait,sleep区别?","simplecontent":null,"content":"《join是等待别人执行完再执行自己、yield让别人先执行，wait是等待（释放对线锁需要等notify唤醒）、sleep是休眠（时间片结束继续执行，不释放对象锁）》\nyiled():让步 调用 yield()方法会让当前线程交出CPU资源，让CPU去执行其他的线程。但是，yield()不能控制具体的交出CPU的时间。需要注意的是，yield()方法只能让 拥有相同优先级的线程 有获取 CPU 执行时间的机会；\n       调用yield()方法并不会让线程进入阻塞状态，而是让线程重回就绪状态，它只需要等待重新得到 CPU 的执行；\n       它同样不会释放锁。\nwait：等待\nsleep():休眠\nthreadA.join(); //等线程A执行完，再执行主线程，会阻塞当前线程，直到其他线程执行完毕，才会进入就绪状态\nyiled是让步，会使当前线程由运行状态进入到就绪状态，让其他优先级高线程先执行，但是如果是同一优先级的线程，那么谁先执行就不确定了.它不会释放锁\nwailt等待，会使当前线程进入阻塞状态，并且会释放锁\nsleep休眠，会使当前线程进入休眠阻塞状态，但不会释放锁","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3267,"question":"Yield代码?","simplecontent":null,"content":"public class TestYield { \npublic static void main(String[] args) throws Exception {\nMyThread t1 = new MyThread(\"t1\"); \nMyThread t2 = new MyThread(\"t2\"); \nt1.start(); \nt2.start();\n } \n} \nclass MyThread extends Thread { \nMyThread(final String threadName) { \nsuper(threadName); \n} \npublic void run() {\n for (int i = 1; i <= 100; i++) { \nif (i < 100 && getName().equals(\"t1\")) \nyield(); \nSystem.out.println(getName() + \":\" + i); \n} \n} \n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3268,"question":"】notify()和 notifyAll()有什么区别？唤醒一个、唤醒所有线程","simplecontent":null,"content":"《唤醒一个、唤醒所有线程》\nnotifyAll()会唤醒所有的线程，notify()之后唤醒一个线程。notifyAll() 调用后，会将全部线程由等待池移到锁池，然后参与锁的竞争，竞争成功则继续执行，如果不成功则留在锁池等待锁被释放后再次参与竞争。而 notify()只会唤醒一个线程，具体唤醒哪一个线程由虚拟机控制。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:49","updateTime":"2021-05-26 01:02:49","isExist":null},{"id":3230,"question":"volatile关键字的作用？","simplecontent":null,"content":"1.多线程主要围绕可⻅见性和原子性两个特性而展开，使用volatile关键字修饰的变量，保证了其在多线程之间的可⻅见性，即 每次读取到volatile变量，一定是最新的数据。\n2.代码底层执行不像我们看到的高级语⾔言—-Java程序这么简单，它的执行是Java代码–>字节码–>根据字节码执行对应的C/C++代码–>C/C++代码被编译成汇编语⾔言–>和硬件电路路交互，现实中，为了获取更好的性能JVM可能会对指令进行     重排序，多线程下可能会出现一些意想不到的问题。使用volatile则会对禁止语义重排序，当然这也一定程度上降低了代码 执行效率。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3231,"question":"start()方法和run()方法的区别？","simplecontent":null,"content":"1、start()⽅法来启动一个线程，真正实现了多线程运⾏。\n2、如果直接调用run(),其实就相当于是调⽤了一个普通函数⽽已，直接调⽤run()⽅法必须等待run()⽅法执⾏完毕才能执⾏下面的代码，所以执⾏路径还是只有一条，根本就没有线程的特征，所以在多线程执⾏时要使用start()方法而不是run()方法。\n】ThreadPoolExecutor和ForkJoinPool区别\n《一个任务队列、多个任务队列（业务分给不同任务队列）；》\nThreadPoolExecutor线程池，共同点都是消费者-生产者模式的实现，但是有一些不同。ThreadPoolExecutor的线程池是只有一个任务队列的，而ForkJoinPool有多个任务队列。通过ForkJoinPool的invoke或submit或execute提交任务的时候会根据一定规则分配给不同的任务队列，并且任务队列的双端队列","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3232,"question":"】Fork/Join框架的理解?⼤任务切分为若⼲子任务并⾏的执行，合并这些⼦任务的执⾏结果，线程和队列一一对应，线程完成后负责别的队列任务，但是是双向队列头拿任务，窃取线程池","simplecontent":null,"content":"1、Fork就是把一个⼤任务切分为若⼲子任务并⾏的执行。\n2、Join就是合并这些⼦任务的执⾏结果，最后得到这个⼤任务的结果。\n假如我们需要做一个比较大的任务，我们可以把这个任务分割为若干互不依赖的子任务，为了减少线程间的竞争，于是把这些子任务分别放到不同的队列里，并为每个队列创建一个单独的线程来执行队列里的任务，线程和队列一一对应，比如A线程负责处理A队列里的任务。但是有的线程会先把自己队列里的任务干完，而其他线程对应的队列里还有任务等待处理。干完活的线程与其等着，不如去帮其他线程干活，于是它就去其他线程的队列里窃取一个任务来执行。而在这时它们会访问同一个队列，所以为了减少窃取任务线程和被窃取任务线程之间的竞争，通常会使用双端队列，被窃取任务线程永远从双端队列的头部拿任务执行，而窃取任务的线程永远从双端队列的尾部拿任务执行。\n工作窃取算法的优点是充分利用线程进行并行计算，并减少了线程间的竞争，其缺点是在某些情况下还是存在竞争，比如双端队列里只有一个任务时。并且消耗了更多的系统资源，比如创建多个线程和多个双端队列。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3233,"question":"】ExecutorService线程池与ForkJoin比较？ForkJoin会窃取别的队列任务处理，一个线程没有完成任务对于ExecutorService会等待，队列无法释放资源给别人用，而ForkJoin可以从别的队列偷任务，虽然别阻塞了但是别人可以帮你继续往下执行，而ExecutorService假如有10个线程处理队列任务，但是最后一个线程很卡，别的线程虽然完成了空闲了但是却拿不到队列的任务去执行","simplecontent":null,"content":"Fork/Join与ExecutorService的主要区别在于工作窃取算法（work-stealing algorithm）。Fork/Join是实现了工作窃取算法的一种特殊的ExecutorService。 不同于Executor 框架，当一个任务等待它通过fork操作创建的子任务完成时，执行该任务的线程（称为工作线程）会寻找其他还为被执行的任务，并且开始执行这些任务。也就是等在自己的子任务完成时，还可以执行其他任务。 通过这种方式，线程充分利用运行时间，因而改善了应用的整体性能。\n普通线程更容易造成死锁，而 ForkJoinPool 却能应对相同的状况。\n首先提交的两个任务把线程池中的两个线程都占满了，而它们又分别提交了子任务，并等待子任务完成才退出\n子任务在工作队列中等待线程池中释放出空闲线程来执行，这是不可能的，所以两边互相等待，死锁了\n就是说一个任务可能要工作线程和子线程完成，但是如果没有线程了，子线程无法创建，这个任务无法完成会一直等待，一个普通线程池只有一个工作队列\n\nForkJoinPool  与普通线程池的主要区别前面提到过的，它实现了工作窃取算法。明显的内部区别是\n1.普通线程池所有线程共享一个工作队列，有空闲线程时工作队列中的任务才能得到执行\n2.ForkJoinPool 中的每个线程有自己独立的工作队列，每个工作线程运行中产生新的任务，放在队尾\n3.某个工作线程会尝试窃取别个工作线程队列中的任务，从队列头部窃取\n4.遇到 join() 时，如前面的 future.get()，如果 join 的任务尚未完成，则可先处理其他任务\n这就是 ForkJoinPool 不会像普通线程池那样被死锁的秘诀。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3234,"question":"】Forkjoin使用场景？分而治之”，递归计算，不太适合一定要按顺序执行任务","simplecontent":null,"content":"并不适合所有场景；\n特别适合用于“分而治之”，递归计算的算法；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3235,"question":"】ForkJoinTask流程？生成子任务、返回结果、异步执行任务","simplecontent":null,"content":"fork()    在当前线程运行的线程池中安排一个异步执行。简单的理解就是再创建一个子任务。\njoin()    当任务完成的时候返回计算结果。\ninvoke()    开始执行任务，如果必要，等待计算完成。\n子类：\nRecursiveAction    一个递归无结果的ForkJoinTask（没有返回值）\nRecursiveTask    一个递归有结果的ForkJoinTask（有返回值）\ninvoke(ForkJoinTasktask)：正如范例所示，ForkJoinPool类的execute()方法是异步调用的，而ForkJoinPool类的invoke()方法则是同步调用的。这个方法直到传递进来的任务执行结束后才会返回。\n\nFork/Join框架是用来解决能够通过分治技术（Divide and Conquer Technique）将问题拆分成小任务的问题。在一个任务中，先检查将要解决的问题的大小，如果大于一个设定的大小，那就将问题拆分成可以通过框架来执行的小任务。如果问题的大小比设定的大小要小，就可以直接在任务里解决这个问题，然后，根据需要返回任务的结果。下面的图形总结了这个原理。\n没有固定的公式来决定问题的参考大小（Reference Size），从而决定一个任务是需要进行拆分或不需要拆分，拆分与否仍是依赖于任务本身的特性。可以使用在任务中将要处理的元素的数目和任务执行所需要的时间来决定参考大小。测试不同的参考大小来决定解决问题最好的一个方案，将ForkJoinPool类看作一个特殊的 Executor 执行器类型。这个框架基于以下两种操作。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3236,"question":"】ReentrantReadWriteLock读写锁的使用？多线程读，单线程写","simplecontent":null,"content":"《多线程读，单线程写》\n1、读写锁：分为读锁和写锁，多个读锁不互斥，读锁与写锁互斥，这是由jvm自己控制的，你只要上好相应的锁即可。\n2、如果你的代码只读数据，可以很多人同时读，但不能同时写，那就上读锁；\n3、如果你的代码修改数据，只能有一个人在写，且不能同时读取，那就上写锁。总之，读的时候上读锁，写的时候上写锁！","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3237,"question":"】可重入锁是什么,？同一个线程可以多次获取同一把锁","simplecontent":null,"content":"同一个线程可以多次获取同一把锁","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3238,"question":"】哪些是重入锁？ReentrantLock和synchronized","simplecontent":null,"content":"可重⼊锁是指同一个线程可以多次获取同一把锁。ReentrantLock和synchronized都是可重入锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3239,"question":"】ThreadPool（线程池）⽤法与优势？工作线程都可以被重复利用","simplecontent":null,"content":"1、ThreadPoo优点\n1、减少了创建和销毁线程的次数，每个工作线程都可以被重复利用，可执行多个任务\n2、可以根据系统的承受能力，调整线程池中工作线线程的数目，防止因为消耗过多的内存，而把服务器累趴下\n(每个线程需要大约1MB内存，线程开的越多，消耗的内存也就越大，最后死机) 减少在创建和销毁线程上所花的时间以及系统资源的开销\n如不使用线程池，有可能造成系统创建大量线程而导致消耗完系统内存","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3240,"question":"ThreadLocal的设计理念与作用？","simplecontent":null,"content":"1、Java中的ThreadLocal类允许我们创建只能被同一个线程读写的变量。因此，如果一段代码含有一个ThreadLocal变量    的引用，即使两个线程同时执行这段代码，它们也无法访问到对方的ThreadLocal变量。\n1、概念：线程局部变量。在并发编程的时候，成员变量如果不做任何处理其实是线程不安全的，各个线程都在操作同一个变量，显然是不行的，并且我们也知道volatile这个关键字也是不能保证线程安全的。那么在有一种情况之下，我们需要满足这样一个条件：变量是同一个，但是每个线程都使用同一个初始值，也就是使用同一个变量的一个新的副本。这种情况之下ThreadLocal就非常适用，比如说DAO的数据库连接，我们知道DAO是单例的，那么他的属性Connection就不是一个线程安全的变量。而我们每个线程都需要使用他，并且各自使用各自的。这种情况，ThreadLocal就比较好的解决了这个问题。\n2、原理：从本质来讲，就是每个线程都维护了一个map，而这个map的key就是threadLocal，而值就是我们set的那个值，每次线程在get的时候，都从自⼰己的变量中取值，既然从自⼰己的变量中取值，那肯定就不存在线程安全问题，总体来讲，ThreadLocal这个      变量的状态根本没有发生变化，他仅仅是充当一个key的⻆角⾊色，另外提供给每一个线程一个初始值。\n3、实现机制：每个Thread对象内部都维护了一个ThreadLocalMap这样一个ThreadLocal的Map，可以存放若⼲干个\nThreadLocal。\n\n1\n\n2\t/* ThreadLocal values pertaining to this\n* by the ThreadLocal class. */\tthread. This map is maintained\n3\tThreadLocal.ThreadLocalMap\tthreadLocals\t= null;\n4、应用场景：当很多线程需要多次使用同一个对象，并且需要该对象具有相同初始化值的时候最适合使用ThreadLocal。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3241,"question":"】多线程的上下⽂文切换是什么？切换到下一个任务、同时保存上一个任务状态","simplecontent":null,"content":"CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保存上一个任务的状态，以便下次切换回这个任务时，可以再次加载这个任务的状态","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3242,"question":"】多线程的好处是什么？把程序中占据时间⻓长的任务放到后台去处理","simplecontent":null,"content":"使用多线程可以把程序中占据时间⻓长的任务放到后台去处理，如图片、视屏的下载\n发挥多核处理器的优势，并发执⾏让系统运行的更快、更流畅，用户体验更好。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3243,"question":"】多线程的缺点是什么？争夺资源","simplecontent":null,"content":"•大量的线程降低代码的可读性；\n•更多的线程需要更多的内存空间\n•当多个线程对同一个资源出现争夺时候要注意线程安全的问题。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3244,"question":"】什么是Callable和Future?有返回执行多线程","simplecontent":null,"content":"1、Callable 和 Future 是⽐较有趣的一对组合。当我们需要获取线程的执⾏结果时，就需要用到它们。Callable用于产⽣结果，Future⽤于获取结果。\n2、Callable接⼝口使用泛型去定义它的返回类型。Executors类提供了一些有用的方法去在线程池中执行Callable内的任务。由于Callable任务是并行的，必须等待它返回的结果。java.util.concurrent.Future对象解决了这个问题。\n3、在线程池提交Callable任务后返回了一个Future对象，使用它可以知道Callable任务的状态和得到Callable返回的执行 结果。Future提供了get()⽅法，等待Callable结束并获取它的执行结果。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3245,"question":"】什么是FutureTask?异步获取执行结果或取消执行任务","simplecontent":null,"content":"1、FutureTask可用于异步获取执行结果或取消执行任务的场景。通过传入Runnable或者Callable的任务给FutureTask， 直接调用其run方法或者放入线程池执行，之后可以在外部通过FutureTask的get方法异步获取执行结果，因此，\nFutureTask非常适合用于耗时的计算，主线程可以在完成自⼰己的任务后，再去获取结果。另外，FutureTask还可以确保即使调用了多次run方法，它都只会执行一次Runnable或者Callable任务，或者通过cancel取消FutureTask的执行等。\n2、futuretask可用于执行多任务、以及避免高并发情况下多次创建数据机锁的出现。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3246,"question":"】什么是自旋锁？锁被占用会一直等待，不释放cpu资源","simplecontent":null,"content":"《锁被占用会一直等待，不释放cpu资源》\n自旋锁是SMP架构中的一种low-level的同步机制。\n1、当线程A想要获取一把自旋锁而该锁又被其它线程锁持有时，线程A会在一个循环中自旋以检测锁是不是已经可用了。\n2、自选锁需要注意：\n由于自旋时不释放CPU，因而持有自旋锁的线程应该尽快释放自旋锁，否则等待该自旋锁的线程会一直在那里自旋，这就会浪费CPU时间。\n持有自旋锁的线程在sleep之前应该释放自旋锁以便其它线程可以获得自旋锁。\n3、目前的JVM实现自旋会消耗CPU，如果⻓长时间不调用doNotify方法，doWait方法会一直自旋，CPU会消耗太大\n4、自旋锁比较适用于锁使用者保持锁时间比较短的情况，这种情况自旋锁的效率比较高。\n5、自旋锁是一种对多处理器相当有效的机制，而在单处理器非抢占式的系统中基本上没有作用。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3247,"question":"】什么是线程安全和线程不安全？加锁保证数据不被其它线程访问、多线程造成脏数据","simplecontent":null,"content":"1、线程安全\n线程安全:   就是多线程访问时，采⽤了加锁机制，当一个线程访问该类的某个数据时，进⾏保护，其他线程不能进行访问，直到该线程读取完，其他线程才可使用。不会出现数据不一致或者数据污染。\nVector  是用同步方法来实现线程安全的,  而和它相似的ArrayList不是线程安全的。\n2、线程不安全\n线程不安全：就是不提供数据访问保护，有可能出现多个线程先后更改数据造成所得到的数据是脏数据线程安全问题都是由全局变量及静态变量引起的。\n若每个线程中对全局变量、静态变量只有读操作，而无写操作，一般来说，这个全局变量是线程安全的；若有多个 线程同时执行写操作，一般都需要考虑线程同步，否则的话就可能影响线程安全。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3248,"question":"举例说明同步和异步。?","simplecontent":null,"content":"答：如果系统中存在临界资源（资源数量少于竞争资源的线程数量的资源），例如正在写的数据以后可能被另一个线程读到，或者正在读的数据可能已经被另一个线程写过了，那么这些数据就必须进行同步存取（数据库操作中的排他锁就是最好的例子）。当应用程序在对象上调用了一个需要花费很长时间来执行的方法，并且不希望让程序等待方法的返回时，就应该使用异步编程，在很多情况下采用异步途径往往更有效率。事实上，所谓的同步就是指阻塞式操作，而异步就是非阻塞式操作。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3249,"question":"请说出与线程同步以及线程调度相关的方法?","simplecontent":null,"content":"答：\n- wait()：使一个线程处于等待（阻塞）状态，并且释放所持有的对象的锁；\n- sleep()：使一个正在运行的线程处于睡眠状态，是一个静态方法，调用此方法要处理InterruptedException异常；\n- notify()：唤醒一个处于等待状态的线程，当然在调用此方法的时候，并不能确切的唤醒某一个等待状态的线程，而是由JVM确定唤醒哪个线程，而且与优先级无关；\n- notityAll()：唤醒所有处于等待状态的线程，该方法并不是将对象的锁给所有线程，而是让它们竞争，只有获得锁的线程才能进入就绪状态；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:48","updateTime":"2021-05-26 01:02:48","isExist":null},{"id":3221,"question":"】怎么唤醒一个阻塞的线程?sleep()或者join()","simplecontent":null,"content":"1.如果线程是因为调用了wait()、sleep()或者join()方法而导致的阻塞；\n\n1、suspend与resume\nJava废弃    suspend()    去挂起线程的原因，是因为    suspend()    在导致线程暂停的同时，并不会去释放任何锁资源。其他线程都无法访问被它占用的锁。直到对应的线程执行 resume() 方法后，被挂起的线程才能继续，从而其它被阻塞在这个锁的线程才可以继续执行。\n但是，如果 resume() 操作出现在 suspend() 之前执行，那么线程将一直处于挂起状态，同时一直占用锁，这就产生了死锁。而且，对于被挂起的线程，它的线程状态居然还是  Runnable。\n2、wait与notify\nwait与notify必须配合synchronized使用，因为调用之前必须持有锁，wait会⽴立即释放锁，notify则是同步块执行完了才释放\n3、await与singal\nCondition类提供，而Condition对象由new       ReentLock().newCondition()获得，与wait和notify相同，因为使用\nLock锁后无法使用wait方法\n4、park与unpark\nLockSupport是一个非常方便实用的线程阻塞工具，它可以在线程任意位置让线程阻塞。和Thread.suspenf()相\n比，它弥补了由于resume()在前发生，导致线程无法继续执行的情况。和Object.wait()相比，它不需要先获得某个对  象的锁，也不会抛出IException异常。可以唤醒指定线程。\n2.如果线程遇到了IO阻塞，无能为力，因为IO是操作系统实现的，Java代码并没有办法直接接触到操作系统。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3222,"question":"Java中用到的线程调度算法是什么?","simplecontent":null,"content":"1.  抢占式。一个线程用完CPU之后，操作系统会根据线程优先级、线程饥饿情况等数据算出一个总的优先级并分配下一个时间片给某个线程执行。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3223,"question":"】单例模式的如何保证线程安全性?双重锁检测","simplecontent":null,"content":"老生常谈的问题了，⾸首先要说的是单例模式的线程安全意味着：某个类的实例在多线程环境下只会被创建一次出来。单例模式有很多种的写法，我总结一下：\n（1）饿汉式单例模式的写法：线程安全\n（2）懒汉式单例模式的写法：非线程安全\n（3）双检锁单例模式的写法：线程安全","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3224,"question":"】如何保证多线程下 i++ 结果正确？AtomicInteger、synchronized、lock、redis锁","simplecontent":null,"content":"《AtomicInteger、synchronized、lock、redis锁》\n1volatile只能保证你数据的可⻅见性，获取到的是最新的数据，不能保证原子性；\n2用AtomicInteger保证原子性。\n3synchronized既能保证共享变量可⻅见性，也可以保证锁内操作的原子性。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3225,"question":"】一个线程如果出现了运⾏时异常会怎么样?","simplecontent":null,"content":"3如果这个异常没有被捕获的话，这个线程就停止执行了。\n4另外重要的一点是：如果这个线程持有某个对象的监视器，那么这个对象监视器会被⽴立即释放.","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3226,"question":"如何在两个线程之间共享数据?","simplecontent":null,"content":"通过在线程之间共享对象就可以了，然后通过wait/notify/notifyAll、await/signal/signalAll进行唤起和等待，比方说阻塞  队列列BlockingQueue就是为线程之间共享数据而设计的。\n1.卖票系统：\n2.银行存取款：","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3227,"question":"如果同步块内的线程抛出异常会发生什么？","simplecontent":null,"content":"synchronized方法正常返回或者抛异常而终止，JVM会自动释放对象锁","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3228,"question":"如果你提交任务时，线程池队列已满，这时会发⽣什么？","simplecontent":null,"content":"1、如果你使用的LinkedBlockingQueue，也就是⽆界队列列的话，没关系，继续添加任务到阻塞队列列中等待执⾏行，因为\nLinkedBlockingQueue可以近乎认为是一个无穷大的队列列，可以无限存放任务；\n2、如果你使用的是有界队列列比方说ArrayBlockingQueue的话，任务⾸首先会被添加到ArrayBlockingQueue中，\nArrayBlockingQueue满了，则会使用拒绝策略RejectedExecutionHandler处理满了的任务，默认是AbortPolicy。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3229,"question":"高并发、任务执行时间短的业务怎样使用线程池？并发不高、任务执行时间长的业务怎样使用线程池？并发高、业务执行时间长的业务怎样使用用线程池？","simplecontent":null,"content":"1.高并发、任务执行时间短的业务：线程池线程数可以设置为CPU核数+1，减少线程上下⽂文的切换。\n2.并发不高、任务执行时间⻓长的业务要区分开看：\na.假如是业务时间⻓长集中在IO操作上，也就是IO密集型的任务，因为IO操作并不占用CPU，所以不要让所有的CPU闲 下来，可以加大线程池中的线程数目，让CPU处理更多的业务\nb.假如是业务时间⻓长集中在计算操作上，也就是计算密集型任务，这个就没办法了，和（1）一样吧，线程池中的线程数设置得少一些，减少线程上下⽂文的切换\n并发高、业务执行时间⻓长，解决这种类型任务的关键不在于线程池而在于整体架构的设计，看看这些业务里面某些数据 是否能做缓存是第一步，增加服务器是第二步，⾄至于线程池的设置，设置参考（2）。最后，业务执行时间⻓长的问题，也   可能需要分析一下，看看能不能使用中间件对任务进行拆分和解耦。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3217,"question":"数据库行锁是什么有什么缺点?","simplecontent":null,"content":"第二我们可能会想到，那用数据库行锁来锁住这条数据，这种方案相比排它锁解决了跨进程的问题，但是依然有缺点。\n其中一个缺点就是性能问题，在数据库层面会一直阻塞，直到事务提交，这里也是串行执行；\n第二个需要注意设置事务的隔离级别是Read Committed，否则并发情况下，另外的事务无法看到提交的数据，依然会导致超卖问题；\n缺点三是容易打满数据库连接，如果事务中有第三方接口交互(存在超时的可能性)，会导致这个事务的连接一直阻塞，打满数据库连接。\n最后一个缺点，容易产生交叉死锁，如果多个业务的加锁控制不好，就会发生AB两条记录的交叉死锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3218,"question":"java中加锁的方式有哪些,如何实现怎么个写法.?","simplecontent":null,"content":"1、java中有两种锁：一种是方法锁或者对象锁(在非静态方法或者代码块上加锁)，第二种是类锁(在静态方法或者class上加锁)；\n2、注意：其他线程可以访问未加锁的方法和代码；synchronized同时修饰静态方法和实例方法，但是运行结果是交替进行的，这证明 了类锁和对象锁是两个不一样的锁，控制着不同的区域，它们是互不⼲干扰的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3219,"question":"spring单例为什么没有安全问题(ThreadLocal)?","simplecontent":null,"content":"1、ThreadLocal：spring使用ThreadLocal解决线程安全问题；ThreadLocal会为每一个线程提供一个独⽴立的变量副本，从而        隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自⼰己的变量副本，从而也就没有必要对该变量进行同步了。\nThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。概括起来说，对于         多线程资源共享的问题，同步机制采用了“以时间换空间”的方式，而ThreadLocal采用了“以空间换时间”的方式。前者仅提供一份变量，让不同的线程排队访问，而后者为每一个线程都提供了一份变量，因此可以同时访问而互不影响。在很多情况下，\nThreadLocal比直接使用synchronized同步机制解决线程安全问题更简单，更方便，且结果程序拥有更高的并发性。\n2、单例：无状态的Bean(无状态就是一次操作，不能保存数据。无状态对象(Stateless Bean)，就是没有实例变量的对象，不能保存数据，是不变类，是线程安全的。)适合用不变模式，技术就是单例模式，这样可以共享实例，提高性能。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3220,"question":"】可以运行时kill掉一个线程吗？不可以，除非run跑完或者异常或者中断","simplecontent":null,"content":"《不可以，除非run跑完或者异常》\na.不可以，线程有5种状态，新建（new）、可运行（runnable）、运行中（running）、阻塞（block）、死亡（dead）。\nb.只有当线程run方法或者主线程main方法结束，又或者抛出异常时，线程才会结束生命周期。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:47","updateTime":"2021-05-26 01:02:47","isExist":null},{"id":3197,"question":"volatile 能使得一个非原子操作变成原子操作吗？","simplecontent":null,"content":"\"对long 类型的成员变量会被多个线程访问，如计数器、价格等，最好设置为 volatile。 \nJava 中读取 long 类型变量不是原子的，分成两步，一个线程正在修改 long 变量值，\n另一个线程可能只能看到该值的一半（前 32 位）。对一个 volatile 型的 long 或 double 变量的读写是原子。\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3198,"question":"volatile如何保证原子性?","simplecontent":null,"content":"\"多个线程访问同一个实例（int）变量需要加锁进行同步。\nvolatile修饰long和double可以保证其操作原子性\"\n\t\"volatile 变量提供顺序和可见性保证\n在没有同步块的情况下赋值也不会与其他语句重排序\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3199,"question":"为什么用volatile修饰long和double是原子性?","simplecontent":null,"content":"long写是分","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3200,"question":"】多线程缺点？\tcpu变慢，死锁，读写不一致","simplecontent":null,"content":"《cpu变慢，死锁，读写不一致》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3201,"question":"】解除死锁方法？超时，设置锁","simplecontent":null,"content":"《超时，设置锁》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3202,"question":"】Runnable 和 Thread 用哪个好？Runnable，是接口可以多继承","simplecontent":null,"content":"《Runnable，是接口可以多继承》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3203,"question":"】SimpleDateFormat  是线程安全的吗?不是，使用synchronized或ThreadLocal或Joda-Time","simplecontent":null,"content":"不是，使用synchronized或ThreadLocal或Joda-Time","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3204,"question":"Joda-Time使用?","simplecontent":null,"content":"dateTime.toString(\"yyyy-MM-dd HH:mm:ss\")","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3205,"question":"】阻塞和非阻塞区别 \t？\"阻塞是结果还在处理，线程会被挂起、非阻塞是结果还在处理，线程返回去干别的事情","simplecontent":null,"content":"\"阻塞是结果还在处理，线程会被挂起，结果回来后线程也返回\n飞阻塞是结果还在处理，线程返回去干别的事情\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3206,"question":"】守护线程和非守护线程有什么区别？守护线程等待飞守护线程执行完后关闭，例如gc线程","simplecontent":null,"content":"《守护线程等待飞守护线程执行完后关闭，例如gc线程》\n守护线程：和主线程一起销毁\n非守护线程: 和主线程互不影响\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3207,"question":"】线程饿死是什么？无法获得资源去执行","simplecontent":null,"content":"无法获得资源去执行","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3208,"question":"】多线程的效率一定快吗？不一定（暂用cpu太多卡住）","simplecontent":null,"content":"不一定（暂用cpu太多卡住）","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3209,"question":"】多线程三个特征定义是什么？原子性、可见性、有序性","simplecontent":null,"content":"《原子性、可见性、有序性》\n《一个操作不干扰，别线程可见变量修改，用同步保证指令不被重排序》\n\n原子性：是指一个操作是不可中断的。即使是多个线程一起执行的时候，一个操作一旦开始，就不会被其他线程干扰。\n　　　　比如，对于一个静态全局变量int i，两个线程同时对它赋值，线程A给他赋值为1，线程B给他赋值为-1。那么不管这两个线程\n　　　　以何种方式。何种步调工作，i的值要么是1，要么是-1.线程A和线程B之间是没有干扰的。这就是原子性的一个特点，不可被中断。\n\n可见性：是指当一个线程修改了某一个共享变量的值，其他线程是否能够立即知道这个修改。显然，对于串行来说，可见性问题是不存在的。\n\n有序性：在并发时，程序的执行可能会出现乱序。给人的直观感觉就是：写在前面的代码，会在后面执行。有序性问题的原因是因为程序在执行时，可能会进行指令重排，重排后的指令与原指令的顺序未必一致。《强迫要求按顺序执行代码》\n即程序执行的顺序按照代码的先后顺序执行。\nint i = 0; \nboolean flag = false; \ni = 1; //语句1 \nflag = true; //语句2\n比如上面的代码中，语句1和语句2谁先执行对最终的程序结果并没有影响，那么就有可能在执行过程中，语句2先执行而语句1后执行。但是要注意，虽然处理器会对指令进行重排序，但是它会保证程序最终结果会和代码顺序执行结果相同，那么它靠什么保证的呢？再看下面一个例子：\nint a = 10;    //语句1\nint r = 2;    //语句2\na = a + 3;    //语句3\nr = a*a;     //语句4\n这段代码有4个语句，那么可能的一个执行顺序是：\n语句2 -> 语句1 -> 语句3 -> 语句4\n那么可不可能是这个执行顺序：\n语句2 -> 语句1 -> 语句4 -> 语句3。\n因为处理器在进行重排序时是会考虑指令之间的数据依赖性，如果一个指令Instruction 2必须用到Instruction 1的结果，那么处理器会保证Instruction 1会在Instruction 2之前执行。虽然重排序不会影响单个线程内程序执行的结果，但是多线程呢？下面看一个例子：\n上面代码中，由于语句1和语句2没有数据依赖性，因此可能会被重排序。假如发生了重排序，在线程1执行过程中先执行语句2，而此是线程2会以为初始化工作已经完成，那么就会跳出while循环，去执行doSomethingwithconfig(context)方法，而此时context并没有被初始化，就会导致程序出错。\n从上面可以看出，指令重排序不会影响单个线程的执行，但是会影响到线程并发执行的正确性。也就是说，要想并发程序正确地执行，必须要保证原子性、可见性以及有序性。只要有一个没有被保证，就有可能会导致程序运行不正确。\n在Java内存模型中，允许编译器和处理器对指令进行重排序，但是重排序过程不会影响到单线程程序的执行，却会影响到多线程并发执行的正确性。\n在Java里面，可以通过volatile关键字来保证一定的“有序性”。另外可以通过synchronized和Lock来保证有序性，很显然，synchronized和Lock保证每个时刻是有一个线程执行同步代码，相当于是让线程顺序执行同步代码，自然就保证了有序性。另外，Java内存模型具备一些先天的“有序性”，即不需要通过任何手段就能够得到保证的有序性，这个通常也称为 happens-before 原则。如果两个操作的执行次序无法从happens-before原则推导出来，那么它们就不能保证它们的有序性，虚拟机可以随意地对它们进行重排序。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3210,"question":"】redis分布式锁缺点是什么？设置上锁的原子性、超时时间设置不合理的情况","simplecontent":null,"content":"　　前面的方案本质上是把数据库当作分布式锁来使用，所以同样的道理，redis，zookeeper都相当于数据库的一种锁，其实当遇到加锁问题，代码本身无论是synchronize或者各种lock使用起来都比较复杂，所以思路是把代码处理一致性的问难题交给一个能够帮助你处理一致性的问题的专业组件，比如数据库，比如redis，比如zookeeper等。\n　　这里我们分析下分布式锁的优缺点：\n优点：\n可以避免大量对数据库排他锁的征用，提高系统的响应能力；\n缺点：\n设置锁和设置超时时间的原子性；\n不设置超时时间的缺点；\n服务宕机或线程阻塞超时的情况；\n超时时间设置不合理的情况；\n加锁和过期设置的原子性\n　　redis加锁的命令setnx，设置锁的过期时间是expire，解锁的命令是del，但是2.6.12之前的版本中，加锁和设置锁过期命令是两个操作，不具备原子性。如果setnx设置完key-value之后，还没有来得及使用expire来设置过期时间，当前线程挂掉了或者线程阻塞，会导致当前线程设置的key一直有效，后续的线程无法正常使用setnx获取锁，导致死锁。\n　　针对这个问题，redis2.6.12以上的版本增加了可选的参数，可以在加锁的同时设置key的过期时间，保证了加锁和过期操作原子性的。\n　　但是，即使解决了原子性的问题，业务上同样会遇到一些极端的问题，比如分布式环境下，A获取到了锁之后，因为线程A的业务代码耗时过长，导致锁的超时时间，锁自动失效。后续线程B就意外的持有了锁，之后线程A再次恢复执行，直接用del命令释放锁，这样就错误的将线程B同样Key的锁误删除了。代码耗时过长还是比较常见的场景，假如你的代码中有外部通讯接口调用，就容易产生这样的场景。\n设置合理的时长\n　　刚才讲到的线程超时阻塞的情况，那么如果不设置时长呢，当然也不行，如果线程持有锁的过程中突然服务宕机了，这样锁就永远无法失效了。同样的也存在锁超时时间设置是否合理的问题，如果设置所持有时间过长会影响性能，如果设置时间过短，有可能业务阻塞没有处理完成，是否可以合理的设置锁的时间?\n续命锁\n　　这是一个很不容易解决的问题，不过有一个办法能解决这个问题，那就是续命锁，我们可以先给锁设置一个超时时间，然后启动一个守护线程，让守护线程在一段时间之后重新去设置这个锁的超时时间，续命锁的实现过程就是写一个守护线程，然后去判断对象锁的情况，快失效的时候，再次进行重新加锁，但是一定要判断锁的对象是同一个，不能乱续。\n　　同样，主线程业务执行完了，守护线程也需要销毁，避免资源浪费，使用续命锁的方案相对比较而言更复杂，所以如果业务比较简单，可以根据经验类比，合理的设置锁的超时时间就行。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3211,"question":"】高并发系统如何做性能优化？redis缓存、异步队列、异步feign、优化调用时长、动静态资源分离、多台服务器、多线程、数据库sql优化、数据库分库分表、索引、限流","simplecontent":null,"content":"《redis缓存、异步队列、异步feign、优化调用时长、动静态资源分离、多台服务器、多线程、数据库sql优化、数据库分库分表、索引、限流》\n1、高并发系统性能优化：\n优化程序，优化服务配置，优化系统配置\n1.尽量使用缓存，包括用户缓存，信息缓存等，多花点内存来做缓存，可以大量减少与数据库的交互，提高性能。\n2.用jprofiler等工具找出性能瓶颈，减少额外的开销。\n3.优化数据库查询语句句，减少直接使用hibernate等工具的直接生成语句句（仅耗时较⻓长的查询做优化）。\n4.优化数据库结构，多做索引，提高查询效率。\n5.统计的功能尽量做缓存，或按每天一统计或定时统计相关报表，避免需要时进行统计的功能。\n6.能使用静态⻚页面的地方尽量使用，减少容器的解析（尽量将动态内容生成静态html来显示）。\n7.解决以上问题后，使用服务器集群来解决单台的瓶颈问题。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3212,"question":"】防止库存超卖方法有哪些？redis分布式锁、异步队列或异步feign、超时回滚、数据库悲观锁","simplecontent":null,"content":"《redis分布式锁、异步队列或异步feign、超时回滚、数据库悲观锁》\n1、悲观锁：在更新库存期间加锁，不允许其它线程修改；\n1、数据库锁：select xxx for update；\n2、分布式锁；\n2、乐观锁：使用带版本号的更新。每个线程都可以并发修改，但在并发时，只有一个线程会修改成功，其它会返回失败。\n1、redis    watch：监视键值对，作用时如果事务提交exec时发现监视的监视对发生变化，事务将被取消。\n3、消息队列列：通过 FIFO 队列列，使修改库存的操作串串⾏化。\n《分布式锁，队列，集群，redis缓存》\n4、总结：总的来说，不能把压力放在数据库上，所以使用 \"select xxx for update\" 的方式在高并发的场景下是不可行\n的。FIFO     同步队列列的方式，可以结合库存限制队列列⻓长，但是在库存较多的场景下，又不太适用。所以相对来说，我会倾向于选择：乐观锁 / 缓存锁 / 分布式锁的方式。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3213,"question":"】使用悲观锁，乐观锁处理高并发是否可行？悲观锁加锁的时间太长、乐观锁不按顺序获取对应版本","simplecontent":null,"content":"悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。[1]      悲观锁假定其他用户企图访问或者改变你正在访问、更改的对象的概率是很高的，因此在悲观锁的环境中，在你开始改变此对象之前就将该对象锁住，并且直到你提交了所作的更改之后才释放锁。悲观的缺陷是不论是页锁还是行锁，加锁的时间可能会很长，这样可能会长时间的限制其他用户的访问，也就是说悲观锁的并发访问性不好。\n乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。[1] 乐观锁不能解决脏读的问题。    乐观锁则认为其他用户企图改变你正在更改的对象的概率是很小的，因此乐观锁直到你准备提交所作的更改时才将对象锁住，当你读取以及改变该对象时并不加锁。可见乐观锁加锁的时间要比悲观锁短，乐观锁可以用较大的锁粒度获得较好的并发访问性能。但是如果第二个用户恰好在第一个用户提交更改之前读取了该对象，那么当他完成了自己的更改进行提交时，数据库就会发现该对象已经变化了，这样，第二个用户不得不重新读取该对象并作出更改。这说明在乐观锁环境中，会增加并发用户读取对象的次数。\n　最后我来给你总结一下，如果你可以非常熟练的解决这类问题，第一时间肯定想到的是：数据库版本号解决方案或者分布式锁的解决方案；但是如果你是一个初学者，相信你一定会第一时间考虑到Java中提供的同步锁或者数据库行锁。\n\n.悲观锁带来的性能问题。我们试想一个场景：如一个金融系统，当某个操作员读取用户的数据，并在读出的用户数据的基础上进行修改时（如更改用户帐户余额），如果采用悲观锁机制，也就意味着整个操作过程中\nselect * from account where name=”张三” for update\n像乐观锁适用于写比较少的情况下，即冲突真的很少发生的时候，这样可以省去了锁的开销，加大了系统的整个吞吐量。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3214,"question":"】为什么高并发的时候不使用乐观锁,而是悲观锁呢?高并发量大，可能会一直拿不到锁而循环","simplecontent":null,"content":"《高并发量大，可能会一直拿不到锁而循环》\n高并发的时候更新量大，可能会一直拿不到锁而一直循环下去，就像优先级低的线程一样，并发大 悲观锁更能保障一致性\n乐观锁的实现原理是cas操作，java中轻量级锁也是基于cas实现的。\n悲观锁最大的问题就是阻塞问题。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3215,"question":"】高并发锁类别有哪些？悲观锁、乐观锁、分布式锁","simplecontent":null,"content":"　　不同的应用场景对锁的要求各不相同，我们先来看下锁都有哪些类别，这些锁之间有什么区别。\n1.悲观锁(synchronize)\nJava 中的重量级锁 synchronize\n数据库行锁\n2.乐观锁\nJava 中的轻量级锁 volatile 和 CAS\n数据库版本号\n3.分布式锁(Redis锁)","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3216,"question":"同步排它锁是什么，有什么缺点?","simplecontent":null,"content":"　　这时候很容易想到最简单的方案：同步排它锁(synchronize)。但是排他锁的缺点很明显：\n其中一个缺点是，线程串行导致的性能问题，性能消耗比较大。\n另一个缺点是无法解决分布式部署情况下跨进程问题；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:46","updateTime":"2021-05-26 01:02:46","isExist":null},{"id":3190,"question":"】什么方法保证变量原子性？ychronized代码块，lock接口，Atomic","simplecontent":null,"content":"《sychronized代码块，lock接口，AtomicInteger、AtomicLong、AtomicReference》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3191,"question":"】poi生成excel文件有什么方法提高效率？多线程","simplecontent":null,"content":"《多线程》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3192,"question":"】一个线程运行时发生异常会怎样？将会停止执行","simplecontent":null,"content":"《异常没有被捕获该线程将会停止执行》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3193,"question":"】violatile 关键字的作用？修饰变量是可见性，和 CAS 结合保证原子性","simplecontent":null,"content":"修饰变量是可见性，和 CAS 结合保证原子性","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3194,"question":"】新建 T1、T2、T3 三个线程，如何保证它们按顺序执行？新建t1,t2,t3线程，在t2调用t1，在t3调用t2，然后执行t3，t2，t1","simplecontent":null,"content":"《新建t1,t2,t3线程，在t2调用t1，在t3调用t2，然后执行t3，t2，t1，就会先后执行t1，t2，t3》\nT3先执行，在T3的run中，调用t2.join，让t2执行完成后再执行t3\n在T2的run中，调用t1.join，让t1执行完成后再让T2执行\npublic class JoinTest2 {\n \n    // 1.现在有T1、T2、T3三个线程，你怎样保证T2在T1执行完后执行，T3在T2执行完后执行\n \n \n    public static void main(String[] args) {\n \n        final Thread t1 = new Thread(new Runnable() {\n \n            @Override\n            public void run() {\n                System.out.println(\"t1\");\n            }\n        });\n        final Thread t2 = new Thread(new Runnable() {\n \n            @Override\n            public void run() {\n                try {\n                    //引用t1线程，等待t1线程执行完\n                    t1.join();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"t2\");\n            }\n        });\n        Thread t3 = new Thread(new Runnable() {\n \n            @Override\n            public void run() {\n                try {\n                    //引用t2线程，等待t2线程执行完\n                    t2.join();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"t3\");\n            }\n        });\n        t3.start();\n        t2.start();\n        t1.start();\n    }\n}\n\n\t\"用 join 方法\n新建t1,t2,t3线程，在t2调用t1，在t3调用t2，然后执行t3，t2，t1，就会先后执行t1，t2，t3\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3195,"question":"】如何停止线程？run完、stop强行、阻塞下中断","simplecontent":null,"content":"（run完、stop强行、阻塞下中断）\n\t1.run方法完成后线程终止  2.stop强行终止  3.interrupt方法中断线程（阻塞等待状态下）","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3196,"question":"】什么是多线程安全？1.对全局变量或静态变量做写操作 2.对数据库进行先查询后插入","simplecontent":null,"content":"《1.对全局变量或静态变量做写操作 2.对数据库进行先查询后插入》\n1.多个线程同时共享，同一个全局变量或静态变量，做写的操作时，可能会发生数据冲突问题\n2.做读操作是不会发生数据冲突问题\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:45","updateTime":"2021-05-26 01:02:45","isExist":null},{"id":3178,"question":"ReentrantReadWriteLock和ReadWriteLock区别?","simplecontent":null,"content":"\"ReentrantLock是一个独占锁，也就是说只能由一个线程获取锁，只做读的操作就不是很合适，读的线程并不需要保证其线程的安全性，任何一个线程都能去获取锁\nReentrantReadWriteLock就是这样的一个锁，在其内部分为读锁和写锁，可以有N个读操作线程获取到写锁，但是只能有1个写操作线程获取到写锁，\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3179,"question":"】高并发、任务执行时间短的业务怎样使用线程池？N + 1","simplecontent":null,"content":"N + 1","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3180,"question":"】并发不高、任务执行时间长的业务怎样使用线程池？2n+1","simplecontent":null,"content":"2n+1","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3181,"question":"】并发高、业务执行时间长的业务怎样使用线程池？看业务","simplecontent":null,"content":"\"（1）线程数可以设置为CPU核数+1，减少线程上下文的切换\n（2）并发不高、任务执行时间长的业务要区分开看：\n　a）业务时间长集中在IO操作上，IO操作并不占用CPU，不要让CPU闲下来，加大线程池数目\n　b）业务时间长集中在计算操作上，线程池中的线程数设置得少一些，减少线程上下文切换\n（3）解决这种类型任务的关键不在于线程池而在于整体架构的设计，看看业务里面某些数据是否能做缓存是第一步，增加服务器是第二步，至于线程池的设置，设置参考（2）最后，业务执行时间长的问题，能不能使用中间件对任务进行拆分和解耦。\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3182,"question":"】同步方法和同步块，哪个是更好的选择？同步的范围越小越好。","simplecontent":null,"content":"同步的范围越小越好。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3183,"question":"多线程数量-测试估计?","simplecontent":null,"content":"（线程等待+线程cpu）/线程cpu*数目","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3184,"question":"】多线程数量-cpu型？核心数+1","simplecontent":null,"content":"核心数+1","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3185,"question":"】多线程数量-io型？2*核心数+1","simplecontent":null,"content":"Io不需要占用很多cpu","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3186,"question":"】偏向锁定义？加锁操作，线程获锁后再次请求锁，无需再做任何同步","simplecontent":null,"content":"《加锁操作，线程获锁后再次请求锁，无需再做任何同步》\n(像可重定义锁)","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3187,"question":"】synchronized 底层实现原理？线程获取对象的监视器，进入同步快或方法，其它阻塞在入口进入队列，执行完后释放锁，唤醒队列的线程重新尝试获取监视器","simplecontent":null,"content":"线程获取对象的监视器，进入同步快或方法，其它阻塞在入口进入队列，执行完后释放锁，唤醒队列的线程重新尝试获取监视器","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3188,"question":"】volatile与synchronized区别？修饰变量、修饰变量与方法；保持可见性不阻塞、可见性原子性会阻塞","simplecontent":null,"content":"《修饰变量、修饰变量与方法；保持可见性不阻塞、可见性原子性会阻塞》\n1.volatile修饰变量，synchronized还修饰方法\n2.volatile保证可见性不能同步不会阻塞，synchronized保证可见性和原子性会阻塞\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3189,"question":"为什么需要volidate?","simplecontent":null,"content":"修饰变量每次获取和更新值是将数据刷新到主内存，不进行重排序","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:44","updateTime":"2021-05-26 01:02:44","isExist":null},{"id":3163,"question":"】线程数量怎么算？","simplecontent":null,"content":"《最佳线程数目 = （（线程等待时间+线程CPU时间）/线程CPU时间 ）* CPU数目 》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3164,"question":"】线程池是什么时候创建线程的？","simplecontent":null,"content":"任务提交的时候","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3165,"question":"】任务runnable task是先放到core到maxThread之间的线程，还是先放到队列？","simplecontent":null,"content":"先放队列","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3166,"question":"】队列中的任务是什么时候取出来的？","simplecontent":null,"content":"《一个任务完成后，会取下一个任务》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3167,"question":"】什么时候会触发reject策略？队列满并且maxthread也满，还有新任务","simplecontent":null,"content":"《队列满并且maxthread也满，还有新任务》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3168,"question":"】core到maxThread之间的线程什么时候会die?没有任务时，或者抛异常时","simplecontent":null,"content":"《没有任务时，或者抛异常时》   \n\n   core线程也会die的，core到maxThread之间的线程有可能会晋升到core线程区间，\n\n   core max只是个计数，线程并不是创建后就固定在一个区间了","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3169,"question":"】task抛出异常，线程池work thread能运行其他任务吗?不能，创建新的线程运行","simplecontent":null,"content":"《不能，创建新的线程运行》\n新线程可以运行其他task。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3170,"question":"】线程池作用？开销减少、响应速度","simplecontent":null,"content":"《开销减少、响应速度》\n1.减少资源的开销 \n减少了每次创建线程、销毁线程的开销。\n2.提高响应速度 \n每次请求到来时，由于线程的创建已经完成，故可以直接执行任务，因此提高了响应速度。\n3.提高线程的可管理性 \n线程是一种稀缺资源，若不加以限制，不仅会占用大量资源，而且会影响系统的稳定性。 \n因此，线程池可以对线程的创建与停止、线程数量等等因素加以控制，使得线程在一种可控的范围内运行，不仅能保证系统稳定运行，而且方便性能调优。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3171,"question":"synchronized四个状态?","simplecontent":null,"content":"无锁状态、偏向锁、轻量级锁、重量级锁\n.1.1 偏向锁\n一句话总结它的作用：减少统一线程获取锁的代价。在大多数情况下，锁不存在多线程竞争，总是由同一线程多次获得，那么此时就是偏向锁。\n核心思想：\n如果一个线程获得了锁，那么锁就进入偏向模式，此时Mark Word的结构也就变为偏向锁结构，当该线程再次请求锁时，无需再做任何同步操作，即获取锁的过程只需要检查Mark Word的锁标记位为偏向锁以及当前线程ID等于Mark Word的ThreadID即可，这样就省去了大量有关锁申请的操作。\n5.1.2 轻量级锁\n轻量级锁是由偏向锁升级而来，当存在第二个线程申请同一个锁对象时，偏向锁就会立即升级为轻量级锁。注意这里的第二个线程只是申请锁，不存在两个线程同时竞争锁，可以是一前一后地交替执行同步块。\n5.1.3 重量级锁\n重量级锁是由轻量级锁升级而来，当同一时间有多个线程竞争锁时，锁就会被升级成重量级锁，此时其申请锁带来的开销也就变大。\n重量级锁一般使用场景会在追求吞吐量，同步块或者同步方法执行时间较长的场景。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3172,"question":"synchronized原理？进入前，内置锁和数据锁，监控对象设置当前线程，计数器+1，监控对象清空","simplecontent":null,"content":"在进入同步代码之前先获取锁，获取到锁之后锁的计数器+1，同步代码执行完锁的计数器-1，如果获取失败就阻塞式等待锁的释放。只是他们在同步块识别方式上有所不一样，从class字节码文件可以表现出来，一个是通过方法flags标志，一个是monitorenter和monitorexit指令操作。\n每一个锁都对应一个monitor对象，在HotSpot虚拟机中它是由ObjectMonitor实现的（C++实现）。每个对象都存在着一个monitor与之关联，对象与其monitor之间的关系有存在多种实现方式，如monitor可以与对象一起创建销毁或当线程试图获取对象锁时自动生成，但当一个monitor被某个线程持有后，它便处于锁定状态。\n\nObjectMonitor中有两个队列_WaitSet和_EntryList，用来保存ObjectWaiter对象列表(每个等待锁的线程都会被封装ObjectWaiter对象)，_owner指向持有ObjectMonitor对象的线程，当多个线程同时访问一段同步代码时，首先会进入_EntryList 集合，当线程获取到对象的monitor 后进入 _Owner 区域并把monitor中的owner变量设置为当前线程同时monitor中的计数器count加1，若线程调用 wait() 方法，将释放当前持有的monitor，owner变量恢复为null，count自减1，同时该线程进入 WaitSe t集合中等待被唤醒。若当前线程执行完毕也将释放monitor(锁)并复位变量的值，以便其他线程进入获取monitor(锁)。   monitor对象存在于每个Java对象的对象头中(存储的指针的指向)，synchronized锁便是通过这种方式获取锁的，也是为什么Java中任意对象可以作为锁的原因，同时也是notify/notifyAll/wait等方法存在于顶级对象Object中的原因(关于这点稍后还会进行分析)","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3173,"question":"synchronized的特性?","simplecontent":null,"content":"1.1 原子性\n所谓原子性就是指一个操作或者多个操作，要么全部执行并且执行的过程不会被任何因素打断，要么就都不执行。\n在Java中，对基本数据类型的变量的读取和赋值操作是原子性操作，即这些操作是不可被中断的，要么执行，要么不执行。但是像i++、i+=1等操作字符就不是原子性的，它们是分成读取、计算、赋值几步操作，原值在这些步骤还没完成时就可能已经被赋值了，那么最后赋值写入的数据就是脏数据，无法保证原子性。\n被synchronized修饰的类或对象的所有操作都是原子的，因为在执行操作之前必须先获得类或对象的锁，直到执行完才能释放，这中间的过程无法被中断（除了已经废弃的stop()方法），即保证了原子性。\n注意！面试时经常会问比较synchronized和volatile，它们俩特性上最大的区别就在于原子性，volatile不具备原子性。\n1.2 可见性\n可见性是指多个线程访问一个资源时，该资源的状态、值信息等对于其他线程都是可见的。\nsynchronized和volatile都具有可见性，其中synchronized对一个类或对象加锁时，一个线程如果要访问该类或对象必须先获得它的锁，而这个锁的状态对于其他任何线程都是可见的，并且在释放锁之前会将对变量的修改刷新到主存当中，保证资源变量的可见性，如果某个线程占用了该锁，其他线程就必须在锁池中等待锁的释放。\n而volatile的实现类似，被volatile修饰的变量，每当值需要修改时都会立即更新主存，主存是共享的，所有线程可见，所以确保了其他线程读取到的变量永远是最新值，保证可见性。\n1.3 有序性\n有序性值程序执行的顺序按照代码先后执行。\nsynchronized和volatile都具有有序性，Java允许编译器和处理器对指令进行重排，但是指令重排并不会影响单线程的顺序，它影响的是多线程并发执行的顺序性。synchronized保证了每个时刻都只有一个线程访问同步代码块，也就确定了线程执行同步代码块是分先后顺序的，保证了有序性。\n1.4 可重入性\nsynchronized和ReentrantLock都是可重入锁。当一个线程试图操作一个由其他线程持有的对象锁的临界资源时，将会处于阻塞状态，但当一个线程再次请求自己持有对象锁的临界资源时，这种情况属于重入锁。通俗一点讲就是说一个线程拥有了锁仍然还可以重复申请锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3174,"question":"偏向锁?","simplecontent":null,"content":"在大多数情况下，线程之间不存在竞争关系，即一个锁会被某个线程多次使用。如果每次都需要申请锁，开销会比较大。因此出现了偏向锁，获取偏向锁之后，如果是不存在其他线程竞争锁，那么就不需要调用CAS来获取锁，以达到减少I/O的目的","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3175,"question":"tryLock 作用?","simplecontent":null,"content":"\"tryLock()方法是有返回值的，它表示用来尝试获取锁，如果获取成功，则返回true，\n如果获取失败（即锁已被其他线程获取），则返回false，这个方法无论如何都会立即返回。\n在拿不到锁时不会一直在那等待。\nif (lock.tryLock()) {System.out.println(tName + \"\"获取到锁！\"\");} else {return;}\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3176,"question":"lock()与tryLock()的区别?","simplecontent":null,"content":"\"lock()方法是一个无条件的锁，lock函数是阻塞的，会一直等待\ntryLock()方法只有在成功获取了锁的情况下才会返回true，如果别的线程当前正持有锁，则会立即返回false！如果为这个方法加上timeout参数，则会在等待timeout的时间才会返回false或者在获取到锁的时候返回true。\ntryLock函数时非阻塞的，调用后立即返回\n调用lock或者tryLock后，都需要调用unlock来解锁。\"\nlock.lockInterruptibly作用\t\"获取了锁定立即返回，如果没有获取锁定，当前线程处于休眠状态，直到或者锁定，或者当前线程被别的线程中断，使用 thread2.interrupt()中断等待\n\"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3177,"question":"lock和trylock和lockInterruptibly作用?","simplecontent":null,"content":"只能有其中一个作为获取锁，都是用unlock解锁，","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:43","updateTime":"2021-05-26 01:02:43","isExist":null},{"id":3150,"question":"】为什么需要多线程？同时执行。提高速度","simplecontent":null,"content":"多线程可以提高程序的执行性能。例如，有个 90 平方的房子，一个人打扫需要花费 30 分钟，三个人打扫就只需要 10 分钟，这三个人就是程序中的“多线程”。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3151,"question":"】进程和线程的区别？？一个功能有多个线程执行、一段程序有线程执行","simplecontent":null,"content":"答案：ab\n进程是程序的一次执行，线程是程序的一段片段\n进程间不共享内存，线程在进程中，可以共享内存\n线程间可以通信，进程间不能通信\n以上都不正确","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3152,"question":"】通常说的并发是不是针对多线程？并发是多个用户或者说多个请求要同时对同一条记录进行操作，和是不是同一段代码没关系","simplecontent":null,"content":"并发是多个用户或者说多个请求要同时对同一条记录进行操作，和是不是同一段代码没关系。好比说多个用户同时登陆一个系统时，都需要用到登陆的相关代码，是不会发生什么冲突的。好比说对一个财务系统，两个人同时对总钱数进行操作，一个加10块一个减100块，注意这两个操作是同时进行的，那系统就不知道是加还是减了，这是并发问题","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3153,"question":"】多人操作一个方法是多线程吗？不是，是同一时间对某个片段被多个线程同时执行","simplecontent":null,"content":"《不是，是同一时间对某个片段被多个线程同时执行》\n多线程可以理解为一个程序中的某个片段同时被多个任务调用执行，形成并发的多个线程，能够独立运行，互不干扰，也可以互相通信。QQ就是典型例子，每开一个聊天窗口就创建了一个进程，你泡你的妞我泡我的妞，互不干涉，高兴的话我们也可以交流一下泡妞经验","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3154,"question":"家电网政采项目超时问题?","simplecontent":null,"content":"如果你的并发确实超过 20 个，那么加大并发 active 是必须的，除非你接受列长时间的等待（这个是刚需）\n如果你只是 21 个线程，但不是并发超过20个需求（也就是线程激活，但不一定在处理需求，可能是等待），那么你应该在每个线程的需求处理完成之后及时关闭连接（也就是让连接回到连接池，让其他线程可以用）\n\n查看 GC 日志，full gc 并没有增加，而 young gc 有小幅度上升，但是无论怎么 GC 显然不可能占用 1 到 2 秒的时间\n在正常情况下，依赖的后端接口返回时间大约是 100 毫秒，而线程池 corePoolSize 设置为 20，可以承受单机 200QPS 左右\n\n\n今后要推动测试部门与我们合作进行必要的线上压力测试，这显然是必要的也是亟待实施的\n\n此前一直比较关注 jvm 调优，也可以看到经过几轮的 jvm 调优，服务性能有了很大幅度的提高，即使在三倍压力下，GC 量和耗时都并没有显著增加，没有达到影响业务的程度\n但是，对于线程池的使用和调优明显展现出经验不足和关注不够，预先没有预估过线程池的抗压能力与瓶颈，这么大的坑此前没有过任何考虑和评估简直无法想象\n目前线程池 corePoolSize 设置仍保持 20，queueCapacity 由原来的 1000 下调为 10，maxPoolSize 上调到 200\n可以看到，此前的设置是显然不合理的，此前的设计理念是，20 线程并发足以支持线上流量，意外的情况下缓存到 queue 中，所以 queue 设置为 1000 只是为了缓存意外情况的突发事件，而 maxPoolSize 于此并没有任何作用\n更新后的配置 corePoolSize 用来解决日常的并发请求，queue 仅作为临时缓存，maxPoolSize 则用来在洪峰到来之际迅速扩充线程池响应高并发请求\n在极端情况下，后端接口返回全部达到 1 秒的超时，200 线程并发可以承受单机 200QPS 的压力，是足够的","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3155,"question":"】QPS是什么？每秒多少线程","simplecontent":null,"content":"每秒多少线程","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3156,"question":"一般如何使用同步，类锁会起作用，对象锁不起作用?","simplecontent":null,"content":"都访问一个对象时，没有区别，但多个线程访问多个对象时，同步方法没用，是线程并行访问；而静态方法加上synchronized关键字，可以保障同一时刻只有一个线程访问\n\npackage com.sml.mybatisdemo.controller;\n\npublic class VoTest {\n    private int num=1;\n    private void increase(){\nsynchronized (VoTest.class){\n            this.num++;\n        }\n    }\n    private int read(){\n        return this.num;\n    }\n    public static void main(String[] args) {\n        final VoTest test=new VoTest();\n        for (int i = 0; i < 500; i++) {\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    test.increase();\n                }\n            }).start();\n        }\n        //如果还有子线程在运行，主线程就主动让出cpu资源\n        //直到所有的子线程都运行结束\n        if(Thread.activeCount()>1){\n            Thread.yield();\n        }\n        System.out.println(\"num=\"+test.read());\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3157,"question":"】java中哪种同步锁比较好用？synchronized简单，用于单机；lock代码复杂，用于单机；atomic只能同步一个值；redis分布式锁适合集群","simplecontent":null,"content":"《synchronized简单，用于单机；lock代码复杂，用于单机；atomic只能同步一个值；redis分布式锁适合集群》\nsynchronized用法简单，同步方法或者同步块，但是比较重量级。\n\nlock用起来稍麻烦，API层面的同步，竞争激zhidao烈性能比版synchronized好很多。\nAtomic性能比synchronized略逊，而激烈的时候，也能维持常态，但是只能同步一个值。\nvolatile轻量级强制读取内存权， 禁止指令重排，特定场合使用，不是万能的同步，理解原理分析后才能使用。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3158,"question":"】类锁和对象锁区别？对象锁用在sync的非静态方法、同步块的this或非this对象；类锁用在静态方法，同步块的类.class；   对象锁针对一个对象才能锁住，而类锁针对同一个类才能锁住","simplecontent":null,"content":"对象锁作用的是synchronized修饰的非静态方法，或者是同步方法块中this对象和非this对象。\n类锁作用于synchronized修饰的静态方法，或者是同步方法块中的类.class。\n类的实例对象可以有多个，但是每个类只有一个class类型的对象","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3159,"question":"】同步方法使用类锁还是对象锁好?对象锁好","simplecontent":null,"content":"对象锁好","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3160,"question":"】同步方法和同步代码块区别?方法和代码块，当前类和this||某个数据","simplecontent":null,"content":"同步方法默认用this或者当前类class对象作为锁。\n同步代码可以选择以什么来加锁，比同步方法更细颗粒化，同步代码可以同步有同步问题的部分代码而不是整个方法。\n同步方法用关键字synchronized修饰方法，同步代码主要修饰需要进行同步的代码块，用synchronized（object）｛代码内容｝进行修饰。\n1.同步块需要注明锁定对象，同步方法默认锁定this\n这段代码的打印结果是，methodA…..methodC…..会很快打印出来，methodB…..会隔一段时间才打印出来，那么methodB为什么不能像methodC那样很快被调用呢？\n在启动线程1调用方法A后，接着会让线程1休眠5秒钟，这时会调用方法C，注意到方法C这里用synchronized进行加锁，这里锁的对象是str这个字符串对象。但是方法B则不同，是用当前对象this进行加锁，注意到方法A直接在方法上加synchronized，这个加锁的对象是什么呢？显然，这两个方法用的是一把锁。\n*由这样的结果，我们就知道这样同步方法是用什么加锁的了，由于线程1在休眠，这时锁还没释放，导致线程2只有在5秒之后才能调用方法B，由此，可知两种加锁机制用的是同一个锁对象，即当前对象。\n另外，同步方法直接在方法上加synchronized实现加锁，同步代码块则在方法内部加锁，很明显，同步方法锁的范围比较大，而同步代码块范围要小点，一般同步的范围越大，性能就越差，一般需要加锁进行同步的时候，肯定是范围越小越好，这样性能更好*。\n\n//    synchronized(this)\n//    method1-----开始\n//    method2-----开始\n//    method1------结束\n//    method2------结束\n\n//    String aa=\"88\";\n//    synchronized(aa)\n//    method1-----开始\n//    method1------结束\n//    method2-----开始\n//    method2------结束\n\n//    String aa=new String ();\n//    synchronized(aa)\n//    method1-----开始\n//    method2-----开始\n//    method2------结束\n//    method1------结束\n\n//    String aa=new String ();\n//    public  void method1(String v)\n//        synchronized(aa)\n//    method1-----开始\n//    method2-----开始\n//    method1------结束\n//    method2------结束\n\n    //    String aa=\"888\";\n//    public  void method1(String v)\n//        synchronized(aa)\n//    method1-----开始\n//    method1------结束\n//    method2-----开始\n//    method2------结束\n    \n//    static String aa=new String ();\n//    public  void method1(String v)\n//        synchronized(aa)\n//    method1-----开始\n//    method1------结束\n//    method2-----开始\n//    method2------结束\n\n\n//    synchronized(Demo5.class)\n//    method1-----开始\n//    method1------结束\n//    method2-----开始\n//    method2------结束\n\n//public  static synchronized void method1(String v)（相当于class）\n//        method1------开始\n//        method1------结束\n//        method2------开始\n//        method2------结束\n\n//public  synchronized void method1(String v)（相当于this）\n//        method1------开始\n//        method2------开始\n//        method1------结束\n//        method2------结束","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3161,"question":"方法锁synchronized(this)，类锁synchronized(Demo.Class)?","simplecontent":null,"content":"（方法锁也是对象锁）\n对象锁（synchronized修饰方法或代码块）\n当一个对象中有synchronized method 或synchronized block 的时候，调用此对象的同步方法或进入其同步区域时，就必须先获得对象锁。\n如果此对象的对象锁已被其他调用者占用，则需要等待此锁被释放。（方法锁也是对象锁）\njava的所有对象都含有一个互斥锁，这个锁由jvm自动获取和释放。\n线程进入synchronized 方法的时候获取该对象的锁，当然如果已经有线程获取了这个对象的锁，那么当前线程会等待；\nsynchronized方法正常返回或者抛异常而终止，jvm会自动释放对象锁。这里也体现了用synchronized来加锁的一个好处，即 ：\n方法抛异常的时候，锁仍然可以由jvm来自动释放\n对象锁的两种方式\n1、方法锁\n\n \n2、代码块形式\n\n \n类锁（synchronized修饰静态的方法或者代码块）\n由于一个class不论被实例化多少次，其中的静态方法和静态变量在内存中都只有一份。所以，一旦一个静态的方法被声明为synchronized。此类所有的实例对象在调用此方法，共用同一把锁，我们称之为类锁。\n前方高能：重点：要考的哦\n对象锁是用来控制实例方法之间的同步，而类锁是用来控制静态方法（或者静态变量互斥体）之间的同步的。\n类锁只是一个概念上的东西，并不是真实存在的，他只是用来帮助我们理解锁定实例方法和静态方法的区别的。\njava类可能会有很多对象，但是只有一个Class(字节码)对象，也就是说类的不同实例之间共享该类的Class对象。Class对象其实也仅仅是1个java对象，只不过有点特殊而已。\n由于每个java对象都有1个互斥锁，而类的静态方法是需要Class对象。所以所谓的类锁，只不过是Class对象的锁而已。\n获取类的Class对象的方法有好几种，最简单的是[类名.class]的方式。(度：获取字节码的三种方式)\n来看下类锁的两种方式\n方式1：\n\n \n方式2：\n \n \n\n\n其中在方法锁层面可以有如下3种方式：\n1. 修饰实例方法，作用于当前实例加锁，进入同步代码前要获得当前实例的锁\n2. 静态方法，作用于当前类对象加锁，进入同步代码前要获得当前类对象的锁\n3. 修饰代码块，指定加锁对象，对给定对象加锁，进入同步代码库前要获得给定对象的锁。\n一、方法锁实例与分析\n  类中非静态方法上的锁；用this做锁；\n\n二、类锁实例与分析\n    类中静态方法上的锁；用XXX.class做锁；\n\n三、引用对象作为锁，代码块实例与分析\n     用类中的成员变量引用做锁；\n对于类锁，则会把整个类锁住，也就说只能有一个对象拥有当前类的锁。当一个对象拥有了类锁之后，另外一个对象还想竞争锁的话则会被阻塞。两个对象A，B，如果A正在访问一个被类锁修饰的方法function，那么B则不能访问。因为类锁只能在同一时刻被一个对象拥有。相对于对象锁，则是不同。还是A，B两个对象，如果A正在访问对象锁修饰的function，那么这个时候B也可以同时访问。\n对于对象锁，当一个对象拥有锁之后，访问一个加了对象锁的方法，而该方法中又调用了该类中其他加了对象锁的方法，那么这个时候是不会阻塞住的。这是java通过可重入锁机制实现的。可重入锁指的是当一个对象拥有对象锁之后，可以重复获取该锁。因为synchronized块是可重入的，所以当你访问一个对象锁的方法的时候，在该方法中继续访问其他对象锁方法是不会被阻塞的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3162,"question":"】线程类的构造方法、静态块是被哪个线程调用的?被New类的线程锁调用，不是自身线程","simplecontent":null,"content":"线程类的构造方法、静态块是被new这个线程类所在的线程所调用的，而run方法里面的代码才是被线程自身所调用的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:42","updateTime":"2021-05-26 01:02:42","isExist":null},{"id":3135,"question":"你对线程优先级的理解是什么？","simplecontent":null,"content":"每一个线程都是有优先级的，一般来说，高优先级的线程在运行时会具有优先权，但这依赖于线程调度的实现，这个实现是和操作系统相关的(OS dependent)。我们可以定义线程的优先级，但是这并不能保证高优先级的线程会在低优先级的线程前执行。线程优先级是一个int变量(从1-10)，1代表最低优先级，10代表最高优先级。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3136,"question":"】高并发使用多线程？提高并发处理能力","simplecontent":null,"content":"提高并发处理能力  典型的如服务器 \n异步处理，比如用户注册时需要给用户加积分等，这些任务可能比较耗时，所以通过多线程异步执行 一般配合队列 \n后台线程，比如定期的清理数据库连接池的连接  过期session 过期cache等 ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3137,"question":"多线程处理多个请求?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3138,"question":"什么是条件锁、读写锁、自旋锁、可重入锁？","simplecontent":null,"content":"自旋锁\n首先是一种锁，与互斥锁相似，基本作用是用于线程（进程）之间的同步。与普通锁不同的是，一个线程A在获得普通锁后，如果再有线程B试图获取锁，那么这个线程B将会挂起（阻塞）；试想下，如果两个线程资源竞争不是特别激烈，而处理器阻塞一个线程引起的线程上下文的切换的代价高于等待资源的代价的时候（锁的已保持者保持锁时间比较短），那么线程B可以不放弃CPU时间片，而是在“原地”忙等，直到锁的持有者释放了该锁，这就是自旋锁的原理，可见自旋锁是一种非阻塞锁。\n二、自旋锁可能引起的问题：\n1.过多占据CPU时间：如果锁的当前持有者长时间不释放该锁，那么等待者将长时间的占据cpu时间片，导致CPU资源的浪费，因此可以设定一个时间，当锁持有者超过这个时间不释放锁时，等待者会放弃CPU时间片阻塞；\n4.读写锁\n读写锁将对一个资源（比如文件）的访问分成了2个锁，一个读锁和一个写锁。\n正因为有了读写锁，才使得多个线程之间的读操作不会发生冲突。\nReadWriteLock就是读写锁，它是一个接口，ReentrantReadWriteLock实现了这个接口。\n可以通过readLock()获取读锁，通过writeLock()获取写锁。\n1.可重入锁\n如果锁具备可重入性，则称作为可重入锁。像synchronized和ReentrantLock都是可重入锁，可重入性在我看来实际上表明了锁的分配机制：基于线程的分配，而不是基于方法调用的分配。举个简单的例子，当一个线程执行到某个synchronized方法时，比如说method1，而在method1中会调用另外一个synchronized方法method2，此时线程不必重新去申请锁，而是可以直接执行方法method2。\nclass MyClass {\n    public synchronized void method1() {\n        method2();\n    }\n \n    public synchronized void method2() {\n \n    }\n}\n上述代码中的两个方法method1和method2都用synchronized修饰了，假如某一时刻，线程A执行到了method1，此时线程A获取了这个对象的锁，而由于method2也是synchronized方法，假如synchronized不具备可重入性，此时线程A需要重新申请锁。但是这就会造成一个问题，因为线程A已经持有了该对象的锁，而又在申请获取该对象的锁，这样就会线程A一直等待永远不会获取到的锁。\n2.可中断锁\n可中断锁：顾名思义，就是可以相应中断的锁。\n在Java中，synchronized就不是可中断锁，而Lock是可中断锁。\n如果某一线程A正在执行锁中的代码，另一线程B正在等待获取该锁，可能由于等待时间过长，线程B不想等待了，想先处理其他事情，我们可以让它中断自己或者在别的线程中中断它，这种就是可中断锁。\n在前面演示lockInterruptibly()的用法时已经体现了Lock的可中断性。\n\n2.】公平锁代码？Lock加true，已经上锁进入队列\n3.\n公平锁即尽量以请求锁的顺序来获取锁。比如同是有多个线程在等待一个锁，当这个锁被释放时，等待时间最久的线程（最先请求的线程）会获得该所，这种就是公平锁。\n非公平锁即无法保证锁的获取是按照请求锁的顺序进行的。这样就可能导致某个或者一些线程永远获取不到锁。\n在Java中，synchronized就是非公平锁，它无法保证等待的线程获取锁的顺序。\n而对于ReentrantLock和ReentrantReadWriteLock，它默认情况下是非公平锁，但是可以设置为公平锁。\n三、独享锁/共享锁\n独享锁是指该锁一次只能被一个线程所持有。\n共享锁是指该锁可被多个线程所持有。\n对于Java ReentrantLock而言，其是独享锁。但是对于Lock的另一个实现类ReadWriteLock，其读锁是共享锁，其写锁是独享锁。\n读锁的共享锁可保证并发读是非常高效的，读写，写读 ，写写的过程是互斥的。\n独享锁与共享锁也是通过AQS来实现的，通过实现不同的方法，来实现独享或者共享。\n对于Synchronized而言，当然是独享锁。\n四、互斥锁/读写锁\n上面讲的独享锁/共享锁就是一种广义的说法，互斥锁/读写锁就是具体的实现。\n互斥锁在Java中的具体实现就是ReentrantLock\n读写锁在Java中的具体实现就是ReadWriteLock","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3139,"question":"】线程上下文切换是什么含义？从当前执行任务切换到另一个任务执行","simplecontent":null,"content":"就是从当前执行任务切换到另一个任务执行的过程。但是，为了确保下次能从正确的位置继续执行，在切换之前，会保存上一个任务的状态。\n\n进程上下文切换与线程上下文切换最主要的区别就是线程的切换虚拟空间内存是相同的（因为都是属于自己的进程），但是，进程切换的虚拟空间内存则是不同的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3140,"question":"MySQL 行锁、表锁、悲观锁、乐观锁的特点与应用?","simplecontent":null,"content":"表级锁： 开销小，加锁快；不会出现死锁(因为MyISAM 会一次性获得SQL 所需的全部锁)；\n锁定粒度大，发生锁冲突的概率最高,并发度最低。\n行级锁： 开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最低,并发度\n也最高。\n页锁：开销和加锁速度介于表锁和行锁之间；会出现死锁；锁定粒度介于表锁和行锁之间，\n并发度一般\n行锁和表锁\n1.主要是针对锁粒度划分的，一般分为：行锁、表锁、库锁\n（1）行锁：访问数据库的时候，锁定整个行数据，防止并发错误。\n（2）表锁：访问数据库的时候，锁定整个表数据，防止并发错误。\n2.行锁和表锁的区别：\n表锁： 开销小，加锁快，不会出现死锁；锁定力度大，发生锁冲突概率高，并发度最低\n行锁： 开销大，加锁慢，会出现死锁；锁定粒度小，发生锁冲突的概率低，并发度高\n悲观锁和乐观锁\n（1）悲观锁：顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次\n在拿数据的时候都会上锁，这样别人想拿这个数据就会block 直到它拿到锁。\n传统的关系型数据库里边就用到了很多这种锁机制，比如行锁，表锁等，读锁，写锁等，都\n是在做操作之前先上锁。\n（2）乐观锁： 顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不\n会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，可以使用版本\n号等机制。\n乐观锁适用于多读的应用类型， 这样可以提高吞吐量， 像数据库如果提供类似于\nwrite_condition 机制的其实都是提供的乐观锁。\n（3）悲观锁和乐观锁的区别：\n两种锁各有优缺点，不可认为一种好于另一种，像乐观锁适用于写比较少的情况下，即冲突\n真的很少发生的时候，这样可以省去了锁的开销，加大了系统的整个吞吐量。但如果经常产\n生冲突，上层应用会不断的进行retry，这样反倒是降低了性能，所以这种情况下用悲观锁\n就比较合适。\n共享锁\n共享锁指的就是对于多个不同的事务，对同一个资源共享同一个锁。相当于对于同一把门，\n它拥有多个钥匙一样。就像这样，你家有一个大门，大门的钥匙有好几把，你有一把，你女\n朋友有一把，你们都可能通过这把钥匙进入你们家，这个就是所谓的共享锁。\n刚刚说了，对于悲观锁，一般数据库已经实现了，共享锁也属于悲观锁的一种，那么共享锁\n在mysql 中是通过什么命令来调用呢。通过查询资料，了解到通过在执行语句后面加上lock\nin share mode 就代表对某些资源加上共享锁了。\n什么时候使用表锁\n对于InnoDB 表，在绝大部分情况下都应该使用行级锁，因为事务和行锁往往是我们之所以\n选择InnoDB 表的理由。但在个别特殊事务中，也可以考虑使用表级锁。\n第一种情况是：事务需要更新大部分或全部数据，表又比较大，如果使用默认的行锁，不\n仅这个事务执行效率低，而且可能造成其他事务长时间锁等待和锁冲突，这种情况下可以考\n虑使用表锁来提高该事务的执行速度。\n第二种情况是：事务涉及多个表，比较复杂，很可能引起死锁，造成大量事务回滚。这种\n情况也可以考虑一次性锁定事务涉及的表，从而避免死锁、减少数据库因事务回滚带来的开\n销。\n当然，应用中这两种事务不能太多，否则，就应该考虑使用MyISAM 表了。\n表锁和行锁应用场景：\n表级锁使用与并发性不高，以查询为主，少量更新的应用，比如小型的web 应用；\n而行级锁适用于高并发环境下，对事务完整性要求较高的系统，如在线事务处理系统","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3141,"question":"】多线程使用场景？导数据","simplecontent":null,"content":"1.同时执行任务\nPoi分批插入数据，同时插入5条sql，同时查询多条sql，首先建立2*cpu的最大线程数，然后每个线程分配n个数据拆分，然后使用callable进行获取执行线程任务，任务里再拆分1000条批量执行。\n2.假如数据量很大，我会将数据放到一个大集合中，然后按照一定的比例分配数目，同时我自己写了一个分页类，线程的数量可以根据分页类来自动调整。\n3.队列配合多线程同时消费  短信+邮件\n4.异步调用  使用线程池实现异步调用https://www.cnblogs.com/winner-0715/p/10076832.html\n\n\n（1）一个浏览器必须能同时下载多个图片\n（2）一个web服务器必须能同时相应多个用户请求\n（3）Java虚拟机本身就在后台提供了一个超级线程来进行垃圾回收\n @Resource(name = \"defaultThreadPool\")\n    private ThreadPoolTaskExecutor poolTaskExecutor;//第一种方式\n    \n    @GetMapping(value = \"/aaaaa\")\n    public void ReceivePsrJobRun(){\n        List<BookStatistic> bookList = null;\n        bookList = getPsrList();\n        //接收集合各段的 执行的返回结果\n        List<Future<String>> futureList = new ArrayList<Future<String>>();\n        //集合总条数\n        int size = bookList.size();\n        //将集合切分的段数(2*CPU的核心数)\n        int sunSum = 2*Runtime.getRuntime().availableProcessors();\n        int listStart,listEnd;\n        //当总条数不足sunSum条时 用总条数 当做线程切分值\n        if(sunSum > size){\n            sunSum = size;\n        }\n        ExecutorService executor = Executors.newFixedThreadPool(sunSum);//第二种方式\n        //定义子线程\n        /*BookThread bookThread;*/\n        //将list 切分多份 多线程执行\n        for (int i = 0; i < sunSum; i++) {\n            //计算切割  开始和结束\n            listStart = size / sunSum * i ;\n            listEnd = size / sunSum * ( i + 1 );\n            //最后一段线程会 出现与其他线程不等的情况\n            if(i == sunSum - 1){\n                listEnd = size;\n            }\n            //线程切断**/\n            List<BookStatistic> sunList = bookList.subList(listStart,listEnd);\n            //子线程初始化\n            BookThread bookThread = new BookThread(i,sunList);\n            //多线程执行\n            futureList.add(executor.submit(bookThread));\n        }\n        System.out.println(\"----------1111111111\");\n        //对各个线程段结果进行解析\n        for(Future<String> future : futureList){\n            try {\n                String str ;\n                if(null != future ){\n                    str = future.get().toString();\n                    System.out.println(\"##############current thread id =\"+Thread.currentThread().getName()+\",result=\"+str);\n                }else{\n                    System.err.println(\"失败\");\n                }\n            } catch (InterruptedException | ExecutionException e) {\n                e.printStackTrace();\n            }\n        }\n        System.out.println(\"----------2222\");\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3142,"question":"线程和请求数数量?","simplecontent":null,"content":"线程池内线程数 = 物理线程数 * （CPU密集阶段时间比例 + IO密集阶段时间比例） / CPU密集阶段时间比例 \n因此理想状况下可以定义线程池内线程数为 20 * （1 + 9） / 1 = 200，当然这是理想情况下，服务器需要一定的CPU资源来维持服务器运转，所以实际线程数肯定小于200。线程数定义太多有什么问题？如果线程数太多，比如大于200，比如是400，那么同一时间能接受400条请求，但是CPU资源需要在400个线程间轮流切换，处理每个请求的时间只有原先的一半。\n————————————————\n版权声明：本文为CSDN博主「jb_hz」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_27529917/article/details/78454891","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3143,"question":"】并发和并行区别？一段时间、同一时间","simplecontent":null,"content":"《一段时间、同一时间》\n并行是指同一时间处理任务，而并发一般是指一段时间，比如一秒内能处理多少的请求数。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3144,"question":"线程池及异步请求的意义?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3145,"question":"1000 个多并发线程，10 台机器，每台机器 4 核的，设计线程池大小。?","simplecontent":null,"content":"I/O密集型任务 FileInputStream  BufferedOutputStream \nCPU密集型任务  count++;\n如何任务是密集型I/O任务。那么就需要充分利用CPU资源。I/O在阻塞读写的时候会释放CPU资源。所以我们可以多开点线程这样子CPU资源就可以来回在各个线程之间切换。一个线程在阻塞读写的时候就能够切换到另外一个线程上面继续工作。这样子可以充分利用CPU和I/O资源。尽量避免线程在阻塞读写的时候CPU执行权找不到可以进行计算运行的线程，会很浪费。以下是demo的结果。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3146,"question":"当一直有任务提交给线程池时？内部线程的产生逻辑是什么样的？","simplecontent":null,"content":"通过线程池技术可以很好的解决这个问题，预先创建若干线程，并且将线程的创建控制权交给线程池，重复使用线程，减小了服务器的压力，降低了资源的开销和使用，降低了系统的负载，提高相应速度，方便管理线程进行统一的分配调优和监控。\n提交一个新的任务到线程池的时候，线程池的处理流程是:\n1.线程池首先判断核心线程池中的线程是都在执行任务(核心线程池是否已经满了)，如果不是，创建一个新的工作线程来执行任务，如果都在执行任务则进入下一个流程\n2.线程池判断工作队列是否已满，如果工作队列没有满，则将新提交的任务存储在工作队列里，如果工作队列已经满了，则进入写一个流程中\n3.线程池判断线程池中的线程是否都处于工作状态(线程池是否已经满了)，如果没有则创建一个新的工作线程来执行任务，如果已经满了则交给包和策略处理这个任务\n客户端通过执行execute(job）方法将job提交到线程池 中执行，而客户端自身不用等待job执行完成，线程池中还有增加和减少工作者线程，关闭线程池的方法，工作者线程是一个重复执行job的线程，而每个由客户端提交的job都将进入一个工作队列中等待工作者线程处理\nThreadPoolExecuteor执行execute()方法分为4种情况\n1.如果核心线程池中当前运行的线程少于corePoolSize ，将创建一个新的线程来执行任务(需要获得全局锁)\n2.如果核心线程池中当前运行的线程等于或者是多于corePoolSize则将任务加入BlockingQueue\n3.如果BlockingQueue队列已经满了，则创建新的线程来处理任务(需要获得全局锁)\n4.如果线程池中当前运行的线程超过了最大线程数，则交给饱和策略处理，拒绝执行任务并调用rejectedExecution()方法\n客户端将提交一个任务交给线程池的处理流程对应的就是TreadPoolExecutor执行execute()方法的过程\nThreadPoolExecutor采取上述步骤的实际思路是为了在执行execute()方法的时候尽可能的避免获取全局锁。在ThreadPoolExecutor完成预热之后(当前核心线程池中的线程数目大于等于corePoolSzie)几乎所有调用execute()的方法都是在执行将任务添加到BlockingQueue中，因为这样的话不需要获取全局锁。实际上是没有核心线程的，核心线程池是线程池中的一部分，只要判断当前运行的线程的数目是否大于核心线程池的数目就可以。\n工作线程:线程池创建线程的时候，会将线程封装称为工作者线程worker,在工作者线程执行完后，还会循环获取工作队列中的任务来执行。线程池中的线程执行任务分为 两种情况，在execute方法中创建一个线程，会让这个线程执行当前任务，这个新城执行完任务之后，会反复的从阻塞队列中获取任务来执行。\n————————————————\n版权声明：本文为CSDN博主「一只小猛子」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_41174684/article/details/90240755","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3147,"question":"线程池的几种拒绝策略?","simplecontent":null,"content":"有三个重要的参数，决定影响了拒绝策略：corePoolSize - 核心线程数，也即最小的线程数。workQueue - 阻塞队列 。 maximumPoolSize - 最大线程数\n当提交任务数大于 corePoolSize 的时候，会优先将任务放到 workQueue 阻塞队列中。当阻塞队列饱和后，会扩充线程池中线程数，直到达到 maximumPoolSize 最大线程数配置。此时，再多余的任务，则会触发线程池的拒绝策略了。\n　　总结起来，也就是一句话，当提交的任务数大于（workQueue.size() + maximumPoolSize ），就会触发线程池的拒绝策略。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3148,"question":"】jdk默认提供了四种拒绝策略?","simplecontent":null,"content":"《ThreadPoolExecutor.AbortPolicy:丢弃任务并抛出RejectedExecutionException异常。 ThreadPoolExecutor.DiscardPolicy：丢弃任务，但是不抛出异常。 ThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新提交被拒绝的任务 ThreadPoolExecutor.CallerRunsPolicy：由调用线程（提交任务的线程）处理该任务》\n1.CallerRunsPolicy - 当触发拒绝策略，只要线程池没有关闭的话，则使用调用线程直接运行任务。一般并发比较小，性能要求不高，不允许失败。但是，由于调用者自己运行任务，如果任务提交速度过快，可能导致程序阻塞，性能效率上必然的损失较大\n2.AbortPolicy - 丢弃任务，并抛出拒绝执行 RejectedExecutionException 异常信息。线程池默认的拒绝策略。必须处理好抛出的异常，否则会打断当前的执行流程，影响后续的任务执行。\n3.DiscardPolicy - 直接丢弃，其他啥都没有\n4.DiscardOldestPolicy -  当触发拒绝策略，只要线程池没有关闭的话，丢弃阻塞队列 workQueue 中最老的一个任务，并将新任务加入","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3149,"question":"ReentrantLock.tryLock如何预防死锁?","simplecontent":null,"content":"死锁的另一个原因是默认的锁申请操作是阻塞的，所以如果我们不使用默认阻塞的锁，也是可以避免死锁的。我们可以使用ReentrantLock.tryLock()方法，在一个循环中，如果tryLock()返回失败，那么就释放以及获得的锁，并睡眠一小段时间。这样就打破了死锁的闭环。\n比如：线程T1持有锁L1并且申请获得锁L2，而线程T2持有锁L2并且申请获得锁L3，而线程T3持有锁L3并且申请获得锁L1\n此时如果T3申请锁L1失败，那么T3释放锁L3，并进行睡眠，那么T2就可以获得L3了，然后T2执行完之后释放L2, L3，所以T1也可以获得L2了执行完然后释放锁L1, L2，然后T3睡眠醒来，也可以获得L1, L3了。打破了死锁的闭环。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:41","updateTime":"2021-05-26 01:02:41","isExist":null},{"id":3125,"question":"】Callable和future哪些处理任务哪个接收返回结果？Future接收，callable执行并return","simplecontent":null,"content":"《Callable用于返回数据，future用于接收返回的数据》\n/**\n* Java线程：有返回值的线程\n* \n* @author wb_qiuquan.ying\n*/\n@SuppressWarnings(\"unchecked\")\npublic class Test {\n\n    public static void main(String[] args) throws ExecutionException,\n        InterruptedException {\n    　　 System.out.println(\"----程序开始运行----\");\n        Date date1 = new Date();\n\n        int taskSize = 5;\n        // 创建一个线程池\n        ExecutorService pool = Executors.newFixedThreadPool(taskSize);\n        // 创建多个有返回值的任务\n        List<Future> list = new ArrayList<Future>();\n        for (int i = 0; i < taskSize; i++) {\n             Callable c = new MyCallable(i + \" \");\n             // 执行任务并获取Future对象\n             Future f = pool.submit(c);\n             // System.out.println(\">>>\" + f.get().toString());\n             list.add(f);\n        }\n        // 关闭线程池\n        pool.shutdown();\n\n        // 获取所有并发任务的运行结果\n        for (Future f : list) {\n             // 从Future对象上获取任务的返回值，并输出到控制台\n             System.out.println(\">>>\" + f.get().toString());\n        }\n\n        Date date2 = new Date();\n        System.out.println(\"----程序结束运行----，程序运行时间\"\n             + (date2.getTime() - date1.getTime()) + \"毫秒\");\n    }\n}\n\n\n\nclass MyCallable implements Callable<Object> {\n\n     private String taskNum;\n\n     MyCallable(String taskNum) {\n         this.taskNum = taskNum;\n     }\n\n     public Object call() throws Exception {\n         System.out.println(\">>>\" + taskNum + \"任务启动\");\n    　　　Date dateTmp1 = new Date();\n         Thread.sleep(1000);\n         Date dateTmp2 = new Date();\n         long time = dateTmp2.getTime() - dateTmp1.getTime();\n         System.out.println(\">>>\" + taskNum + \"任务终止\");\n         return taskNum + \"任务返回运行结果,当前任务时间\" + time + \"毫秒\";\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3126,"question":"什么是Executors框架？","simplecontent":null,"content":"Executor框架同java.util.concurrent.Executor 接口在Java 5中被引入。Executor框架是一个根据一组执行策略调用，调度，执行和控制的异步任务的框架。\n无限制的创建线程会引起应用程序内存溢出。所以创建一个线程池是个更好的的解决方案，因为可以限制线程的数量并且可以回收再利用这些线程。利用Executors框架可以非常方便的创建一个线程池","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3127,"question":"futuretask和future区别?","simplecontent":null,"content":"FutureTask是一个Runnable的子类,在建立Thread对象时可将其作为参数传入\nFuture是一个接口，FutureTask是Future的一个实现类，并实现了Runnable，因此FutureTask可以传递到线程对象Thread中新建一个线程执行。所以可以通过Excutor(线程池)来执行，也可传递给Thread对象执抄行。\n\n如果在主线程中需要执行比较耗时的操作，但又不想阻塞主线程时，可以把这些作业交给Future对象在后台完成，当主线程将来需要时，就可以通过Future对象获得后台作业的计算结果或者执行状态。 \n\nFutureTask是为了弥补Thread的不足而设计的，它可以让程序员准确地知道线程什么时候执行完成并获得到线程度执行完成后返回的结果（如果知有需要）。\n\nFutureTask是一种可以取消的异步的计算任务。它的计算是通过Callable实现的，它等价于可以携带结果的Runnable，并且有三个状态：等待、运行和道完成。完成包括所有计算以任意的方式结束，包括正常结束、取消和异常。\n\nExecutor框架利用FutureTask来完成异步任务，并可以用来进行任何潜在的耗时的计算。一般FutureTask多用于耗时的计算，主线程可以在完成自己的任务后，再去获取结果。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3128,"question":"Futuretask的例子?","simplecontent":null,"content":"public void testMyUseFutureTask() throws InterruptedException {\n    UserApi userApi = new UserApi();\n\n    long userId = 12;\n    long startTime = System.currentTimeMillis();\n\n    Callable<String> userInfoCallable = new Callable<String>() {\n        @Override\n        public String call() throws Exception {\n            return userApi.queryUserInfo(userId);\n        }\n    };\n    Callable<String> userAddressCallable = new Callable<String>() {\n        @Override\n        public String call() throws Exception {\n            return userApi.queryUserAddress(userId);\n        }\n    };\n    \n    // 不同点\n    MyFutureTask<String> userInfoFutureTask = new MyFutureTask<>(userInfoCallable);\n    MyFutureTask<String> userAddressFutureTask = new MyFutureTask<>(userAddressCallable);\n\n    new Thread(userInfoFutureTask).start();\n    new Thread(userAddressFutureTask).start();\n\n    String userInfo = userInfoFutureTask.get();\n    String userAddress = userAddressFutureTask.get();\n    System.err.println(\"testMyUseFutureTask 耗时：\" + (System.currentTimeMillis() - startTime));\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3129,"question":"什么是Callable和Future?","simplecontent":null,"content":"Java 5在concurrency包中引入了java.util.concurrent.Callable 接口，它和Runnable接口很相似，但它可以返回一个对象或者抛出一个异常。\nCallable接口使用泛型去定义它的返回类型。Executors类提供了一些有用的方法去在线程池中执行Callable内的任务。由于Callable任务是并行的，我们必须等待它返回的结果。java.util.concurrent.Future对象为我们解决了这个问题。在线程池提交Callable任务后返回了一个Future对象，使用它我们可以知道Callable任务的状态和得到Callable返回的执行结果。Future提供了get()方法让我们可以等待Callable结束并获取它的执行结果。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3130,"question":"】如何创建一个Java线程池？Executor","simplecontent":null,"content":"一个线程池管理了一组工作线程，同时它还包括了一个用于放置等待执行的任务的队列。\njava.util.concurrent.Executors提供了一个 java.util.concurrent.Executor接口的实现用于创建线程池。线程池例子展现了如何创建和使用线程池，或者阅读ScheduledThreadPoolExecutor例子，了解如何创建一个周期任务。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3131,"question":"】ThreadLocal作用?全局变量","simplecontent":null,"content":"ThreadLocal用于创建线程的本地变量，我们知道一个对象的所有线程会共享它的全局变量，所以这些变量不是线程安全的，我们可以使用同步技术。但是当我们不想使用同步的时候，我们可以选择ThreadLocal变量。\n每个线程都会拥有他们自己的Thread变量，它们可以使用get()\\set()方法去获取他们的默认值或者在线程内部改变他们的值。ThreadLocal实例通常是希望它们同线程状态关联起来是private static属性。在ThreadLocal例子这篇文章中你可以看到一个关于ThreadLocal的小程序。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3132,"question":"】同步方法和同步块，哪个是更好的选择？同步块，不会锁住整个对象造成其它同步方法不能执行","simplecontent":null,"content":"《同步块，不会锁住整个对象造成其它同步方法不能执行》\n同步块是更好的选择，因为它不会锁住整个对象（当然你也可以让它锁住整个对象）。同步方法会锁住整个对象，哪怕这个类中有多个不相关联的同步块，这通常会导致他们停止执行并需要等待获得这个对象上的锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3133,"question":"为什么线程通信的方法wait(), notify()和notifyAll()被定义在Object类里？","simplecontent":null,"content":"Java的每个对象中都有一个锁(monitor，也可以成为监视器) 并且wait()，notify()等方法用于等待对象的锁或者通知其他线程对象的监视器可用。在Java的线程中并没有可供任何对象使用的锁和同步器。这就是为什么这些方法是Object类的一部分，这样Java的每一个类都有用于线程间通信的基本方法","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3134,"question":"为什么wait(), notify()和notifyAll()必须在同步方法或者同步块中被调用？","simplecontent":null,"content":"当一个线程需要调用对象的wait()方法的时候，这个线程必须拥有该对象的锁，接着它就会释放这个对象锁并进入等待状态直到其他线程调用这个对象上的notify()方法。同样的，当一个线程需要调用对象的notify()方法时，它会释放这个对象的锁，以便其他在等待的线程就可以得到这个对象锁。由于所有的这些方法都需要线程持有对象的锁，这样就只能通过同步来实现，所以他们只能在同步方法或者同步块中被调用。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:40","updateTime":"2021-05-26 01:02:40","isExist":null},{"id":3121,"question":"】Thread代码？extends Thread 、run","simplecontent":null,"content":"public class ThreadExtendsThread extends Thread {  \n    //static int count =10;  \n    public void run()  \n    {  \n        int count =10;  \n        System.out.println(\"\\t#\"+Thread.currentThread().getName()+\" got count from \" + count);  \n        while(count > 0)  \n        {  \n            System.out.println(\"{1}quot;+this.getName()+\" : \"+count--);  \n        }  \n        System.out.println(\"{1}quot;+this.getName()+\" : existing count=\" + count);  \n    }  \n      \n    public static void main(String[] args)  \n    {  \n        ThreadExtendsThread thread = new ThreadExtendsThread();  \n        ThreadExtendsThread thread2 = new ThreadExtendsThread();  \n        thread.start();  \n        thread2.start();  \n    }  \n}  ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:39","updateTime":"2021-05-26 01:02:39","isExist":null},{"id":3122,"question":"】IO密集和CPU密集任务如何建立线程？+1，*2+1","simplecontent":null,"content":"《CPU核心数+1、2*CPU核心数》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:39","updateTime":"2021-05-26 01:02:39","isExist":null},{"id":3123,"question":"IO密集型任务 = 一般为2*CPU核心数（常出现于线程中：数据库数据交互、文件上传下载、网络数据传输等等） * CPU密集型任务 = 一般为CPU核心数+1（常出现于线程中：复杂算法）?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:39","updateTime":"2021-05-26 01:02:39","isExist":null},{"id":3124,"question":"】哪些任务是IO密集和CPU密集任务数据库、上次下载、网络传输；算法?","simplecontent":null,"content":"《数据库数据交互、文件上传下载、网络数据传输等；复杂算法》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:39","updateTime":"2021-05-26 01:02:39","isExist":null},{"id":3104,"question":"】Jmeter如何查看测试结果，使用多线程，集群模式？看结果树","simplecontent":null,"content":"《看结果树》\nhttps://blog.csdn.net/x83853684/article/details/80403190\n看结果树的平均响应时间和错误率，使用淘宝和自己公司对比","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3105,"question":"线程池如何创建线程?","simplecontent":null,"content":"线程数量不是越多越好，太多， cpu在线程间切换就会消耗比较多的资源，太少，又不能及时响应用户请求。\n光知道每秒有多少个请求没有用，还得知道处理一个请求平均需要多少时间。\n因为每个请求的查询时间不同,对连接的需求数量不同,可能结果就不一样了.\n楼主可以用压力测试工具测试,然后每次10个20个的加减连接池连接数,看什么时候性能达到最优\n\n是Socket的，从早上10点到下午5点这段时间是高峰期。\n\n首先应该考虑的是，数据库方面的优化，尽量做到小数据量的查询，基本不出现大数据量的插入、更新操作。\n将插入、更新操作，尽量做成定时调度程序，后台辅助完成。\n\n，一般来讲，线程池，是所有用户共享的。并不是某个用户点击触发服务端进行业务处理的时候，才开始创建的线程池，否则的话，多个用户同时触发，就会创建多个线程池，这样很危险。如果是所有用户共享使用线程池进行某个业务环节的并发处理的话，根据该环节的并发量，可以适当将线程池的峰值调高一些。\n\n现在每秒300的并发量，在CPU8核内存4G的服务器，基本上能撑住。但是容易受到一些应用的影响，因为这服务器不单单跑了JAVA服务端，还跑了其他的应用。  一个慢查询，一个文件传输等.. 就容易导致服务器负载高.. \n\n\n应该是指同一时间有 300 个请求过来，具体每秒有多少个，那要看一个请求在服务端需要处理多长时间了。如果每个请求处理 1 秒，那就是每秒的吞吐量是 300 个请求。\n\n如果现在每秒有 300 个请求并能成功无误地处理完成返回的话，那在整体架构上已经是很不错的。接下去就不是考虑如何优化程序了，而是要考虑升级硬件和增加服务器数量了。\n\n\n如果此时线程池中的数量小于corePoolSize，即使线程池中的线程都处于空闲状态，也要创建新的线程来处理被添加的任务。 \n\n如果此时线程池中的数量等于 corePoolSize，但是缓冲队列 workQueue未满，那么任务被放入缓冲队列。 \n\n如果此时线程池中的数量大于corePoolSize，缓冲队列workQueue满，并且线程池中的数量小于maximumPoolSize，建新的线程来处理被添加的任务。 \n\n如果此时线程池中的数量大于corePoolSize，缓冲队列workQueue满，并且线程池中的数量等于maximumPoolSize，那么通过 handler所指定的策略来处理此任务。 ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3106,"question":"】为什么volitile不保证原子性？修改有多个操作","simplecontent":null,"content":"volatile可以保证可见性和顺序性\n可见性与Java的内存模型是怎样的有关，模型采用缓存与主存的方式对变量进行操作，也就是说，每个线程都有自己的缓存空间，对变量的操作都是在缓存中进行的，之后再将修改后的值返回到主存中，这就带来了问题，有可能一个线程在将共享变量修改后，还没有来的及将缓存中的变量返回给主存中，另外一个线程就对共享变量进行修改，那么这个线程拿到的值是主存中未被修改的值，这就是可见性的问题。\n\nv一个变量i被volatile修饰，两个线程想对这个变量修改，都对其进行自增操作也就是i++，i++的过程可以分为三步，首先获取i的值，其次对i的值进行加1，最后将得到的新值写会到缓存中。 \n线程A首先得到了i的初始值100，但是还没来得及修改，就阻塞了，这时线程B开始了，它也得到了i的值，由于i的值未被修改，即使是被volatile修饰，主存的变量还没变化，那么线程B得到的值也是100，之后对其进行加1操作，得到101后，将新值写入到缓存中，再刷入主存中。根据可见性的原则，这个主存的值可以被其他线程可见。 \n问题来了，线程A已经读取到了i的值为100，也就是说读取的这个原子操作已经结束了，所以这个可见性来的有点晚，线程A阻塞结束后，继续将100这个值加1，得到101，再将值写到缓存，最后刷入主存，所以即便是volatile具有可见性，也不能保证对它修饰的变量具有原子性。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3107,"question":"】Runnable线程数据共享方式？同一个方法用全局atomic常量，不同方法建一个第三方类，在类里定义atomic常量，在类里建2个不同方法","simplecontent":null,"content":"1，如果每个线程执行的代码相同，可以使用同一个Runnable对象，这个Runnable对象中有那个共享数据，例如，卖票系统就可以这么做。 \n2，如果每个线程执行的代码不同，这时候需要用不同的Runnable对象，例如，设计4个线程。其中两个线程每次对j增加1，另外两个线程对j每次减1，银行存取款\n方式一：代码一致\n如果每个线程执行的代码相同，可以用一个Runnable对象，这个Runnable对象中存放那个共享数据（卖票系统可以这样做）。\n\npublic class Test {\n \n    static int j = 0;\n \n    public static void main(String[] args) {\n        Runnbale1 runnbale1 = new Runnbale1();\n        new Thread(runnbale1).start();\n        new Thread(runnbale1).start();\n        new Thread(runnbale1).start();\n        new Thread(runnbale1).start();\n        new Thread(runnbale1).start();\n \n    }\n \n    private static class Runnbale1 implements Runnable{\n        @Override\n        public void run() {\n            j++;\n            System.out.println(Thread.currentThread().getName()+\"---\"+j);\n        }\n    }\n}\n方式二：代码不一致\n如果每个线程执行的代码不同时，就需要不同的Runnable对象：\na. 将共享数据封装在一个对象中，然后将这个对象逐一传递给各个Runnable对象，每个线程对共享数据操作的方法也分配到这个对象中，这样容易实现针对该数据进行的各个操作的互斥通信。\npublic class MultiThreadShareData {\n    private int shareData=0;\n    public static void main(String[] args) {\n        ShareData data = new ShareData();\n        new Thread(new MyRunnable1(data)).start();\n        new Thread(new MyRunnable2(data)).start();\n    }\n \n}\n \nclass MyRunnable1 implements Runnable{\n    private ShareData data;\n    public MyRunnable1(ShareData data){\n        this.data=data;\n    }\n \n    @Override\n    public void run() {\n        for(int i=0;i<100;i++){\n            //对数据进行增加\n            this.data.increment();\n        }\n    }\n}\n \nclass MyRunnable2 implements Runnable{\n    private ShareData data;\n    public MyRunnable2(ShareData data){\n        this.data=data;\n    }\n    @Override\n    public void run() {\n        for(int i=0;i<100;i++){\n            //对数据进行减少\n            this.data.decrement();\n        }\n    }\n}\n \n/**\n 将共享的数据封装成一个类\n*/\nclass ShareData{\n    //共享数据\n    private int j=0;\n \n    public synchronized void increment(){\n        this.j++;\n        System.out.println(Thread.currentThread().getName()+\":j增加了1后j=\"+j);\n    }\n \n    public synchronized void decrement() {\n        this.j--;\n        System.out.println(Thread.currentThread().getName()+\":j减少了1后j=\"+j);\n    }\n    public int getJ() {\n        return j;\n    }\n}\n-------------------------------------------------------------------------------------------------\n public class MultiThreadShareData {\n   public static void main(String[] args) {\n \n       ShareData data = new ShareData();\n \n       new Thread(()->{\n           for(int i=0;i<100;i++){\n               data.increment();\n           }\n       }).start();\n \n       new Thread(()->{\n           for (int j=0;j<100;j++) {\n               data.decrement();\n           }\n       }).start();\n   }\n \n}\n \n/**\n封装共享数据的对象\n*/\nclass ShareData{\n   //共享数据\n   private int j=0;\n \n   /**\n    对共享数据进行操作的方法\n   */\n   public synchronized void increment(){\n       this.j++;\n       System.out.println(Thread.currentThread().getName()+\":j增加了1后j=\"+j);\n   }\n \n   public synchronized void decrement() {\n       this.j--;\n       System.out.println(Thread.currentThread().getName()+\":j减少了1后j=\"+j);\n   }\n \n   public int getJ() {\n       return j;\n   }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3108,"question":"多线程环境下单例模式的实现?","simplecontent":null,"content":"在单线程环境下，无论是饿汉式单例还是懒汉式单例，它们都能够正常工作。但是，在多线程环境下，情形就发生了变化：由于饿汉式单例天生就是线程安全的，可以直接用于多线程而不会出现问题；但懒汉式单例本身是非线程安全的，因此就会出现多个实例的情况，与单例模式的初衷是相背离的。\n\n开启多个线程来分别获取单例，然后打印它们所获取到的单例的hashCode值。若它们获取的单例是相同的(该单例模式的实现是线程安全的)，那么它们的hashCode值一定完全一致；若它们的hashCode值不完全一致，那么获取的单例必定不是同一个，即该单例模式的实现不是线程安全的，是多例的","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3109,"question":"】为什么说饿汉式单例天生就是线程安全的？类被加载时，就会实例化","simplecontent":null,"content":"类加载的方式是按需加载，且只加载一次。因此，在上述单例类被加载时，就会实例化一个对象并交给自己的引用，供系统使用。换句话说，在线程访问单例对象之前就已经创建好了。再加上，由于一个类在整个生命周期中只会被加载一次，因此该单例类只会创建一个实例，也就是说，线程每次都只能也必定只可以拿到这个唯一的对象。因此就说，饿汉式单例天生就是线程安全的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3110,"question":"】懒汉式单例为什么是非线程安全的？多线程同时创建","simplecontent":null,"content":"《多个线程同时创建》\n会有多个线程同时进入 if (singleton2 == null) {…} 语句块的情形发生。当这种这种情形发生后，该单例类就会创建出多个实例，违背单例模式的初衷。因此，传统的懒汉式单例是非线程安全的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3111,"question":"安全的单例模式?","simplecontent":null,"content":"必须使用volatile关键字修饰单例引用\n\npublic class Singleton3 {\n\n    //使用volatile关键字防止重排序，因为 new Instance()是一个非原子操作，可能创建一个不完整的实例\n    private static volatile Singleton3 singleton3;\n\n    private Singleton3() {\n    }\n\n    public static Singleton3 getSingleton3() {\n        // Double-Check idiom\n        if (singleton3 == null) {\n            synchronized (Singleton3.class) {       // 1\n                // 只需在第一次创建实例时才同步\n                if (singleton3 == null) {       // 2\n                    singleton3 = new Singleton3();      // 3\n                }\n            }\n        }\n        return singleton3;\n}}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3112,"question":"volatile如何保证有序性?","simplecontent":null,"content":"　1）当程序执行到volatile变量的读操作或者写操作时，在其前面的操作的更改肯定全部已经进行，且结果已经对后面的操作可见；在其后面的操作肯定还没有进行；\n　　2）在进行指令优化时，不能将在对volatile变量访问的语句放在其后面执行，也不能把volatile变量后面的语句放到其前面执行。\n//x、y为非volatile变量\n//flag为volatile变量\n \nx = 2;        //语句1\ny = 0;        //语句2\nflag = true;  //语句3\nx = 4;         //语句4\ny = -1;       //语句5\n由于flag变量为volatile变量，那么在进行指令重排序的过程的时候，不会将语句3放到语句1、语句2前面，也不会讲语句3放到语句4、语句5后面。但是要注意语句1和语句2的顺序、语句4和语句5的顺序是不作任何保证的。\n　并且volatile关键字能保证，执行到语句3时，语句1和语句2必定是执行完毕了的，且语句1和语句2的执行结果对语句3、语句4、语句5是可见的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3113,"question":"】没有使用 volatile 修饰 singleton3，会导致什么情形发生呢？变量执行顺序不会更改","simplecontent":null,"content":"当我们写了 new 操作，这个过程可能发生无序写入(指令重排序)，也就是说上面的3行指令可能会被重排序导致先执行第3行后执行第2行\n\nmemory = allocate();        //1:分配对象的内存空间\nctorInstance(memory);       //2:初始化对象\nsingleton3 = memory;        //3:使singleton3指向刚分配的内存地址\n　　但实际上，这个过程可能发生无序写入(指令重排序)，也就是说上面的3行指令可能会被重排序导致先执行第3行后执行第2行，也就是说其真实执行顺序可能是下面这种：\n\nmemory = allocate();        //1:分配对象的内存空间\nsingleton3 = memory;        //3:使singleton3指向刚分配的内存地址\nctorInstance(memory);       //2:初始化对象\n(2)、重排序情景再现 \n　　 \n　　了解 new 操作是非原子的并且可能发生重排序这一事实后，我们回过头看使用 Double-Check idiom 的同步延迟加载的实现：\n\n　　我们需要重新考察上述清单中的 //3 行。此行代码创建了一个 Singleton 对象并初始化变量 singleton3 来引用此对象。这行代码存在的问题是，在 Singleton 构造函数体执行之前，变量 singleton3 可能提前成为非 null 的，即赋值语句在对象实例化之前调用，此时别的线程将得到的是一个不完整（未初始化）的对象，会导致系统崩溃。下面是程序可能的一组执行步骤：\n\n　　1、线程 1 进入 getSingleton3() 方法； \n　　2、由于 singleton3 为 null，线程 1 在 //1 处进入 synchronized 块； \n　　3、同样由于 singleton3 为 null，线程 1 直接前进到 //3 处，但在构造函数执行之前，使实例成为非 null，并且该实例是未初始化的； \n　　4、线程 1 被线程 2 预占； \n　　5、线程 2 检查实例是否为 null。因为实例不为 null，线程 2 得到一个不完整（未初始化）的 Singleton 对象； \n　　6、线程 2 被线程 1 预占。 \n　　7、线程 1 通过运行 Singleton3 对象的构造函数来完成对该对象的初始化。\n\n　　显然，一旦我们的程序在执行过程中发生了上述情形，就会造成灾难性的后果，而这种安全隐患正是由于指令重排序的问题所导致的。让人兴奋地是，volatile 关键字正好可以完美解决了这个问题。也就是说，我们只需使用volatile关键字修饰单例引用就可以避免上述灾难。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3114,"question":"】Spring MVC默认是Singleton的是否潜在的安全隐患？是的、减少更改全局变量、改成原型、使用ThreadLocal变量","simplecontent":null,"content":"根本核心是instance变量保持状态的问题。这意味着每个request过来，系统都会用原有的instance去处理，这样导致了两个结果：\n一是我们不用每次创建Controller，\n二是减少了对象创建和垃圾收集的时间；\n由于只有一个Controller的instance，当多个线程同时调用它的时候，它里面的instance变量就不是线程安全的了，会发生窜数据的问题。\n当然大多数情况下，我们根本不需要考虑线程安全的问题，比如dao,service等，除非在bean中声明了实例变量。因此，我们在使用spring mvc 的contrller时，应避免在controller中定义实例变量。 \n\n在这里有声明一个变量company，这里就存在并发线程安全的问题。\n如果控制器是使用单例形式，且controller中有一个私有的变量a,所有请求到同一个controller时，使用的a变量是共用的，即若是某个请求中修改了这个变量a，则，在别的请求中能够读到这个修改的内容。。\n\n有几种解决方法：\n1、在控制器中不使用实例变量\n2、将控制器的作用域从单例改为原型，即在spring配置文件Controller中声明 scope=\"prototype\"，每次都创建新的controller\n3、在Controller中使用ThreadLocal变量\n\n这几种做法有好有坏，第一种，需要开发人员拥有较高的编程水平与思想意识，在编码过程中力求避免出现这种BUG，而第二种则是容器自动的对每个请求产生一个实例，由JVM进行垃圾回收，因此做到了线程安全。\n使用第一种方式的好处是实例对象只有一个，所有的请求都调用该实例对象，速度和性能上要优于第二种，不好的地方，就是需要程序员自己去控制实例变量的状态保持问题。第二种由于每次请求都创建一个实例，所以会消耗较多的内存空间。\n所以在使用spring开发web 时要注意，默认Controller、Dao、Service都是单例的","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3115,"question":"Controller单例方法是否安全，是否需要同步?","simplecontent":null,"content":"例如Web应用中的Servlet，每个方法中对局部变量的操作都是在线程自己独立的内存区域内完成的，所以是线程安全的。 \n对于成员变量的操作，可以使用ThreadLocal来保证线程安全。 \nspringMVC中，一般Controller、service、DAO层的scope均是singleton；\n每个请求都是单独的线程,即使同时访问同一个Controller对象，因为并没有修改Controller对象，相当于针对Controller对象而言，只是读操作，没有写操作，不需要做同步处理。\nService层、Dao层用默认singleton就行，虽然Service类也有dao这样的属性，但dao这些类都是没有状态信息的，也就是 相当于不变(immutable)类，所以不影响。\nStruts2中的Action因为会有User、BizEntity这样的实例对象，是有状态信息 的，在多线程环境下是不安全的，所以Struts2默认的实现是Prototype模式。在Spring中，Struts2的Action中scope 要配成prototype作用域。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3116,"question":"对于哪些会以多线程运行的单例类?","simplecontent":null,"content":"局部变量不会受多线程影响，\n成员变量会受到多线程影响。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3117,"question":"多个线程调用同一个对象的同一个方法?","simplecontent":null,"content":"如果方法里无局部变量，那么不受任何影响；\n如果方法里有局部变量，只有读操作，不受影响；存在写操作，考虑多线程影响值；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3118,"question":"】在当前大数据环境下，多线程的优势？加快速度","simplecontent":null,"content":"加快速度","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3119,"question":"】线程通信常用的方式有哪些？wait/notify、Volatile 、CountDownLatch、CyclicBarrier","simplecontent":null,"content":"《wait/notify、Volatile 、CountDownLatch\\CyclicBarrier 》\nwait/notify 等待+synchronized\nVolatile 内存共享\nCountDownLatch 并发工具\nCyclicBarrier 并发工具\nCyclicBarrier\n等待N个线程都达到某个状态后继续运行\n\nCountDownLatch\nCountDownLatch可以代替wait/notify的使用,并去掉synchronized,下面重写第一个例子:\n\n\n\npublic class WaitNotify {\n  // 状态锁\n  private static Object lock = new Object();\n  private static Integer i = 0;\n\n  public void odd() {\n    while (i < 10) {\n      synchronized (lock) {\n        if (i % 2 == 1) {\n          System.out.println(Thread.currentThread().getName() + \" - \" + i);\n          try {\n            Thread.sleep(1000);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          i++;\n          lock.notify();\n        } else {\n          try {\n            lock.wait();\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n        }\n      }\n    }\n  }\n\n  public void even() {\n    while (i < 10) {\n      synchronized (lock) {\n        if (i % 2 == 0) {\n          System.out.println(Thread.currentThread().getName() + \" - \" + i);\n          try {\n            Thread.sleep(1000);\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n          i++;\n          lock.notify();\n        } else {\n          try {\n            lock.wait();\n          } catch (InterruptedException e) {\n            e.printStackTrace();\n          }\n        }\n      }\n    }\n  }\n\n  public static void main(String[] args) {\n\n    WaitNotify waitNotify = new WaitNotify();\n\n    Thread t1 = new Thread(() -> waitNotify.odd(), \"线程1\");\n    Thread t2 = new Thread(() -> waitNotify.even(), \"线程2\");\n\n    t1.start();\n    t2.start();\n  }\n}\nhttps://www.cnblogs.com/linyufeng/p/9671844.html","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3120,"question":"】Runable代码？implements Runnable、run","simplecontent":null,"content":"public class ThreadDemo {\n    public static void main(String[] args){\n        Thread thread1 = new Thread(new MyRunnable());\n        Thread thread2 = new Thread(new MyRunnable());\n        thread1.start();\n        thread2.start();\n    }\n}\n\nclass MyRunnable implements Runnable {\n\n    @Override\n    public void run() {\n        try {\n            for (int i = 0; i < 10; i++) {\n                System.out.println(i);\n                Thread.sleep(100);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:38","updateTime":"2021-05-26 01:02:38","isExist":null},{"id":3088,"question":"countDownLatch作用?","simplecontent":null,"content":"这个类使一个线程等待其他线程各自执行完毕后再执行。\n是通过一个计数器来实现的，计数器的初始值是线程的数量。每当一个线程执行完毕后，计数器的值就-1，当计数器的值为0时，表示所有线程都执行完毕，然后在闭锁上等待的线程就可以恢复工作了。\npublic class CountDownLatchTest {\n\n    public static void main(String[] args) {\n        final CountDownLatch latch = new CountDownLatch(2);\n        System.out.println(\"主线程开始执行…… ……\");\n        //第一个子线程执行\n        ExecutorService es1 = Executors.newSingleThreadExecutor();\n        es1.execute(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Thread.sleep(3000);\n                    System.out.println(\"子线程：\"+Thread.currentThread().getName()+\"执行\");\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                latch.countDown();\n            }\n        });\n        es1.shutdown();\n\n        //第二个子线程执行\n        ExecutorService es2 = Executors.newSingleThreadExecutor();\n        es2.execute(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    Thread.sleep(3000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"子线程：\"+Thread.currentThread().getName()+\"执行\");\n                latch.countDown();\n            }\n        });\n        es2.shutdown();\n        System.out.println(\"等待两个线程执行完毕…… ……\");\n        try {\n            latch.await();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(\"两个子线程都执行完毕，继续执行主线程\");\n}}\n\n\n】atomic 作用？保证原子性，全局变量线程安全\n《保证原子性，全局变量线程安全》\nAtomic包中的类基本的特性就是在多线程环境下，当有多个线程同时对单个（包括基本类型及引用类型）变量进行操作时，具有排他性，即当多个线程同时对该变量的值进行更新时，仅有一个线程能成功，而未成功的线程可以向自旋锁一样，继续尝试，一直等到执行成功。\nAtomic系列的类中的核心方法都会调用unsafe类中的几个本地方法。我们需要先知道一个东西就是Unsafe类，全名为：sun.misc.Unsafe，这个类包含了大量的对C代码的操作，包括很多直接内存分配以及原子操作的调用，而它之所以标记为非安全的，是告诉你这个里面大量的方法调用都会存在安全隐患，需要小心使用，否则会导致严重的后果，例如在通过unsafe分配内存的时候，如果自己指定某些区域可能会导致一些类似C++一样的指针越界到其他进程的问题。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3089,"question":"说一下 synchronized 底层实现原理？","simplecontent":null,"content":"synchronized可以保证方法或者代码块在运行时，同一时刻只有一个方法可以进入到临界区，同时它还可以保证共享变量的内存可见性。\nJava中每一个对象都可以作为锁，这是synchronized实现同步的基础：\n\n普通同步方法，锁是当前实例对象\n\n\n静态同步方法，锁是当前类的class对象\n\n\n同步方法块，锁是括号里面的对象","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3090,"question":"线程池中 submit()和 execute()方法有什么区别？","simplecontent":null,"content":"submit有返回值，execute没有\n接收的参数不一样\n\n\nsubmit有返回值，而execute没有\n\n\nsubmit方便Exception处理","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3091,"question":"concurrenthashmap具体实现及其原理，jdk8下的改版?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3092,"question":"ThreadLocal原理，用的时候需要注意什么?","simplecontent":null,"content":"ThreadLocal原理，用的时候需要注意什么\n把变量设置为本地变量，工作内存中\n在定义ThreadLocal之初就通过initialValue方法初始化返回的值\n从输出我们可以看到，每一个线程操作的count的数值都是独立的，不被其他线程\n\n可能大部分朋友已经明白了ThreadLocal是如何为每个线程创建变量的副本的：\n        首先，在每个线程Thread内部有一个ThreadLocal.ThreadLocalMap类型的成员变量threadLocals，这个threadLocals就是用来存储实际的变量副本的，键值为当前ThreadLocal变量，value为变量副本（即T类型的变量）。\n        初始时，在Thread里面，threadLocals为空，当通过ThreadLocal变量调用get()方法或者set()方法，就会对Thread类中的threadLocals进行初始化，并且以当前ThreadLocal变量为键值，以ThreadLocal要保存的副本变量为value，存到threadLocals。\n        然后在当前线程里面，如果要使用副本变量，就可以通过get方法在threadLocals里面查找。\nThreadLocal<T>变量一般要声名成static类型，即当前线程中只有一个T类型变量的实例，线程内可共享该实例数据且不会出问题，如将其声名成非static，则一个线程内就存储多个T类型变量的实例，有点存储空间的浪费，一般很少有这样的应用场景。另外根据实际情况，ThreadLocal变量声名时也多加上private final关键词表明它时类内私有、引用不可修改, \n在线程池环境下，由于线程是一直运行且复用的，使用ThreadLocal<T>时会出现这个任务看到上个任务ThreadLocal变量值以及内存泄露等问题，解决方法就是在当前任务执行完后将ThreadLocal变量remove或设置为初始值\n通过上面的分析。我们能够认识到ThreadLocal事实上是与线程绑定的一个变量，如此就会出现一个问题：假设没有将ThreadLocal内的变量删除（remove）或替换，它的生命周期将会与线程共存,如果不remove掉，很可能会出现内存泄漏的问题。\n\n    最常见的ThreadLocal使用场景为 用来解决数据库连接、Session管理等","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3093,"question":"】如果线程数量小于 corePoolSize如何处理任务？创建线程","simplecontent":null,"content":"马上创建线程运行这个任务；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3094,"question":"】如果线程数量大于或等于 corePoolSize如何处理任务？入队列","simplecontent":null,"content":"将这个任务放入队列；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3095,"question":"】如果这时候队列满了，线程数量小于 maximumPoolSize如何处理任务？创建线程","simplecontent":null,"content":"还是要创建非核心线程立刻运行这个任务；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3096,"question":"】如果队列满了，线程数量大于或等于 maximumPoolSize如何处理任务？拒绝策略","simplecontent":null,"content":"线程池会抛出异常RejectExecutionException。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3097,"question":"】当线程完成任务时会怎么样？从队列拿任务","simplecontent":null,"content":"会从队列中取下一个任务来执行","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3098,"question":"】当一个线程无事可做，超过一定的时间（keepAliveTime）时如何处理任务？大于核心数会收回线程、小于核心数不会收回","simplecontent":null,"content":"线程池会判断，如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3099,"question":"】线程池的工作过程？核心线程、阻敌啊线程、队列","simplecontent":null,"content":"1.线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行它们。\n2.当调用 execute() 方法添加一个任务时，线程池会做如下判断：\n如果正在运行的线程数量小于 corePoolSize如何处理任务，那么马上创建线程运行这个任务；\n如果正在运行的线程数量大于或等于 corePoolSize如何处理任务，那么将这个任务放入队列；\n如果这时候队列满了，而且正在运行的线程数量小于 maximumPoolSize如何处理任务，那么还是要创建非核心线程立刻运行这个任务；\n如果队列满了，而且正在运行的线程数量大于或等于 maximumPoolSize如何处理任务，那么线程池会抛出异常RejectExecutionException。\n3.当一个线程完成任务时，它会从队列中取下一个任务来执行。\n4.当一个线程无事可做，超过一定的时间（keepAliveTime）时如何处理任务，线程池会判断，如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3100,"question":"线程池框架Executor?","simplecontent":null,"content":"java中的线程池是通过Executor框架实现的，Executor 框架包括类：Executor，Executors，ExecutorService，ThreadPoolExecutor ，Callable和Future、FutureTask的使用等。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3101,"question":"分析线程池的实现原理和线程的调度过程?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3102,"question":"Synchronized优化后的锁机制简单介绍一下，包括自旋锁、偏向锁、轻量级锁、重量级锁？","simplecontent":null,"content":"自旋锁：\n线程自旋说白了就是让cup在做无用功，比如：可以执行几次for循环，可以执行几条空的汇编指令，目的是占着CPU不放，等待获取锁的机会。如果旋的时间过长会影响整体性能，时间过短又达不到延迟阻塞的目的。\n偏向锁\n偏向锁就是一旦线程第一次获得了监视对象，之后让监视对象“偏向”这个线程，之后的多次调用则可以避免CAS操作，\n说白了就是置个变量，如果发现为true则无需再走各种加锁/解锁流程。\n轻量级锁：\n轻量级锁是由偏向所升级来的，偏向锁运行在一个线程进入同步块的情况下，当第二个线程加入锁争用的时候，偏向锁就会升级为轻量级锁；\n重量级锁\n重量锁在JVM中又叫对象监视器（Monitor），它很像C中的Mutex，除了具备Mutex(0|1)互斥的功能，它还负责实现了Semaphore(信号量)的功能，也就是说它至少包含一个竞争锁的队列，和一个信号阻塞队列（wait队列），前者负责做互斥，后一个用于做线程同步。\n偏向锁、轻量级锁、重量级锁的对比：","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3103,"question":"】集群环境下，怎样实现多线程的线性安全问题？数据库唯一建和增加索引，使用分布式锁","simplecontent":null,"content":"《数据库唯一建和增加索引\n使用分布式锁》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:37","updateTime":"2021-05-26 01:02:37","isExist":null},{"id":3077,"question":"ReentrantLock获取锁定与三种方式?","simplecontent":null,"content":"    a)  lock(), 如果获取了锁立即返回，如果别的线程持有锁，当前线程则一直处于休眠状态，直到获取锁\n    b) tryLock(), 如果获取了锁立即返回true，如果别的线程正持有锁，立即返回false；\n    c)tryLock(long timeout,TimeUnit unit)，   如果获取了锁定立即返回true，如果别的线程正持有锁，会等待参数给定的时间，在等待的过程中，如果获取了锁定，就返回true，如果等待超时，返回false；\n    d) lockInterruptibly:如果获取了锁定立即返回，如果没有获取锁定，当前线程处于休眠状态，直到或者锁定，或者当前线程被别的线程中断两个线程处理任务，但是一个线程一个运行，另外线程等待，设置一段时间锁还没释放只能使用中断那个线程了","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3078,"question":"】Lock，trylock区别？ tryLock()方法有返回值，只有在成功获取了锁的情况下才会返回true，如果别的线程当前正持有锁，则会立即返回false！如果为这个方法加上timeout参数，则会在等待timeout的时间才会返回false或者在获取到锁的时候返回true。","simplecontent":null,"content":"public void insert(Thread thread){\n    if(lock.tryLock()) {\n        try {\n            System.out.println(thread.getName()+\"得到了锁\");\n        } catch (Exception e) {\n        }finally {\n            System.out.println(thread.getName()+\"释放了锁\");\n            lock.unlock();\n        }\n    } else {\n        System.out.println(thread.getName()+\"获取锁失败\");\n    }\n}\n\n\nLock获取不到锁，会等待第一个线程，而trylock获取不了锁会跳到else方法里，但是可以设置超时时间等待，如果在时间范围内还没获取到锁就跳到else","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3079,"question":"如何启动2个线程?","simplecontent":null,"content":"new Thread() {\n    public void run() {\n            test.get(Thread.currentThread());\n    }\n}.start();\n\nnew Thread() {\n    public void run() {\n            test.get(Thread.currentThread());\n    }\n}.start();","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3080,"question":"ReentrantLock和ReentrantReadWriteLock和synchronized区别?","simplecontent":null,"content":"Synchronized和ReentrantLock具有完全互斥排他的效果，即同一时刻只允许一个线程访问，而ReentrantReadWriteLock的读锁可以让多个线程访问。一个是读操作相关的锁也成为共享锁，一个是写操作相关的锁 也称为排他锁，多个读锁之间不互斥，读锁与写锁互斥，写锁与写锁互斥，即多个Thread可以同时进行读取操作，但是同一时刻只允许一个Thread进行写入操作。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3081,"question":"】Unlock在try，catch，finally哪个位置加上？finally","simplecontent":null,"content":"finally","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3082,"question":"ReadWriteLock 特点?","simplecontent":null,"content":"一个用于只读操作，另一个用于写入操作。只要没有 writer，读取锁可以由多个 reader 线程同时保持。写入锁是独占的。\n\npublic class LockTest {\n    public static void main(String[] args){\n        //10个读线程\n      for(int i=0;i<10;i++){\n          new Thread(new Runnable() {\n            @Override\n            public void run() {\n System.out.println(Thread.currentThread().getName()+\"读取到的数据为：\"+new Data().get());\n            }\n        }).start();\n      }\n      //10个写线程\n      for(int i=0;i<10;i++){\n          final int num = i;\n          new Thread(new Runnable() {\n            @Override\n            public void run() {\n                new Data().set(\"world\"+num);\n            }\n        }).start();\n      }\n    }\n    \n    \n    \n}\n//数据源 \nclass Data{\n    private static String name=\"hello\";\n    ReadWriteLock rwl = new ReentrantReadWriteLock();\n    public String get(){\n        rwl.readLock().lock();\n        System.out.println(Thread.currentThread().getName()+\"--读取数据前：\");\n        \n        try{try {\n            Thread.sleep(new Random().nextInt(3000));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        return name;\n        }finally{\n            System.out.println(Thread.currentThread().getName()+\"--已经读取完\");\n            rwl.readLock().unlock();\n        }\n        \n        }\n    \n    public void set(String name){\n        rwl.writeLock().lock();\n        try{\n        System.out.println(Thread.currentThread().getName()+\">写入数据前\");\n        try {\n            Thread.sleep(new Random().nextInt(3000));\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        this.name = name;\n        System.out.println(Thread.currentThread().getName()+\">写完数据\");\n        }finally{\n            rwl.writeLock().unlock();\n        }\n        \n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3083,"question":"】Condition和Object.wait区别？Condition用在ReentrantLock ，Object用在sync，Condition可以唤醒执行线程，而Object不知唤醒哪个线程","simplecontent":null,"content":"condition await() 旨在当前线程的调度，与对象无关，调用此方法会是当前线程释放LOCK，并且当前线程会进行condition的等待队列，等待有其他condition调用dosignal（）\n会被唤醒，将当前线程重新放入同步队列中等待获取锁，\n\n两种在表现上有点相似，但是作用机制是有区别的\n1.object wait() 不能单独使用，必须是在synchronized 下才能使用，\n2.object wait()必须要通过Nodify()方法进行唤醒\n3.condition await() 必须是当前线程被排斥锁 lock 后,，获取到condition 后才能使用\n4.condition await() 必须通过 sign() 方法进行唤醒\n\n一个是基于对象监听器的同步方式，一个是基于 ASQ同步机制的同步方式 \n\n例如队列已满，所有的生产者现场阻塞，某个时刻消费者消费了一个元素，则需要唤醒某个生产者线程，而通过 Object notify 方式唤醒的线程不能确保一定就是一个生产者线程，因为 notify 是随机唤醒某一个正在该 synchronized 对应的锁上面通过 wait 方式阻塞的线程，如果这时正好还有消费者线程也在阻塞中，则很可能唤醒的是一个消费者线程；signalAll 更是会唤醒所有在对应锁上通过 wait 方式阻塞的线程，而不管是生产者还是消费者线程。\n本例中所有的生产者线程在 notEmpty 谓词条件上等待，所有的消费者线程在 notFull 谓词条件上等待，当队列是满的时候所有的生产者线程阻塞，添加元素之后则唤醒某个消费者线程，此时则不用担心会唤醒消费者线程\nhttps://blog.csdn.net/qq_16257883/article/details/80167430?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~sobaiduend~default-1-80167430.nonecase&utm_term=condition%20wait的区别","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3084,"question":"】Condition作用是什么？替代wait和notify，消费者等待，提供者唤醒所有，对指定的线程进行唤醒等待操作","simplecontent":null,"content":"锁条件判断，Condition 的方法与 wait 、notify 和 notifyAll 方法类似，分别命名为 await 、 signal和singalAll因为它们不能覆盖Object上的对应方法。\n\n在线程间实现通信的往往会应用到Object的几个方法，比如wait(),wait(long timeout),wait(long timeout, int nanos)与notify(),notifyAll()几个方法实现等待/通知机制\nvoid signal()：唤醒一个等待在condition上的线程，将该线程从等待队列中转移到同步队列中，如果在同步队列中能够竞争到Lock则可以从等待方法中返回。\nvoid signalAll()：与1的区别在于能够唤醒所有等待在condition上的线程\n\n解决早唤醒问题：Condition可以通过Lock.newCondition()方法创建多个Condition实例，来实现不同类型/条件线程的等待/唤醒，所以只要使用合理，就不会存在通知到不应该通知的线程而导致的线程资源竞争和不必要的线程上下文切换。Object.wait(long)是否为超时唤醒问题：Condition中提供了awaitUntil(Date)方法，这个方法可以用于实现带超时时间限制的等待，其返回一个boolean值用来区分是等待超时还是被通知唤醒的。true表示被通知唤醒，false表示等待超时唤醒。总结：目前实际应用中推荐使用Condition来代替wait/notify。\n早唤醒问题：wait/notify是依赖Object+synchronized来实现，如果存在多个线程wait()，那么通过notify()方法只能唤醒一个线程，而且这个线程不一定是我们想要唤醒的线程，导致运行错误。如果通过notifyAll()方法唤醒，那么所有线程都会唤醒，就会存在不想唤醒的线程被唤醒，导致不必要的线程上下文切换，这也就是早唤醒问题。Object.wait(long)是否为超时唤醒问题。Object.wait(long)方法可能是通过notify唤醒也可能是超时唤醒，但是无法通过这方法区分。JUC中的Condition中await()、signal()、signalAll()分别对应Object中的wait()、notify()、notifyAll()方法。但是Condition更加灵活，并且解决了上述两个问题。\n\nCondition解决wait/notify存在的两个问题，在这一节我们总结一下Condition是如何解决这两个问题的","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3085,"question":"】Condition可以使用哪些方法？await()、signal()","simplecontent":null,"content":"Condition的await()、signal()\n\nConditon中的await()对应Object的wait()；\nCondition中的signal()对应Object的notify()；\nCondition中的signalAll()对应Object的notifyAll()。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3086,"question":"】Condition代码？","simplecontent":null,"content":"https://blog.csdn.net/bohu83/article/details/51098106\nCondition的执行方式，是当在线程Consumer中调用await方法后，线程Consumer将释放锁，并且将自己沉睡，等待唤醒，线程Producer获取到锁后，开始做事，完毕后，调用Condition的signalall方法，唤醒线程Consumer，线程Consumer恢复执行。\n以上说明Condition是一个多线程间协调通信的工具类，使得某个，或者某些线程一起等待某个条件（Condition）,只有当该条件具备( signal 或者 signalAll方法被带调用)时 ，这些等待线程才会被唤醒，从而重新争夺锁。\n\nimport java.util.concurrent.locks.Condition;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class ConTest {\n\n    final Lock lock = new ReentrantLock();\n    final Condition condition = lock.newCondition();\n\n    public static void main(String[] args) {\n        ConTest test = new ConTest();\n        Producer producer = test.new Producer();\n        Consumer consumer = test.new Consumer();\n        consumer.start();\n        producer.start();\n    }\n\n    class Consumer extends Thread{\n\n        @Override\n        public void run() {\n            consume();\n        }\n\n        private void consume() {\n\n            try {\n                lock.lock();\n                System.out.println(\"我在等一个新信号\"+this.currentThread().getName());\n                condition.await();\n\n            } catch (InterruptedException e) {\n                // TODO Auto-generated catch block\n                e.printStackTrace();\n            } finally{\n                System.out.println(\"拿到一个信号\"+this.currentThread().getName());\n                lock.unlock();\n            }\n\n        }\n    }\n\n    class Producer extends Thread{\n\n        @Override\n        public void run() {\n            produce();\n        }\n\n        private void produce() {\n            try {\n                lock.lock();\n                System.out.println(\"我拿到锁\"+this.currentThread().getName());\n                condition.signalAll();\n                System.out.println(\"我发出了一个信号：\"+this.currentThread().getName());\n            } finally{\n                lock.unlock();\n            }\n        }\n    }\n\n}\n\n消费者一直在执行，但是没有数据就把线程挂起，不在往下执行而是停止在哪里，别的线程如果执行到提供者插入了队列，同时唤醒线程，那么停止的线程往下执行","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3087,"question":"import java.util.PriorityQueue;?","simplecontent":null,"content":"import java.util.concurrent.locks.Condition;\nimport java.util.concurrent.locks.Lock;\nimport java.util.concurrent.locks.ReentrantLock;\n\npublic class ConTest2 {\n    private int queueSize = 10;\n    private PriorityQueue<Integer> queue = new PriorityQueue<Integer>(queueSize);\n    private Lock lock = new ReentrantLock();\n    private Condition notFull = lock.newCondition();\n    private Condition notEmpty = lock.newCondition();\n\n    public static void main(String[] args) throws InterruptedException  {\n        ConTest2 test = new ConTest2();\n        Producer producer = test.new Producer();\n        Consumer consumer = test.new Consumer();\n        producer.start();\n        consumer.start();\n        Thread.sleep(0);\n        producer.interrupt();\n        consumer.interrupt();\n    }\n\n    class Consumer extends Thread{\n        @Override\n        public void run() {\n            consume();\n        }\n        volatile boolean flag=true;\n        private void consume() {\n            while(flag){\n                lock.lock();\n                try {\n                    while(queue.isEmpty()){\n                        try {\n                            System.out.println(\"队列空，等待数据\");\n                            notEmpty.await();\n                        } catch (InterruptedException e) {\n                            flag =false;\n                        }\n                    }\n                    queue.poll();                //每次移走队首元素\n                    notFull.signal();\n                    System.out.println(\"从队列取走一个元素，队列剩余\"+queue.size()+\"个元素\");\n                } finally{\n                    lock.unlock();\n                }\n            }\n        }\n    }\n\n    class Producer extends Thread{\n        @Override\n        public void run() {\n            produce();\n        }\n        volatile boolean flag=true;\n        private void produce() {\n            while(flag){\n                lock.lock();\n                try {\n                    while(queue.size() == queueSize){\n                        try {\n                            System.out.println(\"队列满，等待有空余空间\");\n                            notFull.await();\n                        } catch (InterruptedException e) {\n\n                            flag =false;\n                        }\n                    }\n                    queue.offer(1);        //每次插入一个元素\n                    notEmpty.signal();\n                    System.out.println(\"向队列取中插入一个元素，队列剩余空间：\"+(queueSize-queue.size()));\n                } finally{\n                    lock.unlock();\n                }\n            }\n        }\n    }\n}\n\n\n    public static ReentrantLock lock=new ReentrantLock();\n    public static Condition condition =lock.newCondition();\n    public static void main(String[] args) {\n        new Thread(){\n            @Override\n            public void run() {\n                lock.lock();//请求锁\n                try{\n                    System.out.println(Thread.currentThread().getName()+\"==》进入等待\");\n                    condition.await();//设置当前线程进入等待\n                }catch (InterruptedException e) {\n                    e.printStackTrace();\n                }finally{\n                    lock.unlock();//释放锁\n                }\n                System.out.println(Thread.currentThread().getName()+\"==》继续执行\");\n            }\n        }.start();\n        new Thread(){\n            @Override\n            public void run() {\n                lock.lock();//请求锁\n                try{\n                    System.out.println(Thread.currentThread().getName()+\"=》进入\");\n                    Thread.sleep(2000);//休息2秒\n                    condition.signal();//随机唤醒等待队列中的一个线程\n                    System.out.println(Thread.currentThread().getName()+\"休息结束\");\n                }catch (InterruptedException e) {\n                    e.printStackTrace();\n                }finally{\n                    lock.unlock();//释放锁\n                }\n            }\n        }.start();\n    }\n}\n结果一：\nThread-0==》进入等待\nThread-1=》进入\nThread-1休息结束\nThread-0==》继续执行\n结果二：\nThread-1=》进入\nThread-1休息结束\nThread-0==》进入等待","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:36","updateTime":"2021-05-26 01:02:36","isExist":null},{"id":3062,"question":"】Wait和notify在哪里用？Synchronized和lock","simplecontent":null,"content":"public class ThreadA {\n    public static void main(String[] args) {\n        ThreadB b = new ThreadB();\n        b.start();// 主线程中启动另外一个线程\n        System.out.println(\"b is start....\");\n        synchronized (b) {\n            try {\n                System.out.println(\"Waiting for b to complete...\");\n                b.wait();// 这一句是什么意思，究竟谁等待?\n                System.out.println(\"ThreadB is Completed. Now back to main thread\");\n            } catch (InterruptedException e) {\n            }\n        }\n        System.out.println(\"Total is :\" + b.total);\n    }\n}\n\nclass ThreadB extends Thread {\n    int total;\n\n    public void run() {\n        synchronized (this) {\n            System.out.println(\"ThreadB is running..\");\n            for (int i = 0; i <= 100; i++) {\n                total += i;\n            }\n            System.out.println(\"total is\" + total);\n            notify();\n        }\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3063,"question":"】Wait作用？当前线程停止往下执行，别的线程使用notify，这线程才能继续往下执行","simplecontent":null,"content":"当前线程停止往下执行，别的线程使用notify，这线程才能继续往下执行","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3064,"question":"】为什么wait()、notify()方法需要和synchronized一起使用?只有获取对象锁，才需要用到wait和notify","simplecontent":null,"content":"Obj.wait()与Obj.notify()必须要与synchronized(Obj)一起使用，也就是wait,与notify必须通过获取的锁对象进行调用**，从语法角度来说就是Obj.wait(),Obj.notify必须在synchronized(Obj){…}语句块内。从功能上来说wait就是说线程在获取对象锁后，主动释放对象锁，同时本线程休眠。直到有其它线程调用对象的notify()唤醒该线程，才能继续获取对象锁，并继续执行。相应的notify()就是对对象锁的唤醒操作。\nObject.wait()：释放当前对象锁，并进入阻塞队列\nObject.notify()：唤醒当前对象阻塞队列里的任一线程（并不保证唤醒哪一个）\nObject.notifyAll()：唤醒当前对象阻塞队列里的所有线程\n每一个对象都有一个与之对应的监视器\n每一个监视器里面都有一个该对象的锁以及一个等待队列和一个同步队列\nwait()方法的语义有两个，一是释放当前对象锁，另一个是进入阻塞队列，可以看到，这些操作都是与监视器相关的，当然要指定一个监视器才能完成这个操作了\n\nnotify()方法也是一样的，用来唤醒一个线程，你要去唤醒，首先你得知道他在哪儿，所以必须先找到该对象，也就是获取该对象的锁，当获取到该对象的锁之后，才能去该对象的对应的等待队列去唤醒一个线程。值得注意的是，只有当执行唤醒工作的线程离开同步块，即释放锁之后，被唤醒线程才能去竞争锁。\n\n因wait()而导致阻塞的线程是放在阻塞队列中的，因竞争失败导致的阻塞是放在同步队列中的，notify()/notifyAll()实质上是把阻塞队列中的线程放到同步队列中去","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3065,"question":"】如果一个方法加，一个方法减，怎么操作？synchronized","simplecontent":null,"content":"2个线程结果\n进入aaa100 //启动线程1\n进入bbb120 //启动线程2\n出bbb109 //线程1 使用await 先不往下执行 但是线程2没有await继续执行  ，notify并不释放锁，所以会继续往下走完整个方法，告诉调用过wait方法的线程可以去参与获得锁的竞争\n109 //使用了sleep 4秒  不让被唤醒的线程执行\n出aaa109 //线程被唤醒了  居然是在sleep之后\n\nA，B方法内都涉及到对同一个属性的操作的话，那么为了避免死锁，你可以用synchronized关键字配合wait（），notify（）方法一起使用。\n新手，硬生生把每次加减操作都加了锁。运行比单线程慢得多。\n\nA线程调用了 Condition.await（Object.wait），如果要唤醒A线程，那么B线程必须做到：\na 获取到锁(因为A线程wait释放了锁)\nb 调用 Condition.signal（Object.notify），这个时候A还不能执行，只是被唤醒，唤醒后需要重新获取锁\n\n Condition.await（Object.wait）和 Condition.signal（Object.notify）\n其实就是线程通信机制，Object的两个方法很好理解，一个是进入等待，一个唤醒等待的线程\n\nnewCondition方法获取的条件是不同的，我们知道，Object.notify 是唤醒一个等待的线程，但是在多生产者和多消费者模式中，生产者调用 notify 方法会唤醒一个等待线程，而这个等待线程很有可能也是一个 生产者，根本就没有唤醒消费者，就会出现死循环\n所以如果能将生产者和消费者使用的条件隔离开，问题就解决了","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3066,"question":"方案就是：?","simplecontent":null,"content":"生产者 使用一个 condition1\n消费者 使用一个 condition2","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3067,"question":"】线程安全的加一？sys，lock，cas","simplecontent":null,"content":"《sys，lock，cas》","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3068,"question":"】实现了AQS的锁有哪些？自旋锁、互斥锁、读锁写锁、条件产量、信号量、栅栏都是AQS的衍生物","simplecontent":null,"content":"自旋锁、互斥锁、读锁写锁、条件产量、信号量、栅栏都是AQS的衍生物","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3069,"question":"】为什么使用AQS?资源被阻塞时放入队列","simplecontent":null,"content":"AQS的核心思想是，如果被请求的共享资源空闲，则将当前请求资源的线程设置为有效的工作线程，并将共享资源设置为锁定状态，如果被请求的共享资源被占用，那么就需要一套线程阻塞等待以及被唤醒时锁分配的机制，这个机制AQS是用CLH队列锁实现的，即将暂时获取不到锁的线程加入到队列中。\nCLH（Craig，Landin，and Hagersten）队列是一个虚拟的双向队列，虚拟的双向队列即不存在队列实例，仅存在节点之间的关联关系。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3070,"question":"】AQS 支持两种同步方式？独占是一个线程享用资源，而共享是多个线程同时使用","simplecontent":null,"content":"1、独占式\n2、共享式\n这样方便使用者实现不同类型的同步组件， 独占式如 ReentrantLock， 共享式如Semaphore，CountDownLatch，组合式的如 ReentrantReadWriteLock。总之，\nAQS 为使用提供了底层支撑， 如何组装实现， 使用者可以自由发挥。\n\n1.Exclusive：独占，只有一个线程能执行，如ReentrantLock\n2.Share：共享，多个线程可以同时执行，如Semaphore、CountDownLatch、ReadWriteLock，CyclicBarrier\n不同的自定义的同步器争用共享资源的方式也不同。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3071,"question":"】AQS是什么?队列同步器，判断同步状态是否上锁，未上锁可以执行，上锁放入队列尾部；在cas和lock上有使用AQS","simplecontent":null,"content":"《AbstractQueuedSynchronizer, 队列同步器，它是Java并发用来构建锁和其他同步组件的基础框架\nAQS的实现依赖内部的同步队列（FIFO双向队列），如果当前线程获取同步状态失败，AQS会将该线程以及等待状态等信息构造成一个Node，将其加入同步队列的尾部，同时阻塞当前线程，当同步状态释放时，唤醒队列的头节点。\n获取同步状态\n假设线程A要获取同步状态（这里想象成锁，方便理解），初始状态下state=0,所以线程A可以顺利获取锁，A获取锁后将state置为1。在A没有释放锁期间，线程B也来获取锁，此时因为state=1，表示锁被占用，所以将B的线程信息和等待状态等信息构成出一个Node节点对象，放入同步队列，head和tail分别指向队列的头部和尾部（此时队列中有一个空的Node节点作为头点，head指向这个空节点，空Node的后继节点是B对应的Node节点，tail指向它），同时阻塞线程B(这里的阻塞使用的是LockSupport.park()方法)。后续如果再有线程要获取锁，都会加入队列尾部并阻塞。\n释放同步状态\n当线程A释放锁时，即将state置为0，此时A会唤醒头节点的后继节点（所谓唤醒，其实是调用LockSupport.unpark(B)方法），即B线程从LockSupport.park()方法返回，此时B发现state已经为0，所以B线程可以顺利获取锁，B获取锁后B的Node节点随之出队。\n上面只是简单介绍了AQS获取和释放的大致过程，下面结合AQS和ReentrantLock源码来具体看下JDK是如何实现的，特别要注意JDK是如何保证同步和并发操作的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3072,"question":"】Lock如何实现公平锁?使用队列按照先后顺序来，谁先申请，就谁先获得锁","simplecontent":null,"content":"《使用队列按照先后顺序来，谁先申请，就谁先获得锁》\n在大多数情况下，锁的申请都是非公平的。也就是说，线程1和线程2都需要申请锁A，那么当锁A可用的时候，哪个线程获得锁呢？一般情况都是系统随机挑选一个，因此不能保证其公平性。而公平锁就不是这样的，按照先后顺序来，谁先申请，就谁先获得锁。公平锁带来的一个问题就是需要维护一个有序队列，性能相对低。所以默认情况下，锁都是非公平的。\n\n公平锁即尽量以请求锁的顺序来获取锁。比如同是有多个线程在等待一个锁，当这个锁被释放时，等待时间最久的线程（最先请求的线程）会获得该所，这种就是公平锁。\n非公平锁即无法保证锁的获取是按照请求锁的顺序进行的。这样就可能导致某个或者一些线程永远获取不到锁。\n在Java中，synchronized就是非公平锁，它无法保证等待的线程获取锁的顺序。\n而对于ReentrantLock和ReentrantReadWriteLock，它默认情况下是非公平锁，但是可以设置为公平锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3073,"question":"】synchronized与lock，哪个效率更高?量小用sync；量大用lock","simplecontent":null,"content":"《量小用sync；量大用lock》\n \t1\t10\t50\t100\t500\t1000\t5000\nsynchronized\t542\t4894\t4667\t4700\t5151\t5156\t5178\nlock\t838\t1211\t821\t847\t851\t1211\t1241\n可以看到，在多线程环境并存在大量竞争的情况下，synchronized的用时迅速上升，而lock却依然保存不变或增加很少。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3074,"question":"】Synchronized和Lock是公平锁吗?默认是不公平的","simplecontent":null,"content":"《默认是不公平的》\n\n非公平锁代码\n// 新建非公平锁实例Lock lock = new ReentrantLock();// 新建非公平锁实例//\n Lock lock = new ReentrantLock(true);\n// 加锁\nlock.lock();\ntry {\n// 业务逻辑\n} catch (Exception e) {\nprintStackTrace();\n} finally {\n    // 归还锁\nlock.unlock();\n}\n\n·  获取锁的过程就是设置AbstractQueuedSynchronizer#state属性的过程。\n·  公平锁因为维护了一个队列，只有当前线程位于队列头部时，才能获取锁（设置state的状态）。\n·  非公平锁就是一个不断插队的过程，不care现在队列是什么情况，抓住一切机会设置state的状态，设置成功了，就代表获得了锁，几次尝试插队失败以后，才加入到队尾，等待获得锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3075,"question":"Lock所类型?","simplecontent":null,"content":"可重入锁定义是什么\n     1:可重入所(假如某一时刻，线程A执行到了method1，此时线程A获取了这个对象的锁，而由于method2也是synchronized方法，假如synchronized不具备可重入性，此时线程A需要重新申请锁。但是这就会造成一个问题，因为线程A已经持有了该对象的锁，而又在申请获取该对象的锁，这样就会线程A一直等待永远不会获取到的锁。而由于synchronized和Lock都具备可重入性，所以不会发生上述现象。)\n     2:可中断所(在等待的状态下可以进行中断此次的等待而进行下一步的操作)\n     3:公平所(在构造函数中传入true是公平所,贡品所是让等待时间比较久的线程优先获得所)\n     4:读写所\n1.自旋锁定义\n首先是一种锁，与互斥锁相似，基本作用是用于线程（进程）之间的同步。与普通锁不同的是，一个线程A在获得普通锁后，如果再有线程B试图获取锁，那么这个线程B将会挂起（阻塞）；试想下，如果两个线程资源竞争不是特别激烈，而处理器阻塞一个线程引起的线程上下文的切换的代价高于等待资源的代价的时候（锁的已保持者保持锁时间比较短），那么线程B可以不放弃CPU时间片，而是在“原地”忙等，直到锁的持有者释放了该锁，这就是自旋锁的原理，可见自旋锁是一种非阻塞锁。\n\n自旋锁定义（spinlock）：是指当一个线程在获取锁的时候，如果锁已经被其它线程获取，那么该线程将循环等待，然后不断的判断锁是否能够被成功获取，直到获取到锁才会退出循环。\n获取锁的线程一直处于活跃状态，但是并没有执行任何有效的任务，使用这种锁会造成busy-waiting。\n\n自旋锁的优点\n自旋锁不会使线程状态发生切换，一直处于用户态，即线程一直都是active的；不会使线程进入阻塞状态，减少了不必要的上下文切换，执行速度快\n非自旋锁在获取不到锁的时候会进入阻塞状态，从而进入内核态，当获取到锁的时候需要从内核态恢复，需要线程上下文切换。 （线程被阻塞后便进入内核（Linux）调度状态，这个会导致系统在用户态与内核态之间来回切换，严重影响锁的性能）\n\n\n作者：Java高级架构狮\n链接：https://www.jianshu.com/p/9d3660ad4358\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3076,"question":"中断锁代码?","simplecontent":null,"content":"thread1.start();\nthread2.start();\ntry {\n    Thread.sleep(2000);\n} catch (InterruptedException e) {\n    e.printStackTrace();\n}\nthread2.interrupt();\n\npublic void insert(Thread thread) throws InterruptedException {\n \n    lock.lockInterruptibly(); //注意，如果需要正确中断等待锁的线程，必须将获取锁放在外面，然后将InterruptedException抛出\n\n    try {\n        System.out.println(thread.getName() + \"得到了锁\");\n        long startTime = System.currentTimeMillis();\n        for (; ; ) {\n            if (System.currentTimeMillis() - startTime >= Integer.MAX_VALUE)\n                break;\n            //插入数据\n        }\n    } finally {\n        lock.unlock();\n        System.out.println(thread.getName() + \"释放了锁\");\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:35","updateTime":"2021-05-26 01:02:35","isExist":null},{"id":3049,"question":"】多线程同时执行会卡死怎么解决？业务、数据库、请求多 ","simplecontent":null,"content":"《排查业务是否调用太长；数据库数是否太慢；请求过多可以进行限流》\n首先排查业务是否调用太长了，减少调用时间，防止处理太长线程不能及时回收\n数据库数据量是否太慢\n请求过多可以进行限流\n死锁问题还是资源耗尽问题呢\n最简单的就是重启 分解决","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3050,"question":"CountDownLatch的不足?","simplecontent":null,"content":"CountDownLatch是一次性的，计算器的值只能在构造方法中初始化一次，之后没有任何机制再次对其设置值，当CountDownLatch使用完毕后，它不能再次被使用","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3051,"question":"CountDownLatch作用?","simplecontent":null,"content":"是一个同步工具类，用来协调多个线程之间的同步，或者说起到线程之间的通信（而不是用作互斥的作用）。\nCountDownLatch能够使一个线程在等待另外一些线程完成各自工作之后，再继续执行。使用一个计数器进行实现。计数器初始值为线程的数量。当每一个线程完成自己任务后，计数器的值就会减一。当计数器的值为0时，表示所有的线程都已经完成一些任务，然后在CountDownLatch上等待的线程就可以恢复执行接下来的任务。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3052,"question":"】Static，final，volatile是否能保证线程安全？不能","simplecontent":null,"content":"不能","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3053,"question":"】如何让主线程等子线程执行完之后再执行？join","simplecontent":null,"content":"主线程X需要在子线程A和B执行完成之后再执行\n\n1.Join\npublic class ThreadX {\n    public static void main(String[] args) throws InterruptedException {\n        //主线程X\n        Thread threadX = new Thread(new Runnable() {\n            public void run() {\n                System.out.println(\"主线程X开始执行\");\n                //子线程A\n                Thread threadA = new Thread(new ThreadA());\n                //子线程B\n                Thread threadB = new Thread(new ThreadB());\n                threadA.start();\n                threadB.start();\n                try {\n                    threadA.join();\n                    threadB.join();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"主线程X执行结束\");\n            }\n        });\n        threadX.start();\n    }\n}\n主线程X开始执行\n线程A开始执行\n线程B开始执行\n线程A执行结束\n线程B执行结束\n主线程X执行结束\n\n2.countDownLatch\nimport java.util.concurrent.CountDownLatch;\n\npublic class CountDownLatchThread implements Runnable {\n\n    private String threadName;\n\n    private CountDownLatch latch;\n\n    public CountDownLatchThread(String threadName, CountDownLatch latch) {\n        this.threadName = threadName;\n        this.latch = latch;\n    }\n\n    public void run() {\n        System.out.println(\"线程\" + threadName + \"开始工作\");\n        try {\n            //模拟线程工作\n            Thread.sleep(3000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        latch.countDown();\n        System.out.println(\"线程\" + threadName + \"完成工作\");\n    }\n\n    public static void main(String[] args) {\n        //创建主线程\n        Thread threadX = new Thread(new Runnable() {\n            public void run() {\n                CountDownLatch latch = new CountDownLatch(2);\n                System.out.println(\"主线程需要等待子线程执行完成后再执行\");\n                Thread threadA = new Thread(new CountDownLatchThread(\"A\", latch));\n                Thread threadB = new Thread(new CountDownLatchThread(\"B\", latch));\n                threadA.start();\n                threadB.start();\n                try {\n                    latch.await();\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(\"子线程执行完成了，主线程继续执行\");\n            }\n        });\n        //启动主线程X\n        threadX.start();\n    }\n}\n主线程需要等待子线程执行完成后再执行\n线程A开始工作\n线程B开始工作\n线程B完成工作\n线程A完成工作\n子线程执行完成了，主线程继续执行\n\nProcess finished with exit code 0\n\n利用callable和FutureTask可以获取到子线程的执行结果或返回值。\nhttps://blog.csdn.net/b521626/article/details/102926773","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3054,"question":"Join作用?","simplecontent":null,"content":"让自己先停止，执行别人的先，然后再执行自己\n就是要保证t1,t2在main跑完之前跑完","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3055,"question":"】你是如何调用 wait方法的？使用if 块还是循环？","simplecontent":null,"content":"wait方法应该在循环调用，因为当线程获取到 CPU 开始执行的时候，其他条件可能还没有满足，所以在处理前，循环检测条件是否满足会更好。下面是一段标准的使用 wait 和 notify 方法的代码：\n// The standard idiom for using the wait methodsynchronized (obj) { \nwhile (condition does not hold)\nobj.wait(); \n// (Releases lock, and reacquires on wakeup)... \n// Perform action appropriate to condition \n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3056,"question":"Java 中能创建 volatile 数组吗？","simplecontent":null,"content":"能，Java 中可以创建 volatile 类型数组，不过只是一个指向数组的引用，而不是整个数组。我的意思是，如果改变引用指向的数组，将会受到 volatile 的保护，但是如果多个线程同时改变数组的元素，volatile 标示符就不能起到之前的保护作用了。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3057,"question":"volatile 能使得一个非原子操作变成原子操作吗？","simplecontent":null,"content":"一个典型的例子是在类中有一个 long 类型的成员变量。如果你知道该成员变量会被多个线程访问，如计数器、价格等，你最好是将其设置为 volatile。为什么？因为 Java 中读取 long 类型变量不是原子的，需要分成两步，如果一个线程正在修改该 long 变量的值，另一个线程可能只能看到该值的一半（前 32 位）。但是对一个 volatile 型的 long 或 double 变量的读写是原子。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3058,"question":"Volatile的作用?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3059,"question":"Volatile的使用场景?","simplecontent":null,"content":"1、防止重排序\n大家应该都很熟悉单例模式的实现，而在并发环境下的单例实现方式，我们通常可以采用双重检查加锁（DCL）的方式来实现。其源码如下：\n2、实现可见性\n　　可见性问题主要指一个线程修改了共享变量值，而另一个线程却看不到。引起可见性问题的主要原因是每个线程拥有自己的一个高速缓存区——线程工作内存。\n为什么会出现b=3;a=1这种结果呢？正常情况下，如果先执行change方法，再执行print方法，输出结果应该为b=3;a=3。相反，如果先执行的print方法，再执行change方法，结果应该是 b=2;a=1。那b=3;a=1的结果是怎么出来的？原因就是第一个线程将值a=3修改后，但是对第二个线程是不可见的，所以才出现这一结果。如果将a和b都改成volatile类型的变量再执行，则再也不会出现b=3;a=1的结果了。\n3、保证原子性\n 　　关于原子性的问题，上面已经解释过。volatile只能保证对单次读/写的原子性。\n大家可能会误认为对变量i加上关键字volatile后，这段程序就是线程安全的。\n（1）读取i的值。\n　　（2）对i加1。\n　　（3）将i的值写回内存。\nvolatile是无法保证这三个操作是具有原子性的，我们可以通过AtomicInteger或者Synchronized来保证+1操作的原子性。\nhttps://www.cnblogs.com/paddix/p/5428507.html","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3060,"question":"】为什么会出现脏读？线程不能立马访问其它线程修改的数据","simplecontent":null,"content":"《线程不能立马访问其它线程修改的数据》\nJava内存模型规定所有的变量都是存在主存当中，每个线程都有自己的工作内存。线程对变量的所有操作都必须在工作内存中进行，而不能直接对主存进行操作。并且每个线程不能访问其他线程的工作内存。变量的值何时从线程的工作内存写回主存，无法确定。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3061,"question":"】Lock和wait区别？lock是锁保证线程安全；而wait是线程通信","simplecontent":null,"content":"《lock是锁保证线程安全；而wait是线程通信》\nlock的作用是保护多线程访问的共享资源，而wait的作用是用于多线程之间的线程通信，作用不一样\n线程之间的通信方法Condition.await 和 Condition.signal （Object.wait 和 Object.notify） 的调用前提是必须获取到锁，如果没有获取到锁就直接调用，则会抛出java.lang.IllegalMonitorStateException 异常\n\n因为两个都是对象锁，只能一个线程处理一个方法，其中一个阻塞，当一个执行完后，就会让另一个去执行，而不是继续阻塞\n\nWait让当前线程处于等待状态，让其他线程先执行。\nwait()方法是让线程释放对象锁，让其他线程拿到锁之后去优先执行，当其他全程唤醒wait()中的线程 或者 拿到对象锁的线程都执行完释放了对象锁之后，wait()中的线程才会再次拿到对象锁从而执行。\nsleep()方法是让线程睡眠，此时并没有释放对象锁，其他想要拿到睡眠线程的对象锁的线程也就拿不到相应的对象锁，从而不能抢在它前面执行。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:34","updateTime":"2021-05-26 01:02:34","isExist":null},{"id":3033,"question":"】线程池存储线程的容器？List或者set或map，最好链表list","simplecontent":null,"content":"使用集合存储线程:\nArrayList\nLinkedList\nHashSet\nHashMap\n这里使用LinkedList 因为链表的增删快","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3034,"question":"】排队有三种通用策略？有界、无界、不存储","simplecontent":null,"content":"直接提交。工作队列的默认选项是 SynchronousQueue，它将任务直接提交给线程而不保持它们。在此，如果不存在可用于立即运行任务的线程，则试图把任务加入队列将失败，因此会构造一个新的线程。此策略可以避免在处理可能具有内部依赖性的请求集时出现锁。直接提交通常要求无界 maximumPoolSizes 以避免拒绝新提交的任务。当命令以超过队列所能处理的平均数连续到达时，此策略允许无界线程具有增长的可能性。\n\n无界队列。使用无界队列（例如，不具有预定义容量的 LinkedBlockingQueue）将导致在所有 corePoolSize 线程都忙时新任务在队列中等待。这样，创建的线程就不会超过 corePoolSize。（因此，maximumPoolSize 的值也就无效了。）当每个任务完全独立于其他任务，即任务执行互不影响时，适合于使用无界队列；例如，在 Web 页服务器中。这种排队可用于处理瞬态突发请求，当命令以超过队列所能处理的平均数连续到达时，此策略允许无界线程具有增长的可能性。\n\n有界队列。当使用有限的 maximumPoolSizes 时，有界队列（如 ArrayBlockingQueue）有助于防止资源耗尽，但是可能较难调整和控制。队列大小和最大池大小可能需要相互折衷：使用大型队列和小型池可以最大限度地降低 CPU 使用率、操作系统资源和上下文切换开销，但是可能导致人工降低吞吐量。如果任务频繁阻塞（例如，如果它们是 I/O 边界），则系统可能为超过您许可的更多线程安排时间。使用小型队列通常要求较大的池大小，CPU 使用率较高，但是可能遇到不可接受的调度开销，这样也会降低吞吐量。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3035,"question":"Lock与CAS 分析?","simplecontent":null,"content":"1、cas操作如果预料到会自旋很多次，然后会导致，做了事情之后（比如写了4、5行代码），再cas操作发现别人把这个数据改了，然后自旋，这就导致前面执行的4、5行代码都是无用功。\n这样的化，性能就不是很好了。\n2、比如AtomicInteger和lock Integer，再高并发下，AtomicInteger确实会性能好一点，但是也不会高特别多，那种几倍差距，除非，特别特别高的并发。\n那是因为，AtomicInteger的自旋没有做其他的无用功，直接cas。\n3、cas相对于lock的性能优化方面是，减少了thread切换的开销。\n3、看Doug Lea大佬，直接使用Lock锁的场景比比皆是。\n4、其实，更高的提高性能方式的方式，是想办法，把锁的粒度减少，比如像concurretHashmap一样。而不是盲目的用cas，我想这也是为什么Unsafe这个类设计的就是不让普通开发人员使用的一个原因。\n总结：能不适用cas尽量不要用cas，lock不会比cas低很多性能，提高并发性能最大的地方应该是减少lock的粒度。\n适用场景：乐观认为并发不高，不需要阻塞，可以不上锁。 \n特点：不断比较更新，直到成功。\n缺点：高并发cpu压力大；ABA问题。\nABA问题是什么： \nCAS机制生效的前提是，取出内存中某时刻的数据，而在下时刻比较并替换。 \n如果在比较之前，数据发生了变化，例如：A->B->A，即A变为B然后又变化A，那么这个数据还是发生了变化，但是CAS还是会成功。\n如何避免aba问题\nJava中CAS机制使用版本号进行对比，避免ABA问题。\nsynchronized\n适用场景：悲观认为并发很高，需要阻塞，需要上锁。\n特点：语言层面的优化，锁粗化、偏向锁、轻量锁等等；可读性高。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3036,"question":"ReentrantLock 和 Atomic类?","simplecontent":null,"content":"以上两种并发工具都使用了CAS机制。 \n在并发不高竞争不激烈时候，性能略低于synchronized；相反，并发高竞争激烈时候，性能高于synchronized。\nReentrantLock相对于synchronized：\nReentrantLock等待可中断，synchronized不可以。\nReentrantLock需要手动释放锁，synchronized不需要。\nReentrantLock可支持公平非公平锁，synchronized只支持非公平锁。\nReentrantLock没有语言层面的优化，底层实现机制AQS和CAS，synchronized有优化。\nReentrantLock可重入锁，synchronized不可重入，可能导致死锁。\nReentrantLock支持读写锁，可以提高高并发读操作。\nsynchronized由操作系统支持，涉及内核态和用户态的上下文切换，并发高时切换开销非常大。\nReentrantLock（AQS）依赖volatile int变量标示锁状态，结构为双向链表的等待队列，通过（cas+死循环）更改锁状态，一旦更新成功，标示竞争到锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3037,"question":"】CAS与Synchronized的区别？乐观锁、悲观锁","simplecontent":null,"content":"CAS机制与Synchronized的区别：\n①CAS机制属于乐观锁，乐观的认为程序中的并发情况不那么严重，所\n以让线程不断进行尝试。\n②而Synchronized属于悲观锁，悲观的认为程序中的并发情况严重，所\n以对于每一个操作都严防死守。它会让没有得到锁资源的线程进入阻塞\n态，当在争夺到锁资源后恢复为就绪态，这个过程涉及到操作系统用户\n模式和内核模式的状态，代价比较高。\n\nCAS机制的缺点：\n①CPU开销较大，不适合用于写操作并发量高的场景。\n②只能保证一个变量的原子性操作，无法保证整个代码块或者说多个变\n量的原子性。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3038,"question":"】AtomicInteger原理？使用cas乐观锁，描述cas操作流程","simplecontent":null,"content":"最核心的CAS操作\natomic的seter getter内部实现是用了互斥锁来保证seter getter方法在多线程中的安全，但atomic修饰的对象是我们自定义的，可能并没有加锁，在多线程中atomic修饰对象并不能保证线程安全。\n\n 对某个内存值拷贝一个副本，某个线程若读到该副本，并对其进行计算，输出结果，在写入内存时，再次取出内存值和该副本比较，若副本和内存值相同，则把新的值写入内存。\n\n他将保证数据只能被一个线程占用,","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3039,"question":"volatile实现可见性?","simplecontent":null,"content":"通过内存屏障和禁止重排序优化来实现可见性。\n1) 对共享变量进行写操作后，加入一条store屏障指令，强制将共享变量的值刷新到主内存；\n2) 对共享变量进行读操作前，加入一条load屏障指令，强制从主内存中将最新值刷新到工作内存；","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3040,"question":"】全局变量与局部变量谁快？一样","simplecontent":null,"content":"1。 全局变量是一次分配，永久使用。 而局部变量是进入代码块的时候分配，退出代码块的时候释放。 这是全局变量和局部变量最根本的区别。 如果你要问哪个快 的话， 只要不是频繁分配的情况下，局部变量是全局变量一样快。 因为对于cpu来说， 无论什么变量都是一个地 址，","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3041,"question":"】Volitaile和全局变量区别？取值的位置不同，从内存地址读取数据，从cpu的寄存器中取值","simplecontent":null,"content":"当要求使用volatile声明的变量的值的时候，系统总是重新从它所在的内存地址读取数据，即使它前面的指令刚刚从该处读取过数据，而且读取的数据立刻被保存。\n\n没有用volatile关键字声明的变量i在被访问的时候可能直接从cpu的寄存器中取值（因为之前i被访问过，也就是说之前就从内存中取出i的值保存到某个寄存器中），之所以直接从寄存器中取值，而不去内存中取值，是因为编译器优化代码的结果（访问cpu寄存器比访问ram快的多）。\n1.volatile是告诉编译器不要用寄存器缓存变量,而是每次访问都从寄存器读取.\n因为“虽然”互斥量能保证多个线程访问全局变量的一致性，但是由于编译器优化和 cache 机制，多个线程对于内存中变量操作也许就没有“真正”反馈到内存里（也许仅仅改变了寄存器中的缓存值）","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3042,"question":"】volatile 作用？保证可见性、防止重排序","simplecontent":null,"content":"《保证可见性、防止重排序》\n比 sychronized 更轻量级的同步锁\n在访问 volatile 变量时不会执行加锁操作，因此也就不会使执行线程阻塞，因此 volatile 变量是一种比sychronized 关键字更轻量级的同步机制。volatile 适合这种场景：一个变量被多个线程共享，线程直接给这个变量赋值。\n变量可见性\n其一是保证该变量对所有线程可见，这里的可见性指的是当一个线程修改了变量的值，那么新的值对于其他线程是可以立即获取的。\n禁止重排序\nvolatile 禁止了指令重排。\n适用场景\n值得说明的是对 volatile 变量的单次读/写操作可以保证原子性的，如 long 和 double 类型变量， 但是并不能保证 i++这种操作的原子性，因为本质上 i++是读、写两次操作。在某些场景下可以代替 Synchronized。但是,volatile 的不能完全取代 Synchronized 的位置，只有在一些特殊的场景下，才能适用 volatile。总的来说，必须同时满足下面两个条件才能保证在并发环境的线程安全：\n（1）对变量的写操作不依赖于当前值（比如 i++），或者说是单纯的变量赋值（boolean flag = true）。\n（2）该变量没有包含在具有其他变量的不变式中，也就是说，不同的 volatile 变量之间，不能互相依赖。只有在状态真正独立于程序内其他内容时才能使用 volatile。\n\n也许实现 volatile 变量的规范使用仅仅是使用一个布尔状态标志，用于指示发生了一个重要的一次性事件，例如完成初始化或请求停机。\n\n1.volatile最适用一个线程写，多个线程读的场合。\n   如果有多个线程并发写操作，仍然需要使用锁或者线程安全的容器或者原子变量来代替。(摘自Netty权威指南)\n\n结合使用 volatile 和 synchronized 实现 “开销较低的读－写锁”\nvolatile 允许多个线程执行读操作，因此当使用 volatile 保证读代码路径时，要比使用锁执行全部代码路径获得更高的共享度 —— 就像读－写操作一样。\n\n适用于对变量的写操作不依赖于当前值，对变量的读取操作不依赖于非volatile变量。适用于读多写少的场景。可用作状态标志。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3043,"question":"】为什么不直接用全局变量来实现单例？全局变量必须在程序一开始就创建好。而单例模式可以延迟初始化。","simplecontent":null,"content":"有缺点：全局变量必须在程序一开始就创建好。而单例模式可以延迟初始化。\n类加载器对单例的影响：","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3044,"question":"】Semaphore 是什么？计数信号， release()释放，阻塞acquire()","simplecontent":null,"content":"Semaphore翻译成字面意思为 信号量，Semaphore可以控同时访问的线程个数，通过 acquire() 获取一个许可，如果没有就等待，而 release() 释放一个许可。\n\nJava 中的 Semaphore 是一种新的同步类， 它是一个计数信号。从概念上讲， 从概念上讲， 信号量维护了一个许可集合。如有必要， 在许可可用前会阻塞每一个acquire()，然后再获取该许可。每个 release()添加一个许可，从而可能释放一个正在阻塞的获取者。但是，不使用实际的许可对象，Semaphore 只对可用许可的号码进行计数， 并采取相应的行动。信号量常常用于多线程的代码中， 比如数据库连接池。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3045,"question":"】Semaphore信号量作用？控制当前的方法可以有几个线程访问，其它线程先阻塞","simplecontent":null,"content":"Semaphore  翻译成字面意思为  信号量， Semaphore  可以控制同时访问的线程个数，通过\nacquire() 获取一个许可，如果没有就等待，而 release() 释放一个许可。\nSemaphore 类中比较重要的几个方法：\n1.public void acquire(): 用来获取一个许可，若无许可能够获得，则会一直等待，直到获得许可。\n2.public void acquire(int permits):获取 permits 个许可\n3.public void release() { } :释放许可。注意，在释放许可之前，必须先获获得许可。\n4.public void release(int permits) { }:释放 permits 个许可\n上面 4 个方法都会被阻塞，如果想立即得到执行结果，可以使用下面几个方法\n\n1.public boolean tryAcquire():尝试获取一个许可，若获取成功，则立即返回 true，若获取失败，则立即返回 false\n2.public boolean tryAcquire(long timeout, TimeUnit unit):尝试获取一个许可，若在指定的时间内获取成功，则立即返回true，否则则立即返回 false\n3.public boolean tryAcquire(int permits):尝试获取permits 个许可，若获取成功，则立即返回 true，若获取失败，则立即返回 false\n4.public boolean tryAcquire(int permits, long timeout, TimeUnit unit): 尝试获取 permits 个许可，若在指定的时间内获取成功，则立即返回 true，否则则立即返回 false\n5.还可以通过 availablePermits()方法得到可用的许可数目。\n案例一改编：如果有2个试衣间，同一时间只能容纳5个乘客进店购物，选衣服和试衣服的时间都是随机的，请编程模拟。\npackage com.sml.mybatisdemo.Semaphore;\n\nimport java.util.Random;\nimport java.util.concurrent.Semaphore;\n\npublic class ClothesShop2 implements Runnable{\n\n    private static Semaphore msemaphoretryroom = new Semaphore(2);//指定线程并发数量\n    private static Semaphore msemaphoreshoproom = new Semaphore(5);\n\n    ClothesShop2(){\n    }\n\n    public void selectclothes() {\n        try {\n            msemaphoreshoproom.acquire();//shoproom可用数量减少\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        //availablePermits()查看当前可用的并发数数量\n        //System.out.println(msemaphoreshoproom.availablePermits());\n        System.out.println(\"顾客\" + Thread.currentThread().getName() + \"进来商店了\");\n\n        long time = (long)(Math.random()*20 + 10);\n        System.out.println(\"顾客\" + Thread.currentThread().getName() + \"正在选择衣服, \" + \"时间为：\" + time + \" s\");\n        try {\n            Thread.sleep(time*1000);\n        }catch(Exception e) {\n            e.printStackTrace();\n        }\n\n    }\n\n    //用synchronized修饰，此方法只能被一个线程使用\n    public void tryclothes() {\n\n        try {\n            msemaphoretryroom.acquire();//tryroom可用数量减少\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        long time = (long)(Math.random()*20 + 10);\n        System.out.println(\"顾客\" + Thread.currentThread().getName() + \"试衣服, \" + \"时间为：\" + time + \" s\");\n        try {\n            Thread.sleep(time*1000);\n        }catch(Exception e) {\n            e.printStackTrace();\n        }\n\n        msemaphoretryroom.release();//一个线程从tryroom中出来，释放tryroom数量\n\n    }\n\n    public void givemoney() {\n        long time = 5;\n        System.out.println(\"顾客\" + Thread.currentThread().getName() + \"正在结账, \" + \"时间为：\" + time + \" s\");\n        try {\n            Thread.sleep(time*1000);\n        }catch(Exception e) {\n            e.printStackTrace();\n        }\n\n        msemaphoreshoproom.release();//释放shoproom数量\n        System.out.println(\"顾客\" + Thread.currentThread().getName() + \"出去商店了\");\n\n    }\n\n    @Override\n    public void run() {\n        // TODO Auto-generated method stub\n        while(true) {\n            selectclothes();\n            tryclothes();\n            givemoney();\n            break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        ClothesShop2 clothesshop = new ClothesShop2();\n        for(int i = 1; i <= 10; i++) {\n            Thread c = new Thread(clothesshop,String.valueOf(i));\n            c.start();\n        }\n    }\n\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3046,"question":"CyclicBarrier（回环栅栏-等待至 barrier 状态再全部同时执行）?","simplecontent":null,"content":"字面意思回环栅栏，通过它可以实现让一组线程等待至某个状态之后再全部同时执行。叫做回环是因为当所有等待线程都被释放以后，CyclicBarrier  可以被重用。我们暂且把这个状态就叫做\nbarrier，当调用 await()方法之后，线程就处于 barrier 了。\nCyclicBarrier 中最重要的方法就是await 方法，它有 2 个重载版本：\npublic int await()：用来挂起当前线程，直至所有线程都到达 barrier 状态再同时执行后续任务；\npublic int await(long timeout, TimeUnit unit)：让这些线程等待至一定的时间，如果还有线程没有到达 barrier 状态就直接让到达 barrier 的线程执行后续任务。\npublic static void main(String[] args) {\nint N = 4;\nCyclicBarrier barrier = new CyclicBarrier(N); for(int i=0;i<N;i++)\nnew Writer(barrier).start();\n}\nstatic class Writer extends Thread{ private CyclicBarrier cyclicBarrier;\npublic Writer(CyclicBarrier cyclicBarrier) { this.cyclicBarrier = cyclicBarrier;\n}\n@Override\npublic void run() { try {\nThread.sleep(5000);\t//以睡眠来模拟线程需要预定写入数据操作\nSystem.out.println(\" 线程\"+Thread.currentThread().getName()+\" 写入数据完毕，等待其他线程写入完毕\");\ncyclicBarrier.await();\n} catch (InterruptedException e) { e.printStackTrace();\n}catch(BrokenBarrierException e){\ne.printStackTrace();\n}\nSystem.out.println(\"所有线程写入完毕，继续处理其他任务，比如数据操作\");\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3047,"question":"CountDownLatch（线程计数器 ）?","simplecontent":null,"content":"CountDownLatch 类位于java.util.concurrent 包下，利用它可以实现类似计数器的功能。比如有一个任务 A，它要等待其他 4 个任务执行完毕之后才能执行，此时就可以利用 CountDownLatch 来实现这种功能了。\nfinal CountDownLatch latch = new CountDownLatch(2); new Thread(){public void run() {\nSystem.out.println(\"子线程\"+Thread.currentThread().getName()+\"正在执行\"); Thread.sleep(3000);\nSystem.out.println(\"子线程\"+Thread.currentThread().getName()+\"执行完毕\"); latch.countDown();\n};}.start();\nnew Thread(){ public void run() {\nSystem.out.println(\"子线程\"+Thread.currentThread().getName()+\"正在执行\"); Thread.sleep(3000);\nSystem.out.println(\"子线程\"+Thread.currentThread().getName()+\"执行完毕\"); latch.countDown();\n};}.start();\nSystem.out.println(\"等待 2 个子线程执行完毕...\"); latch.await();\nSystem.out.println(\"2 个子线程已经执行完毕\");\nSystem.out.println(\"继续执行主线程\");\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3048,"question":"】多线程如果线程挂了怎么办？notify","simplecontent":null,"content":"《notify进行线程唤醒》\n酌情选择notifyAll，notify进行线程唤醒。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:33","updateTime":"2021-05-26 01:02:33","isExist":null},{"id":3018,"question":"】使用ThreadLocal应该注意什么?使用static，避免内存泄露","simplecontent":null,"content":"《使用static，避免内存泄露》\n     在使用ThreadLocal对象,尽量使用static,不然会使线程的ThreadLocalMap产生太多Entry,从而造成内存泄露","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3019,"question":"】ThreadLocal 是什么？单个线程的变量，数据存放，线程间胡不干扰，每个线程维护LocalMap","simplecontent":null,"content":"ThreadLocal 是一个本地线程副本变量工具类。主要用于将私有线程和该线程存放的副本对象做一个映射， 各个线程之间的变量互不干扰， 在高并发场景下， 可以实现无状态的调用， 特别适用于各个线程依赖不通的变量值完成操作的场景。简单说 ThreadLocal 就是一种以空间换时间的做法， 在每个 Thread 里面维护了一个以开地址法实现的 ThreadLocal.ThreadLocalMap， 把数据进行隔离， 数据不共享，   自然就没有线程安全方面的问题了。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3020,"question":"】ThreadLocal 作用？","simplecontent":null,"content":"ThreadLocal为变量在每个线程中都创建了一个副本，每个线程可以访问自己内部的副本变量。\n如果threadlocal.get之后的副本，只在当前线程中使用，那么是线程安全的；如果对其他线程暴露，不一定是线程安全的。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3021,"question":"】newCachedThreadPool原理？空闲线程被缓存，存在任务让缓存的线程去执行，若没有缓存线程则新建线程","simplecontent":null,"content":"1. 耗时较短的任务。\n2. 任务处理速度 > 任务提交速度 ，这样才能保证不会不断创建新的进程，避免内存被占满。\n取名为cached-threadpool的原因在于线程池中的线问程是被线程池缓存了的，也就是说，线程没有任务要执行时，便处于空闲状态，处于空闲状态的线程并不会被立即销毁（会被缓存住），只有当空闲时间答超出一段时间(默认为60s)后，线程池才会销毁该线程（相专当于清除过时的缓存）。新任务到达后，线程池首先会让被缓存住的线程（空闲状态）去执行任属务，如果没有可用线程（无空闲线程），便会创建新的线程\n对于newCachedThreadPool，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程。可以看出该线程池会复用空闲的线程，从而减少创建对象和回收对象带来版开销。关于使用，建议看下关于4种线程池的介绍，这样可以根据自己的情权况选择使用哪一个线程池。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3022,"question":"】newCachedThreadPool可能导致的问题？堆外内存溢出","simplecontent":null,"content":"堆外内存溢出\nnewCachedThreadPool 大家一般不用就是这样的原因，因为它的最大值是在初始化的时候设置为Integer.MAX_VALUE，一般来说机器都没那么大内存给它不断使用。当然知道可能出问题的点，就可以去重写一个方法限制一下这个最大值，但是出于后期维护原因，一般来说用 newFixedThreadPool 也就足够了","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3023,"question":"】线程池队列有哪些？数组有限队列、链表有限队列、不存储元素队列、优先级无限队列、链表无界队列、链表无界双向队列","simplecontent":null,"content":"1、ArrayBlockingQueue\n是一个基于数组结构的有界阻塞队列，此队列按 FIFO（先进先出）原则对元素进行排序。\n2、LinkedBlockingQueue\n一个基于链表结构的阻塞队列，此队列按FIFO （先进先出） 排序元素，吞吐量通常要高于ArrayBlockingQueue。静态工厂方法Executors.newFixedThreadPool()使用了这个队列\n3、SynchronousQueue\n一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQueue，静态工厂方法Executors.newCachedThreadPool（5）使用了这个队列。\nSynchronousQueue没有容量，是无缓冲等待队列，是一个不存储元素的阻塞队列，会直接将任务交给消费者，必须等队列中的添加元素被消费后才能继续添加新的元素。\n\n拥有公平（FIFO）和非公平(LIFO)策略，非公平侧罗会导致一些数据永远无法被消费的情况？\n使用SynchronousQueue阻塞队列一般要求maximumPoolSizes为无界(Integer.MAX_VALUE)，避免线程拒绝执行操作。\n\n4、PriorityBlockingQueue\n一个具有优先级的无限阻塞队列。\n\n\n有界、无界、优先级、不存储元素\n1.ArrayBlockingQueue ：由数组结构组成的有界阻塞队列。\n2.LinkedBlockingQueue ：由链表结构组成的有界阻塞队列。\n3.PriorityBlockingQueue ：支持优先级排序的无界阻塞队列。\n4.DelayQueue：使用优先级队列实现的无界阻塞队列。\n5.SynchronousQueue：不存储元素的阻塞队列。\n6.LinkedTransferQueue：由链表结构组成的无界阻塞队列。\n7.LinkedBlockingDeque：由链表结构组成的双向阻塞队列\n\n\n4.1.14.3.ArrayBlockingQueue（公平、非公平）\n用数组实现的有界阻塞队列。此队列按照先进先出（FIFO）的原则对元素进行排序。默认情况下不保证访问者公平的访问队列，所谓公平访问队列是指阻塞的所有生产者线程或消费者线程，当队列可用时，可以按照阻塞的先后顺序访问队列，即先阻塞的生产者线程，可以先往队列里插入元素，先阻塞的消费者线程，可以先从队列里获取元素。通常情况下为了保证公平性会降低吞吐量。我们可以使用以下代码创建一个公平的阻塞队列：\nArrayBlockingQueue fairQueue = new ArrayBlockingQueue(1000,true);\n\n4.1.14.4.LinkedBlockingQueue（两个独立锁提高并发）\n基于链表的阻塞队列，同ArrayListBlockingQueue 类似，此队列按照先进先出（FIFO）的原则对元素进行排序。而 LinkedBlockingQueue 之所以能够高效的处理并发数据，还因为其对于生产者端和消费者端分别采用了独立的锁来控制数据同步，这也意味着在高并发的情况下生产者和消费者可以并行地操作队列中的数据，以此来提高整个队列的并发性能。\nLinkedBlockingQueue 会默认一个类似无限大小的容量（Integer.MAX_VALUE）。\n优先级排序是指什么优先级\n可以根据某个字段排序\n4.1.14.5.PriorityBlockingQueue（compareTo 排序实现优先）\n是一个支持优先级的无界队列。默认情况下元素采取自然顺序升序排列。可以自定义实现\ncompareTo()方法来指定元素进行排序规则，或者初始化 PriorityBlockingQueue 时，指定构造参数Comparator 来对元素进行排序。需要注意的是不能保证同优先级元素的顺序。\n\n4.1.14.6.DelayQueue（缓存失效、定时任务 ）\n是一个支持延时获取元素的无界阻塞队列。队列使用PriorityQueue 来实现。队列中的元素必须实现 Delayed 接口，在创建元素时可以指定多久才能从队列中获取当前元素。只有在延迟期满时才能从队列中提取元素。我们可以将 DelayQueue 运用在以下应用场景：\n1.缓存系统的设计：可以用  DelayQueue  保存缓存元素的有效期，使用一个线程循环查询\nDelayQueue，一旦能从 DelayQueue 中获取元素时，表示缓存有效期到了。\n\n2.定时任务调度：使用  DelayQueue  保存当天将会执行的任务和执行时间，一旦从\nDelayQueue 中获取到任务就开始执行，从比如 TimerQueue 就是使用 DelayQueue 实现的。\n\n4.1.14.7.SynchronousQueue（不存储数据、可用于传递数据）\n是一个不存储元素的阻塞队列。每一个 put 操作必须等待一个 take 操作，否则不能继续添加元素。\nSynchronousQueue 可以看成是一个传球手，负责把生产者线程处理的数据直接传递给消费者线程。队列本身并不存储任何元素，非常适合于传递性场景,比如在一个线程中使用的数据，传递给另 外 一 个 线 程 使 用 ， SynchronousQueue   的 吞 吐 量 高 于   LinkedBlockingQueue   和\nArrayBlockingQueue。\n\n4.1.14.8.LinkedTransferQueue\n是一 个由链表 结构组成的 无界阻 塞  TransferQueue  队列 。 相对于其 他阻塞队 列，\nLinkedTransferQueue 多了 tryTransfer 和transfer 方法。\n1.transfer 方法：如果当前有消费者正在等待接收元素（消费者使用 take()方法或带时间限制的\npoll()方法时），transfer 方法可以把生产者传入的元素立刻 transfer（传输）给消费者。如果没有消费者在等待接收元素，transfer 方法会将元素存放在队列的 tail 节点，并等到该元素被消费者消费了才返回。\n2.tryTransfer 方法。则是用来试探下生产者传入的元素是否能直接传给消费者。如果没有消费者等待接收元素，则返回 false。和 transfer 方法的区别是 tryTransfer 方法无论消费者是否\n接收，方法立即返回。而 transfer 方法是必须等到消费者消费了才返回。\n对于带有时间限制的 tryTransfer(E e, long timeout, TimeUnit unit)方法，则是试图把生产者传入的元素直接传给消费者，但是如果没有消费者消费该元素则等待指定的时间再返回，如果超时还没消费元素，则返回false，如果在超时时间内消费了元素，则返回 true。\n\n4.1.14.9.LinkedBlockingDeque\n是一个由链表结构组成的双向阻塞队列。所谓双向队列指的你可以从队列的两端插入和移出元素。双端队列因为多了一个操作队列的入口，在多线程同时入队时，也就减少了一半的竞争。相比其他的阻塞队列， LinkedBlockingDeque  多了  addFirst ， addLast ， offerFirst ， offerLast ，\npeekFirst，peekLast 等方法，以 First 单词结尾的方法，表示插入，获取（peek）或移除双端队列的第一个元素。以  Last  单词结尾的方法，表示插入，获取或移除双端队列的最后一个元素。另\n外插入方法 add 等同于 addLast，移除方法 remove 等效于 removeFirst。但是 take 方法却等同\n于 takeFirst，不知道是不是 Jdk 的 bug，使用时还是用带有 First 和 Last 后缀的方法更清楚。\n在初始化 LinkedBlockingDeque 时可以设置容量防止其过渡膨胀。另外双向阻塞队列可以运用在\n“工作窃取”模式中。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3024,"question":"】Submit和execute区别？Submit有返回值","simplecontent":null,"content":"1、接收的参数不一样\n2、submit有返回值，而execute没有\n3、submit方便Exception处理\n】CyclicBarrier 和CountDownLatch 区别?加数，互等、减少，一人等他人\nCountdownLatch阻塞主线程，等所有子线程完结了再继续下去。Syslicbarrier阻塞一组线程，直至某个状态之后再全部同时执行，并且所有线程都被释放后，还能通过reset来重用\n1.CountDownLatch减计数，CyclicBarrier加计数。 \n2.CountDownLatch是一次性的，CyclicBarrier可以重用。\n\nCountDownLatch强调的是一个线程（或多个）需要等待另外的n个线程干完某件事情之后才能继续执行。 上述例子，main线程是裁判，5个AWorker是跑步的。运动员先准备，裁判喊跑，运动员才开始跑（这是第一次同步，对应begin）。5个人谁跑到终点了，countdown一下，直到5个人全部到达，裁判喊停（这是第二次同步，对应end），然后算时间。 \n\n2. 继续，还是这五个人（这五个人真无聊..），这次没裁判。规定五个人只要都跑到终点了，大家可以喝啤酒。但是，只要有一个人没到终点，就不能喝。 这里也没有要求大家要同时起跑(当然也可以，加latch)。\nCyclicBarrier强调的是n个线程，大家相互等待，只要有一个没完成，所有人都得等着。正如上例，只有5个人全部跑到终点，大家才能开喝，否则只能全等着。 \n\n再强调下，CountDownLatch强调一个线程等多个线程完成某件事情。CyclicBarrier是多个线程互等，等大家都完成。 ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3025,"question":"】CountDownLatch类的有哪些方法？await线程挂起、countDown减少1","simplecontent":null,"content":"public void await() throws InterruptedException { };   //调用await()方法的线程会被挂起，它会等待直到count值为0才继续执行\npublic boolean await(long timeout, TimeUnit unit) throws InterruptedException { };  //和await()类似，只不过等待一定的时间后count值还没变为0的话就会继续执行\npublic void countDown() { };  //将count值减1","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3026,"question":"】ExecutorService代码？","simplecontent":null,"content":"List list = new ArrayList();\nExecutorService exec = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors() + 1);\ntry {\n    for (Object o : list) {\n        Future<String> future = exec.submit(new Callable<String>() {\n            @Override\n            public String call() throws Exception {\n                try {\n                    \n                } catch (Exception e) {\n                    log.error(e.getMessage(), e);\n                }\n                return null;\n            }\n        });\n    }\n} catch (Exception e) {\n    log.error(e.getMessage(), e);\n} finally {\n    exec.shutdown();\n    while (!exec.isTerminated()) ;\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3027,"question":"】test单元测试中线程run调用@autoware注入的bean报异常？防注入","simplecontent":null,"content":"在线程的run方法中使用注解@autoware注入的bean，会报空指针异常，原因是因为线程中为了线程安全，防注入。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3028,"question":"】Runnable处理list线程代码？","simplecontent":null,"content":"@GetMapping(value = \"/test7\")\npublic void task() {\n    int N = 5; // 线程数\n    CountDownLatch countDownLatch = new CountDownLatch(N);\n    for(int i=0;i<N;i++){\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    System.out.println(Thread.currentThread().getId() + \"状态----\");\n                    int k = 0;\n                    for (int j = 0; j < 1000000000; j++) {\n                        k += j;\n                    }\n                    Thread.sleep(5000);\n                    User user = new User();\n                    user.setUserName(\"123\");\n                    userService.insert1(user);\n                    countDownLatch.await(); // 等待其它线程\n                    System.out.println(Thread.currentThread().getId() + \"==========\");\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        ).start();\n        countDownLatch.countDown();\n    }\n}\n\n@GetMapping(value = \"/test8\")\npublic void task8() {\n    int N = 5; // 线程数\n    CyclicBarrier cyclicBarrier = new CyclicBarrier(N);\n    for(int i=0;i<N;i++){\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    System.out.println(Thread.currentThread().getId() + \"运行状态----\");\n                    int k = 0;\n                    for (int j = 0; j < 1000000000; j++) {\n                        k += j;\n                    }\n                    Thread.sleep(5000);\n                    User user = new User();\n                    user.setUserName(\"123\");\n                    userService.insert1(user);\n                    cyclicBarrier.await(); // 等待其它线程\n                    System.out.println(Thread.currentThread().getId() + \"==========\");\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        ).start();\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3029,"question":"程序计数器做什么?","simplecontent":null,"content":"程序计数器是一个记录着当前线程所执行的字节码的行号指示器,当java文件被编译成字节码文件后，用于记录当前线执行的行号，是实时变化的，程序计数器属于jvm中的线程私有数据。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3030,"question":"如何编写一个超市处理任务?","simplecontent":null,"content":"第一种：线程监控\nExecutorService.awaitTermination(long million, TimeUnit unit)\n\nExecutorService executor = Executors.newCachedThreadPool();\nTask task = new Task(\"one\", 5);\n//Task task2 = new Task(\"two\", 2);\nFuture<?> future = executor.submit(task);\n//Future<?> future2 = executor.submit(task2);\nList<Future<?>> futures = new ArrayList<Future<?>>();\nfutures.add(future);\n//futures.add(future2);\ntry {\n    if (executor.awaitTermination(3, TimeUnit.SECONDS)) {\n        System.out.println(\"task finished\");\n    } else {\n        System.out.println(\"task time out,will terminate\");\n        for (Future<?> f : futures) {\n            if (!f.isDone()) {\n                f.cancel(true);\n            }\n        }\n    }\n} catch (InterruptedException e) {\n    System.out.println(\"executor is interrupted\");\n} finally {\n    executor.shutdown();\n}\n\n\n首先使用定期线程池创建，一个线程执行任务，一个线程定时，时间到了触发线程处理任务，将执行任务线程取消就行了\nask one 2 roundpool-1-thread-1\ntask time out,will terminatedd========main\n2个线程名称不一样 说明启动2个线程\n\n无论以上哪一种方法，其实现原理都是在超时后通过interrupt打断目标线程的运行，所以都要在捕捉到InterruptedException的catch代码块中return,否则线程仍然会继续执行。另外，最后两种方法本质上是一样的，都是通过持有目标线程的引用，在定时结束后打断目标线程，这两种方法的控制精度最低，因为它是采用另一个线程来监视目标线程的运行时间，因为线程调度的不确定性，另一个线程在定时结束后不一定会马上得到执行而打断目标线程。\n\nExecutorService.awaitTermination(long million, TimeUnit unit)\n这个方法会一直等待所有的任务都结束，或者超时时间到立即返回，若所有任务都完成则返回true，否则返回false\n\n第二种：\nFuture.get(long million, TimeUnit unit) 配合Future.cancle(true)\npublic static void main(String[] args) {\n        ExecutorService executor = Executors.newCachedThreadPool();\n        Task task1 = new Task(\"one\", 5);\n        Future<Boolean> f1 = executor.submit(task1);\n        try {\n            if (f1.get(2, TimeUnit.SECONDS)) { // future将在2秒之后取结果\n                System.out.println(\"one complete successfully\");\n            }\n        } catch (InterruptedException e) {\n            System.out.println(\"future在睡着时被打断\");\n            executor.shutdownNow();\n        } catch (ExecutionException e) {\n            System.out.println(\"future在尝试取得任务结果时出错\");\n            executor.shutdownNow();\n        } catch (TimeoutException e) {\n            System.out.println(\"future时间超时\");\n            f1.cancel(true);\n            // executor.shutdownNow();\n            // executor.shutdown();\n        } finally {\n            executor.shutdownNow();\n        }\n    }","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3031,"question":"】Threadlocal作用？线程私人存储的数据","simplecontent":null,"content":"通常在项目中，用户登录后，我们会将用户的信息存到session，如果想在其它地方获取session中的用户信息，我们需要先获取HttpServletRequest，再通过request.getSession得到HttpSession，从而获取到我们想要的用户信息。通常我们会将以上操作提取一个公共方法\npublic static User getSessionUser(HttpServletRequest request)\n    {\n        if(request.getSession().getAttribute( \"sessionuser\" ) != null)\n        {\n            return (User)request.getSession().getAttribute( \"sessionuser\" );\n        }\n        return null;\n    }\n在SpringMVC中，我们只要在一个controller方法参数里显式加上HttpServletRequest参数也可以轻松获取\n\n看上去问题似乎得到了解决，可是以上仅能满足在所有action的方法中随用随取，而实际中我们在做一些DAO操作时，往往要记录操作人的ID，也就是当前登录用户的ID，如发表/修改文章，这个时候，在service层和dao层就要用到session中的用户信息，而通常在一个大型项目中，service层和dao层都是和web层分离开来，都是单独的工程，不依赖servlet api，大家也不会为了在service层或者dao层获取登录用户信息而这么做，这样显得会很奇怪，所以我们只能在action中调用service的时候，将用户信息以参数形式传过\n\n所以，对于session中的用户信息，我们不仅想要在action中随用随取，还想在其它普通类中取，即使不依赖servlet api， 我们也要在方法里随用随取，anywhere！\n为了解决这个问题，我们就要采取一种新的方法来存储用户信息——ThreadLocal。\nThreadLocal，顾名思义，就是本地线程，可是这个名字实在容易让人误解，因为其实它是本地线程局部变量的意思，首先我们要知道，我们每个请求都会对应一个线程，这个ThreadLocal就是这个线程使用过程中的一个变量，该变量为其所属线程所有，各个线程互不影响。\n\nThreadLocal.set(T value); //设置值\nThreadLocal.get(); //获取值\nThreadLocal.remove(); //移除值\n所以我们可以借助这个ThreadLocal来存储登录用户的信息，在一个请求中，所有调用的方法都在同一个线程中去处理，这样就实现了在任何地方都可以获取到用户信息了，从而摆脱了HttpServletRequest的束缚。具体实现如下：\n\n所以我们可以借助这个ThreadLocal来存储登录用户的信息，在一个请求中，所有调用的方法都在同一个线程中去处理，这样就实现了在任何地方都可以获取到用户信息了，从而摆脱了HttpServletRequest的束缚。\n\n我们初始化一个静态的ThreadLocal，其支持泛型，这里类型为用户对应的Bean，因为我们要存储的是用户信息，然后写两个静态方法，setUser用于往ThreadLocal设置用户信息，getUser()用于从ThreadLocal获取用户信息\npublic class SessionLocal{\n    private static ThreadLocal<User> local = new ThreadLocal<User>();\n\n    /**     * 设置用户信息     *      * @param user     */\n    public static void setUser( User user )\n    {\n        local.set( user );\n    }\n\n    /**     * 获取登录用户信息     *      * @return     */\n    public static User getUser()\n    {\n        System.out.println( \"当前线程：\" + Thread.currentThread().getName() );\n        return local.get();\n}\n}\n在用户登录的时候，我们根据登录名和密码查询到用户信息以后，就调用上面的setUser()方法存储我们的用户信息到线程局部变量中，暂时不保存到session中：\nSessionLocal.setUser( user );\n\n可是这时候又出现了问题，在一个线程结束后，我又发起了一次后台请求，这个时候，处理这个请求的线程变成了另外一个线程，线程切换了！！！而这个线程中我们并没有set用户信息到它的ThreadLocal中去，此时我们想要获取用户信息就获取不到了，前面说过，ThreadLocal为各个线程所私有，各线程间不共享，也互不影响，那么问题来了，我们只是在登录的时候，查询用户信息并将其放进当前线程的ThreadLocal，而后续其它请求一旦切换到别的线程，我们的功能就玩不转了，所以我们需要借助一个方法来过滤所有的后台请求（排除非必须登录才能访问的url），给用户信息做个检查，一旦SessionLocal.getUser()为空，那么我们就set进去，so，我们可以借助一个Filter来达到我们的目的。\n可是上面我们并没有将用户信息放到session中，此时，我们还是绕回去了，我们依然不得不把用户信息给放到session中，不然我们在Filter中如何获取用户信息并set进ThreadLocal，总不能再查一次数据库，所以，将上面的登录处理做个改动，添加用户信息到session\n\npublic String login()\n   {\n       User user = new User();\n       user.setUsername( username );\n       //存储session       request.getSession().setAttribute( \"sessionuser\", user );\n       //存储ThreadLocal       SessionLocal.setUser( user );\n       System.out.println(\"用户\"+username+\"登录，存进session，并设置进TheadLocal\");\n       return \"chat\";\n   }\n如此，我们在Filter中就可以先判断SessionLocal.getUser()是否为空，如果为空，则从session中取用户，如果session中有，则将用户放到TheadLocal，否则，跳转到首页或者登录页，这里我们定义一个SessionFilter：\npublic class SessionFilter implements Filter{\n\n    @Override\n    public void destroy()\n    {\n        // TODO Auto-generated method stub        \n    }\n\n    @Override\n    public void doFilter( ServletRequest req, ServletResponse res,\n            FilterChain chain ) throws IOException, ServletException\n    {\n        HttpServletRequest request = (HttpServletRequest)req;\n\t//排除登录请求         if(request.getRequestURI().contains( \"user!login.action\" ))\n        {\n            chain.doFilter( req, res );\n            return;\n        }\n        System.out.println(\"请求拦截.\");\n        HttpSession session = request.getSession();\n        if(session.getAttribute( \"sessionuser\") != null)\n        {\n            if(SessionLocal.getUser() == null)\n            {\n                System.out.println(\"当前线程\"+Thread.currentThread().getName()+\"中用户信息为空，从session中set到ThreadLocal.\");\n                SessionLocal.setUser( (User)session.getAttribute( \"sessionuser\") );\n            }\n        } else \n        {\n            System.out.println(\"用户会话失效，跳转到首页.\");\n            HttpServletResponse response = (HttpServletResponse)res;\n            response.sendRedirect( \"index.jsp\" );\n            return;\n        }\n        chain.doFilter( req, res );\n    }\n\n    @Override\n    public void init( FilterConfig arg0 ) throws ServletException\n    {\n        // TODO Auto-generated method stub        \n    }\n}\n经过上面的配置，不论线程怎么切换，我们都可以在任何方法中很方便的获取用户信息了","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3032,"question":"】线程池4种拒绝策略是什么？丢弃抛异常、丢弃、丢弃前面再接收、调用线程处理","simplecontent":null,"content":"四种策略：\nThreadPoolExecutor.AbortPolicy:丢弃任务并抛出RejectedExecutionException异常。 ThreadPoolExecutor.DiscardPolicy：丢弃任务，但是不抛出异常。 ThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新提交被拒绝的任务 ThreadPoolExecutor.CallerRunsPolicy：由调用线程（提交任务的线程）处理该任务","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:32","updateTime":"2021-05-26 01:02:32","isExist":null},{"id":3004,"question":"】ReentrantReadWriteLock有什么不足之处呢？读操作一直都能抢占到CPU时间片，而写操作一直抢不了","simplecontent":null,"content":"------》我们都知道，ReentrantReadWriteLock是读写锁，在多线程环境下，大多数情况是读的情况远远大于写的操作，因此可能导致写的饥饿问题。（换人话来说的话，读操作一直都能抢占到CPU时间片，而写操作一直抢不了）","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3005,"question":"】为什么会导致写操作会出血饥饿问题呢？写锁 的互斥的","simplecontent":null,"content":"-----》 ReentrantReadWriteLock 写锁 的互斥的\n（读和读---不互斥， 读和写---互斥，写和写----互斥），懂了吗？\n\n正因为ReentrantReadWriteLock出现了 读和写是互斥的情况，这个地方需要优化，因此就出现了StampedLock！","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3006,"question":"】StampedLock作用？读锁并不会阻塞写锁，发现有写操作，再去读多一次","simplecontent":null,"content":"5、StampedLock是读锁并不会阻塞写锁。这里就有朋友会问，如果这样设计的话，那么怎样保证读和写的一致性呢？\n-----》StampedLock的设计思路也比较简单，就是在读的时候发现有写操作，再去读多一次。（思想上来说）\n\n6、那下一个问题就是StampedLock是怎样知道读的时候发生了写操作呢？\n-----》我们的StampedLock有两种锁，一种是悲观锁，另外一种是乐观锁。如果线程拿到乐观锁就读和写不互斥，如果拿到悲观锁就读和写互斥。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3007,"question":"】jdk1.8以后加的是什么锁？新增锁StampedLock","simplecontent":null,"content":"取消segments字段，直接采用transient volatile HashEntry<K,V>[] table保存数据，采用table数组元素作为锁，从而实现了对每一行数据进行加锁，进一步减少并发冲突的概率。\n将原先table数组＋单向链表的数据结构，变更为table数组＋单向链表＋红黑树的结构。对于hash表来说，最核心的能力在于将key hash之后能均匀的分布在数组中。如果hash之后散列的很均匀，那么table数组中的每个队列长度主要为0或者1。但实际情况并非总是如此理想，虽然ConcurrentHashMap类默认的加载因子为0.75，但是在数据量过大或者运气不佳的情况下，还是会存在一些队列长度过长的情况，如果还是采用单向列表方式，那么查询某个节点的时间复杂度为O(n)；因此，对于个数超过8(默认值)的列表，jdk1.8中采用了红黑树的结构，那么查询的时间复杂度可以降低到O(logN)，可以改进性能。\n\n\n作者：爱吃糖的程序员\n链接：https://www.zhihu.com/question/364417811/answer/966703702\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n1、自旋锁，自旋，jvm默认是10次，由jvm自己控制，for去争取锁\n2、阻塞锁 被阻塞的线程，不会争夺锁\n3、可重入锁，多次进入改锁的域\n4、读写锁\n5、互斥锁，锁本身就是互斥的\n6、悲观锁，不相信这里是安全的，必须全部上锁\n7、乐观锁，相信这里是安全的\n8、公平锁，有优先级的锁\n9、非公平锁，无优先级的锁\n10、偏向锁，无竞争不锁，有竞争挂起，转为轻量锁\n11、对象锁，锁住对象\n12、线程锁\n13、锁粗化  ，多锁变成一个，自己处理\n14、轻量级锁 ，CAS实现\n15、锁消除 ，偏向锁就是锁消除的一种\n16、锁膨胀 ， jvm实现，锁粗化\n17、信号量，使用阻塞锁实现的一种策略\n18、排他锁(不包含)，X锁，若事务T对数据对象A加上x锁，则只允许T读取和修改A，其他任何事务都不能再对A加任何类型的锁，直到T释放A上的锁。这就保证了其他事务在T释放A上的锁之前不能再读取和修改A","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3008,"question":"】锁的状态总共有四种？无锁、偏向锁、轻量级锁、重量级锁（没有线程访问、有线程访问但下一次任务是否还是这个线程、如果被别人强先了就自旋、自旋次数多了不在等就挂起）","simplecontent":null,"content":"其实在 JDK 1.6之前，synchronized 还是一个重量级锁，是一个效率比较低下的锁，但是在JDK 1.6后，Jvm为了提高锁的获取与释放效率对（synchronized ）进行了优化，引入了 偏向锁 和 轻量级锁 ，从此以后锁的状态就有了四种（无锁、偏向锁、轻量级锁、重量级锁），并且四种状态会随着竞争的情况逐渐升级，而且是不可逆的过程，即不可降级，也就是说只能进行锁升级（从低级别到高级别），不能锁降级（高级别到低级别），意味着偏向锁升级成轻量级锁后不能降级成偏向锁。这种锁升级却不能降级的策略，目的是为了提高获得锁和释放锁的效率。\n级别由低到高依次为：无锁、偏向锁、轻量级锁、重量级锁\n\n\n6.2 无锁\n无锁是指没有对资源进行锁定，所有的线程都能访问并修改同一个资源，但同时只有一个线程能修改成功。\n无锁的特点是修改操作会在循环内进行，线程会不断的尝试修改共享资源。如果没有冲突就修改成功并退出，否则就会继续循环尝试。如果有多个线程修改同一个值，必定会有一个线程能修改成功，而其他修改失败的线程会不断重试直到修改成功。\n6.3 偏向锁\n初次执行到synchronized代码块的时候，锁对象变成偏向锁（通过CAS修改对象头里的锁标志位），字面意思是“偏向于第一个获得它的线程”的锁。执行完同步代码块后，线程并不会主动释放偏向锁。当第二次到达同步代码块时，线程会判断此时持有锁的线程是否就是自己（持有锁的线程ID也在对象头里），如果是则正常往下执行。由于之前没有释放锁，这里也就不需要重新加锁。如果自始至终使用锁的线程只有一个，很明显偏向锁几乎没有额外开销，性能极高。\n偏向锁是指当一段同步代码一直被同一个线程所访问时，即不存在多个线程的竞争时，那么该线程在后续访问时便会自动获得锁，从而降低获取锁带来的消耗，即提高性能。\n当一个线程访问同步代码块并获取锁时，会在 Mark Word 里存储锁偏向的线程 ID。在线程进入和退出同步块时不再通过 CAS 操作来加锁和解锁，而是检测 Mark Word 里是否存储着指向当前线程的偏向锁。轻量级锁的获取及释放依赖多次 CAS 原子指令，而偏向锁只需要在置换 ThreadID 的时候依赖一次 CAS 原子指令即可。\n偏向锁只有遇到其他线程尝试竞争偏向锁时，持有偏向锁的线程才会释放锁，线程是不会主动释放偏向锁的。\n关于偏向锁的撤销，需要等待全局安全点，即在某个时间点上没有字节码正在执行时，它会先暂停拥有偏向锁的线程，然后判断锁对象是否处于被锁定状态。如果线程不处于活动状态，则将对象头设置成无锁状态，并撤销偏向锁，恢复到无锁（标志位为01）或轻量级锁（标志位为00）的状态。\n6.4 轻量级锁（自旋锁）\n 轻量级锁是指当锁是偏向锁的时候，却被另外的线程所访问，此时偏向锁就会升级为轻量级锁，其他线程会通过自旋（关于自旋的介绍见文末）的形式尝试获取锁，线程不会阻塞，从而提高性能。\n轻量级锁的获取主要由两种情况：\n① 当关闭偏向锁功能时；\n② 由于多个线程竞争偏向锁导致偏向锁升级为轻量级锁。\n一旦有第二个线程加入锁竞争，偏向锁就升级为轻量级锁（自旋锁）。这里要明确一下什么是锁竞争：如果多个线程轮流获取一个锁，但是每次获取锁的时候都很顺利，没有发生阻塞，那么就不存在锁竞争。只有当某线程尝试获取锁的时候，发现该锁已经被占用，只能等待其释放，这才发生了锁竞争。\n在轻量级锁状态下继续锁竞争，没有抢到锁的线程将自旋，即不停地循环判断锁是否能够被成功获取。获取锁的操作，其实就是通过CAS修改对象头里的锁标志位。先比较当前锁标志位是否为“释放”，如果是则将其设置为“锁定”，比较并设置是原子性发生的。这就算抢到锁了，然后线程将当前锁的持有者信息修改为自己。\n长时间的自旋操作是非常消耗资源的，一个线程持有锁，其他线程就只能在原地空耗CPU，执行不了任何有效的任务，这种现象叫做忙等（busy-waiting）。如果多个线程用一个锁，但是没有发生锁竞争，或者发生了很轻微的锁竞争，那么synchronized就用轻量级锁，允许短时间的忙等现象。这是一种折衷的想法，短时间的忙等，换取线程在用户态和内核态之间切换的开销。\n6.4 重量级锁\n重量级锁显然，此忙等是有限度的（有个计数器记录自旋次数，默认允许循环10次，可以通过虚拟机参数更改）。如果锁竞争情况严重，某个达到最大自旋次数的线程，会将轻量级锁升级为重量级锁（依然是CAS修改锁标志位，但不修改持有锁的线程ID）。当后续线程尝试获取锁时，发现被占用的锁是重量级锁，则直接将自己挂起（而不是忙等），等待将来被唤醒。\n重量级锁是指当有一个线程获取锁之后，其余所有等待获取该锁的线程都会处于阻塞状态。\n简言之，就是所有的控制权都交给了操作系统，由操作系统来负责线程间的调度和线程的状态变更。而这样会出现频繁地对线程运行状态的切换，线程的挂起和唤醒，从而消耗大量的系统资","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3009,"question":"】轻量级锁和重量级锁区别？","simplecontent":null,"content":"偏向锁的使用：\n当线程进入和退出同步块时，需要经历几个测试步骤： \n1. 测试对象头Mark Word(默认存储对象的HashCode,分代年龄，锁标记位)里是否存储着指向当前线程的偏向锁。 \n2. 若测试失败，则测试Mark Word中偏向锁标识是否设置成1(表示当前为偏向锁) \n3. 没有设置则使用CAS竞争，否则尝试使用CAS将对象头的偏向锁指向当前线程\n偏向锁的撤销：\n当其他线程尝试竞争偏向锁时，就会释放锁，锁的撤销，需要等待全局安全点，分为以下几个步骤： \n1. 暂停拥有偏向锁的线程，检查线程是否存活 \n2. 处于非活动状态，则设置为无锁状态 \n3. 存活，则重新偏向于其他线程或者恢复到无锁状态或者标记对象不适合作为偏向锁 \n4. 唤醒线程\n偏向锁的升级：\n当有第二个线程进入同步代码块时，则升级为轻量级锁\n\n轻量级锁的加锁：如果成功使用CAS将对象头重的Mark Word替换为指向锁记录的指针，则获得锁，失败则当前线程尝试使用自旋(循环等待)来获取锁。\n轻量级锁的解锁：当有另一个线程与该线程同时竞争时，锁会升级为重量级锁。为了防止继续自旋，一旦升级，将无法降级。\n重量级锁特点：其他线程试图获取锁时，都会被阻塞，只有持有锁的线程释放锁之后才会唤醒这些线程，进行竞争。\n偏向锁：仅有一个线程进入临界区\n轻量级锁：多个线程交替进入临界区\n重量级锁：多个线程同时进入临界区","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3010,"question":"】线程时间计算工具？Stopwatch","simplecontent":null,"content":"Stopwatch","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3011,"question":"】Threadlocal代码？","simplecontent":null,"content":"public static final ThreadLocal<TrackHelper> map = new ThreadLocal<TrackHelper>();\n\npublic static TrackHelper getTrackHelper() {\n   TrackHelper th = (TrackHelper) map.get();\n   if (th == null) {\n      th = new TrackHelper();\n      map.set(th);\n   }\n   return th;\n}\n\n1.定义ThreadLocal\npublic class RequestHolder {\n    private final static ThreadLocal<Long> requestHolder = new ThreadLocal<>();\n    public static void add(Long id) {\n        requestHolder.set(id);\n    }\n \n    public static Long getId() {\n        return requestHolder.get();\n    }\n \n    public static void remove() {\n        requestHolder.remove();\n    }\n}\n\n2.controller获取线程id的key\n@Controller\n@RequestMapping(\"/threadLocal\")\npublic class ThreadLocalController {\n \n    @RequestMapping(\"/test\")\n    @ResponseBody\n    public Long test() {\n        return RequestHolder.getId();\n    }\n}\n3.过滤器将当前线程的id添加到ThreadLocal中： \n@Slf4j\npublic class HttpFilter implements Filter {\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n    }\n \n    @Override\n   public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n               //在ThreadLocal中添加当前线程的id\n        RequestHolder.add(Thread.currentThread().getId());\n        filterChain.doFilter(servletRequest, servletResponse);\n    }\n \n    @Override\n    public void destroy() {\n    }\n}\n4.编写拦截器，当请求处理完成后（从Controller返回后），清除ThreadLocal中的id，避免内存泄漏。\npublic class HttpInterceptor extends HandlerInterceptorAdapter {\n \n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        log.info(\"preHandle\");\n        return true;\n    }\n \n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        log.info(\"ThreadId:\"+RequestHolder.getId());\n        RequestHolder.remove();\n        log.info(\"afterCompletion\");\n        return;\n    }\n}\n5.spring boot启动类上注册我们定义的Filer及Inteceptor，并设置拦截路径。\n@SpringBootApplication\npublic class ConcurrencyApplication extends WebMvcConfigurerAdapter{\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ConcurrencyApplication.class, args);\n\t}\n \n\t@Bean\n\tpublic FilterRegistrationBean httpFilter() {\n\t\tFilterRegistrationBean registrationBean = new FilterRegistrationBean();\n\t\tregistrationBean.setFilter(new HttpFilter());\n\t\tregistrationBean.addUrlPatterns(\"/threadLocal/*\");\n\t\treturn registrationBean;\n\t}\n \n\t@Override\n\tpublic void addInterceptors(InterceptorRegistry registry) {\n\t\tregistry.addInterceptor(new HttpInterceptor()).addPathPatterns(\"/**\");\n\t}\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3012,"question":"】threadlocal线程数据隔离原因？Map集合key是当前线程，每个线程key不一样","simplecontent":null,"content":"在ThreadLocal类中有一个Map，用于存储每一个线程的变量的副本。\n优点：既实现多线程并发，游兼顾数据的安全性。\nThreadLocal之所以能达到变量的线程隔离，其实就是每个线程都有一个自己的ThreadLocalMap对象来存储同一个threadLocal实例set的值，而取值的时候也是根据同一个threadLocal实例去自己的ThreadLocalMap里面找，自然就互不影响了，从而达到线程隔离的目的！\n只不过这个Map 的Key是固定的,都是当前线程\n之所以能起到线程隔离的作用,是因为Key就是当前的线程,所以每个线程的值都是隔离的\n\n\n\nThreadLocalMap是ThreadLocal类的一个静态内部类，它实现了键值对的设置和获取（对比Map对象来理解），每个线程中都有一个独立的ThreadLocalMap副本，它所存储的值，只能被当前线程读取和修改。ThreadLocal类通过操作每一个线程特有的ThreadLocalMap副本，从而实现了变量访问在不同线程中的隔离。因为每个线程的变量都是自己特有的，完全不会有并发错误。还有一点就是，ThreadLocalMap存储的键值对中的键是this对象指向的ThreadLocal对象，而值就是你所设置的对象了。\n1、ThreadLocalMap变量属于线程的内部属性，不同的线程拥有完全不同的ThreadLocalMap变量；\n2、线程中的ThreadLocalMap变量的值是在ThreadLocal对象进行set或者get操作时创；\n3、在创建ThreadLocalMap之前，会首先检查当前线程中的ThreadLocalMap变量是否存在，如果不存在则创建一个；如果存在，则使用当前线程已创建的ThreadLocalMap\n4、使用当前线程的ThreadLocalMap的关键在于使用当前的ThreadLocal的实列作为key进行存储。\n可能讲到这里，很多人就会问，那怎么使得多线程数据之间是安全的，这就是我接下来要说的——ThreadLocal数据访问隔离，它做到了两个方面：\n第一：纵向隔离——线程与线程之间的数据访问隔离。因为每个线程在进行对象访问时，访问的都是各个线程自己的ThreadLocalMap；\n第二：横向隔离：同一个线程中，不同的ThreadLocal实列操作的对象之间互相隔离ThreadLocalMap采用ThreadLocal实列作为key来保证。\n在同一个线程不同开发层次中共享数据，往往使用ThreadLocal模式（设计模式），可以对执行逻辑与执行数据进行有效解耦。接下来介绍实现他的两个主要步骤：\n第一：建立一个类，并在其中封装一个静态的threadLocal变量，使其成为一个共享数据环境；\n第二：在类中实现访问静态ThreadLocal变量的静态方法（设置和取值）。\n然而，又有人会问，使用上面那些是因为线程不安全的情况下实施的，那么在线程安全的时候就不要，那我怎么去区分是否是线程安全呢！这个问题很好解决，因为不存在线程安全问题的方面总结起来也就那么几点：\n1、方法签名中的任何参数变量；\n2、处于方法内部的局部变量；\n之所以上面那些是线程安全的，因为都处于方法体的内部！","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3013,"question":"】ThreadLocal 内存泄露解决方法？虚拟机设置弱引用、remove方法","simplecontent":null,"content":"1.JVM利用设置ThreadLocalMap的Key为弱引用，来避免内存泄露。\n2.JVM利用调用remove、get、set方法的时候，回收弱引用。\n3.当ThreadLocal存储很多Key为null的Entry的时候，而不再去调用remove、get、set方法，那么将导致内存泄漏。\n4.当使用static ThreadLocal的时候，延长ThreadLocal的生命周期，那也可能导致内存泄漏。因为，static变量在类未加载的时候，它就已经加载，当线程结束的时候，static变量不一定会回收。那么，比起普通成员变量使用的时候才加载，static的生命周期加长将更容易导致内存泄漏危机。\n事实上，在ThreadLocalMap中的set/getEntry方法中，会对key为null（也即是ThreadLocal为null）进行判断，如果为null的话，那么是会对value置为null的。我们也可以通过调用ThreadLocal的remove方法进行释放！\nthreadlocal里面使用了一个存在弱引用的map,当释放掉threadlocal的强引用以后,map里面的value却没有被回收.而这块value永远不会被访问到了. 所以存在着内存泄露. 最好的做法是将调用threadlocal的remove方法.\n 弱引用与软引用的区别在于：只具有弱引用的对象拥有更短暂的生命周期。在垃圾回收器线程扫描它所管辖的内存区域的过程中，一旦发现了只具有弱引用的对象，不管当前内存空间足够与否，都会回收它的内存。不过，由于垃圾回收器是一个优先级很低的线程，因此不一定会很快发现那些只具有弱引用的对象。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3014,"question":"】threadlocal 线程结束会释放当前线程的数据吗？线程结束后那么线程数据被回收","simplecontent":null,"content":"不会清bai空，要你自己去清空。\n在线程消失之后，其线程局部实例的所有副本都会被垃圾du回收","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3015,"question":"】threadlocal 是线程安全的吗？是的，内部有一个map集合，当定义threadlocal时将线程id作为key，而变量副本作为value存储起来，每个线程增加数据，会拿线程id去拿出对应value，将value的值去加数据","simplecontent":null,"content":"内部实现是通过一个ThreadLocalMap这个Map结构来实现的，将当前的ThreadLocal对象作为Key，变量副本作为Value。\n\nThreadLocal为每一个线程提供一个独立的变量副本，从而隔离了多个线程对访问数据的冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了\npublic class ThreadLocalDemo {\n\n    static ThreadLocal<Integer> count = new ThreadLocal<Integer>(){\n        @Override\n        protected Integer initialValue() {\n            return 0;\n        }\n    };\n\n    static Integer countRef = 0;\n\n    private Integer getNextCount() {\n        count.set(count.get() + 1);\n        return count.get();\n    }\n\n    private Integer getNextCountRef() {\n        countRef = countRef + 1;\n        return countRef;\n    }\n\n    public static void main(String[] args) {\n        ThreadFactory namedThreadFactory = new ThreadFactoryBuilder().setNameFormat(\"demo-pool-%d\").build();\n        ExecutorService executorService = new ThreadPoolExecutor(10, 10,0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<Runnable>(), namedThreadFactory);\n\n        ThreadLocalDemo threadLocalDemo = new ThreadLocalDemo();\n        executorService.execute(new CountRun(threadLocalDemo));\n        executorService.execute(new CountRun(threadLocalDemo));\n        executorService.execute(new CountRun(threadLocalDemo));\n\n        // 参照\n        ThreadLocalDemo threadLocalDemoRef = new ThreadLocalDemo();\n        executorService.execute(new CountRunRef(threadLocalDemoRef));\n        executorService.execute(new CountRunRef(threadLocalDemoRef));\n        executorService.execute(new CountRunRef(threadLocalDemoRef));\n\n        executorService.shutdown();\n    }\n\n    static class CountRun implements Runnable{\n\n        private ThreadLocalDemo demo;\n\n        public CountRun(ThreadLocalDemo dem) {\n            demo = dem;\n        }\n\n        @Override\n        public void run() {\n            for(int i = 0; i < 3; i++){\n                System.out.println(\"thread[\" + Thread.currentThread().getName()+ \"] count [\" + demo.getNextCount() + \"]\");\n            }\n        }\n    }\n\n    static class CountRunRef extends Thread{\n\n        private ThreadLocalDemo demo;\n\n        public CountRunRef(ThreadLocalDemo dem) {\n            demo = dem;\n        }\n\n        @Override\n        public void run() {\n            for(int i = 0; i < 3; i++){\n                System.out.println(\"threadRef[\" + Thread.currentThread().getName()+ \"] count [\" + demo.getNextCountRef() + \"]\");\n            }\n        }\n    }\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3016,"question":"】线程池重用线程时，会对ThreadLocal的值进行清空吗？不会，需要自己情空，线程没有被销毁而是重复使用","simplecontent":null,"content":"只有当线程本地值的生命周期受限于任务的生命周期时，在线程池的线程中使用ThreadLocal才有意义，而在线程池的线程中不应该使用ThreadLocal在任务之间传递值。\n如果你能够在使用ThreadLocal的时候管理它的创建、销毁，那么就可以用，否则会出问题。原因是ThreadLocal是和Thread绑定的，如果Thread是从Thread Pool中拿出来的，那么意味着Thread可能会被复用，如果被复用，你就一定得保证这个Thread上一次结束的时候，其关联的ThreadLocal被清空掉，否则就会串到下一次使用。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":3017,"question":"】ThreadLocal的set(null)和remove方法有什么区别?set(null)把key的值设为空； remove会把key对应Entry的值设为空","simplecontent":null,"content":"   《set(null)把key的值设为空； remove会把key对应Entry的值设为空》\nset(null)把当前的ThreadLocal为key的值设为了空,避免线程下次再执行其他任务时被使用,但此时这个key对应的Entry值还在,只是Entry.value=null\n      remove方法会把这个key对应Entry的值设为空\n      所以从重用和效率的角度来说,set(null)的性能优于remove,在实际的项目中推荐使用set(null)来回收ThreadLocal设置的值.\n ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:31","updateTime":"2021-05-26 01:02:31","isExist":null},{"id":2990,"question":"】你如何确保 main()方法所在的线程是Java 程序?","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2991,"question":"最后结束的线程？使用join","simplecontent":null,"content":"我们可以使用 Thread 类的 join()方法来确保所有程序创建的线程在 main()方法退出前结束。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2992,"question":"】什么是线程调度器和时间分片？操作系统服务负责分配cpu时间、分配cpu时间给线程","simplecontent":null,"content":"线程调度器是一个操作系统服务，它负责为 Runnable 状态的线程分配 CPU 时间。一旦我们创建一个线程并启动它，     它的执行便依赖于线程调度器的实现。\n同上一个问题， 线程调度并不受到 Java 虚拟机控制， 所以由应用程序来控制它是更好的选择（    也就是说不要让你的程序依赖于线程的优先级）。\n时间分片是指将可用的 CPU 时间分配给可用的 Runnable 线程的过程。分配 CPU 时间可以基于线程优先级或者线程等待的时间。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2993,"question":"】你对线程优先级的理解是什么？根据线程调度来判断，也可以手动定义优先级","simplecontent":null,"content":"每一个线程都是有优先级的， 一般来说， 高优先级的线程在运行时会具有优先权， 但这依赖于线程调度的实现， 这个实现是和操作系统相关的(OS dependent)。我们可以定义线程的优先级， 但是这并不能保证高优先级的线程会在低优先级的线程前执行。线程优先级是一个 int 变量(从 1-10)， 1 代表最低优先级， 10 代表最高优先级。\n\njava 的线程优先级调度会委托给操作系统去处理， 所以与具体的操作系统优先级有关， 如非特别需要， 一般无需设置线程优先级。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2994,"question":"】可以直接调用Thread 类的run ()方法么？调用原来线程执行普通方法","simplecontent":null,"content":"当然可以。但是如果我们调用了 Thread 的 run()方法， 它的行为就会和普通的方法一样， 会在当前线程中执行。为了在新的线程中执行我们的代码， 必须使用Thread.start()方法。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2995,"question":"】volatile 变量和 atomic 变量有什么不同？原子性不同","simplecontent":null,"content":"Volatile 变量可以确保先行关系，即写操作会发生在后续的读操作之前, 但它并不能保证原子性。例如用 volatile 修饰 count 变量那么 count++ 操作就不是原子性的。\n\n而 AtomicInteger 类提供的 atomic 方法可以让这种操作具有原子性如\ngetAndIncrement()方法会原子性的进行增量操作把当前值加一， 其它数据类型和引用变量也可以进行相似操作。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2996,"question":"】thread是异步还是同步？异步的，callable是同步的  针对主线程和子线程来说","simplecontent":null,"content":"异步的，callable是同步的  针对主线程和子线程来说","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2997,"question":"】为什么你应该在循环中检查等待条件?可能有别的唤醒，不检查可能最终退出","simplecontent":null,"content":"处于等待状态的线程可能会收到错误警报和伪唤醒，   如果不在循环中检查等待条件，   程序就会在没有满足结束条件的情况下退出。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2998,"question":"】一个线程运行时发生异常会怎样？没有被捕获将会停止执行","simplecontent":null,"content":"如果异常没有被捕获该线程将会停止执行。Thread.UncaughtExceptionHandler 是用于处理未捕获异常造成线程突然中断情况的一个内嵌接口。当一个未捕获异常将造成线程中断的时候 JVM 会使用 Thread.getUncaughtExceptionHandler() 来查询线程的 UncaughtExceptionHandler 并将线程和异常作为参数传递给\nhandler 的 uncaughtException()方法进行处理。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2999,"question":"】为什么代码会重排序？为了提供性能，不会影响单线程环境的执行结果，但是会破坏多线程的执行语义","simplecontent":null,"content":"在执行程序时， 为了提供性能， 处理器和编译器常常会对指令进行重排序， 但是不能随意重排序，   不是你想怎么排序就怎么排序，   它需要满足以下两个条件：\n\n在单线程环境下不能改变程序运行的结果； 存在数据依赖关系的不允许重排序\n需要注意的是： 重排序不会影响单线程环境的执行结果， 但是会破坏多线程的执行语义。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":3000,"question":"】volatile 有什么用？volatile 保证内存可见性和禁止指令重排。","simplecontent":null,"content":"volatile 保证内存可见性和禁止指令重排。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":3001,"question":"】能否用一句话说明下volatile 的应用场景？用于多线程环境下的单次操作","simplecontent":null,"content":"volatile 用于多线程环境下的单次操作(单次读或者单次写)。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":3002,"question":"】jdk1.8对synchronized锁的优化？轻量级锁”和“偏向锁","simplecontent":null,"content":"在JDK1.6之后为了减少获得锁和释放锁所带来的性能消耗，提高性能，引入了“轻量级锁”和“偏向锁”，最终使得Synchronized的效率与ReentrantLock相差无几，甚至在某些场景下还优胜与ReentrantLock。 ","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":3003,"question":"】StampedLock是做什么的？ReentrantReadWriteLock 的增强版","simplecontent":null,"content":"-----》它是ReentrantReadWriteLock 的增强版，是为了解决ReentrantReadWriteLock的一些不足。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:30","updateTime":"2021-05-26 01:02:30","isExist":null},{"id":2979,"question":"】Java 线程数过多会造成什么异常？Cpu、开销","simplecontent":null,"content":"1、线程的生命周期开销非常高\n2、消耗过多的 CPU 资源\n如果可运行的线程数量多于可用处理器的数量， 那么有线程将会被闲置。大量空闲的线程会占用许多内存， 给垃圾回收器带来压力， 而且大量的线程在竞争 CPU 资源时还将产生其他性能的开销。\n3、降低稳定性\nJVM 在可创建线程的数量上存在一个限制，这个限制值将随着平台的不同而不同， 并且承受着多个因素制约， 包括 JVM 的启动参数、Thread 构造函数中请求栈的大小， 以及底层操作系统对线程的限制等。如果破坏了这些限制， 那么可能抛出OutOfMemoryError 异常。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2980,"question":"】线程类的构造方法、静态块是被哪个线程调用的？被 new 这个 main 线程类所在的线程所调用的， run 方法里面的代码才是被线程自身所调用","simplecontent":null,"content":"这是一个非常刁钻和狡猾的问题。请记住： 线程类的构造方法、静态块是被 new 这个线程类所在的线程所调用的， 而 run 方法里面的代码才是被线程自身所调用的。\n如果说上面的说法让你感到困惑， 那么我举个例子， 假设 Thread2 中 new 了Thread1， main 函数中 new 了 Thread2， 那么：\n1、Thread2 的构造方法、静态块是 main 线程调用的， Thread2 的 run()方法是Thread2 自己调用的\n2、Thread1 的构造方法、静态块是 Thread2 调用的， Thread1 的 run()方法是Thread1 自己调用的","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2981,"question":"】Lock 比同步它有什么优势？公平、中断、立即返回或者等待","simplecontent":null,"content":"Lock 接口比同步方法和同步块提供了更具扩展性的锁操作。他们允许更灵活的结构， 可以具有完全不同的性质， 并且可以支持多个相关类的条件对象。\n它的优势有：\n1、可以使锁更公平\n2、可以使线程在等待锁的时候响应中断\n3、可以让线程尝试获取锁，     并在无法获取锁的时候立即返回或者等待一段时间\n4、可以在不同的范围，    以不同的顺序获取和释放锁","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2982,"question":"】countdownlatch和synchronized的区别？一个是一组线程相互等待，而synv是不需要一组线程等待的，执行完后就结束线程；；；一个是独占锁，一个是共享锁（限制共享锁的人数）","simplecontent":null,"content":"一个同步bai辅助类，在完成一组正在其他线du程中执行的操作之zhi前，它dao允许一个或多个线程一直等待。用给定的计数 初始化 CountDownLatch。由于调用了 countDown() 方法，所以在当前计数到达零之前，await 方法会一直受阻塞。之后，会释放所有等待的线程，await 的所有后续调用都将立即返回。这种现象只出现一次——计数无法被重置。 一个线程(或者多个)， 等待另外N个线程完成某个事情之后才能执行\n2、使用场景\n在一些应用场合中，需要等待某个条件达到要求后才能做后面的事情；同时当线程都完成后也会触发事件，以便进行后面的操作。 这个时候就可以使用CountDownLatch。CountDownLatch最重要的方法是countDown()和await()，前者主要是倒数一次，后者是等待倒数到0，如果没有到达0，就只有阻塞等待了。\n\n\n如果加了synchronized当前线程取完所有数据后，才会释放锁\n\n1.不管synchronized是用来修饰方法，还是修饰代码块，其本质都是锁定某一个对象。修饰方法时，锁上的是调用这个方法的对象，即this；修饰代码块时，锁上的是括号里的那个对象\n在上面的代码中，很明显就是锁定的MyTask对象本身。但是由于在每一个线程中，MyTask对象都是独立的，这就导致实际上每个线程都对自己的MyTask进行锁定，而并不会干涉其它线程的MyTask对象。换言之，上锁压根没有意\n2.\nCountDownLatch是通过“共享锁”实现的。在创建CountDownLatch中时，会传递一个int类型参数count，该参数是“锁计数器”的初始状态，表示该“共享锁”最多能被count给线程同时获取。当某线程调用该CountDownLatch对象的await()方法时，该线程会等待“共享锁”可用时，才能获取“共享锁”进而继续运行。而“共享锁”可用的条件，就是“锁计数器”的值为0！而“锁计数器”的初始值为count，每当一个线程调用该CountDownLatch对象的countDown()方法时，才将“锁计数器”-1；通过这种方式，必须有count个线程调用countDown()之后，“锁计数器”才为0，而前面提到的等待线程才能继续运行！","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2983,"question":"】线程B 怎么知道线程A 修改了变量？volatile  synchronized  wait/notify","simplecontent":null,"content":"1、volatile 修饰变量\n2、synchronized 修饰修改变量的方法\n3、wait/notify\n4、while 轮询","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2984,"question":"】实现可见性的方法有哪些？synchronized 或者 Lock、volitaile","simplecontent":null,"content":"synchronized 或者 Lock：保证同一个时刻只有一个线程获取锁执行代码，锁释放之前把最新的值刷新到主内存，   实现可见性。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2985,"question":"】并发编程三要素？原子、可见、有序","simplecontent":null,"content":"1、原子性\n原子性指的是一个或者多个操作，  要么全部执行并且在执行的过程中不被其他操作打断， 要么就全部都不执行。\n2、可见性\n可见性指多个线程操作一个共享变量时， 其中一个线程对变量进行修改后， 其他线程可以立即看到修改的结果。\n3、有序性\n有序性，    即程序的执行顺序按照代码的先后顺序来执行。\njava.util.TimerTask 是一个实现了 Runnable 接口的抽象类， 我们需要去继承这个类来创建我们自己的定时任务并使用 Timer 去安排它的执行。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2986,"question":"】什么是Java Timer 类？周期性任务或延时任务","simplecontent":null,"content":"java.util.Timer 是一个工具类， 可以用于安排一个线程在未来的某个特定时间执行。Timer 类可以用安排一次性任务或者周期任务。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2987,"question":"】为什么Thread 类的sleep()和 yield ()方法是静态的？","simplecontent":null,"content":"Thread 类的 sleep()和 yield()方法将在当前正在执行的线程上运行。所以在其他处于等待状态的线程上调用这些方法是没有意义的。这就是为什么这些方法是静态的。它们可以在当前正在执行的线程中工作， 并避免程序员错误的认为可以在其他非运行线程调用这些方法。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2988,"question":"】CountDownLatch和join区别？CountDownLatch是判断计数器为0就可以了，而join是判断线程执行完才行，所以不够灵活","simplecontent":null,"content":"CountDownLatch是判断计数器为0就可以了，而join是判断线程执行完才行，所以不够灵活","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2989,"question":"】为什么使用CountDownLatch、CyclicBarrier和Semaphore？一个和一组，等待一起后再执行、控制线程数量","simplecontent":null,"content":"   3者区别：\n                        1、CountDownLatch不可复用，当计数器减为0后，只能重新构造新的计数器，CyclicBarrier可以复用，原因上面已说。\n                        2、CyclicBarrier针对的是一组线程之间的等待，是组内等待关系，CountDownLatch针对的是一个线程等待别的一组线程的关系，是组间等待关系。\n                        3、join方法和CountDownLatch方法功能类似，但是join方法不如CountdownLatch控制灵活\n\n\nCountDownLatch：\n                        功能：同步辅助类，也可以理解为倒计时锁，用于同步线程状态，允许一个或多个线程，等待其他一组线程完成操作，再继续往下执行。\n                        特点：不可复用！\n                        重要方法：countDown()方法：计数器-1，每次线程执行完后调用；await（）方法：等待方法，在需要阻塞的地方调用，当所有线程都执行完后，自动往下执行\n                        用法：构造的时候指定一个计数器的值，每个线程执行完后就减1，直到为0再往下走。如下：\n可以看到：2个子线程分别睡眠了3s和5s，而主线的打印的“所有现场执行完毕”却是在所有子线程执行完成后才输出的，原因就是阻塞在了latch.await()方法，这个方法会等到所有线程都执行完才往下执行，阻塞的原理后面有空再研究分析\nCyclicBarrier（循环栅栏）：\n                        功能：同步辅助类，功能和CountDownLatch类似，用于同步线程状态，允许一组线程相互之间等待，达到一个共同点，再继续执行。\n                        特点：可复用！当组内所有线程都到达某个执行点后，count参数会被重置，于是就可重用了。\n                        重要方法：await（）方法：当某个线程到达某个点（比如执行完某个任务）后调用该方法，就会等待其他线程，直到所有线程都到达这个点，再自动往下执行。还有个重载方法await（long timeOut,TimeUnit unit），用于当某个线程执行超过指定时间后还未到达某个点时，就会抛出异常，不再等待这个线程，并往下执行。\n可以看到：当前线程先于2个子线程打印执行结果，原因就是CyclicBarrier针对的是一组线程之间的等待，await方法会等待该组内所有线程都执行完毕再往下执行，Runnable接口里定义的动作是在所有线程执行完毕后，随机选择一个线程来执行\n三、join（）方法：\n                        join方法也是管理线程状态同步的一个方法，和CountDownLatch和CyclicBarrier均由自身调用不同的是，join的调用者为当前线程，后面的线程必须等调用join的线程执行完后才能执行。参考例子如下：\n\nhttps://www.cnblogs.com/be-thinking/p/9292290.html\n\nhttps://www.cnblogs.com/dolphin0520/p/3920397.html\n　　1）CountDownLatch和CyclicBarrier都能够实现线程之间的等待，只不过它们侧重点不同：\n　　　　CountDownLatch一般用于某个线程A等待若干个其他线程执行完任务之后，它才执行；\n　　　　而CyclicBarrier一般用于一组线程互相等待至某个状态，然后这一组线程再同时执行；\n　　　　另外，CountDownLatch是不能够重用的，而CyclicBarrier是可以重用的。\n　　2）Semaphore其实和锁有点类似，它一般用于控制对某组资源的访问权限。\n总结：调用join方法需要等待thread执行完毕才能继续向下执行,而CountDownLatch只需要检查计数器的值为零就可以继续向下执行，相比之下，CountDownLatch更加灵活一些，可以实现一些更加复杂的业务场景。\n\n\n作者：卑微幻想家\n链接：https://www.jianshu.com/p/795151ac271b\n来源：简书\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n\n\n个人理解：CountDownLatch:我把他理解成倒计时锁\n场景还原：一年级期末考试要开始了，监考老师发下去试卷，然后坐在讲台旁边玩着手机等待着学生答题，有的学生提前交了试卷，并约起打球了，等到最后一个学生交卷了，老师开始整理试卷，贴封条，下班，陪老婆孩子去了。\n补充场景：我们在玩LOL英雄联盟时会出现十个人不同加载状态，但是最后一个人由于各种原因始终加载不了100%，于是游戏系统自动等待所有玩家的状态都准备好，才展现游戏画面。\n个人理解：CyclicBarrier:可看成是个障碍，所有的线程必须到齐后才能一起通过这个障碍\n场景还原：以前公司组织户外拓展活动，帮助团队建设，其中最重要一个项目就是全体员工（包括女同事，BOSS）在完成其他项目时，到达一个高达四米的高墙没有任何抓点，要求所有人，一个不能少的越过高墙，才能继续进行其他项目。\n\n线程Thread-0正在执行\n线程Thread-1正在执行\n等待2个子线程执行完毕...\n线程Thread-0执行完毕\n线程Thread-1执行完毕\n2个子线程已经执行完毕\n继续执行主线程\n\n\n线程Thread-0正在写入数据...\n线程Thread-3正在写入数据...\n线程Thread-2正在写入数据...\n线程Thread-1正在写入数据...\n线程Thread-2写入数据完毕，等待其他线程写入完毕\n线程Thread-0写入数据完毕，等待其他线程写入完毕\n线程Thread-3写入数据完毕，等待其他线程写入完毕\n线程Thread-1写入数据完毕，等待其他线程写入完毕\n所有线程写入完毕，继续处理其他任务...\n所有线程写入完毕，继续处理其他任务...\n所有线程写入完毕，继续处理其他任务...\n所有线程写入完毕，继续处理其他任务...\n\n工人0占用一个机器在生产...\n工人1占用一个机器在生产...\n工人2占用一个机器在生产...\n工人4占用一个机器在生产...\n工人5占用一个机器在生产...\n工人0释放出机器\n工人2释放出机器\n工人3占用一个机器在生产...\n工人7占用一个机器在生产...\n工人4释放出机器\n工人5释放出机器\n工人1释放出机器\n工人6占用一个机器在生产...\n工人3释放出机器\n工人7释放出机器\n工人6释放出机器","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:29","updateTime":"2021-05-26 01:02:29","isExist":null},{"id":2970,"question":"】wait与notify实现原理？Wait进入等待池，notify进入阻塞队列，阻塞队列竞争资源，如果竞争到了进入就绪队列","simplecontent":null,"content":"每个锁对象都有两个队列，一个是就绪队列，一个是阻塞队列。就绪队列存储了将要获得锁的线程，阻塞队列存储了被阻塞的线程。一个线程被唤醒后才会进入到就绪队列，等待CPU调度；反之如果一个线程被wait后，就会进入到阻塞队列，等待下一次被唤醒。\n如果线程调用了对象的wait()方法，那么线程便会处于该对象的等待池中，等待池中的线程不会去竞争该对象的锁。当有线程调用了对象的notifyAll()方法（唤醒所有wait线程）或notify()方法（只随机唤醒一个wait线程），被唤醒的的线程便会进入该对象的阻塞队列中，阻塞队列中的线程会去竞争该对象锁。 优先级高的线程竞争到对象锁的概率大，假若某线程没有竞争到该对象锁，它还会留在阻塞队列中，唯有线程再次调用wait()方法，它才会重新回到等待池中。而竞争到对象锁的线程则继续往下执行，直到执行完了synchronized代码块，它会释放掉该对象锁，这时阻塞队列中的线程会继续竞争该对象锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2971,"question":"】wait、notify作用？用于生产者和消费者，当生产者有信息了，消费者循环消费","simplecontent":null,"content":"(1)可以使用wait（）和notify（）方法在Java中实现线程间通信。不只是一个或两个线程，而是多个线程可以使用这些方法相互通信。\n(2)在synchronized方法或synchronized块中调用wait（），notify（）和notifyAll（）方法\n(3)从while（条件）循环调用wait和notify方法，而不是从if（）块调用，因为要重复检查条件，而不仅仅是一次。\n(4)使用notifyAll方法而不是notify,唤醒所有消费端。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2972,"question":"】10 个线程和 2 个线程的同步代码，哪个更容易写？一样","simplecontent":null,"content":"从写代码的角度来说， 两者的复杂度是相同的， 因为同步代码与线程数量是相互独立的。但是同步策略的选择依赖于线程的数量，  因为越多的线程意味着更大的竞争， 所以你需要利用同步技术， 如锁分离， 这要求更复杂的代码和专业知识。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2973,"question":"】你是如何调用 wait（）方法的、使用 if 块还是循环？循环","simplecontent":null,"content":"wait() 方法应该在循环调用， 因为当线程获取到 CPU 开始执行的时候， 其他条件可能还没有满足， 所以在处理前， 循环检测条件是否满足会更好。下面是一段标准的使用  wait  和  notify 方法的代码：","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2974,"question":"】volatile 用它修饰有什么用呢？要求每次直接读值","simplecontent":null,"content":"作为指令关键字，确保本条指令不会因编译器的优化而省略，且要求每次直接读值。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2975,"question":"】Java 中能创建 volatile 数组吗？能，指向数组的引用， 而不是整个数组，如果多个线程同时改变数组的元素， volatile 标示符就不能起到之前的保护作用","simplecontent":null,"content":"能， Java 中可以创建  volatile 类型数组， 不过只是一个指向数组的引用， 而不是整个数组。我的意思是，如果改变引用指向的数组，将会受到 volatile 的保护， 但是如果多个线程同时改变数组的元素， volatile 标示符就不能起到之前的保护作用了。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2976,"question":"】volatile 能使得一个非原子操作变成原子操作吗？long  或  double 变量的读写是原子，对这两种类型的读是分为两部分的，第一次读取第一个 32 位，然后再读剩下的 32 位，这个过程不是原子的，但 Java 中volatile 型的 long  或  double 变量的读写是原子的","simplecontent":null,"content":"一个典型的例子是在类中有一个 long 类型的成员变量。如果你知道该成员变量会被多个线程访问，如计数器、价格等，你最好是将其设置为 volatile。为什么？ 因为 Java 中读取  long 类型变量不是原子的， 需要分成两步， 如果一个线程正在修改该 long 变量的值， 另一个线程可能只能看到该值的一半（ 前 32 位） 。但是对一个  volatile 型的  long  或  double 变量的读写是原子。\n\n\n50","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2977,"question":"】volatile 修饰符的有过什么实践？","simplecontent":null,"content":"一种实践是用 volatile 修饰 long 和 double 变量，使其能按原子类型来读写。double 和 long  都是 64 位宽，因此对这两种类型的读是分为两部分的，第一次读取第一个 32 位，然后再读剩下的 32 位，这个过程不是原子的，但 Java 中volatile 型的 long  或  double 变量的读写是原子的。volatile 修复符的另一个作用是提供内存屏障（ memory barrier）， 例如在分布式框架中的应用。简单的说，就是当你写一个 volatile 变量之前，Java 内存模型会插入一个写屏障（ write barrier）， 读一个 volatile 变量之前， 会插入一个读屏障（ read barrier）。意思就是说，在你写一个  volatile 域时，能保证任何线程都能看到你写的值，同时，","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2978,"question":"】举例说明同步和异步？是否需要等待","simplecontent":null,"content":"如果系统中存在临界资源（ 资源数量少于竞争资源的线程数量的资源）， 例如正在写的数据以后可能被另一个线程读到，  或者正在读的数据可能已经被另一个线程写过了， 那么这些数据就必须进行同步存取（ 数据库操作中的排他锁就是最好的例子）。当应用程序在对象上调用了一个需要花费很长时间来执行的方法，  并且不希望让程序等待方法的返回时， 就应该使用异步编程， 在很多情况下采用异步途径往往更有效率。事实上， 所谓的同步就是指阻塞式操作， 而异步就是非阻塞式操作。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2968,"question":"】线程池的概念是什么？创建线程处理任务，空闲执行下一个任务","simplecontent":null,"content":"          线程池就是首先创建一些线程，它们的集合称为线程池。使用线程池可以很好地提高性能，线程池在系统启动时即创建大量空闲的线程，程序将一个任务传给线程池，线程池就会启动一条线程来执行这个任务，执行结束以后，该线程并不会死亡，而是再次返回线程池中成为空闲状态，等待执行下一个任务。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2969,"question":"】sleep和wait方法的区别？","simplecontent":null,"content":"wait是Object的方法，而sleep是Thread特有的方法\nwait和sleep方法都可以使得线程进入阻塞状态，都是可中断方法，被中断后都会收到中断异常\nwait方法的执行必须在同步方法中进行，而sleep则不需要\n线程在同步方法中执行sleep方法时，不会释放monitor的锁，而wait方法则会释放monitor的锁","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:28","updateTime":"2021-05-26 01:02:28","isExist":null},{"id":2959,"question":"】说一下 atomic 的原理？Cas + 自旋锁","simplecontent":null,"content":"Atomic包中的类基本的特性就是在多线程环境下，当有多个线程同时对单个（包括基本类型及引用类型）变量进行操作时，具有排他性，即当多个线程同时对该变量的值进行更新时，仅有一个线程能成功，而未成功的线程可以向自旋锁一样，继续尝试，一直等到执行成功。\n\nAtomic系列的类中的核心方法都会调用unsafe类中的几个本地方法。我们需要先知道一个东西就是Unsafe类，全名为：sun.misc.Unsafe，这个类包含了大量的对C代码的操作，包括很多直接内存分配以及原子操作的调用，而它之所以标记为非安全的，是告诉你这个里面大量的方法调用都会存在安全隐患，需要小心使用，否则会导致严重的后果，例如在通过unsafe分配内存的时候，如果自己指定某些区域可能会导致一些类似C++一样的指针越界到其他进程的问题。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2960,"question":"】简述一下你对线程池的理解？管理、消耗少、速度","simplecontent":null,"content":"（如果问到了这样的问题，可以展开的说一下线程池如何用、线程池的好处、线程池的启动策略）合理 利用线程池能够带来三个好处。\n第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。 \n第二：提高响应速度。当任务到达时，任务可以不需要等到线程创建就能立即执行。\n第三：提高线程的可管理性。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系 统的稳定性，使用线程池可以进行统一的分配，调优和监控。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2961,"question":"】Java中interrupted 和 isInterruptedd方法的区别？前者会将中断状态清除而后者不会","simplecontent":null,"content":"interrupted() 和  isInterrupted()的主要区别是前者会将中断状态清除而后者不会。Java多线程的中断机制是用内部标识来实现的，调用Thread.interrupt()来中断一个线程就会设置中断标识为true。当中断线 程调用静态方法Thread.interrupted()来检查中断状态时，中断状态会被清零。而非静态方法\nisInterrupted()用来查询其它线程的中断状态且不会改变中断状态标识。简单的说就是任何抛出\nInterruptedException异常的方法都会将中断状态清零。无论如何，一个线程的中断状态有有可能被其  它线程调用中断来改变。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2962,"question":"】什么wait和notify方法要在同步块中调用？在独占锁才能使用，wit是释放锁，没有锁不需要使用wait","simplecontent":null,"content":"1.只有在调用线程拥有某个对象的独占锁时，才能够调用该对象的wait(),notify()和notifyAll()方法。\n2.如果你不这么做，你的代码会抛出IllegalMonitorStateException异常。\n3.还有一个原因是为了避免wait和notify之间产生竞态条件。\nwait()方法强制当前线程释放对象锁。这意味着在调用某对象的wait()方法之前，当前线程必须已经获得 该对象的锁。因此，线程必须在某个对象的同步方法或同步代码块中才能调用该对象的wait()方法。\n在调用对象的notify()和notifyAll()方法之前，调用线程必须已经得到该对象的锁。因此，必须在某个对 象的同步方法或同步代码块中才能调用该对象的notify()或notifyAll()方法。\n调用wait()方法的原因通常是，调用线程希望某个特殊的状态(或变量)被设置之后再继续执行。调用\nnotify()或notifyAll()方法的原因通常是，调用线程希望告诉其他等待中的线程:\"特殊状态已经被设置\"。 这个状态作为线程间通信的通道，它必须是一个可变的共享状态(或变量)","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2963,"question":"】如何停止一个正在运行的线程？中断、stop","simplecontent":null,"content":"1、使用退出标志，使线程正常退出，也就是当run方法完成后线程终止。\n2、使用stop方法强行终止，但是不推荐这个方法，因为stop和suspend及resume一样都是过期作废的 方法。\n3、使用interrupt方法中断线程。\nclass MyThread extends Thread { volatile boolean stop = false;\n\npublic void run() { \nwhile (!stop) {\nSystem.out.println(getName() + \" is running\"); try {\nsleep(1000);\n} catch (InterruptedException e) { \nSystem.out.println(\"week up from blcok...\"); stop = true; // 在异常处理代码中修改共享变量的状态\n}\n}\nSystem.out.println(getName() + \" is exiting...\");\n}\n}\n\nclass InterruptThreadDemo3 {\npublic static void main(String[] args) throws InterruptedException { \nMyThread m1 = new MyThread();\nSystem.out.println(\"Starting thread...\"); \nm1.start();\nThread.sleep(3000);\nSystem.out.println(\"Interrupt thread...: \" + m1.getName()); \nm1.stop = true; // 设置共享变量为true\nm1.interrupt(); // 阻塞时退出阻塞状态\nThread.sleep(3000); // 主线程休眠3秒以便观察线程m1的中断情况\nSystem.out.println(\"Stopping  application...\");\n}\n}","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2964,"question":"】简述线程、程序、进程的基本概念。以及他们之间关系是什么?","simplecontent":null,"content":"线程与进程相似，但线程是一个比进程更小的执行单位。一个进程在其执行的过程中可以产生多个线程。与进程不同的是同类的多个线程共享同一块内存空间和一组系统资源，所以系统在产生一个线程， 或是在各个线程之间作切换工作时，负担要比进程小得多，也正因为如此，线程也被称为轻量级进程。\n\n程序是含有指令和数据的文件，被存储在磁盘或其他的数据存储设备中，也就是说程序是静态的代码。\n\n\n\n进程是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是  一个进程从创建，运行到消亡的过程。简单来说，一个进程就是一个执行中的程序，它在计算机中一个  指令接着一个指令地执行着，同时，每个进程还占有某些系统资源如  CPU  时间，内存空间，文件，输入输出设备的使用权等等。换句话说，当程序在执行时，将会被操作系统载入内存中。 线程是进程划分成的更小的运行单位。线程和进程最大的不同在于基本上各进程是独立的，而各线程则不一定，因为同  一进程中的线程极有可能会相互影响。从另一角度来说，进程属于操作系统的范畴，主要是同一段时间  内，可以同时执行一个以上的程序，而线程则是在同一程序内几乎同时执行一个以上的程序段。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2965,"question":"】Java、C 、C++的 Python，为什么速度那么慢？是动态语言不是静态的","simplecontent":null,"content":"Python很慢，因为是动态语言不是静态的\n\n107","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2966,"question":"】进程切换和线程切换区别？线程是会在不同的状态间进行转换","simplecontent":null,"content":"当操作系统决定要把控制权从当前进程转移到某个新进程时，就会进行上下文切换，即保存当前进程的上下文，恢复新进程的上下文，然后将控制权传递到新进程，新进程就会从上次停止的地方开始。\n线程是会在不同的状态间进行转换的，java线程线程转换图如上图所示。线程创建之后调用start()方法开始运行，当调用wait(),join(),LockSupport.lock()方法线程会进入到WAITING状态，而同样的wait(long timeout)，sleep(long),join(long),LockSupport.parkNanos(),LockSupport.parkUtil()增加了超时等待的功能，也就是调用这些方法后线程会进入TIMED_WAITING状态，当超时等待时间到达后，线程会切换到Runable的状态，另外当WAITING和TIMED _WAITING状态时可以通过Object.notify(),Object.notifyAll()方法使线程转换到Runable状态。当线程出现资源竞争时，即等待获取锁的时候，线程会进入到BLOCKED阻塞状态，当线程获取锁时，线程进入到Runable状态。线程运行结束后，线程进入到TERMINATED状态，状态转换可以说是线程的生命周期。\n\n 线程状态的基本操作\n除了新建一个线程外，线程在生命周期内还有需要基本操作，而这些操作会成为线程间一种通信方式，比如使用中断（interrupted）方式通知实现线程间的交互等等，下面就将具体说说这些操作。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2967,"question":"】进程切换和线程切换哪个开销大？线程切换的开销比进程切换的开销小，进程切换涉及虚拟地址空间的切换而线程不会","simplecontent":null,"content":"无论是在多核还是单核系统中，一个CPU看上去都像是在并发的执行多个进程，这是通过处理器在进程间切换来实现的。\n\n操作系统实现这种交错执行的机制称为上下文切换。\n操作系统保持跟踪进程运行所需的所有状态信息，这种状态，也就是上下文，它包括许多信息，例如PC和寄存器文件的当前值，以及主存的内容。\n\n最主要的一个区别在于进程切换涉及虚拟地址空间的切换而线程不会。因为每个进程都有自己的虚拟地址空间，而线程是共享所在进程的虚拟地址空间的，因此同一个进程中的线程进行线程切换时不涉及虚拟地址空间的转换。\n\n现在我们已经知道了进程都有自己的虚拟地址空间，把虚拟地址转换为物理地址需要查找页表，页表查找是一个很慢的过程，因此通常使用Cache来缓存常用的地址映射，这样可以加速页表查找，这个cache就是TLB（translation Lookaside Buffer，我们不需要关心这个名字只需要知道TLB本质上就是一个cache，是用来加速页表查找的）。由于每个进程都有自己的虚拟地址空间，那么显然每个进程都有自己的页表，那么当进程切换后页表也要进行切换，页表切换后TLB就失效了，cache失效导致命中率降低，那么虚拟地址转换为物理地址就会变慢，表现出来的就是程序运行会变慢，而线程切换则不会导致TLB失效，因为线程线程无需切换地址空间，因此我们通常说线程切换要比较进程切换块，原因就在这里。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:27","updateTime":"2021-05-26 01:02:27","isExist":null},{"id":2943,"question":"】如何测试线程数量多少合适？递进测试处理任务速度","simplecontent":null,"content":"递进测试处理任务速度","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2944,"question":"】什么是阻塞队列？","simplecontent":null,"content":"","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2945,"question":"】阻塞队列的实现原理是什么？当队列满时，   存储元素的线程会等待队列可用","simplecontent":null,"content":"这两个附加的操作是： 在队列为空时， 获取元素的线程会等待队列变为非空。当队列满时，   存储元素的线程会等待队列可用。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2946,"question":"】如何使用阻塞队列来实现生产者-消费者模型？","simplecontent":null,"content":"阻塞队列是一个支持两个附加操作的队列。\n\n\n阻塞队列常用于生产者和消费者的场景， 生产者是往队列里添加元素的线程， 消费者是从队列里拿元素的线程。阻塞队列就是生产者存放元素的容器，   而消费者也只从容器里拿元素。\n\nJDK7 提供了 7 个阻塞队列。分别是：\n\nArrayBlockingQueue ： 一个由数组结构组成的有界阻塞队列。LinkedBlockingQueue ： 一个由链表结构组成的有界阻塞队列。PriorityBlockingQueue ： 一个支持优先级排序的无界阻塞队列。DelayQueue：    一个使用优先级队列实现的无界阻塞队列。\nSynchronousQueue：   一个不存储元素的阻塞队列。\nLinkedTransferQueue： 一个由链表结构组成的无界阻塞队列。LinkedBlockingDeque：    一个由链表结构组成的双向阻塞队列。\n\nJava 5 之前实现同步存取时， 可以使用普通的一个集合， 然后在使用线程的协作和线程同步可以实现生产者， 消费者模式， 主要的技术就是用好，\nwait ,notify,notifyAll,sychronized 这些关键字。而在 java 5 之后， 可以使用阻塞队列来实现， 此方式大大简少了代码量， 使得多线程编程更加容易， 安全方面也有保障。\nBlockingQueue 接口是 Queue 的子接口， 它的主要用途并不是作为容器， 而是作为线程同步的的工具，   因此他具有一个很明显的特性，   当生产者线程试图向\nBlockingQueue 放入元素时， 如果队列已满， 则线程被阻塞， 当消费者线程试图从中取出一个元素时， 如果队列为空， 则该线程会被阻塞， 正是因为它所具有这个特性， 所以在程序中多个线程交替向 BlockingQueue 中放入元素， 取出元素， 它可以很好的控制线程之间的通信。\n\n阻塞队列使用最经典的场景就是 socket 客户端数据的读取和解析，读取数据的线程不断将数据放入队列，    然后解析线程不断从队列取数据解析。\n\n\n195","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2947,"question":"】什么是竞争条件？当多个进程都企图对共享数据进行某种处理","simplecontent":null,"content":"】你怎样发现和解决竞争？\n\n\n196","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2948,"question":"】在Java 中CycliBarriar 和CountdownLatch 有什么区别？","simplecontent":null,"content":"CyclicBarrier 可以重复使用， 而 CountdownLatch 不能重复使用。\n\nJava 的 concurrent 包里面的 CountDownLatch 其实可以把它看作一个计数器， 只不过这个计数器的操作是原子操作， 同时只能有一个线程去操作这个计数器， 也就是同时只能有一个线程去减这个计数器里面的值。\n你可以向 CountDownLatch 对象设置一个初始的数字作为计数值，任何调用这个对象上的 await()方法都会阻塞，直到这个计数器的计数值被其他的线程减为 0 为止。\n所以在当前计数到达零之前， await 方法会一直受阻塞。之后， 会释放所有等待的线程，await 的所有后续调用都将立即返回。这种现象只出现一次— — 计数无法被重置。如果需要重置计数， 请考虑使用  CyclicBarrier。\nCountDownLatch 的一个非常典型的应用场景是： 有一个任务想要往下执行， 但必须要等到其他的任务执行完毕后才可以继续往下执行。假如我们这个想要继续往下执行的任务调用一个 CountDownLatch 对象的 await() 方法， 其他的任务执行完自己的任务后调用同一个 CountDownLatch 对象上的 countDown()方法， 这个调用 await()方法的任务将一直阻塞等待， 直到这个 CountDownLatch 对象的计数值减到 0 为止。\n\nCyclicBarrier 一个同步辅助类， 它允许一组线程互相等待， 直到到达某个公共屏障点 (common barrier point)。在涉及一组固定大小的线程的程序中，这些线程必须不时地互相等待， 此时 CyclicBarrier 很有用。因为该 barrier 在释放等待线程后可以重用， 所以称它为循环  的  barrier。\n\n197","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2949,"question":"】Java 中用到的线程调度算法是什么？分时调度模型和抢占式调度模型。","simplecontent":null,"content":"计算机通常只有一个 CPU,在任意时刻只能执行一条机器指令,每个线程只有获得CPU 的使用权才能执行指令.所谓多线程的并发运行,其实是指从宏观上看,各个线程轮流获得 CPU 的使用权,分别执行各自的任务.在运行池中,会有多个处于就绪状态的线程在等待 CPU,JAVA 虚拟机的一项任务就是负责线程的调度,线程调度是指按照特定机制为多个线程分配 CPU 的使用权.\n\n有两种调度模型：    分时调度模型和抢占式调度模型。\n分时调度模型是指让所有的线程轮流获得 cpu 的使用权,并且平均分配每个线程占用的 CPU 的时间片这个也比较好理解。\n\njava 虚拟机采用抢占式调度模型， 是指优先让可运行池中优先级高的线程占用CPU， 如果可运行池中的线程优先级相同， 那么就随机选择一个线程， 使其占用CPU。处于运行状态的线程会一直运行， 直至它不得不放弃 CPU。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2950,"question":"】java 如何实现多线程之间的通讯和协作？中断和共享变量","simplecontent":null,"content":"199","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2951,"question":"】CAS 缺点？ABA、循环时间长开销大、只能保证一个共享变量的原子操作","simplecontent":null,"content":"1、ABA 问题：\n比如说一个线程 one 从内存位置 V 中取出 A，这时候另一个线程 two 也从内存中取出 A，并且 two 进行了一些操作变成了 B，然后 two 又将 V 位置的数据变成 A， 这时候线程 one 进行 CAS 操作发现内存中仍然是 A，然后 one 操作成功。尽管线程 one 的 CAS 操作成功，但可能存在潜藏的问题。从 Java1.5 开始 JDK 的 atomic 包里提供了一个类 AtomicStampedReference 来解决 ABA 问题。\n\n2、循环时间长开销大：\n对于资源竞争严重（ 线程冲突严重） 的情况， CAS 自旋的概率会比较大， 从而浪费更多的 CPU 资源， 效率低于 synchronized。\n3、只能保证一个共享变量的原子操作：\n当对一个共享变量执行操作时， 我们可以使用循环 CAS 的方式来保证原子操作， 但是对多个共享变量操作时， 循环 CAS 就无法保证操作的原子性， 这个时候就可以用锁。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2952,"question":"】SynchronizedMap 和 ConcurrentHashMap 有什么区别？一次锁住整张表来保证线程安全，所以每次只能有一个线程来访为 map、使用分段锁来保证在多线程下的性能。","simplecontent":null,"content":"SynchronizedMap 一次锁住整张表来保证线程安全，所以每次只能有一个线程来访为 map。\n\nConcurrentHashMap 使用分段锁来保证在多线程下的性能。\nConcurrentHashMap 中则是一次锁住一个桶。ConcurrentHashMap 默认将\nhash 表分为 16 个桶， 诸如 get,put,remove 等常用操作只锁当前需要用到的桶。这样，原来只能一个线程进入，现在却能同时有 16 个写线程执行，并发性能的提升是显而易见的。\n另外 ConcurrentHashMap 使用了一种不同的迭代方式。在这种迭代方式中， 当iterator 被创建后集合再发生改变就不再是抛出\nConcurrentModificationException， 取而代之的是在改变时 new 新的数据从而不影响原有的数据 ，iterator 完成后再将头指针替换为新的数据 ，这样 iterator 线程可以使用原来老的数据，    而写线程也可以并发的完成改变。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2953,"question":"】如何在Windows 和 Linux 上查找哪个线程使用的 CPU 时间最长？","simplecontent":null,"content":"参考：\nhttp://daiguahub.com/2016/07/31/使用 jstack 找出消耗 CPU 最多的线程代码\n/","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2954,"question":"】死锁与活锁的区别，死锁与饥饿的区别？","simplecontent":null,"content":"死锁： 是指两个或两个以上的进程（ 或线程） 在执行过程中， 因争夺资源而造成的一种互相等待的现象， 若无外力作用， 它们都将无法推进下去。\n产生死锁的必要条件：\n1、互斥条件：    所谓互斥就是进程在某一时间内独占资源。\n2、请求与保持条件：   一个进程因请求资源而阻塞时，   对已获得的资源保持不放。\n3、不剥夺条件:进程已获得资源， 在末使用完之前， 不能强行剥夺。\n4、循环等待条件:若干进程之间形成一种头尾相接的循环等待资源关系。\n\n活锁： 任务或者执行者没有被阻塞， 由于某些条件没有满足， 导致一直重复尝试， 失败， 尝试， 失败。\n\n活锁和死锁的区别在于，处于活锁的实体是在不断的改变状态，所谓的“ 活”， 而处于死锁的实体表现为等待； 活锁有可能自行解开， 死锁则不能。\n\n饥饿： 一个或者多个线程因为种种原因无法获得所需要的资源， 导致一直无法执行的状态。\nJava 中导致饥饿的原因：\n1、高优先级线程吞噬所有的低优先级线程的 CPU 时间。\n2、线程被永久堵塞在一个等待进入同步块的状态，因为其他线程总是能在它之前   持续地对该同步块进行访问。\n3、线程在等待一个本身也处于永久等待完成的对象(比如调用这个对象的 wait 方法)，   因为其他线程总是被持续地获得唤醒。\n\n184","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2955,"question":"】Java 中用到的线程调度算法是什么？时间片轮转","simplecontent":null,"content":"采用时间片轮转的方式。可以设置线程的优先级，  会映射到下层的系统上面的优先级上， 如非特别需要， 尽量不要用， 防止线程饥饿。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2956,"question":"】什么是线程组，为什么在Java 中不推荐使用？","simplecontent":null,"content":"ThreadGroup 类，可以把线程归属到某一个线程组中，线程组中可以有线程对象， 也可以有线程组，   组中还可以有线程，  这样的组织结构有点类似于树的形式。\n\n为什么不推荐使用？ 因为使用有很多的安全隐患吧， 没有具体追究， 如果需要使用， 推荐使用线程池。\n\n\n186","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2957,"question":"】为什么使用Executor 框架？ new Thread()比较消耗性能， 创建一个线程是比较耗时、耗资源的。new Thread()创建的线程缺乏管理，线程之间的相互竞争会导致过多占用系统资源","simplecontent":null,"content":"每次执行任务创建线程 new Thread()比较消耗性能， 创建一个线程是比较耗时、耗资源的。\n调用 new Thread()创建的线程缺乏管理，被称为野线程，而且可以无限制的创建， 线程之间的相互竞争会导致过多占用系统资源而导致系统瘫痪， 还有线程之间的频繁交替也会消耗很多系统资源。\n接使用 new Thread() 启动的线程不利于扩展， 比如定时执行、定期执行、定时定期执行、线程中断等都不便实现。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2958,"question":"】在Java 中Executor 和Executors 的区别？Executors 工具类的不同方法按照我们的需求创建了不同的线程池、Executor 接口对象能执行我们的线程任务","simplecontent":null,"content":"Executors 工具类的不同方法按照我们的需求创建了不同的线程池， 来满足业务的需求。\nExecutor 接口对象能执行我们的线程任务。\nExecutorService 接口继承了 Executor 接口并进行了扩展， 提供了更多的方法我们能获得任务执行的状态并且可以获取任务的返回值。\n使用 ThreadPoolExecutor 可以创建自定义线程池。\n\n\n\nFuture 表示异步计算的结果，他提供了检查计算是否完成的方法，以等待计算的完成， 并可以使用 get()方法获取计算的结果。","filterContent":null,"type":"java-多线程","status":0,"createTime":"2021-05-26 01:02:26","updateTime":"2021-05-26 01:02:26","isExist":null},{"id":2857,"question":"】什么是耦合？《依赖程度》\n组件之间依赖关系强度的度量被认为是耦合。一个好的设计总是被认为具有高内聚力和低耦合性。","simplecontent":null,"content":"《依赖程度》\n组件之间依赖关系强度的度量被认为是耦合。一个好的设计总是被认为具有高内聚力和低耦合性。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:59:22","updateTime":"2021-05-26 00:59:22","isExist":null},{"id":2939,"question":"对比RPC和http的区别?","simplecontent":null,"content":"1 RPC要求服务提供方和服务调用方都需要使用相同的技术，要么都hessian，要么都dubbo\n  而http无需关注语言的实现，只需要遵循rest规范\n2 RPC的开发要求较多，像Hessian框架还需要服务器提供完整的接口代码(包名.类名.方法名必须完全一致)，否则客户端无法运行","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:43","updateTime":"2021-05-26 00:55:43","isExist":null},{"id":2940,"question":"】Springcloud使用协议？http","simplecontent":null,"content":"http：框架有：httpClient 当使用http进行服务间调用的时候，无需关注服务提供方使用的编程语言，也无需关注服务消费方使用的编程语言，服务提供方只需要提供restful风格的接口，服务消费方，按照restful的原则，请求服务，即可","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:43","updateTime":"2021-05-26 00:55:43","isExist":null},{"id":2941,"question":"Spring的RestTemplate作用?","simplecontent":null,"content":"Spring提供了一个RestTemplate模板工具类，对基于Http的客户端进行了封装，并且实现了对象与json的序列化和反序列化，非常方便。RestTemplate并没有限定Http的客户端类型，而是进行了抽象，目前常用的3种都有支持：\n\nHttpClient\nOkHttp\nJDK原生的URLConnection（默认的）","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:43","updateTime":"2021-05-26 00:55:43","isExist":null},{"id":2942,"question":"】Springcloud组件有哪些？Eureka：注册中心（注册、本地缓存注册表调用）、gateway：服务网关、Ribbon：负载均衡、Feign：服务调用、Hystrix：熔断器","simplecontent":null,"content":"Eureka：注册中心（注册、本地缓存注册表调用）、gateway：服务网关、Ribbon：负载均衡、Feign：服务调用、Hystrix：熔断器","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:43","updateTime":"2021-05-26 00:55:43","isExist":null},{"id":2932,"question":"Eureka和zookeeper都可以提供服务注册与发现的功能，两者的区别?","simplecontent":null,"content":"Zookeeper保证了CP(C：一致性，P：分区容错性)，Eureka保证了AP(A：高可用，P：分区容错)\n1、Zookeeper-----当向注册中心查询服务列表时，我们可以容忍注册中心返回的是几分钟以前的信息，但不能容忍直接down掉不可用的。也就是说服务注册功能对高可用性要求比较高，但是zk会出现这样的一种情况，当master节点因为网络故障与其他节点失去联系时，剩余的节点会重新选leader。问题在于，选取leader的时间过长(30~120s)，且选取期间zk集群都不可用，这样就会导致选取期间注册服务瘫痪。在云部署的环境下，因网络问题使得zk集群失去master节点是较大概率会发生的事，虽然服务最终恢复，但是漫长的选择时间导致的注册长期不可用是不能容忍的\n2、Eureka则看明白这一点，因此再设计的优先保证了高可用性。Eureka各个节点都是平等的，几个节点挂掉不会影响到正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端再向某个Eureka注册时如果发现连接失败，则会自动切换至其他节点，只要有一台Eureka还在，就能保证注册服务的可用(保证可用性)，只不过查到的信息可能不是最新的(不保证一致性)。除此之外Eureka还有一种自我保护机制，如果在15分钟内超过85%的节点都没有正常心跳，那么Eureka就认为客户端与注册中心出现了网络故障，此时就会出现以下几种情况：\n1>、Eureka不再从注册列表移除因为长时间没收到心跳而应该过期的服务\n2>、Eureka仍然能够接受新服务的注册和查询请求，但是不会被同步到其它节点上(保证当前节点可用)\n3>、当网络稳定时，当前实例新的注册信息会被同步到其它节点中\nEureka还有客户端缓存功能(Eureka分为客户端程序和服务器端程序两个部分，客户端程序负责向外提供注册与发现服务接口)。所以即便Eureka集群中所有节点都失效，或者发生网络分隔故障导致客户端不能访问任何一台Eureka服务器；Eureka服务的消费者任然可以通过Eureka客户端缓存来获取所有的服务注册信息。甚至最极端的环境下，所有正常的Eureka节点都不对请求产生响应也没有更好的服务器解决方案来解决这种问题时；得益于Eureka的客户端缓存技术，消费者服务仍然可以通过Eureka客户端查询与获取注册服务信息，这点很重要，因此Eureka可以很好的应对网络故障导致部分节点失去联系的情况，而不像Zookeeper那样使整个注册服务瘫痪。\nCAP理论：\n1、Consistency：指数据的强一致性。如果写入某个数据成功，之后读取，读到的都是新写入的数据；如果写入失败，读到的都不是写入失败的数据。\n2、Availability：指服务的可用性\n3、Partition-tolerance：指分区容错\n1.cap理论\n1、概念：一个分布式系统最多只能同时满⾜足一致性（Consistency）、可用性（Availability）和分区容错性（Partition  tolerance）这三项中的两项。\n2、一致性：更新操作成功并返回客户端完成后，所有节点在同一时间的数据完全一致，所以，一致性，说的就是数据一致性。\n3、可用性：服务一直可用，而且是正常响应时间。\n4、分区容错性：分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满⾜足一致性和可用性的服务。\n\nRibbon和Nginx的区别：\nNginx性能好，但Ribbon可以剔除不健康节点，Nginx剔除比较麻烦，Ribbon是客户端负载均衡，Nginx是服务端负载均衡\nspringcloud服务注册与发现：\n服务注册就是向服务注册中心注册一个服务实例，服务提供者将自己的服务信息（服务名、IP地址等）告知注册中心。服务发现是服务消费另一个服务时，注册中心将服务的实例返回给服务消费者，一个服务既是服务提供者又是服务消费者。\n服务注册中心健康检查机制，当一个服务实例注册成功以后，会定时向注册中心发送一个心跳证明自己可用，若停止发送心跳证明服务不可用将会别剔除。若过段时间继续想注册中心提供心跳，将会重新加入服务注册中心列表中。\n服务的负载均衡：\n为什么要用：微服务是将业务代码拆分为很多小的服务单元，服务之间的相互调用通过HTTP协议来调用，为了保证服务的高可用，服务单元往往都是集群化部署的，那么消费者该调用那个服务提供者的实例呢？\n介绍：服务消费者集成负载均衡组件，该组件会向服务消费者获取服务注册列表信息，并隔一段时间重新刷新获取列表。当服务消费者消费服务时，负载均衡组件获取服务提供者所有实例的注册信息，并通过一定的负载均衡策略（可以自己配置）选择一个服务提供者实例，向该实例进行服务消费，这样就实现了负载均衡。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2933,"question":"Rpc是什么?","simplecontent":null,"content":"远程调用\nRPC的框架：webservie(cxf)、dubbo（RMI远程方法调用）Hessian\n当使用RPC框架实现服务间调用的时候，要求服务提供方和服务消费方 都必须使用统一的RPC框架，要么都dubbo，要么都cxf","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2934,"question":"Rpc客户端超时如何重试机制?","simplecontent":null,"content":"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2935,"question":"】如何选择RPC和http？","simplecontent":null,"content":"既然两种方式都可以实现远程调用，我们该如何选择呢？\n\n速度来看，RPC要比http更快，虽然底层都是TCP，但是http协议的信息往往比较臃肿\n难度来看，RPC实现较为复杂，http相对比较简单\n灵活性来看，http更胜一筹，因为它不关心实现细节，跨平台、跨语言。\n因此，两者都有不同的使用场景：\n\n如果对效率要求更高，并且开发过程使用统一的技术栈，那么用RPC还是不错的。\n如果需要更加灵活，跨语言、跨平台，显然http更合适","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2936,"question":"】Rpc为什么使用幂等性？接口超时重试如果没有幂等性可能导致重复操作","simplecontent":null,"content":"接口超时重试如果没有幂等性可能导致重复操作","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2937,"question":"】超时幂等性常见解决方法？唯一索引、redis + token、悲观锁、乐观锁、分布式锁、数据状态","simplecontent":null,"content":"唯一索引 -- 防止新增脏数据\n\n token机制 -- 防止页面重复提交\n\n 悲观锁 -- 获取数据的时候加锁(锁表或锁行)\n\n 乐观锁 -- 基于版本号version实现, 在更新数据那一刻校验数据\n\n 分布式锁 -- redis(jedis、redisson)或zookeeper实现\n\n 状态机 -- 状态变更, 更新数据时判断状态","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2938,"question":"】Rpc服务端解决重试机制导致重复操作问题？使用token存储在redis里，处理删除redis的token","simplecontent":null,"content":"使用token存储在redis里，处理删除redis的token","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:42","updateTime":"2021-05-26 00:55:42","isExist":null},{"id":2921,"question":"】什么是SpringBoot？","simplecontent":null,"content":"1、用来简化spring初始搭建和开发过程使用特定的方式进行配置(properties或者yml文件)\n2、创建独立的spring引用程序main方法运行\n3、嵌入Tomcat无需部署war包，直接打成jar包nohup java -jar – & 启动就好\n4、简化了maven的配置\n4、自动配置spring添加对应的starter自动化配置","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2922,"question":"spring cloud 断路器的作用是什么？","simplecontent":null,"content":"在分布式架构中，断路器模式的作用也是类似的，当某个服务单元发生故障（类似用电器发生短路）之后，通过断路器的故障监控（类似熔断保险丝），向调用方返回一个错误响应，而不是长时间的等待。这样就不会使得线程因调用故障服务被长时间占用不释放，避免了故障在分布式系统中的蔓延。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2923,"question":"微服务的特点?","simplecontent":null,"content":"按业务划分为一个独立运行的程序，即服务单元\n服务之间通过HTTP协议相互通信\n自动化部署\n可以用不同的编程语言\n可以用不同的存储技术\n服务集中化管理\n微服务是一个分布式系统","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2924,"question":"】微服务的优势？拆分业务、高可用","simplecontent":null,"content":"1、将一个复杂的业务拆分为若干小的业务，将复杂的业务简单化，新人只需要了解他所接管的服务的代码，减少了新人的学习成本。\n2、由于微服务是分布式服务，服务于服务之间没有任何耦合。微服务系统的微服务单元具有很强的横向拓展能力。\n3、服务于服务之间采用HTTP网络通信协议来通信，单个服务内部高度耦合，服务与服务之间完全独立，无耦合。这使得微服务可以采用任何的开发语言和技术来实现，提高开发效率、降低开发成本。\n4、微服务是按照业务进行拆分的，并有坚实的服务边界，若要重写某一业务代码，不需了解所以业务，重写简单。\n5、微服务的每个服务单元是独立部署的，即独立运行在某个进程中，微服务的修改和部署对其他服务没有影响。\n6、微服务在CAP理论中采用的AP架构，具有高可用分区容错特点。高可用主要体现在系统7x24不间断服务，他要求系统有大量的服务器集群，从而提高系统的负载能力。分区容错也使得系统更加健壮。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2925,"question":"微服务的不足?","simplecontent":null,"content":"1、微服务的复杂度：构建一个微服务比较复杂，服务与服务之间通过HTTP协议或其他消息传递机制通信，开发者要选出最佳的通信机制，并解决网络服务差时带来的风险。\n2、分布式事物：将事物分成多阶段提交，如果一阶段某一节点失败仍会导致数据不正确。如果事物涉及的节点很多，某一节点的网络出现异常会导致整个事务处于阻塞状态，大大降低数据库的性能。\n3、服务划分：将一个完整的系统拆分成很多个服务，是一件非常困难的事，因为这涉及了具体的业务场景\n4、服务部署：最佳部署容器Docker","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2926,"question":"微服务和SOA的关系?","simplecontent":null,"content":"微服务相对于和ESB联系在一起的SOA轻便敏捷的多，微服务将复杂的业务组件化，也是一种面向服务思想的体现。对于微服务来说，它是SOA的一种体现，但是它比ESB实现的SOA更加轻便、敏捷和简单。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2927,"question":"spring cloud 的核心组件有哪些？","simplecontent":null,"content":"Eureka：服务注册于发现。\nFeign：基于动态代理机制，根据注解和选择的机器，拼接请求 url 地址，发起请求。\nRibbon：实现负载均衡，从一个服务的多台机器中选择一台。\nHystrix：提供线程池，不同的服务走不同的线程池，实现了不同服务调用的隔离，避免了服务雪崩的问题。\nZuul：网关管理，由 Zuul 网关转发请求给对应的服务。\n\nspringcloud由以下几个核心组件构成：\nEureka：各个服务启动时，Eureka  Client都会将服务注册到Eureka  Server，并且Eureka  Client还可以反过来从Eureka  Server拉 取注册表，从而知道其他服务在哪里\nRibbon：服务间发起请求的时候，基于Ribbon做负载均衡，从一个服务的多台机器中选择一台\nFeign：基于Feign的动态代理机制，根据注解和选择的机器，拼接请求URL地址，发起请求\nHystrix：发起请求是通过Hystrix的线程池来⾛走的，不同的服务⾛走不同的线程池，实现了不同服务调用的隔离，避免了服务雪崩          的问题\nZuul：如果前端、移动端要调用后端系统，统一从Zuul网关进入，由Zuul网关转发请求给对应的服务\n\n注册中心还可以用zookeeper。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2928,"question":"Springcloud解决那些问题?","simplecontent":null,"content":"配置管理、（注册中心eureka、zk）、服务发现、服务注册、断路器、路由策略、全局锁、分布式会话、客户端调用、接口网关（zuul）、服务管理系统\nSpringBoot与Springcloud：\n1>、SpringBoot简化了xml配置，快速整合框架\n2>、Springcloud是一套微服务解决方案—RPC远程调用\n3>、关系Springcloud依赖与SpringBoot（web组件用的SpringMVC），为什么Springcloud会依赖与SpringBoot？因为Springcloud写接口就是SpringMVC接口\n4>、SpringBootproperties和yml中可以使用${random}设置一些随机值\n服务的调用：\nrest、feign（均使用httpclient技术），负载均衡ribbon\n服务调用的原理：\n服务首先注册到注册中心eureka中(注册一个名字通过名字调用)\n负载均衡\nribbon，先去注册中心取到对应的服务，然后交给我ribbon\n配置详解：\n1>、eureka.client.register-with-eureka：是否向注册中心注册自己，注册为true反之为false\n2>、eureka.client.fetch-registry： 是否需要去检索服务，检索为true反之为false\n3>、eureka.client.serviceUrl.defaultZone : 指定服务注册中心的地址\nEureka：\n1>、eureka可分为三个角色：服务发现者、服务注册者、注册发现中心，但是这三个角色并不和实际部署的模型是一对一的关系\n2>、所有的网络通信都是基于http(s)协议的\n3>、Eureka和AWS是紧密结合的，无论是配置还是源码，比如Region、zone…，Region可以通过配置文件进行配置，如果不配置默认使用us-east-1。同样Zone也可以配置，若不配置默认使用defaultZone","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2929,"question":"springcloud如何实现服务注册与发现？","simplecontent":null,"content":"服务发布时指定对应的服务名(IP地址和端口号)，将服务注册到注册中心(eureka和zookeeper)，但是这一切是Springcloud自动实现的，只需要在SpringBoot的启动类上加上@EnableDisscoveryClient注解，同一服务修改端口就可以启动多个实例调用方法：传递服务名称通过注册中心获取所有的可用实例，通过负载均衡策略(Ribbon和Feign)调用对应的服务","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2930,"question":"熔断机制?","simplecontent":null,"content":"1、当一个服务出现故障时，请求失败次数超过设定的阀值（默认50）之后，该服务就会开启熔断器，之后该服务就不进行任何业务逻辑操作，执行快速失败，直接返回请求失败的信息。其他依赖于该服务的服务就不会因为得不到响应而造成线程阻塞，这是除了该服务和依赖于该服务的部分功能不可用外，其他功能正常。\n2、熔断器还有一个自我修复机制，当一个服务熔断后，经过一段时间（5s）半打开熔断器。半打开的熔断器会检查一部分请求（只能有一个请求）是否正常，其他请求执行快速失败，检查的请求如果响应成功，则可判断该服务正常了，就可关闭该服务的熔断器，反之则继续打开熔断器。这种自我熔断机制和自我修复机制可以使程序更加健壮、也可以为开发和运维减少很多不必要的工作。\n3、熔断组件往往会提供一系列的监控，如：服务可用与否、熔断器是否被打开、目前的吞吐量、网络延迟状态的监控等，从而可以让开发人员和运维人员的了解服务的状况。\n】Eureka特点？注册中心、失效剔除、自我保护、服务续约\n1>、服务注册中心：Eureka提供的服务端，提供服务注册与发现的功能\n1>>、失效剔除：对于那些非正常下线的服务实例（内存溢出、网络故障导致的），服务注册中心不能收到“服务下线”的请求，为了将这些无法提供服务的实例从服务列表中剔除，Eureka Server在启动的时候会创建一个定时任务，默认每隔一段时间（默认60s）将当前清单中超时（默认90s）没有续约的服务剔除出去。\n2>>、自我保护：Eureka Server 在运行期间，会统计心跳失败的比例在15分钟之内是否低于85%，如果出现低于的情况（生产环境由于网络不稳定会导致），Eureka Server会降当前的实例注册信息保护起来，让这些实例不过期，尽可能保护这些注册信息，但是在这保护期间内实例出现问题，那么客户端就很容易拿到实际上已经不存在的服务实例，会出现调用失败的情况，所以客户端必须有容错机制，比如可以使用请求重试、断路器等机制。\n在本地进行开发时可以使用 eureka.server.enable-self-preseervation=false参数来关闭保护机制，以确保注册中心可以将不可用的实例剔除。\n2>、服务提供者：提供服务的应用，可以是SpringBoot应用也可以是其他的技术平台且遵循Eureka通信机制的应用。他将自己提供的服务注册到Eureka，以供其他应用发现，（如：service层）\n1>>、服务注册：服务提供者在启动的时候会通过发送Rest请求的方式将自己注册到Eureka Server（服务注册中心）中，同时带上自身服务的一些元数据，Eureka Server 接收到这个Rest请求后，将元数据存储在一个双层结构Map中，第一层的key是服务名，第二层key是具体服务的实例名\n2>>、服务同步：若有两个或两个以上的Eureka Server（服务注册中心）时，他们之间是互相注册的，当服务提供者发送注册请求到一个服务注册中心时，它会将该请求转发到集群中相连的其他注册中心，从而实现注册中心间的服务同步，这样服务提供者的服务信息可以通过任意一台服务中心获取到\n3>>、服务续约：在注册完服务之后，服务提供者会维护一个心跳来持续告诉Eureka Server：“我还活着”，以防止Eureka Server的“剔除任务”将该服务实例从服务列表中排除出去。配置：eureka.instance.lease-renewal-in-seconds=30(续约任务的调用间隔时间，默认30秒，也就是每隔30秒向服务端发送一次心跳，证明自己依然存活)，eureka.instance.lease-expiration-duration-in-seconds=90(服务失效时间，默认90秒，也就是告诉服务端，如果90秒之内没有给你发送心跳就证明我“死”了，将我剔除)\n3>、服务消费者：消费者应用从服务注册中心获取服务列表，从而使消费者可以知道去何处调用其所需要的服务，如：Ribbon实现消费方式、Feign实现消费方式\n1>>、获取服务：当启动服务消费者的时候，它会发送一个Rest请求给注册中心，获取上面注册的服务清单，Eureka Server会维护一份只读的服务清单来返回给客户端，并且每三十秒更新一次\n2>>、服务调用：在服务消费者获取到服务清单后，通过服务名可以获得具体提供服务的实例名和该实例的元信息，采用Ribbon实现负载均衡\n3>>、服务下线：当服务实例进行正常的关闭操作时，它会触发一个服务下线的Rest请求给Eureka Server，告诉服务注册中心“我要下线了”。服务端接收到请求之后，将该服务状态设置为下线，并把下线时间传播出去。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2931,"question":"】Ribbon和Feign的区别？负载均衡、远程调用","simplecontent":null,"content":"Ribbon添加的maven依赖是spring-starter-ribbon，使用@RibbonClient(value=“服务名称”)使用RestTemplate调用远程服务对应的方法，\nFeign添加的maven依赖是spring-starter-feign，服务提供方提供对外接口，调用方使用，在接口上使用FeignClient(“指定服务名”)，\n具体区别：\n1、启动类使用的注解不同，Ribbon使用的是@RibbonClient，Feign使用的是@EnableFeignClients\n2、服务的指定位置不同，Ribbon是在@RibbonClient注解上声明，Feign则是在定义抽象方法的接口中使用@FeignClient声明\n3、调用方式不同，Ribbon需要自己构建http请求，模拟http请求然后使用RestTemplate发送给其他服务，步骤比较繁琐。Feign则是在Ribbon的基础上进行了一次改进，采用接口调用的方式，将需要调用的其他服务的方法定义成抽象方法即可，不需要自己构建http请求，不过要注意的是抽象方法的注解、方法签名要和提供方的完全一致。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:41","updateTime":"2021-05-26 00:55:41","isExist":null},{"id":2916,"question":"】注册中心你了解了哪些？Consul 、Eureka、ZooKeeper","simplecontent":null,"content":"】eureka的缺点？某个服务不可用，需要1~3个心跳周期才能感知\n某个服务不可用时，各个Eureka Client不能及时的知道，需要1~3个心跳周期才能感知，但是，由于基于Netflix的服务调用端都会使用Hystrix来容错和降级，当服务调用不可用时Hystrix也能及时感知到，通过熔断机制来降级服务调用，因此弥补了基于     客户端服务发现的时效性的缺点。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:40","updateTime":"2021-05-26 00:55:40","isExist":null},{"id":2917,"question":"】什么情况下用到分布式开发？业务拆分、流量、代码复用性、扩展","simplecontent":null,"content":"a.优点：\ni.模块解耦：把模块拆分,使用接口通信,降低模块之间的耦合度.\nii.项目拆分，不同团队负责不同的子项目：把项目拆分成若干个子项目,不同的团队负责不同的子项目.\niii.提⾼高项目扩展性：增加功能时只需要再增加一个子项目,调用其他系统的接口就可以。\niv.分布式部署：可以灵活的进行分布式部署.\nv.提⾼高代码的复用性：比如service层,如果不采用分布式rest服务方式架构就会在手机wap商城,微信商城,pc,android，ios每个端都要写一个service层逻辑,开发量大,难以维护一起升级,这时候就可以采用分布式rest服务方式,公用一个service层。\nb.缺点：\ni.系统之间的交互要使用远程通信,接口开发增大工作量；\nii.网络请求有延时；\niii.事务处理比较麻烦，需要使用分布式事务。\n\n1.微服务有几种限流方式？\nspring    cloud   gateway：\nhttps://windmt.com/2018/05/09/spring-cloud-15-spring-cloud-gateway-ratelimiter/\n2.限流的情况下，服务隔离还有没有必要？\nhttps://www.javazhiyin.com/25964.html","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:40","updateTime":"2021-05-26 00:55:40","isExist":null},{"id":2918,"question":"】分析下分布式强一致性、弱一致性、最终一致性？","simplecontent":null,"content":"1.强一致性：\n当更新操作完成之后，任何多个后续进程或者线程的访问都会返回最新的更新过的值。这种是对用户最友好的，就是用户上一次写什么，下一次就保证能读到什么。根据CAP理论，这种实现需要牺牲可用性。\n\n2.弱一致性：\n系统并不保证续进程或者线程的访问都会返回最新的更新过的值。系统在数据写入成功之后，不承诺⽴立即可以读到最新写入的值，也不会具体的承诺多久之后可以读到。\n3.最终一致性：\n弱一致性的特定形式。系统保证在没有后续更新的前提下，系统最终返回上一次更新操作的值。在没有故障发⽣生的前提下，不一致窗口的时间主要受通信延迟，系统负载和复制副本的个数影响。DNS是一个典型的最终一致性系统。\n3.springcloud服务发现原理？\na. 每30s发送心跳检测重新进行租约，如果客户端不能多次更新租约，它将在90s内从服务器注册中心移除。\na.注册信息和更新会被复制到其他Eureka     节点，来⾃自任何区域的客户端可以查找到注册中心信息，每30s发⽣生一次复制来定位他们的服务，并进行远程调用。\nb.客户端还可以缓存一些服务实例例信息，所以即使Eureka全挂掉，客户端也是可以定位到服务地址的。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:40","updateTime":"2021-05-26 00:55:40","isExist":null},{"id":2919,"question":"】分布式下down机的处理方案（心跳检测）？30s心跳检测","simplecontent":null,"content":"1、dubbo：服务器宕机，zk临时被删除；\n2、springcloud：每30s发送心跳检测重新进行租约，如果客户端不能多次更新租约，它将在90s内从服务器注册中心移除。\n3、apm监控：","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:40","updateTime":"2021-05-26 00:55:40","isExist":null},{"id":2920,"question":"】什么是 spring cloud？微服务框架，可以进行分布式部署，功能有网关，注册中心，配置中心，消息总线，负载均衡，断路器，监控","simplecontent":null,"content":"《微服务框架，可以进行分布式部署，功能有网关，注册中心，配置中心，消息总线，负载均衡，断路器，监控》\nspring cloud 是一系列框架的有序集合。它利用 spring boot 的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用 spring boot 的开发风格做到一键启动和部署。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:40","updateTime":"2021-05-26 00:55:40","isExist":null},{"id":2912,"question":"】Actuator作用？监控应用健康，虚拟机等信息","simplecontent":null,"content":"监控应用健康，虚拟机等信息","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:39","updateTime":"2021-05-26 00:55:39","isExist":null},{"id":2913,"question":"consul 的可靠性你了解吗？","simplecontent":null,"content":"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:39","updateTime":"2021-05-26 00:55:39","isExist":null},{"id":2914,"question":"consul 的机制你有没有具体深入过？有没有和其他的注册中心对比过？","simplecontent":null,"content":"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:39","updateTime":"2021-05-26 00:55:39","isExist":null},{"id":2915,"question":"Ribbon 和 Feign 的区别？","simplecontent":null,"content":"Ribbon 和 Feign 都是用于调用其他服务的，不过方式不同。\n\n1.启动类使用的注解不同：Ribbon 用的是 @RibbonClient，Feign 用的是 @EnableFeignClients。\n2.服务的指定位置不同：Ribbon 是在  @RibbonClient 注解上声明，\nFeign 则是在定义抽象方法的接口中使用 @FeignClient 声明。\n3.调用方式不同：Ribbon 需要自己构建 http 请求，模拟 http 请求然后使用  RestTemplate  发送给其他服务，步骤相当繁琐。Feign 则是在\n\nRibbon 的基础上进行了一次改进，采用接口的方式，将需要调用的其他\n服务的方法定义成抽象方法即可，不需要自己构建 HTTP 请求。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:39","updateTime":"2021-05-26 00:55:39","isExist":null},{"id":2908,"question":"】springcloud监控中心有哪些？","simplecontent":null,"content":"1.Autuator  2.admin ui","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:38","updateTime":"2021-05-26 00:55:38","isExist":null},{"id":2909,"question":"】springcloud监控中心区别？1.无界面  2.有界面","simplecontent":null,"content":"1.无界面  2.有界面","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:38","updateTime":"2021-05-26 00:55:38","isExist":null},{"id":2910,"question":"】springcloud监控中心作用？监控应用情况，链接第三方情况，系统，内存等信息","simplecontent":null,"content":"监控应用情况，链接第三方情况，系统，内存等信息","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:38","updateTime":"2021-05-26 00:55:38","isExist":null},{"id":2911,"question":"】Bus消息总线作用？更新配置信息，多系统调用更新的配置","simplecontent":null,"content":"更新配置信息，多系统调用更新的配置","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:38","updateTime":"2021-05-26 00:55:38","isExist":null},{"id":2899,"question":"】springcloud feign的作用？服务调用，使用简单","simplecontent":null,"content":"服务调用，使用简单","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2900,"question":"】Hystrix是什么？解决超时和容错的问题","simplecontent":null,"content":"解决超时和容错的问题","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2901,"question":"】雪崩效应是什么？一个系统崩溃，导致别的系统也奔溃","simplecontent":null,"content":"分布式系统中的服务通信依赖于网络，网络不好，必然会对分布式系统带来很大的影响。在分布式系统中，服务之间相互依赖，如果一个服务之间出现了故障或者网络延迟，在高并发的情况下，会导致线程阻塞，在很短的时间内该服务的线程资源会消耗殆尽，最终使得该服务不可用。由于服务的相互依赖，可能会导致整个系统的不可用，这就是“雪崩效应”。为了防止此类事件的发生，分布式系统必然要采取相应的措施，如熔断机制（Springcloud采用的是Hystrix）","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2902,"question":"高可用配置?","simplecontent":null,"content":"Eureka server 的高可用实际上就是将自己作为服务向其他服务注册中心注册自己，这样就可以形成一组互相注册的服务注册中心，以实现服务清单的互相同步，达到高可用效果。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2903,"question":"什么是微服务?","simplecontent":null,"content":"以前所有的代码都放在同一个工程中、部署在同一个服务器、同一项目的不同模块不同功能互相抢占资源，微服务就是将工程根据不同的业务规则拆分成微服务，部署在不同的服务器上，服务之间相互调用，java中有的微服务有dubbo(只能用来做微服务)、springcloud( 提供了服务的发现、断路器等)。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2904,"question":"服务治理要做什么？","simplecontent":null,"content":"服务注册中心，实现服务自动注册和发现，无需人为记录服务地址\n服务自动订阅，服务列表自动推送，服务调用透明化，无需关心依赖关系\n动态监控服务状态监控报告，人为控制服务状态\n缺点：\n\n服务间会有依赖关系，一旦某个环节出错会影响较大\n服务关系复杂，运维、测试部署困难，不符合DevOps思想（docker）","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2905,"question":"】如何设计一套rpc远程调用框架？1.建立注册中心，网关，配置中心2.然后建立服务，服务之间通过注册中心调用","simplecontent":null,"content":"1.建立注册中心，网关，配置中心2.然后建立服务，服务之间通过注册中心调用","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2906,"question":"】如何实现rpc？通过搭建网关、注册中心、配置中心、服务与服务通过注册中心去调用协调","simplecontent":null,"content":"在springcloud体系中实现rpc的组件有2个，一个是ribbon，另一个是feign，而且feign在底层封装了ribbon，以更友好，更灵活的形式展现在了我们眼前，所以今天我们研究的重心放在了feign身上。\n feign是netflix提供的服务间基于http的rpc调用框架","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2907,"question":"】rpc和http区别？传输协议","simplecontent":null,"content":"传输协议\nRPC:可以基于TCP协议，也可以基于HTTP协议\nHTTP:基于HTTP协议\n传输效率\nRPC:使用自定义的TCP协议，可以让请求报文体积更小，或者使用HTTP2协议，也可以很好的减少报文的体积，提高传输效率\nHTTP:如果是基于HTTP1.1的协议，请求中会包含很多无用的内容，如果是基于HTTP2.0，那么简单的封装以下是可以作为一个RPC来使用的，这时标准RPC框架更多的是服务治理\n性能消耗\nRPC:可以基于thrift实现高效的二进制传输\nHTTP:大部分是通过json来实现的，字节大小和序列化耗时都比thrift要更消耗性能\n负载均衡\nRPC：基本都自带了负载均衡策略\nHTTP：需要配置Nginx，HAProxy来实现\n服务治理\nRPC：能做到自动通知，不影响上游\nHTTP:需要事先通知，修改Nginx/HAProxy配置\n总结\nRPC主要用于公司内部的服务调用，性能消耗低，传输效率高，服务治理方便。HTTP主要用于对外的异构环境，浏览器接口调用，APP接口调用，第三方接口调用等。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:37","updateTime":"2021-05-26 00:55:37","isExist":null},{"id":2890,"question":"】Eureka重试？ribbon、zuul、feign都可以配置各自的retry方式。","simplecontent":null,"content":"1.@Bean\n@LoadBalanced\nRestTemplate restTemplate() {\n    HttpComponentsClientHttpRequestFactory httpRequestFactory =  new HttpComponentsClientHttpRequestFactory();\n    httpRequestFactory.setReadTimeout(5000);\n    httpRequestFactory.setConnectTimeout(5000);\n    return new RestTemplate(httpRequestFactory);\n}\n2.feign默认是通过自己包下的Retryer进行重试配置,默认是5次","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2891,"question":"eureka名词?","simplecontent":null,"content":"\"服务注册，\n服务续约（心跳）\n服务同步（多个注册中心集群，注册时向多个注册中心同步信息）\n\n获取服务（启动服务消费者时，向注册中心发送rest请求，拉取服务清单列表，返回一份只读清单列表，服务消费者将清单缓存。清单列表会每30秒更新一次，去重新拉取。）\n服务调用：消费者获取到服务清单后，调用的时候通过服务名，就能拿到服务实例和元数据信息。因为有这些详细的元数据信息，我们可以根据需求调用那个服务提供者实例。在ribbon中会默认采用轮询的方式进行调用，从而实现客户端的负载均衡。\n服务下线：1.正常的关闭操作：触发一个服务下线的rest请求给eureka server注册中心，告诉服务注册中心\n2.内存溢出，网络故障等：eureka server注册中心在启动的时候会创建一个定时任务，默认每隔一段时间（60秒）将当前清单中超时（默认为90秒）没有续约的服务剔除出去。\n自我保护：统计心跳失败的比例在15分钟之内是否低于85%，如果出现低于的情况，eureka server会将当前的实例注册信息保护起来，让这些实例不会过期，经可能的保护这些信息。\neureka. server.enable-self-oreservation=false；关闭保护机制，确保将不可用的实例剔除。\"\nrestemplate的使用\t\"restTemplate.getForObject(\"\"http://service-member/getMemberAll\"\", List.class)\nribbon和resttemplate同时使用\"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2892,"question":"】网关和eureka作用？网关注册到注册中心，直接使用eureka服务端的清单列表","simplecontent":null,"content":"网关注册到注册中心，直接使用eureka服务端的清单列表","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2893,"question":"】如何解决Eureka Server不踢出已关闭的节点的问题？关闭eureka的自我保护","simplecontent":null,"content":"\"Server端\n　　#关闭eureka的自我保护\n　　eureka.server.enable-self-preservation=false\n　　#清理间隔时间，单位为毫秒\n　　eureka.server.eviction-interval-timer-in-ms=0\nClient端\n　　#开启健康检查(需要spring-boot-starter-actuator依赖)\n　　eureka.client.healthcheck.enabled=true\n　　#租期到期时间，默认90秒\n　　eureka.instance.lease-expiration-duration-in-seconds=30\n　　#租赁更新时间间隔，默认30，即30秒发送一次心跳\n　　eureka.instance.lease-renewal-interval-in-seconds=10\"\nzuul实现负载均衡\t使用serviceId进行绑定后，如果有多个相同的serviceid，默认以轮询访问，要更改通过ribbon","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2894,"question":"】系统通信方式有哪些？feign，resttemplate，httpclient","simplecontent":null,"content":"feign，resttemplate，httpclient","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2895,"question":"】zipkin 是什么？收集的跟踪数据称为Span；追踪数据发送到Zipkin收集器","simplecontent":null,"content":"收集的跟踪数据称为Span；追踪数据发送到Zipkin收集器","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2896,"question":"sleuth是什么?","simplecontent":null,"content":"\"访问zipkinserver工程暴露出来的端口，即可使用图形界面查看链路追踪的情况\n在日志中引入唯一ID，跟踪某个请求是如何从一个微服务传递到下一个\"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2897,"question":"】RateLimiter限流原理？1.设置令牌桶，一段时间设置一定的令牌2.请求服务减少令牌，没有拒绝服务\"","simplecontent":null,"content":"1.设置令牌桶，一段时间设置一定的令牌2.请求服务减少令牌，没有拒绝服务\"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2898,"question":"】springcloud网关的作用\t？1.对请求拦截和过滤2.登录验证3.路由转发和过滤器","simplecontent":null,"content":"1.对请求拦截和过滤2.登录验证3.路由转发和过滤器","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:36","updateTime":"2021-05-26 00:55:36","isExist":null},{"id":2887,"question":"Spring Cloud Eureka 自我保护机制?","simplecontent":null,"content":"在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期，但是在保护期内如果服务刚好这个服务提供者非正常下线了，此时服务消费者就会拿到一个无效的服务实例，此时会调用失败，对于这个问题需要服务消费者端要有一些容错机制，如重试，断路器等。\n我们在单机测试的时候很容易满足心跳失败比例在 15 分钟之内低于 85%，这个时候就会触发 Eureka 的保护机制，一旦开启了保护机制，则服务注册中心维护的服务实例就不是那么准确了，此时我们可以使用eureka.server.enable-self-preservation=false来关闭保护机制，这样可以确保注册中心中不可用的实例被及时的剔除（不推荐）。\n\n\n\n自我保护模式被激活的条件是：在 1 分钟后，Renews (last min) < Renews threshold。\n这两个参数的意思：\nRenews threshold：Eureka Server 期望每分钟收到客户端实例续约的总数。\nRenews (last min)：Eureka Server 最后 1 分钟收到客户端实例续约的总数。\n\n\nEureka 的自我保护模式是有意义的，该模式被激活后，它不会从注册列表中剔除因长时间没收到心跳导致租期过期的服务，而是等待修复，直到心跳恢复正常之后，它自动退出自我保护模式。这种模式旨在避免因网络分区故障导致服务不可用的问题。例如，两个客户端实例 C1 和 C2 的连通性是良好的，但是由于网络故障，C2 未能及时向 Eureka 发送心跳续约，这时候 Eureka 不能简单的将 C2 从注册表中剔除。因为如果剔除了，C1 就无法从 Eureka 服务器中获取 C2 注册的服务，但是这时候 C2 服务是可用的。\n所以，Eureka 的自我保护模式最好还是开启它。\n在自我保护模式中，eureka server会保护服务注册表中的信息，不再注销任何服务实例。当它收到的心跳数重新恢复到阀值以上时，该eureka server节点就会自动退出自我保护模式。\n\n然后关闭provider服务和consumer服务，这时候关闭的服务量为2/3<85%，所以会进入自我保护模式。\n\nEureka有自我保护模式（Self-Protected），当集群中超过85%服务不可用时会触发，此时服务的状态将不再更新。开发时，可关闭保护模式。哪怕服务又可用了eureka状态不会变化\n\n\n如果是大于阈值（85%），Eureka注册中心判定为网络故障，如果小于阈值（85%），Eureka注册中心判定为单节点故障。因为我这里是启动4个服务，就是向Eureka注册中心注册了4个服务，挂了2个，就是50%，远远低于85%。所以Eureka注册中心判定此种情况为单节点故障。Eureka注册中心认为节点在以后可以修复的，所以对出现故障的节点进行了保留，这就是Eureka注册中心的自我保护。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:35","updateTime":"2021-05-26 00:55:35","isExist":null},{"id":2888,"question":"如何进行Eureka的优雅停服?","simplecontent":null,"content":"利用Eureka的rest管理端点下线服务， 发送DELETE的Restfull请求","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:35","updateTime":"2021-05-26 00:55:35","isExist":null},{"id":2889,"question":"】Eureka的版本是多少？2.0","simplecontent":null,"content":"2.0","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:35","updateTime":"2021-05-26 00:55:35","isExist":null},{"id":2883,"question":"Eureka的配置?","simplecontent":null,"content":"1.Eureka项目配置\neureka:\n  client:\n    registerWithEureka: false\n    fetchRegistry: false\n    serviceUrl:\n      defaultZone: http://localhost:1111/eureka/\n  instance:\nperferIpAddress: true\n\n2.服务器的配置\neureka:\n  client:\n    serviceUrl:\n      defaultZone: http://localhost:1111/eureka/\n\n3.Eureka集群","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:34","updateTime":"2021-05-26 00:55:34","isExist":null},{"id":2884,"question":"eureka 集群注册信息如何传递?","simplecontent":null,"content":"服务启动后向Eureka注册，Eureka Server会将注册信息向其他Eureka Server进行同步，当服务消费者要调用服务提供者，则向服务注册中心获取服务提供者地址(即：服务应用名，spring.application.name参数配置)，然后会将服务提供者地址缓存在本地，下次再调用时，则直接从本地缓存中取，完成一次调用。\n\n        当服务注册中心Eureka Server检测到服务提供者因为宕机、网络原因不可用时，则在服务注册中心将服务置为DOWN状态，并把当前服务提供者状态向订阅者发布，订阅过的服务消费者更新本地缓存。\n\n        服务提供者在启动后，周期性（默认30秒）向Eureka Server发送心跳，以证明当前服务是可用状态。Eureka Server在一定的时间（默认90秒）未收到客户端的心跳，则认为服务宕机，注销该实例。\n\n\neureka-server1宕机后，eureka-server2依旧可以发现eureka-server1，而eureka-server1只是变为unavailable-replicas而已，最终不会影响其他客户端的注册。当eureka-server1启动后，一切自动恢复。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:34","updateTime":"2021-05-26 00:55:34","isExist":null},{"id":2885,"question":"】为什么要建立eureka集群？Eureka Server宕机，也不会影响服务之间的调用","simplecontent":null,"content":"即使Eureka Server宕机，也不会影响服务之间的调用，但是一旦新服务上线，已经在缓存在本地的服务提供者不可用了，服务消费者也无法知道，所以保证Eureka Server的高可用还是很有必要的。\n\n        在分布式系统中，任何的地方存在单点，整个体系就不是高可用的，Eureka 也一样，在上面的架构图中Eureka Server不是以单点存在的，而是以集群的方式对外提供服务。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:34","updateTime":"2021-05-26 00:55:34","isExist":null},{"id":2886,"question":"Eureka功能?","simplecontent":null,"content":"1.服务注册\n2.Ap模型 一台宕机，自动切换到新的Eureka节点；当宕机的服务器重新恢复后，Eureka会再次将其纳入到服务器集群管理之中\n3.心跳剔除 心跳服务，用于淘汰一些“濒死”的服务器  30秒没收到服务器信息，90秒没检测到服务 就剔除  Eureka节点会进入”自我保护模式“，同时保留那些“心跳死亡“的服务注册信息不过期。此时，这个Eureka节点对于新的服务还能提供注册服务，对于”死亡“的仍然保留，以防还有客户端向其发起请求。当网络故障恢复后，这个Eureka节点会退出”自我保护模式\n4.注册信息缓存保存在客户端  得益于Eureka的客户端缓存技术，消费者服务仍然可以通过Eureka客户端查询与获取注册服务信息\n5.自我保护机制\n\n一般情况下，某个服务不可用时，例如一定时间内没有检测到心跳或者连接超时等，那么就会将该服务从可用服务列表中剔除，但是在微服务架构中，因为服务数量众多，可能存在跨机房或者跨区域的情况，所以当某个服务心跳探测失败后并不能完全说明其无法正常提供服务而将其剔除，并且服务一旦剔除后，再重新注册将会重新进行负载均衡等等一系列的操作，考虑到性能问题，eureka会将不可用的服务暂时断开，并期望能够在接下来一段时间内接收到心跳信号，而不是直接剔除，同时，新来的请求将不会分发给暂停服务的实例，这就是eureka的保护机制，它保护了因网络等问题造成的短暂的服务不可用的实例，避免频繁注册服务对整个系统造成影响。\nEureka还有自我保护机制，如果在15分钟内超过85%的节点都没有正常的心跳，那么Eureka就认为客户端与注册中心出现了网络故障，所以不会再接收心跳，也不会删除服务。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:34","updateTime":"2021-05-26 00:55:34","isExist":null},{"id":2877,"question":"】Feign负载均衡？feign默认负载均衡策略为轮循","simplecontent":null,"content":"feign默认负载均衡策略为轮循","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:33","updateTime":"2021-05-26 00:55:33","isExist":null},{"id":2878,"question":"】Apollo阿波罗特点？客户端能实时（1秒）接收到最新的配置，并通知到应用程序","simplecontent":null,"content":"用户在Apollo修改完配置并发布后，客户端能实时（1秒）接收到最新的配置，并通知到应用程序。\nApollo阿波罗简介\t集中化管理应用不同环境、不同集群的配置","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:33","updateTime":"2021-05-26 00:55:33","isExist":null},{"id":2879,"question":"apollo搭建启动?","simplecontent":null,"content":"\"1.导入2个mysql数据库，修改密码\n2.使用git cd到目录  输入./demo.sh start\n3.在springboot加入apollo地址和appid，应用名字就可以了\"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:33","updateTime":"2021-05-26 00:55:33","isExist":null},{"id":2880,"question":"xxl-job运行模式?","simplecontent":null,"content":"\"bean和glue模式\n任务以JobHandler的方式，任务以源码方式维护在调度中心\"\nxxl-job的分片作用\t并行操作根据分片确定当系统处理多少数据\n内部系统和外部系统通信安全性\t1.https  2.非对称加密 验签 3.tokenid 设置过期时间","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:33","updateTime":"2021-05-26 00:55:33","isExist":null},{"id":2881,"question":"Eureka和zookeeper区别?","simplecontent":null,"content":"1、在Eureka平台中，如果某台服务器宕机，Eureka不会有类似于ZooKeeper的选举leader的过程；客户端请求会自动切换到新的Eureka节点；当宕机的服务器重新恢复后，Eureka会再次将其纳入到服务器集群管理之中；而对于它来说，所有要做的无非是同步一些新的服务注册信息而已。所以，再也不用担心有“掉队”的服务器恢复以后，会从Eureka服务器集群中剔除出去的风险了。    \nEureka甚至被设计用来应付范围更广的网络分割故障，并实现“0”宕机维护需求。（多个zookeeper之间网络出现问题,造成出现多个leader，发生脑裂）当网络分割故障发生时，每个Eureka节点，会持续的对外提供服务（注：ZooKeeper不会）：接收新的服务注册同时将它们提供给下游的服务发现请求。这样一来，就可以实现在同一个子网中（same side of partition），新发布的服务仍然可以被发现与访问。\n2、正常配置下，Eureka内置了心跳服务，用于淘汰一些“濒死”的服务器；如果在Eureka中注册的服务，它的“心跳”变得迟缓时，Eureka会将其整个剔除出管理范围（这点有点像ZooKeeper的做法）。这是个很好的功能，但是当网络分割故障发生时，这也是非常危险的；因为，那些因为网络问题（注：心跳慢被剔除了）而被剔除出去的服务器本身是很”健康“的，只是因为网络分割故障把Eureka集群分割成了独立的子网而不能互访而已。\n幸运的是，Netflix考虑到了这个缺陷。如果Eureka服务节点在短时间里丢失了大量的心跳连接（注：可能发生了网络故障），那么这个Eureka节点会进入”自我保护模式“，同时保留那些“心跳死亡“的服务注册信息不过期。此时，这个Eureka节点对于新的服务还能提供注册服务，对于”死亡“的仍然保留，以防还有客户端向其发起请求。当网络故障恢复后，这个Eureka节点会退出”自我保护模式“。所以Eureka的哲学是，同时保留”好数据“与”坏数据“总比丢掉任何”好数据“要更好，所以这种模式在实践中非常有效。\n\n3、Eureka还有客户端缓存功能（注：Eureka分为客户端程序与服务器端程序两个部分，客户端程序负责向外提供注册与发现服务接口）。所以即便Eureka集群中所有节点都失效，或者发生网络分割故障导致客户端不能访问任何一台Eureka服务器；Eureka服务的消费者仍然可以通过Eureka客户端缓存来获取现有的服务注册信息。甚至最极端的环境下，所有正常的Eureka节点都不对请求产生相应，也没有更好的服务器解决方案来解决这种问题\n时；得益于Eureka的客户端缓存技术，消费者服务仍然可以通过Eureka客户端查询与获取注册服务信息，这点很重要。\n\n4、Eureka的构架保证了它能够成为Service发现服务。它相对与ZooKeeper来说剔除了Leader节点的选取或者事务日志机制，这样做有利于减少使用者维护的难度也保证了Eureka的在运行时的健壮性。而且Eureka就是为发现服务所设计的，它有独立的客户端程序库，同时提供心跳服务、服务健康监测、自动发布服务与自动刷新缓存的功能。但是，如果使用ZooKeeper你必须自己来实现这些功能。Eureka的所有库都是开源的，所有人都能看到与使用这些源代码，这比那些只有一两个人能看或者维护的客户端库要好。\n5、维护Eureka服务器也非常的简单，比如，切换一个节点只需要在现有EIP下移除一个现有的节点然后添加一个新的就行。Eureka提供了一个web-based的图形化的运维界面，在这个界面中可以查看Eureka所管理的注册服务的运行状态信息：是否健康，运行日志等。Eureka甚至提供了Restful-API接口，方便第三方程序集成Eureka的功能。\nZooKeeper的劣势\n   在分布式系统领域有个著名的CAP定理（C-数据一致性；A-服务可用性；P-服务对网络分区故障的容错性，这三个特性在任何分布式系统中不能同时满足，最多同时满足两个）；ZooKeeper是个CP的，即任何时刻对ZooKeeper的访问请求能得到一致的数据结果，同时系统对网络分割具备容错性；但是它不能保证每次服务请求的可用性（注：也就是在极端环境下，ZooKeeper可能会丢弃一些请求，消费者程序需要重新请求才能获得结果）。但是别忘了，ZooKeeper是分布式协调服务，它的职责是保证数据（注：配置数据，状态数据）在其管辖下的所有服务之间保持同步、一致；所以就不难理解为什么ZooKeeper被设计成CP而不是AP特性的了，如果是AP的，那么将会带来恐怖的后果（注：ZooKeeper就像交叉路口的信号灯一样，你能想象在交通要道突然信号灯失灵的情况吗？）。而且，作为ZooKeeper的核心实现算法Zab，就是解决了分布式系统下数据如何在多个服务之间保持同步问题的。\n1、对于Service发现服务来说就算是返回了包含不实的信息的结果也比什么都不返回要好；再者，对于Service发现服务而言，宁可返回某服务5分钟之前在哪几个服务器上可用的信息，也不能因为暂时的网络故障而找不到可用的服务器，而不返回任何结果。所以说，用ZooKeeper来做Service发现服务是肯定错误的，如果你这么用就惨了！\n   如果被用作Service发现服务，ZooKeeper本身并没有正确的处理网络分割的问题；而在云端，网络分割问题跟其他类型的故障一样的确会发生；所以最好提前对这个问题做好100%的准备。就像Jepsen在ZooKeeper网站上发布的博客中所说：在ZooKeeper中，如果在同一个网络分区（partition）的节点数（nodes）数达不到ZooKeeper选取Leader节点的“法定人数”时，它们就会从ZooKeeper中断开，当然同时也就不能提供Service发现服务了。\n2、ZooKeeper下所有节点不可能保证任何时候都能缓存所有的服务注册信息。如果ZooKeeper下所有节点都断开了，或者集群中出现了网络分割的故障（注：由于交换机故障导致交换机底下的子网间不能互访）；那么ZooKeeper会将它们都从自己管理范围中剔除出去，外界就不能访问到这些节点了，即便这些节点本身是“健康”的，可以正常提供服务的；所以导致到达这些节点的服务请求被丢失了。（注：这也是为什么ZooKeeper不满足CAP中A的原因）\n3、更深层次的原因是，ZooKeeper是按照CP原则构建的，也就是说它能保证每个节点的数据保持一致，而为ZooKeeper加上缓存的做法的目的是为了让ZooKeeper变得更加可靠（available）；但是，ZooKeeper设计的本意是保持节点的数据一致，也就是CP。所以，这样一来，你可能既得不到一个数据一致的（CP）也得不到一个高可用的（AP）的Service发现服务了；因为，这相当于你在一个已有的CP系统上强制栓了一个AP的系统，这在本质上就行不通的！一个Service发现服务应该从一开始就被设计成高可用的才行！\n4、如果抛开CAP原理不管，正确的设置与维护ZooKeeper服务就非常的困难；错误会经常发生，导致很多工程被建立只是为了减轻维护ZooKeeper的难度。这些错误不仅存在与客户端而且还存在于ZooKeeper服务器本身。Knewton平台很多故障就是由于ZooKeeper使用不当而导致的。那些看似简单的操作，如：正确的重建观察者（reestablishing watcher）、客户端Session与异常的处理与在ZK窗口中管理内存都是非常容易导致ZooKeeper出错的。同时，我们确实也遇到过ZooKeeper的一些经典bug：ZooKeeper-1159 与ZooKeeper-1576；我们甚至在生产环境中遇到过ZooKeeper选举Leader节点失败的情况。这些问题之所以会出现，在于ZooKeeper需要管理与保障所管辖服务群的Session与网络连接资源（注：这些资源的管理在分布式系统环境下是极其困难的）；但是它不负责管理服务的发现，所以使用ZooKeeper当Service发现服务得不偿失。\n一个集群有3台机器，挂了一台后的影响是什么？挂了两台呢？ \n挂了一台：挂了一台后就是收不到其中一台的投票，但是有两台可以参与投票，按照上面的逻辑，它们开始都投给自己，后来按照选举的原则，两个人都投票给其中一个，那么就有一个节点获得的票等于2，2 > (3/2)=1 的，超过了半数，这个时候是能选出leader的。\n挂了两台： 挂了两台后，怎么弄也只能获得一张票， 1 不大于 (3/2)=1的，这样就无法选出一个leader了。\nZAB（ZooKeeper Atomic Broadcast ） 全称为：原子消息广播协议；ZAB可以说是在Paxos算法基础上进行了扩展改造而来的，ZAB协议设计了支持崩溃恢复，ZooKeeper使用单一主进程Leader用于处理客户端所有事务请求，采用ZAB协议将服务器数状态以事务形式广播到所有Follower上；由于事务间可能存在着依赖关系，ZAB协议保证Leader广播的变更序列被顺序的处理，：一个状态被处理那么它所依赖的状态也已经提前被处理；ZAB协议支持的崩溃恢复可以保证在Leader进程崩溃的时候可以重新选出Leader并且保证数据的完整性；\n过半数（>=N/2+1） 的Follower反馈信息后，Leader将再次向集群内Follower广播Commit信息，Commit为将之前的Proposal提交；\n2、","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:33","updateTime":"2021-05-26 00:55:33","isExist":null},{"id":2882,"question":"eureka原理?","simplecontent":null,"content":"分为客户端和服务端，微服务启动客户端向服务端注册（将实例名和ip端口注册到cocurenthashmap），并且每隔30秒向服务端发送消息表明服务存在，很长时间没有发送心跳说明服务实例挂了（超过90秒都没收到就将服务剔除）","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:33","updateTime":"2021-05-26 00:55:33","isExist":null},{"id":2873,"question":"网关权限认证?","simplecontent":null,"content":"如果是微服务模式，在Spring cloud gateway网关处进行用户认证与授权有两种方式：\n1，在Spring Cloud Gateway服务这里添加数据库访问，直接检测登陆信息是否正确，如果正确，再给此用户授权。\n2，在网关后面专门的认证服务进行登陆信息认证，如果登陆成功，在返回的Header中添加用户认证与授权需要的信息，然后在网关处理再完成认证与授权\n\n@RequestMapping(\"login\")\n    @ResponseBody\n    public Object login(HttpServletResponse response) {\n        JSONObject userInfo = new JSONObject();\n        userInfo.put(\"username\", \"xinyues\");\n        List<String> roles = new ArrayList<>();\n        roles.add(\"Admin\");\n        roles.add(\"Dev\");\n        userInfo.put(\"roles\", roles);//添加角色信息\n        response.addHeader(\"AccountInfo\", userInfo.toJSONString());//将信息放入响应包头\n        \n        JSONObject result = new JSONObject();\n        result.put(\"code\", 0);\n        return result;\n}\n\n然后在网关处添加过滤器，拦截登陆请求的响应信息\n\npublic class AuthorizeFilter implements GlobalFilter, Ordered {\n    //请求头中的令牌常量\n    public final static String TOKEN = \"token\";\n    @Override\n    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {\n       //1.获取请求\n        ServerHttpRequest request = exchange.getRequest();\n        //2.获取响应\n        ServerHttpResponse response = exchange.getResponse();\n        //3.判断用户是否访问的为登录路径，如果是登录路径则放行\n        if (request.getURI().getPath().contains(\"/admin/login\")){\n            return chain.filter(exchange);\n        }\n        //4. 获取请求头中的令牌\n        HttpHeaders headers = request.getHeaders();\n        String token = headers.getFirst(TOKEN);\n        //5. 如果请求头中的令牌为空, 则返回错误状态码\n        if (StringUtils.isEmpty(token)){\n            response.setStatusCode(HttpStatus.UNAUTHORIZED);\n            return response.setComplete();\n        }\n        //6. 解析请求头中的jwt令牌\n        try {\n            JwtUtil.parseJWT(token);\n        } catch (Exception e) {\n            //7. 如果解析出错, 说明令牌过期或者被篡改, 返回状态码\n            e.printStackTrace();\n            response.setStatusCode(HttpStatus.UNAUTHORIZED);\n            return response.setComplete();\n        }\n        //8. 如果解析正常则放行\n        return chain.filter(exchange);\n    }\n\n    @Override\n    public int getOrder() {\n        return 3;\n    }\n}\n例如简单判断有没有权限调用某个接口,我在 gateway 里的 filter 判断一下这个 token 存不存在 redis 中(token -> 用户信息).\n假设现在有个接口是 api.test.com/user/mail/list/ 接口, 需要传入 userId, 获取到这个用户的邮件列表, 怎么让 gateway 转发请求到 user-service 时, 将请求 header 里的 token 转化为 userId,\nuserController 里的方法可能是这样的 List<mail> mailList(Long userId);</mail>\n除了网关外其他服务 RPC 调用该接口, 也可以只传入 userId 参数 这样的请问该怎么实现?\n如果是以前的方法,我可能会把这个方法改为 List<mail> mailList(Long usrId,HttpServletRequest request);</mail>\n然后取出 request 中的 token,去 redis 中验证一下, 然后去取出 userId, 但是这样 其他 b.c.d..服务要是 fegin RPC 调用 这个方法时, 就也需要传入 HttpServletRequest/或者 token.\n\n\n选用 将 token(存 redis) 或者 JWT token , 在 tokenFilter(继承 GlobalFilter)中放入 header 之中(jwt 参照 https://blog.csdn.net/CrazyLai1996/article/details/86430457)\n\n然后取本人的数据信息,则使用 @RequestHeader(\"X-USER-ID\") String userId 这种形式去取数据, \n\n那么如果权限高一点的(例如管理员), 那么 RPC 调用其他用户的邮件列表, 可以使用如下方法\n\n用户访问自己的:\n@PostMapping(\"/mail/list\")\npublic Result x(@RequestHeader(value = \"auth-userId\",required = false)Long authUserId){\nreturn mailService.list(authUserId);\n}\n\n用户访问别人的\n@PostMapping(\"/mail/list/{userId}\")\npublic Result maillist(@PathVariable(\"userId\") Long userId){\nreturn mailService.list(userId);\n}\n\nRPC 方法 \n@PostMapping(\"/user/test/mail/list/{userId}\")\npublic Result mm(@PathVariable(\"userId\")Long userId);\n\n这个 RPC 方法能不能调用, 还是需要 更上面一层的 token 来区分的, 例如传的 userId 能不能不是他本人的, 需要配合 role /permission, 来决定. \n\n即: 这种可能是, /admin/user/list , 然后可以传入 userId 参数, 加上自己的 header 中的 token,来决定 给 rpc 方法中传递的 userId 到底是直接的,还是别人的.\n\n在这个问题中,我最大的困扰是, 怎么将 token 背后的用户信息良好的传递到各个服务中去, \n我觉得比较麻烦,但是可行的是, 每个方法里都加个 token 或者 httpservletrequest, 每次需要的时候 都去根据 header/ token (再根据 redis 其他的转换成信息), 但是想想每个 controller service rpc 方法都要带上 token 或者其他的 那也太恐怖了, 不过还有一点.. 如果一个 controller 方法 含有 Httpservletrequest, 那么它的 rpc 方法大概也得带着这么个参数, 那会一直循环循环吗?\n\n还有就是, 各个服务全关了外网端口, 所有请求都要经过除了网关外的 另一个特定服务, 例如 admin,在这个地方进行鉴权, 查看有没有对应的权限 /数据权限,\n\n还是经验不足啊...\n\n网关调鉴权服务完事把用户信息和权限列表写到 header","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:32","updateTime":"2021-05-26 00:55:32","isExist":null},{"id":2874,"question":"】网关作用？灰度、熔断、缓存、限流、授权","simplecontent":null,"content":"1.统一对外接口：      当用户需要集成不同产品或者服务之间的功能，调用不同服务提供的能力。利用APIGateway可以让用户在不感知服务边缘的情况下，利用统一的接口组装服务。        对于公司内部不同的服务，提供的接口可能在风格上存在一定的差异，通过APIGateway可以统一这种差异。 当内部服务修改时，可以通过APIGateway进行适配，不需要调用方进行调整        减少对外暴露服务可以增加系统安全性。\n2.统一鉴权:        通过APIGateway对访问进行统一鉴权，不需要每个应用单独对调用方进行鉴权，应用可以专注业务。\n3.服务注册与授权：        可以控制调用方可以使用和不可以使用的服务。\n4.服务限流:        通过APIGateway可以对调用方调用每个接口的每日调用及总调用次数限制\n5.全链路跟踪：        通过APIGateway提供的唯一请求Id，监控调用流程，以及调用的响应时间。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:32","updateTime":"2021-05-26 00:55:32","isExist":null},{"id":2875,"question":"】如何获取配置中心的值？@Value(\"$”)","simplecontent":null,"content":"@Value(\"${tengxungovpur.url.invoice.invoiceList}\")\nprivate String invoiceListURL;","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:32","updateTime":"2021-05-26 00:55:32","isExist":null},{"id":2876,"question":"feign是否可以做负载均衡?","simplecontent":null,"content":"feign的作用的替代RestTemplate,性能比较低，但是可以使代码可读性很强","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:32","updateTime":"2021-05-26 00:55:32","isExist":null},{"id":2867,"question":"突刺现象?","simplecontent":null,"content":"指在一定时间内的一小段时间内就用完了所有资源，后大部分时间中无资源可用。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:31","updateTime":"2021-05-26 00:55:31","isExist":null},{"id":2868,"question":"权限分类?","simplecontent":null,"content":"三种\n1.对菜单和按钮 前端限制\n2.对接口，拦截器限制  数据库:一个接口和一个角色组\n3.对数据 sql限制","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:31","updateTime":"2021-05-26 00:55:31","isExist":null},{"id":2869,"question":"Nginx+Zuul集群实现高可用网关?","simplecontent":null,"content":"两个作用：\nNginx通过轮询实现负载均衡\nZuul通过集群实现高可用","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:31","updateTime":"2021-05-26 00:55:31","isExist":null},{"id":2870,"question":"基础平台?","simplecontent":null,"content":"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:31","updateTime":"2021-05-26 00:55:31","isExist":null},{"id":2871,"question":"】家电网如何对发票做权限验证？首先经过网关登录，token和用户id保存在header，后台通过header获取用户id，在个别接口通过request获取用户id，去到权限表查询相对应的地区、品牌、品类、平台、订单类型的权限，去限制sql的查询语句","simplecontent":null,"content":"展示什么数据：首先经过网关登录，token和用户id保存在header，后台通过header获取用户id，在个别接口通过request获取用户id，去到权限表查询相对应的地区、品牌、品类、平台、订单类型的权限，去限制sql的查询语句。\n展示什么菜单：登录后获取菜单权限\n<select id=\"selectUserRoles\" resultType=\"syscrm.SysRolesUsers\"parameterType=\"java.util.Map\">\n\t\tselect\n\t\tuserid as userId,role.roleid as roleId,role.rolename as roleName\n\t\tfrom tsys_s_userrole userrole LEFT JOIN tsys_s_role role on userrole.roleid=role.roleid\n\t\twhere userrole.userid=#{userid}\n\t</select>\n\nList<String> premissPotpyes = (List<String>) map.get(\"POTYPE\");        //根据采购单类型\nList<String> premissWarehouses = (List<String>) map.get(\"WAREHOUSE\");  //根据仓库\nList<String> premissAreas = (List<String>) map.get(\"AREA\");           //根据供应商供货地区\n     List<String> premissBrands = (List<String>) map.get(\"BRAND\");           //根据品牌\n        List<String> premissCategoryids = (List<String>) map.get(\"CATEGORY\");   //根据品类\n\n        List<String> employees = (List<String>) map.get(\"EMPLOYEE\");  //根据销售员\n        List<String> sotypeList = (List<String>) map.get(\"SOTYPE\"); //根据订单类型\n        List<String> ares = (List<String>) map.get(\"AREA\");  //根据地区\n        List<String> shop = (List<String>) map.get(\"SHOP\");  //根据店铺\n        List<String> platforms = (List<String>) map.get(\"PLATFORMS\"); //根据商品平台属性\n        List<String> brands = (List<String>) map.get(\"BRAND\"); //根据品牌\n        List<String> categorys = (List<String>) map.get(\"CATEGORY\"); //根据品类\n        invoicePool.setPremissEmployeeIds(employees);\n        invoicePool.setPremissSoTypes(sotypeList);\n        invoicePool.setPremissAreaids(ares);\n        invoicePool.setPremissPlatforms(platforms);\n        invoicePool.setPremissShopids(shop);\n        invoicePool.setPremissCategorys(categorys);\n        invoicePool.setPremissBrands(brands);\n        System.out.println(\"--------------\"+shop);\n        invoicePool.setPremissPotpyes(premissPotpyes);\n        invoicePool.setPremissWarehouses(premissWarehouses);\n        invoicePool.setPremissAreas(premissAreas);\n        invoicePool.setPremissBrands(premissBrands);\n        invoicePool.setPremissCategoryids(premissCategoryids);\n\n\n <sql id=\"premissSQL\">\n        <if test=\"premissShopids != null and premissShopids.size > 0\"><!-- 如果店铺为空则查询全部 -->\n            <bind name=\"selfpremiss\" value=\"(premissEmployeeIds != null and premissEmployeeIds.size != 0) or (premissCreatorId != null and premissCreatorId != '') or (premissShopids != null and premissShopids.size != 0)\"></bind>\n            <bind name=\"insidepremiss\" value=\"(premissPlatforms != null and premissPlatforms.size != 0) or (premissBrands != null and premissBrands.size != 0) or (premissCategorys != null and premissCategorys.size != 0) or (premissAreaids != null and premissAreaids.size != 0)\"></bind>\n\n            <if test=\"insidepremiss\">\n                and a.orderno in (\n                select sono from dblink (\n                #{saleDblink}, E'select sono from tsal_d_somaster a where\n                A.SONO IN (\n                select SONO from tsal_d_sodetail\n                <where>\n                    <if test=\"premissPlatforms != null and premissPlatforms.size != 0\">\n                        tsal_d_sodetail.goodsid in (\n                        select goodsid from dblink (\n                        ''${cimDblink}'', ''select goodsid from tcim_s_goodsmaster_platforms where platform in(\n                        <foreach collection=\"premissPlatforms\" item=\"item\"  separator=\",\"  index=\"index\">\n                            ''''${item}''''\n                        </foreach>)''\n                        ) AS tcim_s_goodsmaster_platforms (\n                        goodsid VARCHAR\n                        )\n                        )\n                    </if>\n                    <if test=\"premissBrands != null and premissBrands.size != 0\">\n                        AND tsal_d_sodetail.brandid in\n                        <foreach collection=\"premissBrands\" item=\"item\" open=\"(\" separator=\",\" close=\")\" index=\"index\">\n                            ''${item}''\n                        </foreach>\n                    </if>\n                    <if test=\"premissCategorys != null and premissCategorys.size != 0\">\n                        AND tsal_d_sodetail.categoryid in\n                        <foreach collection=\"premissCategorys\" item=\"item\" open=\"(\" separator=\",\" close=\")\" index=\"index\">\n                            ''${item}''\n                        </foreach>\n                    </if>\n                </where>\n                )  <if test=\"premissAreaids != null and premissAreaids.size != 0\">\n                AND a.areaid in\n                <foreach collection=\"premissAreaids\" item=\"item\" open=\"(\" separator=\",\" close=\")\" index=\"index\">\n                    #{item}\n                </foreach>\n            </if> or ( 1 != 1\n                <if test=\"premissEmployeeIds != null and premissEmployeeIds.size != 0 \">\n                    OR EXISTS (SELECT 1 from tsal_d_soemployee e where  a.sono = e.sono and e.employeeid in\n                    <foreach collection=\"premissEmployeeIds\" item=\"item\" open=\"(\" separator=\",\" close=\")\" index=\"index\">\n                        ''${item}''\n                    </foreach>\n                    LIMIT 1)\n                </if>\n                <if test=\"premissCreatorId != null and premissCreatorId != '' \">\n                    OR a.creatorid = ''${premissCreatorId}''\n                </if>\n                <if test=\"premissShopids != null and premissShopids.size != 0\">\n                    OR a.shopid in\n                    <foreach collection=\"premissShopids\" item=\"item\" open=\"(\" separator=\",\" close=\")\" index=\"index\">\n                        ''${item}''\n                    </foreach>\n                </if>\n                )\n                '\n                ) AS tsal_d_somaster (\n                sono VARCHAR\n                )\n                )\n            </if>\n        </if>\n        <!--  、、、、、、、、、、、、销售单权限管理 END、、、、、、、、、、、、、、  -->\n    </sql>","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:31","updateTime":"2021-05-26 00:55:31","isExist":null},{"id":2872,"question":"】网关+reids+校验token？","simplecontent":null,"content":"步骤1：前端传userName+password到后端，后端为springcloud架构，经过网关的拦截器拦截请求，拦截器在项目启动的时候@Component进行加载。\n步骤2：如果是第一次登陆，放行，进入JWT的加密生成Token阶段（还可以写入登陆用户的其他信息放在JWTmap中，之后可以利用Token来获取该用户信息），加密token需要一个随机数作为加密字段，将token的失效时间设置为一天，并且放到reids里面，设置该redis里面的token过期时间为30分钟，最后将Token返回给前端。\n步骤3：以后任何的请求都带Token到后端去请求。\n步骤4：拦截到非登陆请求，进行解密，鉴权，如果鉴权通过，更新redis里面token字段的失效时间，如果还有5分钟失效，再设置还有30分钟，目的就是让密码的过期时间变的活跃。\n大致就是以上的过程，核心代码主要在网关拦截器解密鉴权和登陆接口的加密两部分\n0，controller层的将得到的token做保存redis和设置过期时间的操作\n\n用户信息在token，后台获取header的token解密出用户id，加密使用随机数不影响解密过程\nhttps://blog.csdn.net/qq_37844454/article/details/83018516","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:31","updateTime":"2021-05-26 00:55:31","isExist":null},{"id":2860,"question":"限流算法?","simplecontent":null,"content":"计数器算法\n计数器算法采用计数器实现限流有点简单粗暴，一般我们会限制一秒钟的能够通过的请求数，比如限流qps为100，算法的实现思路就是从第一个请求进来开始计时，在接下去的1s内，每来一个请求，就把计数加1，如果累加的数字达到了100，那么后续的请求就会被全部拒绝。等到1s结束后，把计数恢复成0，重新开始计数。具体的实现可以是这样的：对于每次服务调用，可以通过AtomicLong#incrementAndGet()方法来给计数器加1并返回最新值，通过这个最新值和阈值进行比较。这种实现方式，相信大家都知道有一个弊端：如果我在单位时间1s内的前10ms，已经通过了100个请求，那后面的990ms，只能眼巴巴的把请求拒绝，我们把这种现象称为“突刺现象”\n\n漏桶算法\n漏桶算法思路很简单，水（请求）先进入到漏桶里，漏桶以一定的速度出水（接口有响应速率），当水流入速度过大会直接溢出（访问频率超过接口响应速率），然后就拒绝请求，可以看出漏桶算法能强行限制数据的传输速率。\n可见这里有两个变量，一个是桶的大小，支持流量突发增多时可以存多少的水（burst），另一个是水桶漏洞的大小（rate）。因为漏桶的漏出速率是固定的参数，所以，即使网络中不存在资源冲突（没有发生拥塞），漏桶算法也不能使流突发（burst）到端口速率。因此，漏桶算法对于存在突发特性的流量来说缺乏效率。\n\n漏桶算法为了消除\"突刺现象\"，可以采用漏桶算法实现限流，漏桶算法这个名字就很形象，算法内部有一个容器，类似生活用到的漏斗，当请求进来时，相当于水倒入漏斗，然后从下端小口慢慢匀速的流出。不管上面流量多大，下面流出的速度始终保持不变。不管服务调用方多么不稳定，通过漏桶算法进行限流，每10毫秒处理一次请求。因为处理的速度是固定的，请求进来的速度是未知的，可能突然进来很多请求，没来得及处理的请求就先放在桶里，既然是个桶，肯定是有容量上限，如果桶满了，那么新进来的请求就丢弃。\n\n在算法实现方面，可以准备一个队列，用来保存请求，另外通过一个线程池（ScheduledExecutorService）来定期从队列中获取请求并执行，可以一次性获取多个并发执行。\n这种算法，在使用过后也存在弊端：无法应对短时间的突发流量。\n\n令牌桶算法\n令牌桶算法（Token Bucket）和 Leaky Bucket 效果一样但方向相反的算法，更加容易理解。随着时间流逝，系统会按恒定 1/QPS 时间间隔（如果 QPS=100，则间隔是 10ms）往桶里加入 Token（想象和漏洞漏水相反，有个水龙头在不断的加水），如果桶已经满了就不再加了。新请求来临时，会各自拿走一个 Token，如果没有 Token 可拿了就阻塞或者拒绝服务。\n从某种意义上讲，令牌桶算法是对漏桶算法的一种改进，桶算法能够限制请求调用的速率，而令牌桶算法能够在限制调用的平均速率的同时还允许一定程度的突发调用。在令牌桶算法中，存在一个桶，用来存放固定数量的令牌。算法中存在一种机制，以一定的速率往桶中放令牌。每次请求调用需要先获取令牌，只有拿到令牌，才有机会继续执行，否则选择选择等待可用的令牌、或者直接拒绝。放令牌这个动作是持续不断的进行，如果桶中令牌数达到上限，就丢弃令牌，所以就存在这种情况，桶中一直有大量的可用令牌，这时进来的请求就可以直接拿到令牌执行，比如设置qps为100，那么限流器初始化完成一秒后，桶中就已经有100个令牌了，这时服务还没完全启动好，等启动完成对外提供服务时，该限流器可以抵挡瞬时的100个请求。所以，只有桶中没有令牌时，请求才会进行等待，最后相当于以一定的速率执行。\n实现思路：可以准备一个队列，用来保存令牌，另外通过一个线程池定期生成令牌放到队列中，每来一个请求，就从队列中获取一个令牌，并继续执行。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2861,"question":"】网关做限流？令牌桶","simplecontent":null,"content":"1.网关使用Redis和lua脚本实现了令牌桶的方式。内置的限流过滤器工厂来实现限流。\n\n在上面的配置文件，指定程序的端口为8081，配置了 redis的信息，并配置了RequestRateLimiter的限流过滤器，该过滤器需要配置三个参数：\nburstCapacity，令牌桶总容量。\nreplenishRate，令牌桶每秒填充平均速率。\nkey-resolver，用于限流的键的解析器的 Bean 对象的名字。它使用 SpEL 表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象。\nRequestRateLimiter是使用Redis来进行限流的，并在redis中存储了2个key。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2862,"question":"】网关限流的方式？Ip、接口、用户","simplecontent":null,"content":"1.可以通过KeyResolver来指定限流的Key,比如我们需要根据用户来做限流，IP来做限流等等。\nIp限流\n@Bean\npublic KeyResolver ipKeyResolver() {\n\treturn exchange -> Mono.just(exchange.getRequest().getRemoteAddress().getHostName());\n}\n用户限流\n@Bean\nKeyResolver userKeyResolver() {\n\treturn exchange -> Mono.just(exchange.getRequest().getQueryParams().getFirst(\"userId\"));\n}\n接口限流\n@Bean\nKeyResolver apiKeyResolver() {\n\treturn exchange -> Mono.just(exchange.getRequest().getPath().value());\n}","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2863,"question":"网关熔断回退?","simplecontent":null,"content":"在 Spring Cloud Gateway 中使用 Hystrix 进行回退需要增加 Hystrix 的依赖。\n内置了 HystrixGatewayFilterFactory 来实现路由级别的熔断，只需要配置即可实现熔断回退功能。\nuri: lb://user-service\npredicates:\n  - Path=/user-service/**\nfilters:\n  - name: Hystrix\nargs:\n  name: fallbackcmd\nfallbackUri: forward:/fallback\n\n@RestController\npublic class FallbackController {\n\n    @GetMapping(\"/fallback\")\n    public String fallback() {\n        return \"fallback\";\n    }\n}","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2864,"question":"网关跨域?","simplecontent":null,"content":"分别是代码配置方式和配置文件方式\n@Configuration\npublic class CorsConfig {\n\n@Bean\npublic WebFilter corsFilter() {\nreturn (ServerWebExchange ctx, WebFilterChain chain) -> {\nServerHttpRequest request = ctx.getRequest();\nif (CorsUtils.isCorsRequest(request)) {\nHttpHeaders requestHeaders = request.getHeaders();\nServerHttpResponse response = ctx.getResponse();\nHttpMethod requestMethod = requestHeaders.getAccessControlRequestMethod();\nHttpHeaders headers = response.getHeaders();\nheaders.add(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, requestHeaders.getOrigin());\nheaders.addAll(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS,\nrequestHeaders.getAccessControlRequestHeaders());\nif (requestMethod != null) {\nheaders.add(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, requestMethod.name());\n}\n\nheaders.add(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, \"true\");\nheaders.add(HttpHeaders.ACCESS_CONTROL_EXPOSE_HEADERS, \"*\");\nif (request.getMethod() == HttpMethod.OPTIONS) {\nresponse.setStatusCode(HttpStatus.OK);\nreturn Mono.empty();\n}\n}\nreturn chain.filter(ctx);\n};\n}\n}","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2865,"question":"】网关重试机制？retries：重试次数，默认值是 3 次","simplecontent":null,"content":"spring:\n  cloud:\n    gateway:\n      routes:\n        - id: zuul-encrypt-service\n  uri: lb://zuul-encrypt-service\n  predicates:\n    - Path=/data/**\n  filters:\n    - name: Retry\n  args:\n    retries: 3\nseries: SERVER_ERROR\n\nretries：重试次数，默认值是 3 次。\nseries：状态码配置（分段），符合某段状态码才会进行重试逻辑，默认值是 SERVER_ERROR，值是 5，也就是 5XX（5 开头的状态码），共有 5 个值，代码如下所示。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2866,"question":"网关过滤?","simplecontent":null,"content":"过滤掉用户上传的html文本中的脚本。\n在java项目中或许我可以选用jsoup,HtmlFilter来处理html危险脚本的问题\n\n NHtmlFilter target = new NHtmlFilter(); \n            string input = \"<div>dd</div><a id=\\\"testId\\\" href=\\\"http://code.google.com/p/nhtmlfilter\\\">nhtmlfilter</a>\"; \n            string expected = \"dd<a href=\\\"http://code.google.com/p/nhtmlfilter\\\">nhtmlfilter</a>\"; \n            string actual;\n            actual = target.filter(input);","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:30","updateTime":"2021-05-26 00:55:30","isExist":null},{"id":2858,"question":"】多少QPS才算高并发？","simplecontent":null,"content":"《一般QPS是千级》\n比如微博每天1亿多pv的系统一般也就1500QPS，5000QPS峰值。\n比如有人说：\n2C 4G机器单机一般1000QPS。\n8C 8G机器单机可承受7000QPS。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:29","updateTime":"2021-05-26 00:55:29","isExist":null},{"id":2859,"question":"TPS和QPS的区别和理解?","simplecontent":null,"content":"QPS：Queries Per Second意思是“每秒查询率”，是一台服务器每秒能够相应的查询次数，是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准。\n\nTPS：是TransactionsPerSecond的缩写，也就是事务数/秒。它是软件测试结果的测量单位。一个事务是指一个客户机向服务器发送请求然后服务器做出反应的过程。客户机在发送请求时开始计时，收到服务器响应后结束计时，以此来计算使用的时间和完成的事务个数，\n\n个人理解如下：\n\n1、Tps即每秒处理事务数，包括了\n\n1）用户请求服务器\n\n2）服务器自己的内部处理\n\n3）服务器返回给用户\n\n这三个过程，每秒能够完成N个这三个过程，Tps也就是3；\n\n2、Qps基本类似于Tps，但是不同的是，对于一个页面的一次访问，形成一个Tps；但一次页面请求，可能产生多次对服务器的请求，服务器对这些请求，就可计入“Qps”之中。\n\n例如：访问一个页面会请求服务器3次，一次放，产生一个“T”，产生3个“Q”","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:29","updateTime":"2021-05-26 00:55:29","isExist":null},{"id":2850,"question":"】Eureka的自我保护机制是如何？在15分钟内超过85%的节点都没有正常的心跳，不再从注册列表中移除过期的服务、eureka 能接受新服务的注册和查询请求，但不会被同步到其他节点，当网络稳定时当前实例新的注册信息会被同步到其他节点","simplecontent":null,"content":"如果在15分钟内超过85%的节点都没有正常的心跳，那么eureka就认为客户端与注册中心出现了网络故障，此时会出现如下几种情况：\n\neureka 不再从注册列表中移除因为长时间没收到心跳而应该过期的服务。\neureka 仍然能够接受新服务的注册和查询请求，但是不会被同步到其他节点上(即保证当前节点依然可用)\n当网络稳定时，当前实例新的注册信息会被同步到其他节点中，因此，eureka可以很好的应对网络故障导致部分节点失去联系的情况而不会像zk那样使整个注册服务瘫痪。\n————————————————\n版权声明：本文为CSDN博主「ele」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/zzaric/article/details/102184865","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2851,"question":"】负载均衡后，某个服务挂掉后保证数据一致性？自我保护机制，不会剔除服务注册，而是等待其修复","simplecontent":null,"content":"由于Eureka拥有自我保护机制，当其注册表里服务因为网络或其他原因出现故障而关停时，Eureka不会剔除服务注册，而是等待其修复。这是AP的一种实现。 \n为了让其有精准的 CP健康检查，可以采取让其剔除不健康节点。\nserver端:\neureka.server.enable-self-preservation//（设为false，关闭自我保护主要）\neureka.server.eviction-interval-timer-in-ms//清理间隔（单位毫秒，默认是60*1000）\nclient端：\neureka.client.healthcheck.enabled = true//开启健康检查（需要spring-boot-starter-actuator依赖）\neureka.instance.lease-renewal-interval-in-seconds =10//租期更新时间间隔（默认30秒）\neureka.instance.lease-expiration-duration-in-seconds =30//租期到期时间（默认90秒）\n\n\n 优点：当服务与注册中心由于某个原因断开的时候，服务与服务之间还可以连接，这时候eureka不会立刻清理，依旧会对改微服的信息进行保存。\n 缺点：当服务与注册中心由于某个原因断开的时候，服务与服务之间也不可以连接，这时候可能会带坏其他服务器。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2852,"question":"】ribbon负载均衡算法有哪些？随机、轮询、重试、最低并发、可用过滤、响应时间加权","simplecontent":null,"content":"随机策略：RandomRule\n轮询策略：RoundRobinRule。注：Ribbon默认策略\n重试策略：RetryRule\n最低并发策略：BestAvailableRule\n可用过滤策略：AvailabilityFilteringRule\n响应时间加权策略：WeightedResponseTimeRule。（原先的ResponseTimeWeightedRule已废弃）\n区域权衡策略：ZoneAvoidanceRule","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2853,"question":"】哪一种负载均衡策略更好？最低并发","simplecontent":null,"content":"最低并发","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2854,"question":"结合测试结果，分析ribbon各种策略的适用情况及性能?","simplecontent":null,"content":"随机策略：这个策略一般般，吞吐量不高也不低，耗时偏高，算是比较中庸那种。\n轮询策略：吞吐量不高，耗时偏高。\n重试策略：说实话，这个策略测试几轮下来没啥感觉，就算把某个提供服务的节点给关闭导致故障，也没见他有什么优势。\n最低并发策略：这个策略给我的印象非常好，找使用率低的节点请求服务，那肯定是最好的啊，并且平均耗时也是最低的，5000个请求最低6秒就完成。一般情况下比较推荐这种策略。\n可用过滤策略：这个在测试中，效果是仅次于最低并发策略的。\n响应时间加权策略：因为我都是在本地测试，本地同一台电脑不同端口，实现也没单独某个服务器做延时什么的，没有测出个结果来，建议大家可以在某些提供服务的节点加一些耗时操作，看看效果。\n区域权衡策略：这个我就没测了。\n\n最低并发策略，一般情况下，还是使用最低并发策略，这个性能比默认的轮询策略高很多。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2855,"question":"】分布式，高并发，多线程之间有啥区别?","simplecontent":null,"content":"《多台机器部署、大流量、某个程序多个线程处理》\n1. 什么是分布式?\n 分布式是一个概念，是为了解决单个物理服务器容量和性能瓶颈问题而采用的优化手段。该领域需要解决的问题很多，在不同的技术层面上，又包含：分布式文件系统，分布式数据库，分布式缓存，分布式计算等等，一些名词，如：Hadoop, zookeeper,MQ等都跟分布式有关。从理念上讲，分布式的实现有两种方式：水平扩展， 当一台机器的容量抗不住的时候，需要增加机器的方式，将流量平均到所有服务器上，所有机器都可以提供相当的服务；.垂直扩展，前端有多种需求查询时，一台机器扛不住，可以将不同的需求分发到不同的机器上，比如A机器处理余票查询的时候，B机器可以处理支付请求等。\n2. 什么是高并发\n相对于分布式来讲，高并发在解决的问题上会集中一些，其反应的是同时有多少流量进来。比如：在线直播，秒杀等，同时有上万人观看，参抢。高并发可以用分布式来解决，将并发的流量分到不同的物理服务器上。但除此外，还可以有很多其他的优化手段，比如：使用缓存，将所有的，静态内容放到CDN等。 还可以使用多线程技术将一台服务的服务能力最大化。\n3. 什么是多线程\n多线程是指从软件或硬件上实现多个线程并发执行的技术。它更多的是解决CPU调度多个进程的问题，从而让这些进程看上去是同时执行。这几个概念中，多线程解决的问题是很明确的，手动也是比较单一的，基本上遇到的最大问题就是线程安全。这JAVA语言中，需要对JVM内存模型，指令重排序等深入了解，才能写出一份高质量的多线程代码。\n高并发:\n相对于分布式来讲，高并发在解决的问题上会集中一些，其反应的是同时有多少量：比如在线直播服务，同时有上万人观看。\n高并发可以通过分布式技术去解决，将并发流量分到不同的物理服务器上。\n但除此之外，还可以有很多其他优化手段：比如使用缓存系统，将所有的，静态内容放到CDN等；还可以使用多线程技术将一台服务器的服务能力最大化。\n \n多线程:\n多线程是指从软件或者硬件上实现多个线程并发执行的技术，它更多的是解决CPU调度多个进程的问题，从而让这些进程看上去是同时执行（实际是交替运行的）。\n使用同步和线程池","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2856,"question":"】什么是凝聚力？","simplecontent":null,"content":"模块内部元素所属的程度被认为是凝聚力。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:28","updateTime":"2021-05-26 00:55:28","isExist":null},{"id":2844,"question":"】如果在15分钟内超过85%的节点都没有正常的心跳会怎样？不再移除服务","simplecontent":null,"content":"《不再移除服务》\n那么Eureka就认为客户端与注册中心出现了网络故障,此时会出现以下几种情况\n\n1, Eureka不再从注册列表中移除因为长时间没收到心跳而应该过期的服务（是不是哪怕使用代码也剔除不了）\n\n2.Eureka仍然能够接受新服务的注册和查询请求,但是不会被同步到其它节点上(即保证当前节点依然可用)\n\n3,当网络稳定时,当前实例新的注册信息会被同步到其它节点中.\n\n因此, Eureka可以很好的应对因网络故障导致部分节点失去联系的情况,而不会像zookeeper那样便整个注册服务瘫痪\n————————————————\n版权声明：本文为CSDN博主「beyond丿」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/qq_41594146/article/details/86608190","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:27","updateTime":"2021-05-26 00:55:27","isExist":null},{"id":2845,"question":"】eureka 的几种主动下线服务的方式?1. 直接停掉服务 2.发送delete 请求http","simplecontent":null,"content":"1. 直接停掉服务。\n\n默认情况下，如果Eureka Server在90秒没有收到Eureka客户的续约，它会将实例从其注册表中删除。但这种做法的不好之处在于， 客户端已经停止了运行，但仍然在注册中心的列表中。 虽然通过一定的负载均衡策略或使用熔断器可以让服务正常进行，但有没有方法让注册中心马上知道服务已经下线呢？ \n\n\n\n2.为了让注册中心马上知道服务要下线， 可以向eureka 注册中心发送delete 请求\n\n格式为 /eureka/apps/{application.name}/\n\n值得注意的是，Eureka客户端每隔一段时间（默认30秒）会发送一次心跳到注册中心续约。如果通过这种方式下线了一个服务，而没有及时停掉的话，该服务很快又会回到服务列表中。\n所以，可以先停掉服务，再发送请求将其从列表中移除。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:27","updateTime":"2021-05-26 00:55:27","isExist":null},{"id":2846,"question":"】Eurake心跳机制是如何？每隔一段时间（默认30秒）会发送一次心跳到注册中心续约","simplecontent":null,"content":"每隔一段时间（默认30秒）会发送一次心跳到注册中心续约","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:27","updateTime":"2021-05-26 00:55:27","isExist":null},{"id":2847,"question":"配置中心原理?","simplecontent":null,"content":"基本思路都是在程序启动时将远端配置拉取到本地作为环境变量来使用，但这些是针对客户端角度来说的。\n\nspring:\n  application:\n    name: spring-cloud-config-server\n  cloud:\n    config:\n      server:\n        git:\n          uri: https://gitee.com/zhuliheaa_admin/haha.git               \nsearch-paths: config-repo                                      \nusername:3102957469@qq.com                                                password: 147asd    \n配置中心服务端：为配置客户端提供对应的配置信息，配置信息的来源是配置仓库。应用启动时，会从配置仓库拉取配置信息缓存到本地仓库中。\n配置中心客户端：应用启动时从配置服务端拉取配置信息。\n配置仓库：为配置中心服务端提供配置信息存储，Spring Cloud Config 默认是使用git作为仓库的。\n\n配置中心服务端主要做了几件事情：连接配置仓库、拉取远程配置&本地缓存、对外提供API接口服务。\n————————————————\n版权声明：本文为CSDN博主「glmapper_2018」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/sinat_25518349/article/details/86323476","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:27","updateTime":"2021-05-26 00:55:27","isExist":null},{"id":2848,"question":"】如何实现Spring Cloud微服务挂掉之后自动重启？配合shell脚本来实现自动重启","simplecontent":null,"content":"微服务虽然强大，应该还没有自行起死回生的本事，需要借助于外部命令来实现自动重启。下面就以Eureka为例配合shell脚本来实现自动重启。\n脚本文件和jar包放在同一个目录下。\n这里是在while死循环下，每隔10秒检测一次我们的eureka进程，如果进程存在则打印The service is alive!，如果进程失败就执行重启命令。当然，我们也可以指定这段shell开机运行，这样就可以省去很多事情。\n#!/bin/sh\nwhile :\ndo\nrun=$(ps -ef |grep \"clouddo-eureka-0.0.1-SNAPSHOT\" |grep -v \"grep\")\nif [ \"$run\" ] ; then\necho \"The service is alive!\"\nelse\necho \"The service was shutdown!\"\necho \"Starting service ...\"\nnohup java -jar $PWD/clouddo-eureka-0.0.1-SNAPSHOT.jar&\necho \"The service was started!\"\nfi\nsleep 10\ndone\n3、杀掉服务：\n将服务kill 掉 kill -9 xxx\n4、服务自动重启\nxxx 3829 9.4 14.3 2635272 294356 ? Sl 11:04 0:45 java -jar clouddo-blackdir-0.0.1-SNAPSHOT.jar","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:27","updateTime":"2021-05-26 00:55:27","isExist":null},{"id":2849,"question":"】Eureka 如何保证AP？节点挂掉不会影响正常节点的工作，剩余的节点能提供注册和查询服务的可用性","simplecontent":null,"content":"eureka 看明白了这一点，因此在设计时就先保证可用性。Eureka各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而eureka客户端再向某个eureka服务端注册时如果发现连接失败，则会自动切换至其他节点。只要有一台eureka server 是ok的，就能保证服务可用(保证服务可用)。只不过查询到的信息可能不是最新的(不保证强一致性)。除此之外，eureka还有一种自我保护机制，上篇中也?","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:27","updateTime":"2021-05-26 00:55:27","isExist":null},{"id":2837,"question":"Zookeeper的一致性?","simplecontent":null,"content":"那么我们继续分析一下，ZooKeeper通过Master选举来帮助分布式系统解决单点故障， 保证该系统中每时每刻只有一个Master为分布式系统提供服务。也就是说分布式的单点问题交给了ZooKeeper来处理，不知道大家此时有没有发现一 个问题——\"故障转移到了ZooKeeper身上\"。大家看一下图就会发现，如果我们的ZooKeeper只用一台机器来提供服务，若这台机器挂了，那么 该分布式系统就直接变成双Master模式了，那么我们在分布式系统中引入ZooKeeper也就失去了意义。那么这也就意味着，ZooKeeper在其实现的过程中要做一些可用性和恢复性的保证。这样才能让我们放心的以ZooKeeper为起点来构建我们的分布式系统，来达到节省成本和减少bug的目的。\nZooKeeper通过复制来实现高可用性，只要集合体中半数以上的机器处于可用状态，它就能够提供服务。例如，在一个有5个节点的集合体中，每个Follower节点的数据都是Leader节点数据的副本，也就是说我们的每个节点的数据视图都是一样的，这样就可以有五个节点提供ZooKeeper服务。并且集合体中任意2台机器出现故障，都可以保证服务继续，因为剩下的3台机器超过了半数。\n注意，6个节点的集合体也只能够容忍2台机器出现故障，因为如果3台机器出现故障，剩下的3台机器没有超过集合体的半数。出于这个原因，一个集合体通常包含奇数台机器。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2838,"question":"Eureka的弱一致性?","simplecontent":null,"content":"随着微服务的规模越来越大，Eureka的便利性越来越明显。访问服务只需要通过Eureka就可以了。但是Eureka也有它不好的地方，就是弱一致性，Eureka只能保证最终一致性，不能保证强一致性。由于异步性，Eureka Client从Eureka Server获取的微服务节点会有失效的。这样，当访问失效的节点就会产生错误。所以开发的时候最好采用重试机制减少出错的可能。是最终一致性更加趋向于强一致性。\n————————————————\n版权声明：本文为CSDN博主「wk022」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/wk022/article/details/81163860","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2839,"question":"Base理论是什么?","simplecontent":null,"content":"全称：Basically Available(基本可用)，Soft state（软状态）,和 Eventually consistent（最终一致性）三个短语的缩写\nBase 理论是对 CAP 中一致性和可用性权衡的结果，其来源于对大型互联网分布式实践的总结，是基于 CAP 定理逐步演化而来的。其核心思想是：","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2840,"question":"Basically Available(基本可用)是什么?","simplecontent":null,"content":"什么是基本可用呢？假设系统，出现了不可预知的故障，但还是能用，相比较正常的系统而言：\n\n响应时间上的损失：正常情况下的搜索引擎 0.5 秒即返回给用户结果，而基本可用的搜索引擎可以在 1 秒作用返回结果。\n\n\n功能上的损失：在一个电商网站上，正常情况下，用户可以顺利完成每一笔订单，但是到了大促期间，为了保护购物系统的稳定性，部分消费者可能会被引导到一个降级页面。\n3. Soft state（软状态）\n什么是软状态呢？相对于原子性而言，要求多个节点的数据副本都是一致的，这是一种 “硬状态”。\n软状态指的是：允许系统中的数据存在中间状态，并认为该状态不影响系统的整体可用性，即允许系统在多个不同节点的数据副本存在数据延时。\n4. Eventually consistent（最终一致性）\n上面说软状态，然后不可能一直是软状态，必须有个时间期限。在期限过后，应当保证所有副本保持数据一致性。从而达到数据的最终一致性。这个时间期限取决于网络延时，系统负载，数据复制方案设计等等因素。\n稍微官方一点的说法就是：\n系统能够保证在没有其他新的更新操作的情况下，数据最终一定能够达到一致的状态，因此所有客户端对系统的数据访问最终都能够获取到最新的值。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2841,"question":"最终一致性分为 5 种：?","simplecontent":null,"content":"1. 因果一致性（Causal consistency）\n指的是：如果节点 A 在更新完某个数据后通知了节点 B，那么节点 B 之后对该数据的访问和修改都是基于 A 更新后的值。于此同时，和节点 A 无因果关系的节点 C 的数据访问则没有这样的限制。\n2. 读己之所写（Read your writes）\n这种就很简单了，节点 A 更新一个数据后，它自身总是能访问到自身更新过的最新值，而不会看到旧值。其实也算一种因果一致性。\n3. 会话一致性（Session consistency）\n会话一致性将对系统数据的访问过程框定在了一个会话当中：系统能保证在同一个有效的会话中实现 “读己之所写” 的一致性，也就是说，执行更新操作之后，客户端能够在同一个会话中始终读取到该数据项的最新值。\n4. 单调读一致性（Monotonic read consistency）\n单调读一致性是指如果一个节点从系统中读取出一个数据项的某个值后，那么系统对于该节点后续的任何数据访问都不应该返回更旧的值。\n5. 单调写一致性（Monotonic write consistency）\n指一个系统要能够保证来自同一个节点的写操作被顺序的执行。\n然而，在实际的实践中，这 5 种系统往往会结合使用，以构建一个具有最终一致性的分布式系统。实际上，不只是分布式系统使用最终一致性，关系型数据库在某个功能上，也是使用最终一致性的，比如备份，数据库的复制过程是需要时间的，这个复制过程中，业务读取到的值就是旧的。当然，最终还是达成了数据一致性。这也算是一个最终一致性的经典案例。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2842,"question":"Eureka集群保持数据一致性?","simplecontent":null,"content":"分布式数据复制方式\n分布式系统的数据在多个副本之间的复制方式，主要有\n主从复制，Master-Slave模式；所有写操作提交到主服务，再由主服务更新到从服务；写压力集中在主服务上，从服务分担读请求；\n对等复制，Peer to Peer，副本间不分主从，任何副本都可以接受写操作，然后副本间进行数据更新；但副本间数据同步时可能产生数据冲突；\nEureka使用对等复制\nEureka同步过程\nEureka Server也是一个Client，在启动时，通过请求其中一个节点（Server），将自身注册到Server上，并获取注册服务信息；\n每当Server信息变更后（client发起注册，续约，注销请求），就将信息通知给其他Server，来保持数据同步；\n在执行同步（复制）操作时，可能会有数据冲突，是通过lastDirtyTimestamp，最近一次变更时间来保证是最新数据；\n比如 Eureka Server A 向 Eureka Server B 复制数据，数据冲突有2种情况：\n（1）A 的数据比 B 的新，B 返回 404，A 重新把这个应用实例注册到 B。\n（2）A 的数据比 B 的旧，B 返回 409，要求 A 同步 B 的数据。\n心跳检测（续约），来进行数据的最终修复","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2843,"question":"】关闭自我保护自制会怎样？服务宕机后立马剔除","simplecontent":null,"content":"《服务宕机后立马剔除》\n在eureka配置，后台服务关闭后，立马剔除了服务\neureka:\n  server:\n    enable-self-preservation: false","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:26","updateTime":"2021-05-26 00:55:26","isExist":null},{"id":2832,"question":"】什么是服务降级呢？下游的服务因为某种原因响应过慢，下游服务主动停掉一些不太重要的业务","simplecontent":null,"content":"这里有两种场景:\n当下游的服务因为某种原因响应过慢，下游服务主动停掉一些不太重要的业务，释放出服务器资源，增加响应速度！\n当下游的服务因为某种原因不可用，上游主动调用本地的一些降级逻辑，避免卡顿，迅速返回给用户！","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:25","updateTime":"2021-05-26 00:55:25","isExist":null},{"id":2833,"question":"】服务熔断默认参数？滑动窗口的大小，默认为20；错误率，默认50%；时间默认为5000","simplecontent":null,"content":"//滑动窗口的大小，默认为20\ncircuitBreaker.requestVolumeThreshold \n//过多长时间，熔断器再次检测是否开启，默认为5000，即5s钟\ncircuitBreaker.sleepWindowInMilliseconds \n//错误率，默认50%\ncircuitBreaker.errorThresholdPercentage\n每当20个请求中，有50%失败时，熔断器就会打开，此时再调用此服务，将会直接返回失败，不再调远程服务。直到5s钟之后，重新检测该触发条件，判断是否把熔断器关闭，或者继续打开。\n这些属于框架层级的实现，我们只要实现对应接口就好！","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:25","updateTime":"2021-05-26 00:55:25","isExist":null},{"id":2834,"question":"】Hystrix半闭开合状态指的是什么？开始是关闭，错误到达阀值就开启，超时后变成半开，请求没错误就全关","simplecontent":null,"content":" \n最开始处于closed状态，一旦检测到错误到达一定阈值，便转为open状态；\n这时候会有个 reset timeout，到了这个时间了，会转移到half open状态；\n尝试放行一部分请求到后端，一旦检测成功便回归到closed状态，即恢复服务；\n业内目前流行的熔断器很多，例如阿里出的Sentinel,以及最多人使用的Hystrix","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:25","updateTime":"2021-05-26 00:55:25","isExist":null},{"id":2835,"question":"Hystrix的原理?","simplecontent":null,"content":"服务雪崩：一个接口大量访问，导致其他服务不可用\nOK，我们从服务雪崩开始讲起！假设存在如下调用链\n\n \n而此时，Service A的流量波动很大，流量经常会突然性增加！那么在这种情况下，就算Service A能扛得住请求，Service B和Service C未必能扛得住这突发的请求。\n此时，如果Service C因为抗不住请求，变得不可用。那么Service B的请求也会阻塞，慢慢耗尽Service B的线程资源，Service B就会变得不可用。紧接着，Service A也会不可用\n\n服务熔断：当下游的服务因为某种原因突然变得不可用或响应过慢，上游服务为了保证自己整体服务的可用性，不再继续调用目标服务，直接返回，快速释放资源。如果目标服务情况好转则恢复调用。保护本系统。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:25","updateTime":"2021-05-26 00:55:25","isExist":null},{"id":2836,"question":"接口的幂等性的概念?","simplecontent":null,"content":"幂等的意思是同一个操作，重复执行多次，跟执行一次结果一致。消息幂等，即消息发送操作对于消息消费来说是幂等。也就是相同的消息发送多次，跟发送一次是一样的，这个消息只会被消费一次。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:25","updateTime":"2021-05-26 00:55:25","isExist":null},{"id":2827,"question":"】隔离模式?线程池隔离模式、信号量隔离模式","simplecontent":null,"content":"Hystrix提供了两种隔离模式：线程池隔离模式、信号量隔离模式。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:24","updateTime":"2021-05-26 00:55:24","isExist":null},{"id":2828,"question":"】熔断器原理？断路器处于关闭、错误超过阀值断路器处于打开，拒绝所有请求，一段时间变成半开闭，如果部分请求成功则关闭断路器","simplecontent":null,"content":"- 开始时断路器处于关闭状态(Closed)。\n- 如果调用持续出错、超时或失败率超过一定限制，断路器打开进入熔断状态，后续一段时间内的所有请求都会被直接拒绝。\n- 一段时间以后，保护器会尝试进入半熔断状态(Half-Open)，允许少量请求进来尝试；如果调用仍然失败，则回到熔断状态，如果调用成功，则回到电路闭合状态;","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:24","updateTime":"2021-05-26 00:55:24","isExist":null},{"id":2829,"question":"】Hystrix能做什么？隔离、服务降级、熔断","simplecontent":null,"content":"通过hystrix可以解决雪崩效应问题，它提供了资源隔离、降级机制、融断、缓存等功能。\n资源隔离：包括线程池隔离和信号量隔离，限制调用分布式服务的资源使用，某一个调用的服务出现问题不会影响其他服务调用。\n降级机制：超时降级、资源不足时(线程或信号量)降级，降级后可以配合降级接口返回托底数据。\n融断：当失败率达到阀值自动触发降级(如因网络故障/超时造成的失败率高)，熔断器触发的快速失败会进行快速恢复。\n缓存：返回结果缓存，后续请求可以直接走缓存。\n请求合并：可以实现将一段时间内的请求（一般是对同一个接口的请求）合并，然后只对服务提供者发送一次请求","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:24","updateTime":"2021-05-26 00:55:24","isExist":null},{"id":2830,"question":"】线程池隔离和信号量隔离区别?每个方法一个线程池、原子计数器统计方法使用线程数","simplecontent":null,"content":"《线程池隔离、信号量隔离》\n《每个方法一个线程池、原子计数器统计方法使用线程数》\n线程池隔离：\n通过每次都开启一个单独线程运行。它的隔离是通过线程池，即每个隔离粒度都是个线程池，互相不干扰\n线程池隔离方式，等于多了一层的保护措施，可以通过hytrix直接设置超时，超时后直接返回。\n\n隔离的方式一般使用两种\n线程池隔离模式：使用一个线程池来存储当前的请求，线程池对请求作处理，设置任务返回处理超时时间，堆积的请求堆积入线程池队列。这种方式需要为每个依赖的服务申请线程池，有一定的资源消耗，好处是可以应对突发流量（流量洪峰来临时，处理不完可将数据存储到线程池队里慢慢处理）\n\n信号量隔离模式：使用一个原子计数器（或信号量）来记录当前有多少个线程在运行，请求来先判断计数器的数值，若超过设置的最大线程个数则丢弃改类型的新请求，若不超过则执行计数操作请求来计数器+1，请求返回计数器-1。这种方式是严格的控制线程且立即返回模式，无法应对突发流量（流量洪峰来临时，处理的线程超过数量，其他的请求会直接返回，不继续去请求依赖的服务）\n本质上是跟主线程共用一个线程，只是这里增加了一个最大并发数的限制(信号量)\n线程隔离的优点:\n[1]:使用线程可以完全隔离第三方代码,请求线程可以快速放回。\n[2]:当一个失败的依赖再次变成可用时，线程池将清理，并立即恢复可用，而不是一个长时间的恢复。\n[3]:可以完全模拟异步调用，方便异步编程。\n线程隔离的缺点:\n[1]:线程池的主要缺点是它增加了cpu，因为每个命令的执行涉及到排队(默认使用SynchronousQueue避免排队)，调度和上下文切换。\n[2]:对使用ThreadLocal等依赖线程状态的代码增加复杂性，需要手动传递和清理线程状态。\n\nNOTE: Netflix公司内部认为线程隔离开销足够小，不会造成重大的成本或性能的影响。\nNetflix 内部API 每天100亿的HystrixCommand依赖请求使用线程隔，每个应用大约40多个线程池，每个线程池大约5-20个线程。\n(2)信号隔离\n信号隔离也可以用于限制并发访问，防止阻塞扩散, 与线程隔离最大不同在于执行依赖代码的线程依然是请求线程（该线程需要通过信号申请）,\n如果客户端是可信的且可以快速返回，可以使用信号隔离替换线程隔离,降低开销.\n信号量的大小可以动态调整, 线程池大小不可以.","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:24","updateTime":"2021-05-26 00:55:24","isExist":null},{"id":2831,"question":"】熔断线程池默认数量？10","simplecontent":null,"content":"默认的策略就是线程池，默认是10\n\n线程池其实最大的好处就是对于网络访问请求，如果有超时的话，可以避免调用线程阻塞住\n\n而使用信号量的场景，通常是针对超大并发量的场景下，每个服务实例每秒都几百的QPS，那么此时你用线程池的话，线程一般不会太多，可能撑不住那么高的并发，如果要撑住，可能要耗费大量的线程资源，那么就是用信号量，来进行限流保护\n隔离方式\t是否支持超时\t是否支持熔断\t隔离原理\t是否是异步调用\t资源消耗\n线程池隔离\t支持，可直接返回\t支持，当线程池到达maxSize后，再请求会触发fallback接口进行熔断\t每个服务单独用线程池\t可以是异步，也可以是同步。看调用的方法\t大，大量线程的上下文切换，容易造成机器负载高\n信号量隔离\t不支持，如果阻塞，只能通过调用协议（如：socket超时才能返回）\t支持，当信号量达到maxConcurrentRequests后。再请求会触发fallback\t通过信号量的计数器\t同步调用，不支持异步\t \n小，只是个计数器","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:24","updateTime":"2021-05-26 00:55:24","isExist":null},{"id":2823,"question":"】Hystrix异常机制处理？执行异常、超时、断路器打开、线程池拒绝、信号量拒绝","simplecontent":null,"content":"在hystrix中，有5种异常会被fallback：\nFAILURE：执行失败，抛出异常。\nTIMEOUT：执行超时。\nSHORT_CIRCUITED：断路器打开。\nTHREAD_POOL_REJECTED：线程池拒绝。\nSEMAPHORE_REJECTED：信号量拒绝。\n有一种异常是不会触发fallback的，并且也不会被熔断，它是BAD_REQUEST，但是它会跑出HystrixBadRequestException，这种异常一般对应的是由非法参数或者一些非系统异常引起的，对于这种异常，可以根据响应创建对应的异常进行异常封装或者直接处理。\nreturn new HystrixBadRequestException(error);","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:23","updateTime":"2021-05-26 00:55:23","isExist":null},{"id":2824,"question":"】熔断和隔离区别？熔断是断开服务、隔离是将方法进行隔离","simplecontent":null,"content":"解决或缓解服务雪崩的方案\n一般情况对于服务依赖的保护主要有3中解决方案：\n（1）熔断模式：这种模式主要是参考电路熔断，如果一条线路电压过高，保险丝会熔断，防止火灾。放到我们的系统中，如果某个目标服务调用慢或者有大量超时，此时，熔断该服务的调用，对于后续调用请求，不在继续调用目标服务，直接返回，快速释放资源。如果目标服务情况好转则恢复调用。\n（2）隔离模式：这种模式就像对系统请求按类型划分成一个个小岛的一样，当某个小岛被火少光了，不会影响到其他的小岛。例如可以对不同类型的请求使用线程池来资源隔离，每种类型的请求互不影响，如果一种类型的请求线程资源耗尽，则对后续的该类型请求直接返回，不再调用后续资源。这种模式使用场景非常多，例如将一个服务拆开，对于重要的服务使用单独服务器来部署，再或者公司最近推广的多中心。\n（3）限流模式：上述的熔断模式和隔离模式都属于出错后的容错处理机制，而限流模式则可以称为预防模式。限流模式主要是提前对各个类型的请求设置最高的QPS阈值，若高于设置的阈值则对该请求直接返回，不再调用后续资源。这种模式不能解决服务依赖的问题，只能解决系统整体资源分配问题，因为没有被限流的请求依然有可能造成雪崩效应。\n作者：Wumpus\n链接：https://www.jianshu.com/p/7d587b87d9de","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:23","updateTime":"2021-05-26 00:55:23","isExist":null},{"id":2825,"question":"】熔断三个模块是什么？判断算法、熔断恢复机制、熔断报警","simplecontent":null,"content":"熔断请求判断算法、熔断恢复机制、熔断报警\n（1）熔断请求判断机制算法：使用无锁循环队列计数，每个熔断器默认维护10个bucket，每1秒一个bucket，每个blucket记录请求的成功、失败、超时、拒绝的状态，默认错误超过50%且10秒内超过20个请求进行中断拦截。\n（2）熔断恢复：对于被熔断的请求，每隔5s允许部分请求通过，若请求都是健康的（RT<250ms）则对请求健康恢复。\n（3）熔断报警：对于熔断的请求打日志，异常请求超过某些设定则报警","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:23","updateTime":"2021-05-26 00:55:23","isExist":null},{"id":2826,"question":"】Hystrix作用？限流、熔断、隔离、降级","simplecontent":null,"content":"《限流、熔断、隔离、降级》","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:23","updateTime":"2021-05-26 00:55:23","isExist":null},{"id":2819,"question":"】BASE理论是什么？基本可用、软状态、最终一致性","simplecontent":null,"content":"BASE是Basically Available（基本可用）、Soft state（软状态）和Eventually consistent（最终一致性）三个短语的简写，BASE是对CAP中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的结论，是基于CAP定理逐步演化而来的，其核心思想是即使无法做到强一致性（Strong consistency），但每个应用都可以根据自身的业务特点，采用适当的方式来使系统达到最终一致性（Eventual consistency）\n基本可用：\n指分布式系统在出现故障的时候，保证核心可用，允许损失部分可用性。\n例如，电商在做促销时，为了保证购物系统的稳定性，部分消费者可能会被引导到一个降级的页面。\n软状态：\n指允许系统中的数据存在中间状态，并认为该中间状态不会影响系统整体可用性，即允许系统不同节点的数据副本之间进行同步的过程存在时延\n最终一致性：\n最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能达到一致的状态。\nACID 要求强一致性，通常运用在传统的数据库系统上。而 BASE 要求最终一致性，通过牺牲强一致性来达到可用性，通常运用在大型分布式系统中。\n在实际的分布式场景中，不同业务单元和组件对一致性的要求是不同的，因此 ACID 和 BASE 往往会结合在一起使用","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:22","updateTime":"2021-05-26 00:55:22","isExist":null},{"id":2820,"question":"】@HystrixCommand的位置？可以在dao、service、controller层各个类的方法上","simplecontent":null,"content":"可以在dao、service、controller层各个类的方法上","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:22","updateTime":"2021-05-26 00:55:22","isExist":null},{"id":2821,"question":"】接口超时多长时间调用熔断？默认是1秒没返回就调用降级","simplecontent":null,"content":"默认是1秒没返回就调用降级","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:22","updateTime":"2021-05-26 00:55:22","isExist":null},{"id":2822,"question":"Hystrix代码?","simplecontent":null,"content":"线程池名称是不一样的。默认10个线程","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:22","updateTime":"2021-05-26 00:55:22","isExist":null},{"id":2815,"question":"feignClient传参的一个坑类型?","simplecontent":null,"content":"feignClient默认参数请求类型是\nheader：{ 'content-type':'application/json'  }, @RequestBody \n小程序的post请求的header必须为\n  header：{ 'content-type':'application/x-www-form-urlencoded'  }, \n导致后台为@RequestBody接收不到参数，","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:21","updateTime":"2021-05-26 00:55:21","isExist":null},{"id":2816,"question":"】在eureka宕机的情况下，服务之间在何种情况下无法继续进行相互访问？所有服务停止、ip端口停止","simplecontent":null,"content":"《所有服务停止、ip端口停止》\n\t所有服务全部停止，再重新启动除eureka之外的服务；\n\t修改消费者或提供者IP，端口，服务名称等映射信息的情况下。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:21","updateTime":"2021-05-26 00:55:21","isExist":null},{"id":2817,"question":"】在eureka宕机的情况下，消费者或者提供者服务重启后，消费者是否可以继续访问提供者?可以，虽然重启但是本地还有列表缓存信息","simplecontent":null,"content":"在eureka宕机未启动的情况下，当消费者重新启动后，无法从eureka中拉取其他服务的映射信息，因此消费者是无法再访问提供者的\n\t不过，当提供者重新启动后，由于消费者还继续保存着与提供者之间的映射信息，而且提供者的信息并未发生改变，因此消费者还是可以继续访问提供者的","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:21","updateTime":"2021-05-26 00:55:21","isExist":null},{"id":2818,"question":"】如果eureka突然宕机的情况下，会出现什么情况呢，服务之间还能不能正常访问？可以","simplecontent":null,"content":"《可以》\n\t答案是**可以**\n\t原因：在启动消费者和提供者的时候，eureka注册中心是正常运行的，因此可以将各个消费者和提供者可以正常订阅。当eureka突然宕机的时候，各个提供者和消费者都已经保存有相互间的服务名称与ip映射，所以相互访问没有问题。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:21","updateTime":"2021-05-26 00:55:21","isExist":null},{"id":2808,"question":"Actuator查看哪些信息?","simplecontent":null,"content":"6","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2809,"question":"】springCloud监控中心有哪些?Actuator、UI","simplecontent":null,"content":"《Actuator、UI》\nActuator监控中心+AdminUI界面管理\n\n       针对微服务器监控、服务器内存变化（堆内存，线程，日志管理等）、检测服务配置连接池是否可用（模拟访问、懒加载）、统计现有Bean（通过Spring容器）、Http接口（@RequestMapping）的一系列数据管理。Actuator监控应用只通过JSON形式返回数据统计结果，没有UI界面处理；AdminUI则内置Actuator服务监控，并对返回JSON数据进行图形化处理展示。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2810,"question":"】监控中心哪些参数？详细的Health信息、内存信息、JVM信息、垃圾回收信息、各种配置信息（比如数据源、缓存列表和命中率）等，还可以直接修改logger的level。","simplecontent":null,"content":"详细的Health信息、内存信息、JVM信息、垃圾回收信息、各种配置信息（比如数据源、缓存列表和命中率）等，还可以直接修改logger的level。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2811,"question":"HttpServletRequest的使用?","simplecontent":null,"content":"//通过getParameter直接获取，参数来源于URL中\n@GetMapping(\"/getHttpServletRequest\")\npublic String getHttpServletRequestValue(HttpServletRequest request) {\n  String id = request.getParameter(\"id\");\n}\n \n//通过参数集获取，参数来源于URL中\n@GetMapping(\"/getHttpServletRequest\")\npublic String getHttpServletRequestValue(HttpServletRequest request) {\n  Map<String, String[]> parameterMap = request.getParameterMap();\n  String[] ids = parameterMap.get(\"id\");\n  String id = ids[0];\n}\n 常利用request获取参数可以直接通过req.getParameter(name)的方式获取url上面或者ajax data提交上来的参数。但是body是没有名字的，无法通过参数名字这种方式获取。这时候需要用到io流的方式来获取body中的内容。\n//通过流获取body中的值，参数来源于请求body中\n@PostMapping(\"/getHttpServletRequest\")\npublic String getHttpServletRequestValue(HttpServletRequest request) throws IOException {\n  BufferedReader reader = new BufferedReader(new InputStreamReader(request.getInputStream()));\n  String line = \"\";\n  String body = \"\";\n  while((line = reader.readLine()) != null){\n    body += line;\n  }\n  JSONObject jsonObject=JSONObject.parseObject(body);\n  Integer id =  jsonObject.getInteger(\"id\");\n}","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2812,"question":"@RequestBody要求?","simplecontent":null,"content":"@RequestBody只能一个，而且适合实体一起用，如果和string会把key也取出来","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2813,"question":"注解RequestMapping中produces属性?","simplecontent":null,"content":"设置返回数据的类型以及编码，可以是json或者xml：\n@RequestMapping(value=\"/xxx\",produces = {\"application/json;charset=UTF-8\"})\n或\n@RequestMapping(value=\"/xxx\",produces = {\"application/xml;charset=UTF-8\"})","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2814,"question":"】Feign接收MultipartFile的参数?","simplecontent":null,"content":"《需要配置才能接收》\n@Configuration\npublic class FeignMultipartSupportConfig {\n    @Bean\n    @Primary\n    @Scope(\"prototype\")\n    public Encoder multipartFormEncoder() {\n        return new SpringFormEncoder();\n    }\n \n    @Bean\n    public feign.Logger.Level multipartLoggerLevel() {\n        return feign.Logger.Level.FULL;\n    }\n}\n@FeignClient(name = \"xxx\",configuration = FeignMultipartSupportConfig.class)\npublic interface OpenAccountFeignClient {\n    @RequestMapping(method = RequestMethod.POST, value = \"/xxxxx\",produces = {MediaType.APPLICATION_JSON_UTF8_VALUE},consumes = MediaType.MULTIPART_FORM_DATA_VALUE)\n    public ResponseEntity<?> ocrIdCard(@RequestPart(value = \"file\") MultipartFile file);\n \n}","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:20","updateTime":"2021-05-26 00:55:20","isExist":null},{"id":2801,"question":"seata与 XA 方案有什么不同？","simplecontent":null,"content":"Seata 的事务提交方式跟 XA 协议的两段式提交在总体上来说基本是一致的，那它们之间有什么不同呢？\n我们都知道 XA 协议它依赖的是数据库层面来保障事务的一致性，也即是说 XA 的各个分支事务是在数据库层面上驱动的，由于 XA 的各个分支事务需要有 XA 的驱动程序，一方面会导致数据库与 XA 驱动耦合，另一方面它会导致各个分支的事务资源锁定周期长，这也是它没有在互联网公司流行的重要因素。\n基于 XA 协议以上的问题，Seata 另辟蹊径，既然在依赖数据库层会导致这么多问题，那我就从应用层做手脚，这还得从 Seata 的 RM 模块说起，前面也说过 RM 的主要作用了，其实 RM 在内部做了对数据库操作的代理层，如下：\n\nSeata 在数据源做了一层代理层，所以我们使用 Seata 时，我们使用的数据源实际上用的是 Seata 自带的数据源代理 DataSourceProxy，Seata 在这层代理中加入了很多逻辑，主要是解析 SQL，把业务数据在更新前后的数据镜像组织成回滚日志，并将 undo log 日志插入 undo_log 表中，保证每条更新数据的业务 sql 都有对应的回滚日志存在。\n这样做的好处就是，本地事务执行完可以立即释放本地事务锁定的资源，然后向 TC 上报分支状态。当 TM 决议全局提交时，就不需要同步协调处理了，TC 会异步调度各个 RM 分支事务删除对应的 undo log 日志即可，这个步骤非常快速地可以完成；当 TM 决议全局回滚时，RM 收到 TC 发送的回滚请求，RM 通过 XID 找到对应的 undo log 回滚日志，然后执行回滚日志完成回滚操作。\n\n如上图所示，XA 方案的 RM 是放在数据库层的，它依赖了数据库的 XA 驱动程序。\n\n如上图所示，Seata 的 RM 实际上是已中间件的形式放在应用层，不用依赖数据库对协议的支持，完全剥离了分布式事务方案对数据库在协议支持上的要求。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2802,"question":"Seata 内部定义了 3个模块?","simplecontent":null,"content":"来处理全局事务和分支事务的关系和处理过程，这三个组件分别是：\nTransaction Coordinator (TC)： 事务协调器，维护全局事务的运行状态，负责协调并驱动全局事务的提交或回滚。\nTransaction Manager (TM)： 控制全局事务的边界，负责开启一个全局事务，并最终发起全局提交或全局回滚的决议。\nResource Manager (RM)： 控制分支事务，负责分支注册、状态汇报，并接收事务协调器的指令，驱动分支（本地）事务的提交和回滚。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2803,"question":"Seata原理?","simplecontent":null,"content":"1.TM 向 TC 申请开启一个全局事务，TC 创建全局事务后返回全局唯一的 XID，XID 会在全局事务的上下文中传播；\n2.RM 向 TC 注册分支事务，该分支事务归属于拥有相同 XID 的全局事务；\n3.TM 向 TC 发起全局提交或回滚；\n4.TC 调度 XID 下的分支事务完成提交或者回滚。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2804,"question":"Fescar和 Seata?","simplecontent":null,"content":"阿里开源了一个分布式事务中间件，起初起名为 Fescar，后改名为 Seata\nSeata 一开始就是冲着对业务无侵入与高性能方向走\n\n无入侵方案主要有基于数据库 XA 协议的两段式提交（2PC）方案\n基于 TCC 也有很多成熟的框架，如 ByteTCC、tcc-transaction 等。以及基于可靠消息的最终一致性来实现，如 RocketMQ 的事务消息。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2805,"question":"】GlobalTransactional作用？全局注解 会被spring aop切入","simplecontent":null,"content":"这个全局注解 会被spring aop切入\n点进去看之后 是对应的回滚策略 当遇到什么类型的 异常后 应该捕获 回滚","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2806,"question":"】Seata如何使用？在主项目的主方法的service添加@GlobalTransactional，次项目通过feign远程调用每个项目配置file.conf   registry.conf配置","simplecontent":null,"content":"在主项目的主方法的service添加@GlobalTransactional，次项目通过feign远程调用每个项目配置file.conf   registry.conf配置","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2807,"question":"Admin-ui界面?","simplecontent":null,"content":"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:19","updateTime":"2021-05-26 00:55:19","isExist":null},{"id":2789,"question":"】Eureka注册表？","simplecontent":null,"content":"","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2790,"question":"】springcolud 微服务接口请求时而快时而慢问题？可能注册到测试环境和本地环境，一个请求失败，一个成功","simplecontent":null,"content":"可能注册到测试环境和本地环境，一个请求失败，一个成功","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2791,"question":"】SpringCloud服务启动后，接口第一次请求很慢的优化？原因是因为有请求才加载，容纳后将他们设置成启动就加载，例如redis，数据库链接，ribbon","simplecontent":null,"content":"服务启动后，请求任意接口，都很慢，响应时长达到2秒\n而再次进行请求，响应很快，响应时长毫秒级。\n初步诊断\n很可能耗时资源在第一次接收到请求时才进行初始化\n上图为第一次请求时打印的日志，由此可知第一次请求时初始化了DataSource、Redis、Servlet","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2792,"question":"】Feign有哪些注解？EnableFeignClients、FeignClient","simplecontent":null,"content":"《EnableFeignClients、FeignClient》\nApi项目\n@EnableFeignClients(basePackages = \"com.wandian.basic.platform\")\n\n中间项目\n@FeignClient(path = \"ap/accountPayable\",value = \"wandian-erp-gl-arap-service\")\npublic interface AccountPayableRemoteClient {","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2793,"question":"】Feign的工作原理?启动类开启EnableFeignClients，扫描有注解FeignClient的类、注入到ioc容器，当调用方法时通过代理对象发送http请求","simplecontent":null,"content":"《启动类开启EnableFeignClients，扫描有注解FeignClient的类、注入到ioc容器，当调用方法时通过代理对象发送http请求》\n主程序入口添加了@EnableFeignClients注解开启对FeignClient扫描加载处理。根据Feign Client的开发规范，定义接口并加@FeignClientd注解。\n\n\n当程序启动时，回进行包扫描，扫描所有@FeignClients的注解的类，并且讲这些信息注入Spring IOC容器中，当定义的的Feign接口中的方法呗调用时，通过JDK的代理方式，来生成具体的RequestTemplate.当生成代理时，Feign会为每个接口方法创建一个RequestTemplate。当生成代理时，Feign会为每个接口方法创建一个RequestTemplate对象，改对象封装可HTTP请求需要的全部信息，如请求参数名，请求方法等信息都是在这个过程中确定的。\n\n\n然后RequestTemplate生成Request,然后把Request交给Client去处理，这里指的时Client可以时JDK原生的URLConnection,Apache的HttpClient,也可以时OKhttp，最后Client被封装到LoadBalanceClient类，这个类结合Ribbon负载均衡发器服务之间的调用。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2794,"question":"】Feign需要做重试吗？消费端做了幂等性处理才可以开启重试，否则导致重复消费","simplecontent":null,"content":"《消费端做了幂等性处理才可以开启重试，否则导致重复消费》","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2795,"question":"】ribbon超时设置？请求链接3s、处理超时5s","simplecontent":null,"content":"#ribbon请求连接的超时时间，限制3秒内必须请求到服务，并不限制服务处理的返回时间\nribbon.ConnectTimeout=3000\nribbon.SocketTimeout=5000\n#请求处理的超时时间 下级服务响应最大时间,超出时间消费方（路由也是消费方）返回timeout\nribbon.ReadTimeout=5000\n# 单独设置某个服务的超时时间，会覆盖其他的超时时间限制，服务的名称以注册中心页面显示的名称为准，超时时间不可大于断路器的超时时间\n#service-a.ribbon.ReadTimeout=50000\n#service-a.ribbon.ConnectTimeout=50000","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2796,"question":"】Feign默认时间?1s","simplecontent":null,"content":"《1》\nFeign调用服务的默认时长是1秒钟，也就是如果超过1秒没连接上或者超过1秒没响应，那么会相应的报错\nFeign 的负载均衡底层用的就是 Ribbon\n  在application.properties中添加如下配置，超过5秒没连接上报连接超时，如果超过5秒没有响应，报请求超时\n#全局配置\n# 请求连接的超时时间 默认的时间为 1 秒\nribbon.ConnectTimeout=5000\n# 请求处理的超时时间\nribbon.ReadTimeout=5000\n\n#局部配置\n# 对所有操作请求都进行重试\nego-product-provider.ribbon.OkToRetryOnAllOperations=true\n# 对当前实例的重试次数\nego-product-provider.ribbon.MaxAutoRetries=2\n# 切换实例的重试次数\nego-product-providert.ribbon.MaxAutoRetriesNextServer=0\n# 请求连接的超时时间\nego-product-provider.ribbon.ConnectTimeout=3000\n# 请求处理的超时时间\nego-product-provider.ribbon.ReadTimeout=3000","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2797,"question":"】ribbon会发送几次请求？","simplecontent":null,"content":"答：4次。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2798,"question":"】hystrix的超时时间该配置多少？4s","simplecontent":null,"content":"答：>4000毫秒\n#断路器的超时时间默认为1000ms，太小了\nhystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000\n#当在配置时间窗口内达到此数量的失败后，进行短路。默认20个）\n#hystrix.command.default.circuitBreaker.requestVolumeThreshold=20\n#短路多久以后开始尝试是否恢复，默认5s）\n#hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5\n#出错百分比阈值，当达到此阈值后，开始短路。默认50%）\n#hystrix.command.default.circuitBreaker.errorThresholdPercentage=50%","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2799,"question":"分支事务如何提交和回滚？","simplecontent":null,"content":"第一阶段：\n分支事务利用 RM 模块中对 JDBC 数据源代理，加入了若干流程，对业务 SQL 进行解释，把业务数据在更新前后的数据镜像组织成回滚日志，并生成 undo log 日志，对全局事务锁的检查以及分支事务的注册等，利用本地事务 ACID 特性，将业务 SQL 和 undo log 写入同一个事物中一同提交到数据库中，保证业务 SQL 必定存在相应的回滚日志，最后对分支事务状态向 TC 进行上报。\n\n第二阶段：\nTM决议全局提交：\n\n当 TM 决议提交时，就不需要同步协调处理了，TC 会异步调度各个 RM 分支事务删除对应的 undo log 日志即可，这个步骤非常快速地可以完成。这个机制对于性能提升非常关键，我们知道正常的业务运行过程中，事务执行的成功率是非常高的，因此可以直接在本地事务中提交，这步对于提升性能非常显著。\n\nTM决议全局回滚：\n\n当 TM 决议回滚时，RM 收到 TC 发送的回滚请求，RM 通过 XID 找到对应的 undo log 回滚日志，然后利用本地事务 ACID 特性，执行回滚日志完成回滚操作并删除 undo log 日志，最后向 TC 进行回滚结果上报。\n\n业务对以上所有的流程都无感知，业务完全不关心全局事务的具体提交和回滚，而且最重要的一点是 Seata 将两段式提交的同步协调分解到各个分支事务中了，分支事务与普通的本地事务无任何差异，这意味着我们使用 Seata 后，分布式事务就像使用本地事务一样，完全将数据库层的事务协调机制交给了中间件层 Seata 去做了，这样虽然事务协调搬到应用层了，但是依然可以做到对业务的零侵入，从而剥离了分布式事务方案对数据库在协议支持上的要求，且 Seata 在分支事务完成之后直接释放资源，极大减少了分支事务对资源的锁定时间，完美避免了 XA 协议需要同步协调导致资源锁定时间过长的问题。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2800,"question":"】Seata的模式?","simplecontent":null,"content":"Seata 的默认模式，也叫 AT 模式，叫 MT 模式","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:18","updateTime":"2021-05-26 00:55:18","isExist":null},{"id":2788,"question":"】负载平衡的意义什么？最大化吞吐量","simplecontent":null,"content":"在计算中，负载平衡可以改善跨计算机，计算机集群，网络链接，中央处理单元或磁盘驱动器等多种计 算资源的工作负载分布。负载平衡旨在优化资源使用，最大化吞吐量，最小化响应时间并避免任何单一  资源的过载。使用多个组件进行负载平衡而不是单个组件可能会通过冗余来提高可靠性和可用性。负载平衡 通常涉及专用软件或硬件，例如多层交换机或域名系统服务器进程。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:17","updateTime":"2021-05-26 00:55:17","isExist":null},{"id":2785,"question":"】什么是微服务？将单一应用程序划分为一组小的服务","simplecontent":null,"content":"微服务架构是一种架构模式或者说是一种架构风格，它提倡将单一应用程序划分为一组小的服务，每个 服务运行在其独立的自己的进程中，服务之间相互协调、互相配合，为用户提供最终价值。服务之间采 用轻量级的通信机制互相沟通（通常是基于HTTP的RESTful  API）,每个服务都围绕着具体的业务进行构建，并且能够被独立的构建在生产环境、类生产环境等。另外，应避免统一的、集中式的服务管理机     制，对具体的一个服务而言，应根据业务上下文，选择合适的语言、工具对其进行构建，可以有一个非 常轻量级的集中式管理来协调这些服务，可以使用不同的语言来编写服务，也可以使用不同的数据存     储。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:16","updateTime":"2021-05-26 00:55:16","isExist":null},{"id":2786,"question":"】SpringCloud有什么优势？一个服务挂了不至于所有挂了，维护看日志很痛苦，想看下报什么错误瞬间滑到底了、导致整个体系不能用了、可以放在不同服务器（减少单台服务消耗）、负载均衡策略、版本管理太难了","simplecontent":null,"content":"使用 Spring Boot 开发分布式微服务时，我们面临以下问题\n（1）与分布式系统相关的复杂性-这种开销包括网络问题，延迟开销，带宽问题，安全问题。\n（2）服务发现-服务发现工具管理群集中的流程和服务如何查找和互相交谈。它涉及一个服务目录，在 该目录中注册服务，然后能够查找并连接到该目录中的服务。\n（3）冗余-分布式系统中的冗余问题。\n（4）负载平衡 --负载平衡改善跨多个计算资源的工作负荷，诸如计算机，计算机集群，网络链路，中央处理单元，或磁盘驱动器的分布。\n（5）性能-问题  由于各种运营开销导致的性能问题。\n（6）部署复杂性-Devops  技能的要求。","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:16","updateTime":"2021-05-26 00:55:16","isExist":null},{"id":2787,"question":"】Eureka和zookeeper都可以提供服务注册与发现的功能，请说说两个的区别？","simplecontent":null,"content":"Zookeeper保证了CP（C：一致性，P：分区容错性），Eureka保证了AP（A：高可用）\n1.当向注册中心查询服务列表时，我们可以容忍注册中心返回的是几分钟以前的信息，但不能容忍直 接down掉不可用。也就是说，服务注册功能对高可用性要求比较高，但zk会出现这样一种情况，当\nmaster节点因为网络故障与其他节点失去联系时，剩余节点会重新选leader。问题在于，选取leader时  间过长，30   ~   120s，且选取期间zk集群都不可用，这样就会导致选取期间注册服务瘫痪。在云部署的环境下，因网络问题使得zk集群失去master节点是较大概率会发生的事，虽然服务能够恢复，但是漫长 的选取时间导致的注册长期不可用是不能容忍的。\n2.Eureka保证了可用性，Eureka各个节点是平等的，几个节点挂掉不会影响正常节点的工作，剩余的  节点仍然可以提供注册和查询服务。而Eureka的客户端向某个Eureka注册或发现时发生连接失败，则    会自动切换到其他节点，只要有一台Eureka还在，就能保证注册服务可用，只是查到的信息可能不是最 新的。除此之外，Eureka还有自我保护机制，如果在15分钟内超过85%的节点没有正常的心跳，那么\nEureka就认为客户端与注册中心发生了网络故障，此时会出现以下几种情况：\n①、Eureka不在从注册列表中移除因为长时间没有收到心跳而应该过期的服务。\n②、Eureka仍然能够接受新服务的注册和查询请求，但是不会被同步到其他节点上（即保证当前节点 仍然可用）\n③、当网络稳定时，当前实例新的注册信息会被同步到其他节点。\n因此，Eureka可以很好的应对因网络故障导致部分节点失去联系的情况，而不会像Zookeeper那样使 整个微服务瘫痪\n\n\n49","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:16","updateTime":"2021-05-26 00:55:16","isExist":null},{"id":2781,"question":"】接口响应使劲多长好200ms以内，这个线程池里的线程立马全部卡死?","simplecontent":null,"content":"因为一个接口，理论的最佳响应速度应该在200ms以内，或者慢点的接口就几百毫秒。\n如果一个接口响应时间达到1秒+，建议考虑用缓存、索引、NoSQL等各种你能想到的技术手段，优化一下性能。\n否则你要是胡乱设置超时时间是几秒，甚至几十秒，万一下游服务偶然出了点问题响应时间长了点呢？那你这个线程池里的线程立马全部卡死！\n具体hystrix的线程池以及超时时间的最佳生产实践，请见下一篇文章：《微服务架构如何保障双11狂欢下的99.99%高可用》","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:15","updateTime":"2021-05-26 00:55:15","isExist":null},{"id":2782,"question":"】springcloud微服务优化？响应时间、异常","simplecontent":null,"content":"缩短响应时间：加索引,加缓存, 优化流程,同步改异步、设置超时时间\n异常：熔断器、服务降级、全局捕捉、异常类说明\n高并发：","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:15","updateTime":"2021-05-26 00:55:15","isExist":null},{"id":2783,"question":"】什么springcloud底层通信 ？描述feign的底层原理","simplecontent":null,"content":"Feign的一个关键机制就是使用了动态代理。咱们一起来看看下面的图，结合图来分析：\n首先，如果你对某个接口定义了@FeignClient注解，Feign就会针对这个接口创建一个动态代理，接着你要是调用那个接口，本质就是会调用 Feign创建的动态代理，这是核心中的核心\n\nFeign的动态代理会根据你在接口上的@RequestMapping等注解，来动态构造出你要请求的服务的地址\n\n\n最后针对这个地址，发起请求、解析响应\n","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:15","updateTime":"2021-05-26 00:55:15","isExist":null},{"id":2784,"question":"】为什么使用微服务？流量分发、方法开发和维护、技术学习","simplecontent":null,"content":"流量分发、方法开发和维护、技术学习","filterContent":null,"type":"java-springcloud","status":0,"createTime":"2021-05-26 00:55:15","updateTime":"2021-05-26 00:55:15","isExist":null},{"id":2774,"question":"】spring 事务实现方式有哪些？声明式事务（xml 配置文件和注解）、编码方式","simplecontent":null,"content":"声明式事务：声明式事务也有两种实现方式，基于 xml 配置文件的方式和注解方式（在类上添加 @Transaction 注解）。\n编码方式：提供编码的形式管理和维护事务。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2775,"question":"】spring 的事务隔离？默认数据库隔离、未提交读、提交读、可重复读、序列化","simplecontent":null,"content":"spring 有五大隔离级别，默认值为 ISOLATION_DEFAULT（使用数据库的设置），其他四个隔离级别和数据库的隔离级别一致：\nISOLATION_DEFAULT：用底层数据库的设置隔离级别，数据库设置的是什么我就用什么；\nISOLATIONREADUNCOMMITTED：未提交读，最低隔离级别、事务未提交前，就可被其他事务读取（会出现幻读、脏读、不可重复读）；\nISOLATIONREADCOMMITTED：提交读，一个事务提交后才能被其他事务读取到（会造成幻读、不可重复读），SQL server 的默认级别；\nISOLATIONREPEATABLEREAD：可重复读，保证多次读取同一个数据时，其值都和事务开始时候的内容是一致，禁止读取到别的事务未提交的数据（会造成幻读），MySQL 的默认级别；\nISOLATION_SERIALIZABLE：序列化，代价最高最可靠的隔离级别，该隔离级别能防止脏读、不可重复读、幻读。\n脏读:  指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据， 那么另外一 个事务读到的这个数据是脏数据，依据脏数据所做的操作可能是不正确的。\n不可重复读:  指在一个事务内，多次读同一数据。在这个事务还没有结束时，另外一个事务也访问该同一数据。 那么，在第一个事务中的两次读数据之间，由于第二个事务的修改，那么第一个事务两次读到的数据可能是不一样的。这样就发生了在一个事务内两次读到的数据是不一样的，因此称为是不可重复读。\n幻觉读:指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改涉及 到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，就会发生操作第一个事务的用户发现表中还有 没有修改的数据行,也就是说幻像读是指同一查询在同一事务中多次进行，由于其他提交事务所做的插入操作，每次返回不同的结果集，此时发生幻像读,就好象发生了幻觉一样。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2776,"question":"】说一下 springmvc 运行流程？请求发送给前端控制器、前端控制器查询处理器、调用处理器执行接收模型视图、查询识图解析器、识图渲染后返回给客户端","simplecontent":null,"content":"《请求发送给前端控制器、前端控制器查询处理器、调用处理器执行接收模型视图、查询识图解析器、识图渲染后返回给客户端》\nspring mvc 先将请求发送给 DispatcherServlet。\nDispatcherServlet 查询一个或多个 HandlerMapping，找到处理请求的 Controller。\nDispatcherServlet 再把请求提交到对应的 Controller。\nController 进行业务逻辑处理后，会返回一个ModelAndView。\nDispathcher 查询一个或多个 ViewResolver 视图解析器，找到 ModelAndView 对象指定的视图对象。\n视图对象负责渲染返回给客户端。\n快速记忆技巧：\n核心控制器捕获请求、查找Handler、执行Handler、选择ViewResolver,通过ViewResolver渲染视图并返回给前端","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2777,"question":"】spring mvc 有哪些组件？","simplecontent":null,"content":"前置控制器 DispatcherServlet。\n映射控制器 HandlerMapping。\n处理器 Controller。\n模型和视图 ModelAndView。\n视图解析器 ViewResolver。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2778,"question":"】@RequestMapping 的作用是什么？将 http 请求映射到相应的类/方法上","simplecontent":null,"content":"将 http 请求映射到相应的类/方法上。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2779,"question":"】@Autowired 的作用是什么？对类进行装配bean","simplecontent":null,"content":"《对类进行装配bean》\n@Autowired 是一个注释，它可以对类成员变量、方法及构造函数进行标注，让 spring 完成 bean 自动装配的工作。\n@Autowired 默认是按照类去匹配，配合 @Qualifier 指定按照名称去装配 bean。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2780,"question":"springmvc工作原理是什么?","simplecontent":null,"content":"tomcat启动时，也是先加载web.xml，找到spring mvc的前端总控制器DispatcherServlet,并且通过DispatcherServlet来加载相关的配置文件信息。\n当浏览器发出一个请求之后，首先找到DispatcherServlet，通过这个控制器和代码中的requestMapping注解找到对应的controller中的方法，参数直接通过方法参数接收就可以，然后调用service、dao操作数据库，返回数据。如果页面跳转，controller的方法可以返回ModelAndView和string类型，再通过spring-mvc配置文件中的视图解析器找到对应的页面。\n数据可以用request或ModelAndView返回到页面。如果是ajax请求，可以直接返回List或对象，加上responseBody注解，进行返回。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:05","updateTime":"2021-05-26 00:53:05","isExist":null},{"id":2767,"question":"】IOC和DI区别？IOC:  控制反转,将类的对象的创建交给Spring类管理创建、DI: 依赖注入,将类里面的属性在创建类的过程中给属性赋值.","simplecontent":null,"content":"《IOC:  控制反转,将类的对象的创建交给Spring类管理创建. \nDI: 依赖注入,将类里面的属性在创建类的过程中给属性赋值.》\n这样做得好处：做到了单一职责，并且提高了复用性，解耦了之后，任你如何实现，使用接口的引用调用的方法，永远不需要改变\n\nIOC：翻译过来是控制反转，将对象的创建权由Spring管理，HelloService不需要自己去创建，Spring可以帮你创建。\nDI：依赖注入，在我们创建对象的过程中，把对象依赖的属性注入到我们的类中。\n我们现在编写的类是没有其它的属性的，如果你学过UML这种设计的话，面向对象中对象中的几种关系\n有spring管理对象创建。有spring把对象属性注入到类\n创建合作对象B的工作是由Spring来做的，Spring创建好B对象，然后存储到一个容器里面，当A对象需要使用B对象时，Spring就从存放对象的那个容器里面取出A要使用的那个B对象，然后交给A对象使用，","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2768,"question":"】为什么要用IOC而不是New创建对象？降耦合度，容易维护","simplecontent":null,"content":"《降耦合度，容易维护》\n采用@autowired来实现自动装配时\n 调用者直接使用new创建被调用者的实例，两者之间的耦合度很高\n要由调用者亲自创建被调用者的实例对象，不利于软件的移植与维护\n通过IOC的注册机制可以保证对象的安全性和合规性；\n　　实例化对象只需要实例化一次，即可进入IOC容器的bean缓存池，降低了对象的创建开销，提高了程序的性能（有点类似单例）；\n　　应用程序调用对象从bean缓存池获取，这样是秒获取对象，提高了调用对象的速度。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2769,"question":"spring 有哪些主要模块？","simplecontent":null,"content":"spring core：框架的最基础部分，提供 ioc 和依赖注入特性。\nspring context：构建于 core 封装包基础上的 context 封装包，提供了一种框架式的对象访问方法。\nspring dao：Data Access Object 提供了JDBC的抽象层。\nspring aop：提供了面向切面的编程实现，让你可以自定义拦截器、切点等。\nspring Web：提供了针对 Web 开发的集成特性，例如文件上传，利用 servlet listeners 进行 ioc 容器初始化和针对 Web 的 ApplicationContext。\nspring Web mvc：spring 中的 mvc 封装包提供了 Web 应用的 Model-View-Controller（MVC）的实现。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2770,"question":"】spring 常用的注入方式有哪些？setter 、构造、注解","simplecontent":null,"content":"setter 属性注入\n构造方法注入\n注解方式注入","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2771,"question":"spring 中的 bean 是线程安全的吗？","simplecontent":null,"content":"spring 中的 bean 默认是单例模式，spring 框架并没有对单例 bean 进行多线程的封装处理。\n实际上大部分时候 spring bean 无状态的（比如 dao 类），所有某种程度上来说 bean 也是安全的，但如果 bean 有状态的话（比如 view model 对象），那就要开发者自己去保证线程安全了，最简单的就是改变 bean 的作用域，把“singleton”变更为“prototype”，这样请求 bean 相当于 new Bean()了，所以就可以保证线程安全了。\n有状态就是有数据存储功能。\n无状态就是不会保存数据。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2772,"question":"spring 支持几种 bean 的作用域？","simplecontent":null,"content":"spring 支持 5 种作用域，如下：\nsingleton：spring ioc 容器中只存在一个 bean 实例，bean 以单例模式存在，是系统默认值；\nprototype：每次从容器调用 bean 时都会创建一个新的示例，既每次 getBean()相当于执行 new Bean()操作；\nWeb 环境下的作用域：\nrequest：每次 http 请求都会创建一个 bean；\nsession：同一个 http session 共享一个 bean 实例；\nglobal-session：用于 portlet 容器，因为每个 portlet 有单独的 session，globalsession 提供一个全局性的 http session。\n注意： 使用 prototype 作用域需要慎重的思考，因为频繁创建和销毁 bean 会带来很大的性能开销。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2773,"question":"spring 自动装配 bean 有哪些方式？","simplecontent":null,"content":"no：默认值，表示没有自动装配，应使用显式 bean 引用进行装配。\nbyName：它根据 bean 的名称注入对象依赖项。\nbyType：它根据类型注入对象依赖项。\n构造函数：通过构造函数来注入依赖项，需要设置大量的参数。\nautodetect：容器首先通过构造函数使用 autowire 装配，如果不能，则通过 byType 自动装配。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:04","updateTime":"2021-05-26 00:53:04","isExist":null},{"id":2757,"question":"什么是 Bean 装配?","simplecontent":null,"content":"Spring 容器根据 Bean 之间的依赖关系，将 Bean 通过依赖注入进行组装在一起。这就是 Bean 装配。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2758,"question":"什么是 Bean 的自动装配？","simplecontent":null,"content":"在 Spring 框架里面是使用 <constructor-arg> 和 <property> 配置方式进行依赖注入，如果 Bean 对象较多的情况下注入工作就比较麻烦，XML 文件会变得很难维护，所以为了简化 XML 配置文件。\n提高开发效率我们可以使用 autowire（自动装配），能通过 Bean 工厂自动处理 Bean 之间的协作。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2759,"question":"介绍一下自动装配有几种方式？","simplecontent":null,"content":"有五种自动装配的方式，可以用来指导 Spring 容器用自动装配方式来进行依赖注入。\n\n1.no：默认设置，表示没有自动装配, 通过显式设置 Bean 引用来进行装配。\n\n2.byName：根据 Bean 的名称注入对象依赖项。\n3.byType：根据类型注入对象依赖项。\n4.constructor：通过调用类的构造函数来注入依赖项\n5.autodetect： 先尝试  constructor  来自动装配， 若不成功， 则使用\nbyType 方式。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2760,"question":"Spring 框架由那几部分组成？","simplecontent":null,"content":"主要七大模块介绍\n\n1.Spring AOP 面相切面编程\n2.Spring ORM Hibernate|mybatis|JDO\n3.Spring Core 提 供 Bean 工 厂 IOC\n4.Spring Dao JDBC 支 持\n5.Spring Context 提供了关于 UI 支持、邮件支持等\n6.Spring Web 提供了 Web 的一些工具类的支持\n7.Spring MVC 提供了 Web MVC、Webviews、JSP、PDF、Export","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2761,"question":"spring 通知类型使用场景分别有哪些？","simplecontent":null,"content":"通知类型\t使用场景\n前置通知    登录认证\n\n环绕通知\t控制事物                            权限控制\n\n后置通知\t记录日志（方法已经成功调用）\n异常通知\t异常处理 控制事物\n最终通知\t记录日志（方法已经调用，但不一定成功）","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2762,"question":"]为什么要使用 spring？ioc，aop，事务，框架","simplecontent":null,"content":"《ioc，aop，事务，框架》\nspring 提供 ioc 技术，容器会帮你管理依赖的对象，从而不需要自己创建和管理依赖对象了，更轻松的实现了程序的解耦。\nspring 提供了事务支持，使得事务操作变的更加方便。\nspring 提供了面向切片编程，这样可以更方便的处理某一类的问题。\n更方便的框架集成，spring 可以很方便的集成其他框架，比如 MyBatis、hibernate 等。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2763,"question":"】什么是 aop？","simplecontent":null,"content":"《面向切面编程、业务和切面分离》{业务和切面}\naop 是面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。\n简单来说就是统一处理某一“切面”（类）的问题的编程思想，比如统一处理日志、异常等。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2764,"question":"】什么是 ioc？依赖注入控制反转，讲对象的创建，使用交给容器去管理（实例化bean对象，注入对象）","simplecontent":null,"content":"《依赖注入控制反转，讲对象的创建，使用交给容器去管理》\n\nioc：Inversionof Control（中文：控制反转）是 spring 的核心，对于 spring 框架来说，就是由 spring 来负责控制对象的生命周期和对象间的关系。\n简单来说，控制指的是当前对象对内部成员的控制权；控制反转指的是，这种控制权不由当前对象管理了，由其他（类,第三方容器）来管理。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2765,"question":"介绍一下 Spring 的事务的了解？","simplecontent":null,"content":"事务是数据库操作的最小工作单元，是作为单个逻辑工作单元执行的一系列操作；这些操作作为一个整体一起向系统提交，要么都执行、要么都不执行；事务是一组不可再分割的操作集合（工作逻辑单元）。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2766,"question":"】事务特性：ACID?原子、一致性、隔离、持久性","simplecontent":null,"content":"《原子、一致性、隔离、持久性》\n原子性：事务不可分割\n一致性：事务执行的前后，数据完整性保持一致\n隔离性：一个事务执行的时候，不应该受到其他事务的打扰\n持久性：一旦结束，数据就永久的保存到数据库\n\nSpring 中有自己的事务管理机制，使用 TransactionMananger 进行管理，可以通过 Spring 的注入来完成此功能。提供了以下几个事务处理的类：\n\nTransactionDefinition：事务属性定义，定义了事务传播行为 类型（ 7 种），事务隔离类型（ 5 种），超时设置等。\nTranscationStatus：代表了当前的事务，可以提交、回滚。\n\nPlatformTransactionManager：这个是 Spring 提供的用于管理事务的\n基础接口。通过这个接口，Spring 可以为如 JDBC、Hibernate 等提供了对应的事务管理器，具体的实现就是各个平台来实现。\n\n事务定义样例：\nTransactionDefinition td = new TransactionDefinition(); \nTransactionStatus ts = transactionManager.getTransaction(td);  try{ \n \t//do sth \n \ttransactionManager.commit(ts); \n}catch(Exception e){ \n \ttransactionManager.rollback(ts); \n}  \n还总结出了各大互联网公司 java 程序员面试涉及到的绝大部分面试题及答案做成了文档和学习笔记文件以及架构视频资料免费分享给大家（包括 Dubbo、Redis、Netty、zookeeper、Spring cloud、分布式、高并发等架构技术资料），加 QQ 群：464403846 或加管理小姐姐 VX：rxh8515 免费获取！\n\n谈谈对 Spring IoC 的理解？\n\nIoC Inverse of Control 反转控制的概念。将之前程序中需要手动创建对象的操作，交由 Spring 框架来实现，创建对象的操作被反转到了 Spring 框架。对象的生命周期由 Spring 来管理，直接从 Spring 那里去获取一个对象。\n\n谈谈对 Spring DI 的理解？\nDI Dependency Injection 依赖注入。Spring 框架创建 Bean 对象时，动态的将依赖对象注入到 Bean 组件中，实现依赖对象的注入。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:03","updateTime":"2021-05-26 00:53:03","isExist":null},{"id":2744,"question":"】SpringMVC的异常处理流程是什么？Dao层异常向上抛出到Service、Service异常会向上抛出到Controller层、Controller异常会向上抛出到SpringMVC前端控制器、前端控制器将异常交给SpringMVC的异常处理器","simplecontent":null,"content":"《Dao层异常向上抛出到Service、Service异常会向上抛出到Controller层、Controller异常会向上抛出到SpringMVC前端控制器、前端控制器将异常交给SpringMVC的异常处理器》\n答：Dao层发生的异常会向上抛出到Service层、Service层的异常会向上抛出到Controller层，Controller层的异常会继续向上抛出到SpringMVC的前端控制器，由前端控制器将异常交给SpringMVC的异常处理器进行处理。如果是自定义的异常处理器，需要实现HandlerExceptionResolver接口，并使用@Component注解配置或在对应的springconfig配置文件中注册。\n\nSpringMVC中的拦截器和拦截器链是什么，和过滤器有什么区别？\n答：①Spring MVC 的拦截器用于对处理器进行预处理和后处理，用户可以自己定义一些拦截器来实现特定的功能。拦截器链就是将拦截器按一定的顺序联结成一条链，在访问被拦截的方法或字段时，拦截器链中的拦截器就会按其之前定义的顺序被调用。②它和过滤器的区别是：过滤器是 servlet 规范中的一部分，任何 java web 工程都可以使用，拦截器是 SpringMVC 框架自己的，只有使用了 SpringMVC 框架的工程才能用；过滤器在 url-pattern 中配置了/*之后，可以对所有要访问的资源拦截，拦截器它是只会拦截访问的控制器方法，如果访问的是 jsp、html、css、image 或者 js 是不会进行拦截的；它也是 AOP 思想的具体应用，如果要想自定义拦截器， 要求必须实现HandlerInterceptor 接口。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2745,"question":"】拦截器有哪些常用方法？preHandle/postHandle/afterCompletion","simplecontent":null,"content":"《》\n答：①preHandle：按拦截器定义顺序调用，只要配置了都会调用。如果程序员决定该拦截器对请求进行拦截处理后还要调用其他的拦截器，或者是业务处理器去进行处理，则返回 true，如果不需要再调用其他的组件去处理请求，则返回 false。②postHandle：\n按拦截器定义逆序调用，在拦截器链内所有拦截器返回成功时调用。在业务处理器处理完请求后，但是 DispatcherServlet 向客户端返回响应前被调用， 在该方法中对用户请求 request 进行处理。③afterCompletion：按拦截器定义逆序调用，只有 preHandle 返回 true时才调用。在 DispatcherServlet 完全处理完请求后被调用，可以在该方法中进行一些资源清理的操作。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2746,"question":"简单解释一下AOP的相关术语?","simplecontent":null,"content":"答：①Joinpoint(连接点):指那些被拦截到的点，在 spring 中这些点指的是方法，因为 spring 只支持方法类型的连接点。例如业务层实现类中的方法都是连接点。②Pointcut(切入点):指我们要对哪些 Joinpoint 进行拦截的定义。例如业务层实现类中被增强的方法都是切入点，切入点一定是连接点，但连接点不一定是切入点。③Advice(通知/增强):指拦截到 Joinpoint 之后所要做的事情。④Introduction(引介):引介是一种特殊的通知，在不修改类代码的前提下可以在运行期为类动态地添加一些方法或 Field。⑤Weaving(织入):是指把增强应用到目标对象来创建新的代理对象的过程。spring 采用动态代理织入，而 AspectJ 采用编译期织入和类装载期织入。⑥Proxy（代理）:一个类被 AOP 织入增强后，就产生一个结果代理类。⑦Target(目标):代理的目标对象。⑧Aspect(切面):是切入点和通知（引介）的结合。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2747,"question":"】简述Spring中bean对象的生命周期？实例化bean对象、设置属性实现依赖注入、对实现的aware设置beanid，传递给bean前置处理器，初始化、后置处理器、使用bean、销毁","simplecontent":null,"content":"实例化、设置属性和id、前置方法、初始化、后置方法、使用、销毁\nhttps://blog.csdn.net/w_linux/article/details/80086950\n1实例化bean对象(通过构造方法或者工厂方法)\n2设置对象属性(setter等)（依赖注入）\n3如果Bean实现了BeanNameAware接口，工厂调用Bean的setBeanName()方法传递Bean的ID。（和下面的一条均属于检查Aware接口）\n4如果Bean实现了BeanFactoryAware接口，工厂调用setBeanFactory()方法传入工厂自身\n5将Bean实例传递给Bean的前置处理器的postProcessBeforeInitialization(Object bean, String beanname)方法\n6调用Bean的初始化方法\n7将Bean实例传递给Bean的后置处理器的postProcessAfterInitialization(Object bean, String beanname)方法\n8使用Bean\n9容器关闭之前，调用Bean的销毁方法\n\n\n答：\n①Spring对bean进行实例化。\n②Spring将值和bean的引用注入到其对应的属性中。\n③调用BeanNameAware的setBeanName方法。\n④调用BeanFactoryAware的setBeanFactory方法。\n⑤调用AppicationContxtAware的setApplicationContext方法。\n⑥调用BeanPostProcessor的post-ProcessBeforeInitialization方法。\n⑦调用InitializingBean的after-PropertiesSet方法。如果bean使用init-method声明了自定义初始化方法，该方法也会被调用。\n⑧调用BeanPostProcessor的post-ProcessAfterInitialization方法。\n⑨使用bean。\n⑩调用DisposableBean的destroy方法，如果bean使用destroy-method声明了自定义销毁方法，该方法也会被调用。\n\n\n\n从创建Spring容器开始，直到最终Spring容器销毁Bean\n\n（知1）实例化（必须的）构造函数构造对象\n\n（2）装配（可回选的）为属性赋值\n\n（3）回调（可选的）（容器-控制类和组件-回调类）\n\n（4）初始化(init-method=\" \")\n（5）就绪\n\n（6）销毁（destroy-method=\" \"）\n首先是实例化，填充普通属性值，调用接口填充beanname、beanfacory、applicationcontext，然后再调用别的接口初始化后置方法和属性，最后使用bean，使用完就是销毁，","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2748,"question":"】Servlet的生命周期？实例化，初始init，接收请求service，销毁destroy；","simplecontent":null,"content":"实例化，初始init，接收请求service，销毁destroy；","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2749,"question":"】SpringBean生命周期？","simplecontent":null,"content":"Spring上下文中的Bean生命周期也类似，如下：\n（1）实例化Bean：\n对于BeanFactory容器，当客户向容器请求一个尚未初始化的bean时，或初始化bean的时候需要注入   另一个尚未初始化的依赖时，容器就会调用createBean进行实例化。对于ApplicationContext容器，当 容器启动结束后，通过获取BeanDe?nition对象中的信息，实例化所有的bean。\n（2）设置对象属性（依赖注入）：\n实例化后的对象被封装在BeanWrapper对象中，紧接着，Spring根据BeanDe?nition中的信息 以及 通过BeanWrapper提供的设置属性的接口完成依赖注入。\n（3）处理Aware接口：\n接着，Spring会检测该对象是否实现了xxxAware接口，并将相关的xxxAware实例注入给Bean：\n①如果这个Bean已经实现了BeanNameAware接口，会调用它实现的setBeanName(String  beanId)方法，此处传递的就是Spring配置文件中Bean的id值；\n②如果这个Bean已经实现了BeanFactoryAware接口，会调用它实现的setBeanFactory()方法，传递的 是Spring工厂自身。\n③如果这个Bean已经实现了ApplicationContextAware接口，会调用\nsetApplicationContext(ApplicationContext)方法，传入Spring上下文；\n（4）BeanPostProcessor：\n如果想对Bean进行一些自定义的处理，那么可以让Bean实现了BeanPostProcessor接口，那将会调用\npostProcessBeforeInitialization(Object obj, String s)方法。\n（5）InitializingBean 与 init-method：\n如果Bean在Spring配置文件中配置了  init-method   属性，则会自动调用其配置的初始化方法。\n（6）如果这个Bean实现了BeanPostProcessor接口，将会调用postProcessAfterInitialization(Object obj,   String   s)方法；由于这个方法是在Bean初始化结束时调用的，所以可以被应用于内存或缓存技术；\n以上几个步骤完成后，Bean就已经被正确创建了，之后就可以使用这个Bean了。\n（7）DisposableBean：\n当Bean不再需要时，会经过清理阶段，如果Bean实现了DisposableBean这个接口，会调用其实现的\ndestroy()方法；\n（8）destroy-method：\n最后，如果这个Bean的Spring配置中配置了destroy-method属性，会自动调用其配置的销毁方法。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2750,"question":"】说说几个常用的注解？","simplecontent":null,"content":"《RestController 、Configuration 》\n@RestController   ：@ResponseBody和@Controller的合集。\n@EnableAutoConfiguration  ：尝试根据你添加的jar依赖⾃自动配置你的Spring应用。\n@ComponentScan：表示将该类⾃自动发现（扫描）并注册为Bean，可以⾃自动收集所有的Spring组件，包括@Configuration类。\n@ImportResource ：用来加载xml配置⽂文件。\n@Configuration ：相当于传统的xml配置⽂文件，如果有些第三方库需要用到xml⽂文件，建议仍然通过@Configuration类作为项目的配置主类——可以使用@ImportResource注解加载xml配置⽂文件。\n@SpringBootApplication：相当于@EnableAutoConfiguration、@ComponentScan和@Configuration的合集。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2751,"question":"如何实现aop？项目中哪些地方用到了aop？","simplecontent":null,"content":"掌握：https://juejin.im/post/5bf4fc84f265da611b57f906\n\nAOP（Aspect-Oriented Programming）是一种程序设计类型，它通过分离横切关注点来增加程序的模块化。AOP 在不修改现有代码的情况下对现有代码添加功能，这个是 AOP 最重要的能力。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2752,"question":"】介绍一下设计模式在 Spring 框架中的使用？工厂BeanFactory 、单例spring、aop代理模式、RestTemplate和JpaTemplate模板、Spring 中listener观察者","simplecontent":null,"content":"1.工厂模式：BeanFactory 就是简单工厂模式的体现，用来创建对象的实例。\n2.单例模式：Bean 默认为单例模式。\n\n3.代理模式：Spring 的 AOP 功能用到了 JDK 的动态代理和 CGLIB 字\n节码生成技术。\n4.模板方法：用来解决代码重复的问题。比如：RestTemplate, JmsTemplate,\nJpaTemplate。\n5.观察者模式：定义对象键一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都会得到通知被制动更新，如 Spring 中\nlistener 的实现：ApplicationListener。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2753,"question":"解释 Aspect 切面?","simplecontent":null,"content":"AOP 核心就是切面，它将多个类的通用行为封装成可重用的模块，该模块含有\n一组 API 提供横切功能。比如，一个日志模块可以被称作日志的 AOP 切面。根据需求的不同，一个应用程序可以有若干切面。在 Spring AOP 中，切面通过带有 @Aspect 注解的类实现。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2754,"question":"@RequestMapping 注解用在类上面有什么作用?","simplecontent":null,"content":"用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2755,"question":"】怎么样把某个请求映射到特定的方法上面？RequestMapping","simplecontent":null,"content":"《加上注解 @RequestMapping》\n在方法上面加上注解 @RequestMapping，并且在这个注解里面写上要拦截的路径。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2756,"question":"】Spring 的通知类型有哪些，请简单介绍一下？前置、后置、异常后通知、环绕通知、返回通知","simplecontent":null,"content":"《前置、后置、异常后通知、环绕通知、返回通知》\nSpring 的通知类型总共有 5 种：前置通知、环绕通知、后置通知、异常通知、最终通知。\n\n前置通知（Before advice）：在目标方法执行之前执行的通知。在某连\n接点（ join point ）之前执行的通知，但这个通知不能阻止连接点前的执行（除非它抛出一个异常）。\n环绕通知（Around Advice）： 在目标方法执行之前和之后都可以执行额外代码的通知。也可以选择是否继续执行连接点或直接返回它们自己的返回值或抛出异常来结束执行。\n后置通知（After (finally) advice）： 目标方法执行之后（某连接点退出的时候）执行的通知（不论是正常返回还是异常退出）。\n异常后通知（After throwing advice）：在方法抛出异常退出时执行的通知。\n最终通知（After returning advice）： 在某连接点（join point）正常完成后执行的通知：例如，一个方法没有抛出任何异常，正常返回。\n1.before：前置通知，在一个方法执行前被调用。\n2.after：在方法执行之后调用的通知，无论方法执行是否成功。\n3.after-returning：仅当方法成功完成后执行的通知。\n4.after-throwing：在方法抛出异常退出时执行的通知。\n5.around：在方法执行之前和之后调用的通知。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:02","updateTime":"2021-05-26 00:53:02","isExist":null},{"id":2733,"question":"】spring作用域有哪些？单例、原型、request、session\t、global- session","simplecontent":null,"content":"\"单例，原型（每次getBean实例化），request（每次请求实例化bean），session（每次getsession实例化Bean）\nglobal- session\"\n Spring IOC容器创建一个Bean实例时，可以为Bean指定实例的作用域，作用域包括singleton（单例模式）、prototype（原型模式）、request（HTTP请求）、session（会话）、global-session（全局会话）。\nsingleton 表示在spring容器中的单例，通过spring容器获得该bean时总是返回唯一的实例\nprototype表示每次获得bean都会生成一个新的对象\nrequest表示在一次http请求内有效（只适用于web应用）\nsession表示在一个用户会话内有效（只适用于web应用）\nglobalSession表示在全局会话内有效（只适用于web应用）","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2734,"question":"作用域的实际原理?","simplecontent":null,"content":"　(1)当一个bean的作用域为Singleton，那么Spring IoC容器中只会存在一个共享的bean实例，并且所有对bean的请求，只要id与该bean定义相匹配，则只会返回bean的同一实例。Singleton是单例类型，就是在创建起容器时就同时自动创建了一个bean的对象，不管你是否使用，他都存在了，每次获取到的对象都是同一个对象。注意，Singleton作用域是Spring中的缺省作用域。要在XML中将bean定义成singleton，可以这样配置：\n \n<bean id=\"ServiceImpl\" class=\"cn.csdn.service.ServiceImpl\" scope=\"singleton\">\n \n\n　　(2)当一个bean的作用域为Prototype，表示一个bean定义对应多个对象实例。Prototype作用域的bean会导致在每次对该bean请求（将其注入到另一个bean中，或者以程序的方式调用容器的getBean()方法）时都会创建一个新的bean实例。Prototype是原型类型，它在我们创建容器的时候并没有实例化，而是当我们获取bean的时候才会去创建一个对象，而且我们每次获取到的对象都不是同一个对象。根据经验，对有状态的bean应该使用prototype作用域，而对无状态的bean则应该使用singleton作用域。在XML中将bean定义成prototype，可以这样配置：\n<bean id=\"account\" class=\"com.foo.DefaultAccount\" scope=\"prototype\"/> \n或者<bean id=\"account\" class=\"com.foo.DefaultAccount\" singleton=\"false\"/> \n　　\n　　(3)当一个bean的作用域为Request，表示在一次HTTP请求中，一个bean定义对应一个实例；即每个HTTP请求都会有各自的bean实例，它们依据某个bean定义创建而成。该作用域仅在基于web的Spring ApplicationContext情形下有效。考虑下面bean定义：\n<bean id=\"loginAction\" class=\"cn\".csdn.LoginAction\" scope=\"request\"/>\n \n\n　　针对每次HTTP请求，Spring容器会根据loginAction bean的定义创建一个全新的LoginAction bean实例，且该loginAction bean实例仅在当前HTTP request内有效，因此可以根据需要放心的更改所建实例的内部状态，而其他请求中根据loginAction bean定义创建的实例，将不会看到这些特定于某个请求的状态变化。当处理请求结束，request作用域的bean实例将被销毁。\n　　(4)当一个bean的作用域为Session，表示在一个HTTP Session中，一个bean定义对应一个实例。该作用域仅在基于web的Spring ApplicationContext情形下有效。考虑下面bean定义：\n<bean id=\"userPreferences\" class=\"com.foo.UserPreferences\" scope=\"session\"/>\n \n\n　　针对某个HTTP Session，Spring容器会根据userPreferences bean定义创建一个全新的userPreferences bean实例，且该userPreferences bean仅在当前HTTP Session内有效。与request作用域一样，可以根据需要放心的更改所创建实例的内部状态，而别的HTTP Session中根据userPreferences创建的实例，将不会看到这些特定于某个HTTP Session的状态变化。当HTTP Session最终被废弃的时候，在该HTTP Session作用域内的bean也会被废弃掉。\n　　(5)当一个bean的作用域为Global Session，表示在一个全局的HTTP Session中，一个bean定义对应一个实例。典型情况下，仅在使用portlet context的时候有效。该作用域仅在基于web的Spring ApplicationContext情形下有效。考虑下面bean定义：\n<bean id=\"user\" class=\"com.foo.Preferences \"scope=\"globalSession\"/>\n \n\n　　global session作用域类似于标准的HTTP Session作用域，不过仅仅在基于portlet的web应用中才有意义。Portlet规范定义了全局Session的概念，它被所有构成某个portlet web应用的各种不同的portlet所共享。在global session作用域中定义的bean被限定于全局portlet Session的生命周期范围内。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2735,"question":"Springboot作用域范围?","simplecontent":null,"content":"","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2736,"question":"】@RequestParam与@PathVariable的区别？参数在？前后","simplecontent":null,"content":"1.在？后输入参数 2.请求路径输入参数的值","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2737,"question":"】@MapperScan作用？扫描包","simplecontent":null,"content":"扫描resourceMapper类的包的路径","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2738,"question":"】事务传播七种行为？2需求、2支持、1从未、1嵌套、1强制性","simplecontent":null,"content":"\"Propagation \n1.required（用当前事务，无新建）\n2.required-new（总新建事务）\n3.supports（用当前事务，无非事务执行）\n4.not-supports（总以非事务执行）\n5.mandatory（用当前事务，无抛异常）\n6.nerer（以非事务执行，有抛异常）\nhttps://blog.csdn.net/jy02268879/article/details/84322459\"\n\n\n1.PROPAGATION_REQUIRED\t如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。这是最常见的选择。\n2.PROPAGATION_SUPPORTS\t支持当前事务，如果当前没有事务，就以非事务方式执行。\n3.PROPAGATION_MANDATORY\t使用当前的事务，如果当前没有事务，就抛出异常。\n4.PROPAGATION_REQUIRES_NEW\t新建事务，如果当前存在事务，把当前事务挂起。\n5.PROPAGATION_NOT_SUPPORTED\t以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。\n6.PROPAGATION_NEVER\t以非事务方式执行，如果当前存在事务，则抛出异常。\n7.PROPAGATION_NESTED\t如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。\n\n支持当前事务（没有则新建事务、没有则以非事务、没有抛出异常、嵌套事务内）\n支持新事务（有则挂起）\n支持非事务（存在挂起、存在抛出异常）","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2739,"question":"】aop的返回后通知和后置通知区别\t？1.有返回才执行 2.一定执行","simplecontent":null,"content":"1.有返回才执行 2.一定执行","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2740,"question":"】spring的aop是什么？面向切面编程，实现“业务代码”与“关注点代码”分离，而关注点写一次即可","simplecontent":null,"content":"面向切面编程，实现“业务代码”与“关注点代码”分离，而关注点写一次即可","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2741,"question":"】响应数据的格式有哪些？字符串/为空/ModelandView","simplecontent":null,"content":"答：①字符串，控制器中的方法返回字符串可以指定逻辑视图名，通过视图解析器解析为物理视图地址，例如返回\"success\"时可解析为success.jsp页面。②返回值为空，默认访问视图解析器前缀+requestmapping路径+视图解析器后缀的视图。③ModelandView，可以通过setViewName()方法设置视图名实现指定视图的跳转。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2742,"question":"】SpringMVC如何实现转发和重定向区别？（地址、共享）","simplecontent":null,"content":"答：①前提是控制器方法返回值类型必须是String类型。②转发到页面return\"forward:+绝对地址\"。转发到控制器其他方法：return的是\"forward:+类上requestmapping的地址+方法上requestmapping的地址\"。③重定向到页面：return的是\"redirect:+绝对地址\"，注意不能重定向访问WEB-INF下的资源。重定向到控制器其他方法：return的是\"redirect:+类上requestmapping的地址+方法上requestmapping的地址\"。重定向到外部链接：return的是\"redirect:+链接地址(http://www.qcom)\"。④转发和重定向的区别是转发只是一次请求，重定向是两次请求；转发地址栏不变，重定向地址栏将改变；转发只能到内部资源，重定向可以到内部或外部资源；转发可以到WEB-INF下资源，重定向不可以。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2743,"question":"SpringMVC实现简单文件上传有哪些要求？","simplecontent":null,"content":"答：①浏览器端要求：表单提交方式为post(get有文件大小限制)。提供文件上传框对应的标签：<input type=\"file\">。表单的entype属性必须为multipart/form-data。②服务器端要求：使用**request.getInputStream()**获取数据。springmvc底层封装了commons-fileupload文件上传工具包。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:01","updateTime":"2021-05-26 00:53:01","isExist":null},{"id":2720,"question":"】spring单例模式线程不安全原因？全局变量进行写","simplecontent":null,"content":"\"全局变量及静态变量（service和dao是不可变的没有这个问题）\n若每个线程中对全局变量、静态变量只有读操作，而无写操作，一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑线程同步，否则就可能影响线程安全。\n1） 常量始终是线程安全的，因为只存在读操作。 \n2）每次调用方法前都新建一个实例是线程安全的，因为不会访问共享的资源。\n3）局部变量是线程安全的。因为每执行一个方法，都会在独立的空间创建局部变量，它不是共享的资源。局部变量包括方法的参数变量和方法内变量。\"","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2721,"question":"】spring单例的好处？提高性能","simplecontent":null,"content":"提高性能","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2722,"question":"Struts2是否存在线程安全问题?","simplecontent":null,"content":"《默认是Prototype模式。每个请求生成一个Action实例，不存在线程安全问题》\n默认是Prototype模式。每个请求生成一个Action实例，不存在线程安全问题。\n如果由Spring管理action的生命周期， scope要配成prototype作用域\"\nSpringMvc 的控制器是不是单例模式,如果是,有什么问题,怎么解决？\t不要用同步影响性能，使用局部变量或threadlocal","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2723,"question":"】怎么样把某个请求映射到特定的方法上面？@RequestMapping","simplecontent":null,"content":"加上注解@RequestMapping\n如果在拦截请求中,我想拦截 get 方式提交的方法,怎么配置？\t在@RequestMapping 注解里面加上 method=RequestMethod.GET","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2724,"question":"怎么样在方法里面得到 Request,或者 Session？","simplecontent":null,"content":"在方法的形参中声明 request,SpringMvc 就自动把 request 对象传入","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2725,"question":"】SpringMvc 中函数的返回值是什么？String, ModelAndView","simplecontent":null,"content":"String, ModelAndView","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2726,"question":"】过滤器使用场景？过滤敏感词（搜索字典该称*），字符转编码，过滤脚本防止xss攻击","simplecontent":null,"content":"过滤敏感词（搜索字典该称*），字符转编码，过滤脚本防止xss攻击","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2727,"question":"】拦截器传递数据给controller？使用ThreadLocal","simplecontent":null,"content":"ThreadLocal<UserEntity> LOCAL = new ThreadLocal<UserEntity>();","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2728,"question":"】过滤器和拦截器的区别? 过滤器是所有请求依赖servlet、拦截器是属于spring框架；过滤器执行一次，拦截器前中后拦截；拦截器可以调用ioc的容器对象","simplecontent":null,"content":"《过滤器是所有请求依赖servlet、拦截器是属于spring框架；过滤器执行一次，拦截器前中后拦截；拦截器可以调用ioc的容器对象》\n（servlet容器、次数、优先级、场景）\n\n方面\tfilter\tinterceptor\n实现原理\t基于函数回调\tjava反射，动态代理\n是否依赖servlet\tjava原生，依赖servlet\tspring框架所有，不依赖servlet\n作用范围\t所有的url，可以配置\t无法配置url，只是针对实现某接口的类的方法在其前后进行处理，这也正是动态代理的逻辑\n是否可以自动注入context中的bean\t不能，但可以通过getBean方法获得\t可以\n如何选择\t在纯Java的应用中尽量选择filter，减小第三方\t在spring应用中官方推荐interceptor\n\n执行顺序\n过滤器 -> 拦截器 -> aop -> 业务逻辑 -> 拦截器的post方法 -> filter的destroy\n\n\"都属于面向切面编程\n1.过滤器基于servlet，处理一次请求，对request处理，用于web服务\n2.拦截器是由ioc容器管理，在可以具体到每一个方法，用于web，桌面程序\"\n\n1. 拦截器是基于java的反射机制的，而过滤器是基于函数回调。\n2. 拦截器不依赖与servlet容器，过滤器依赖与servlet容器。\n3. 拦截器只能对action请求起作用，而过滤器则可以对几乎所有的请求起作用。\n4. 拦截器可以访问action上下文、值栈里的对象，而过滤器不能访问。\n5. 在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次\n\n拦截器，在AOP（Aspect-Oriented Programming）中用于在某个方法或字段被访问之前，进行拦截然后在之前或之后加入某些操作\n\n\n过滤器(filter)：就是对请求起到过滤的作用，它在监听器之后来，作用在servlet之前，对请求进行过滤。\n\n\n拦截器(interceptor)：就是对请求和返回进行拦截，\n\n\n⑥拦截器可以获取IOC容器中的各个bean，而过滤器就不行，这点很重要，在拦截器里注入一个service，可以调用业务逻辑。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2729,"question":"】ssm和ssh各自的优势和劣势？类级别和方法级别、数据是否共享","simplecontent":null,"content":"1.Struts2 和 SpringMVC 控制器(controller)控制视图和模型的交互机制的不同，\n2.Struts2是Action类级别，SpringMVC是方法级别，更容易实现RESTful风格。\"\n3.数据是否共享","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2730,"question":"】ssm批量修改字段？foreach","simplecontent":null,"content":"foreach","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2731,"question":"】同比定义？上一年","simplecontent":null,"content":"{上一年}\n和上一年度相比\n和上一年度相比 （本期数－同期数）÷同期数","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2732,"question":"】作用域是什么？有效使用范围","simplecontent":null,"content":"在它的有效使用范围内使用才有效，超出这个范围就出现报错==","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:53:00","updateTime":"2021-05-26 00:53:00","isExist":null},{"id":2709,"question":"在Spring AOP中关注点和横切关注点有什么不同？","simplecontent":null,"content":"关注点是我们想在应用的模块中实现的行为。关注点可以被定义为：我们想实现以解决特定业务问题的方法。比如，在所有电子商务应用中，不同的关注点（或者模块）可能是库存管理、航运管理、用户管理等。\n横切关注点是贯穿整个应用程序的关注点。像日志、安全和数据转换，它们在应用的每一个模块都是必须的，所以他们是一种横切关注点。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2710,"question":"】什么是Spring AOP？面向切面编程、业务和其它公用逻辑分离","simplecontent":null,"content":"一般面试官问到这个问题，面试者基本上都会回答：AOP 就是面向切面编程。其实这真的是句废话，这么回答真的没有任何意义。\n或许你可以给面试官举个例子：歌星都有好多助理，歌星最重要的一件事就是唱歌，其他事他不用关注，比如唱歌前可能需要和其他人谈合作，还要布置场地，唱歌后还要收钱等等，这些统统交给他对应的助理去做。也许哪一天，这个歌星做慈善，免费唱歌了，不收钱了，那么就可以把收钱这个助力给辞退了。这就是AOP，每个人各司其职，灵活组合，达到一种可配置的、可插拔的程序结构。AOP 的实现原理就是代理模式。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2711,"question":"@Configuration 和 @Component 区别?","simplecontent":null,"content":"@Configuration 中所有带 @Bean 注解的方法都会被动态代理，因此调用该方法返回的都是同一个实例。\n\n\n@Configuration 注解本质上还是 @Component，因此 <context:component-scan/> 或者 @ComponentScan 都能处理@Configuration 注解的类。\n\n @Configuration 注解的 bean 都已经变成了增强的类。\n\n@Component 注解并没有通过 cglib 来代理@Bean 方法的调用","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2712,"question":"@Component和@Bean的区别?","simplecontent":null,"content":"1.@Component 是用在类上的\n@Component\npublic class Student {\n\t private String name = \"lkm\";\n\t public String getName() {\n\t \treturn name;\n\t }\n\t public void setName(String name) {\n\t   this.name = name;\n\t }\n }\n2.@Bean 需要在配置类中使用，即类上需要加上@Configuration注解\n@Configuration\npublic class WebSocketConfig {\n  @Bean\n  public Student student(){\n    return new Student();\n  }\n}","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2713,"question":"Bean的概念?","simplecontent":null,"content":"由IOC容器管理的那些组成你应用程序的对象我们就叫它Bean， Bean就是由Spring容器初始化、装配及管理的对象，","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2714,"question":"】@bean作用?","simplecontent":null,"content":"《将第三方库中的组件装配应用》{第三方组件}\n如果你想要将第三方库中的组件装配到你的应用中，在这种情况下，是没有办法在它的类上添加@Component注解的，因此就不能使用自动化装配的方案了，但是我们可以使用@Bean。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2715,"question":"@Configuration的使用和作用?","simplecontent":null,"content":"从Spring3.0，@Configuration用于定义配置类，可替换xml配置文件，被注解的类内部包含有一个或多个被@Bean注解的方法，这些方法将会被AnnotationConfigApplicationContext或AnnotationConfigWebApplicationContext类进行扫描，并用于构建bean定义，初始化Spring容器。\n\n@Configuration注解的配置类有如下要求：\n@Configuration不可以是final类型；\n@Configuration不可以是匿名类；\n嵌套的configuration必须是静态类。\n\n一、用@Configuration加载spring\n1.1、@Configuration配置spring并启动spring容器\n1.2、@Configuration启动容器+@Bean注册Bean\n1.3、@Configuration启动容器+@Component注册Bean\n1.4、使用 AnnotationConfigApplicationContext 注册 AppContext 类的两种方法\n1.5、配置Web应用程序(web.xml中配置AnnotationConfigApplicationContext)","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2716,"question":"】注入分页插件？PageHelper","simplecontent":null,"content":"方式一：我们在application.yml(spring 需要读取的yml)中加入\npagehelper:\n    helperDialect: mysql\n    reasonable: true\n    supportMethodsArguments: true\n    params: count=countSql\n\n方式二：\n@Configuration\npublic class PageHelperConfig {\n\n  @Bean\n  public PageHelper getPageHelper(){\n    PageHelper pageHelper=new PageHelper();\n    Properties properties=new Properties();\n    properties.setProperty(\"helperDialect\",\"mysql\");\n    properties.setProperty(\"reasonable\",\"true\");\n    properties.setProperty(\"supportMethodsArguments\",\"true\");\n    properties.setProperty(\"params\",\"count=countSql\");\n    pageHelper.setProperties(properties);\n    return pageHelper;\n  }\n\n}","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2717,"question":"Spring如何注入一个新的东西?","simplecontent":null,"content":"注入是的一个类，而不是一个属性字段\n\n@Service(\"accountEmailService\")\npublic class AccountEmailServiceImpl implements AccountEmailService{\n\n    /**  通过构造器注入---begin  **/\n    private JavaMailSender javaMailSender;\n@Autowired\n    public AccountEmailServiceImpl(JavaMailSender javaMailSender){\n        this.javaMailSender = javaMailSender;\n    }\n    /** 通过构造器注入---end  **/\n\n\n/** 通过set方法注入---begin **/\n    private JavaMailSender javaMailSender;\n    @Autowired\n    public void setJavaMailSender(JavaMailSender javaMailSender){\n        this.javaMailSender = javaMailSender;\n    }\n    /** 通过set方法注入---end **/\n\n\n\n/** 通过field注入 **/\n    @Autowired\n    private JavaMailSender javaMailSender;\n\n\n    @Override\n    public void sendMail(String to, String subject, String htmlText) throws Exception{\n        String systemMail = \"xxx@qq.com\";\n        MimeMessage msg = javaMailSender.createMimeMessage();\n        MimeMessageHelper messageHelper = new MimeMessageHelper(msg);\n        messageHelper.setFrom(systemMail);\n        messageHelper.setTo(to);\n         javaMailSender.send(msg);\n    }\n}\n一、构造器注入； 二、设值注入（setter方式注入）； 三、Feild方式注入（注解方式注入）。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2718,"question":"】mvc和mvp，和mvvm区别？模型视图控制器、","simplecontent":null,"content":"\"1.mvc是视图和模型可以交互，视图从模型获取数据\n2.mvp是视图和模型没有交互，视图是通过逻辑层获取数据\n3.mvvm是视图和控制层双向绑定，控制层改动，视图就会知道（vue，angular、）\"","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2719,"question":"】Spring框架中的单例Beans是线程安全的么？不，用ThreadLocal","simplecontent":null,"content":"\"1.“singleton”变更为“prototype\n2.使用new方式 数据在推存储属于线程共有\n3.使用ThreadLocal，保证线程共有的数据\"","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:59","updateTime":"2021-05-26 00:52:59","isExist":null},{"id":2696,"question":"】spring事务原理？Aop，执行方法前，执行方法后","simplecontent":null,"content":"基于这个aop的动态代理，分为jdk和cglib\nJdk：\nimplements InvocationHandler代理类\npublic Object invoke(Object proxy, Method method, Object[] args)throws Throwable {\n　Object result = null;重写invoke\n　if (!method.getName().startsWith(\"save\")) {\n　　UserTransaction tx = null;\n　　try {\n　　　tx = (UserTransaction) (new InitialContext().lookup(\"java/tx\"));\n　　　result = method.invoke(originalObject, args);\n　　　tx.commit();\n　　} catch (Exception ex) {\n　　}\n　}\nInvocationHandler.invoke方法将在被代理类的方法被调用之前触发。通过这个方法，我们可以在被代理类方法调用的前后进行一些处 理，如代码中所示，InvocationHandler.invoke方法的参数中传递了当前被调用的方法（Method）,以及被调用方法的参数。同 时，可以通过method.invoke方法调用被代理类的原始方法实现。这样就可以在被代理类的方法调用前后写入任何想要进行的操作。\n\n　 　Spring的事务管理机制实现的原理，就是通过这样一个动态代理对所有需要事务管理的Bean进行加载，并根据配置在invoke方法中对当前调用的 方法名进行判定，并在method.invoke方法前后为其加上合适的事务管理代码，这样就实现了Spring式的事务管理。Spring中的AOP实 现更为复杂和灵活，不过基本原理是一致的。\n\n两种方式:一种采用动态代理，也是默认模式，前提是你含有update方式那个类扩展了某个接口，这样才能采用代理模式，还有另外的模式就是CGlib方式，这种方式通过动态编译字节码的方式，写一个新的类继承你原来的含有update方法的类（你原来的类不能用final修饰，因为人家新的类要继承你这个类），然后覆盖你的update方法，这样也能实现aop方式的事物管理","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2697,"question":"】事务不起作用情况？MyIsam不支持事务、方法是否为public、类注解是否是@Service或@Component、捕捉不抛出异常、启动类没有加事务注解","simplecontent":null,"content":"《MyIsam不支持事务、方法是否为public、类注解是否是@Service或@Component、捕捉不抛出异常、启动类没有加事务注解》\n1、首先要看数据库本身对应的库、表所设置的引擎是什么。MyIsam不支持事务，如果需要，则必须改为InnnoDB。\n\n2、@Transactional所注解的方法是否为public\n\n3、@Transactional所注解的方法所在的类，是否已经被注解@Service或@Component等。\n\n4、需要调用该方法，且需要支持事务特性的调用方是在在 @Transactional所在的类的外面。注意：类内部的其他方法调用这个注解了@Transactional的方法，事务是不会起作用的。\n\n5、注解为事务范围的方法中，事务的回滚仅仅对于unchecked的异常有效。对于checked异常无效。也就是说事务回滚仅仅发生在出现RuntimeException或Error的时候。\n\n如果希望一般的异常也能触发事务回滚，需要在注解了@Transactional的方法上，将@Transactional回滚参数设为：\n\n@Transactional(rollbackFor=Exception.class)\n(本文出自oschina博主文章：https://my.oschina.net/happyBKs/blog/1624482)\n\n6、非springboot项目，需要检查spring配置文件xml中：\n\n（1）扫描包范围是否配置好，否则不会在启动时spring容器中创建和加载对应的bean对象。\n\n<context:component-scan base-package=\"com.happybks\" ></context:component-scan>\n（2）事务是否已经配置成开启\n\n<tx:annotation-driven transaction-manager=\"transactionManager\" proxy-target-class=\"true\"/>\n \n\n7、springboot项目有两个可选配置，默认已经支持事务了，可以写也可以不写。\n\n（1）springboot启动类，即程序入口类，需要注解@EnableTransactionManagement\n\npackage com.happybks.pets;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\n@EnableTransactionManagement\n@SpringBootApplication\npublic class PetsApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(PetsApplication.class, args);\n\t}\n}\n \n\n（2）springboot配置文件application.yml中，可以配置上失败回滚：\n\nspring:\n  profiles:\n    active: prod\n  datasource:\n    driver-class-name: com.mysql.jdbc.Driver\n    url: jdbc:mysql://127.0.0.1:3306/spbdb\n    username: root\n    password:\n  jpa:\n    hibernate:\n      ddl-auto:\n    show-sql: true\n  transaction:\n    rollback-on-commit-failure: true","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2698,"question":"】AOP关注点和横切关注的区别是什么？","simplecontent":null,"content":"关注点是应用中一个模块的行为，一个关注点可能会被定义成一个我们想实现的一个功能。\n横切关注点是一个关注点，此关注点是整个应用都会使用的功能，并影响整个应用，比如日志，安全和数据传输，几乎应用的每个模块都需要的功能。因此这些都属于横切关注点。\n简写:\n关注点是应用中一个模块的行为，可能会被定义成我们想实现的一个功能。\n横切关注点是一个关注点，是整个应用都会使用的功能，并影响整个应用，比如日志，数据传输，几乎应用的每个模块都需要的功能。这些都属于横切关注点。\n类似于班级里面 我是关注点, 老师是横切关注,我操作我的电脑,老师带着我们操作所有电脑,老师是影响整个班级也就是应用!\n————————————————\n版权声明：本文为CSDN博主「今晚打老虎!」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/weixin_45925109/article/details/104742823","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2699,"question":"Spring 过滤器 拦截器 AOP区别?","simplecontent":null,"content":"过滤器\n\n过滤器拦截的是URL\n\nSpring中自定义过滤器（Filter）一般只有一个方法，返回值是void，当请求到达web容器时，会探测当前请求地址是否配置有过滤器，有则调用该过滤器的方法（可能会有多个过滤器），然后才调用真实的业务逻辑，至此过滤器任务完成。过滤器并没有定义业务逻辑执行前、后等，仅仅是请求到达就执行。\n\n特别注意：过滤器方法的入参有request，response，FilterChain，其中FilterChain是过滤器链，使用比较简单，而request，response则关联到请求流程，因此可以对请求参数做过滤和修改，同时FilterChain过滤链执行完，并且完成业务流程后，会返回到过滤器，此时也可以对请求的返回数据做处理。\n\n拦截器\n\n拦截器拦截的是URL\n\n拦截器有三个方法，相对于过滤器更加细致，有被拦截逻辑执行前、后等。Spring中拦截器有三个方法：preHandle，postHandle，afterCompletion。\nAOP（面向切面）\n面向切面拦截的是类的元数据（包、类、方法名、参数等）\n相对于拦截器更加细致，而且非常灵活，拦截器只能针对URL做拦截，而AOP针对具体的代码，能够实现更加复杂的业务逻辑。具体类型参照其他博客。\n\n三者功能类似，但各有优势，从过滤器--》拦截器--》切面，拦截规则越来越细致，执行顺序依次是过滤器、拦截器、切面。一般情况下数据被过滤的时机越早对服务的性能影响越小，因此我们在编写相对比较公用的代码时，优先考虑过滤器，然后是拦截器，最后是aop。比如权限校验，一般情况下，所有的请求都需要做登陆校验，此时就应该使用过滤器在最顶层做校验；日志记录，一般日志只会针对部分逻辑做日志记录，而且牵扯到业务逻辑完成前后的日志记录，因此使用过滤器不能细致地划分模块，此时应该考虑拦截器，然而拦截器也是依据URL做规则匹配，因此相对来说不够细致，因此我们会考虑到使用AOP实现，AOP可以针对代码的方法级别做拦截，很适合日志功能。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2700,"question":"】拦截器应用场景？权限检查、日志记录","simplecontent":null,"content":"1） 权限检查：如登录检测，进入处理器检测检测是否登录，如果没有直接返回到登录页面\n2） 日志记录：记录请求信息的日志，以便进行信息监控、信息统计、计算PV（Page View）等。\n3） 性能监控：有时候系统在某段时间莫名其妙的慢，可以通过拦截器在进入处理器之前记录开始时间，在处理完后记录结束时间，从而得到该请求的处理时间（如果有反向代理，如apache可以自动记录）\n4） 通用行为：读取cookie得到用户信息并将用户对象放入请求，从而方便后续流程使用，还有如提取Locale、Theme信息等，只要是多个处理器都需要的即可使用拦截器实现5）","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2701,"question":"】过滤器应用场景？过滤敏感词汇、","simplecontent":null,"content":"1）过滤敏感词汇（防止sql注入）\n2）这是字符编码\n3）URL级别的权限访问控制\n4）压缩响应信息","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2702,"question":"Spring声明式事务的实现方式选择（JDK动态代理与cglib）?","simplecontent":null,"content":"声明式（通过切面编程即AOP注入），在启动类上添加@EnableTransactionManagement注解\n\n\n2、使用JDK动态代理的情况\n\n在满足下面两个条件时，Spring会选择JDK动态代理作为声明式事务的实现方式。\n\n（1）事务代理类必须实现接口且不能显式继承父类（Object这个父类不算）。\n\n（2）配置：springboot的启动类要加上@EnableTransactionManagement和@EnableAspectAutoProxy注解，且其中的proxyTargetClass属性要为默认的fasle，如果设置成了true就会开启cglib。\n\n注意：\n\n在这种情况下，@Transcation注解可以加在事务代理对象所实现的接口的方法上，也可以加在具体的实现类上。\n\n3、使用cglib的情况\n\n除了上述情况，Spring 会采用cglib方式来实现声明式事务。\n\n（1）比如业务类未实现接口。\n\n（2）proxyTargetClass=true时。\n\n当然，在这种情况下，@Transcation注解只能加在具体的实现类上。\n\n由于Spring事务的具体实现方式未知，因此推荐把注解加在实现类上，不然会带来很多的问题。\n\n@Service\n@Transactional(isolation = Isolation.READ_COMMITTED,propagation = Propagation.REQUIRED)\n@Scope(proxyMode = ScopedProxyMode.TARGET_CLASS)\npublic class TestService implements ITestService {\n    @Autowired\n    private TestMapper testMapper;\n\n}@Scope(proxyMode = ScopedProxyMode.TARGET_CLASS)，该注解的作用是表明此类上所有方法上的事务都是CGLib方式代理的。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2703,"question":"】各种通知区别？前置、后置、环绕、异常、终止、返回后","simplecontent":null,"content":"AOP的通知有before前置通知。after后置通知，无论是否成功返回都会执行。afterReturning后置通知，只有成功返回后才会执行。\nafterThrowing抛出异常通知，顾名思义，只有抛出异常的时候才会执行。around环绕通知，简单来说就是集合了before和after的\n功能。\n这里基于xml文件实现把切面类和目标类动态接入。\n  try{\n    //前置通知\n         //环绕通知\n            //调用目标对象方法\n         //环绕通知\n    //后置通知\n  }catch(){\n    //异常通知\n  }finally{\n    //终止通知\n  }","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2704,"question":"Aop的真正含义?","simplecontent":null,"content":"面向切面编程，就是将交叉业务逻辑封装成切面，利用AOP的功能将切面织入到主业务逻辑中。所谓交叉业务逻辑是指，通用的、与主业务逻辑无关的代码，如安全检查、事务、日志等。若不使用AOP，则会出现代码纠缠，即交叉业务逻辑与主业务逻辑混合在一起。这样，会使主业务逻辑变的混杂不清。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2705,"question":"Spring、AspectJ和AOP三者关系：?","simplecontent":null,"content":"对于AOP这种编程思想，很多框架都进行了实现。Spring就是其中之一，可以完成面向切面编程。然而，AspectJ也实现了AOP的功能，且其实现方式更为简捷，使用更为方便，而且还支持注解式开发。所以，Spring又将AspectJ的对于AOP的实现也引入到了自己的框架中。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2706,"question":"】Aop使用场景？声明式事务，aspectj切面，日志，鉴权","simplecontent":null,"content":"《声明式事务，aspectj切面，日志，鉴权》","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2707,"question":"Aop的术语?","simplecontent":null,"content":"切面：\n切面泛指交叉业务逻辑。比如事务处理、日志处理就可以理解为切面。\n常用的切面有通知与顾问。实际就是对主业务逻辑的一种增强\n\n\n连接点(Joint Point)：广义上来讲，方法、异常处理块、字段这些程序调用过程中可以抽像成一个执行步骤（或者说执行点）的单元。从Spring AOP来讲，就是指java的方法和异常处理代码块。\n\n切点(Pointcut)：是连接点的描述定义，Spring AOP通过切点来定位到哪些连接点。切点表达式语言就是切点用来定义连接点的语法。\n\n@Aspect(切面): 通常是一个类，里面可以定义切入点和通知\nJointPoint(连接点):  程序执行过程中明确的点，一般是方法的调用\nAdvice(通知):  AOP在特定的切入点上执行的增强处理:\n@Before:  标识一个前置增强方法，相当于BeforeAdvice的功能\n@After:  final增强，不管是抛出异常或者正常退出都会执行。\n@AfterReturning:  后置增强，似于AfterReturningAdvice, 方法正常退出时执行\n@AfterThrowing:  异常抛出增强，相当于ThrowsAdvice\n@Around: 环绕增强，相当于MethodInterceptor\nPointcut(切入点):   带有通知的连接点，在程序中主要体现为书写切入点表达式\nAOP Proxy：AOP框架创建的对象，代理就是目标对象的加强。Spring中的AOP代理可以使JDK动态代理，也可以是CGLIB代理，前者基于接口，后者基于子类。\n(6)advisor:增强器,用来筛选类中的哪些方法是我们的连接点(哪些方法需要被拦截).\n　　(7)wave:织入，把切面/切面类和目标类的动态接入。　　\n\n\n@Aspect\n@Component\npublic class LogAspect\n{\n    @Autowired\nprivate HttpServletRequest request;\n\n    private final Logger LOG = LoggerFactory.getLogger(this.getClass());\n    \n\t@Pointcut(\"execution(* com.jdw.tengxun.api..*(..))\")\n    public void log() {\n    }\n\n\t\n    @AfterReturning(returning=\"resultMap\" , pointcut = \"log()\")\n    public void log(JoinPoint joinpoint, Object resultMap) throws Throwable\n    {\n        JSONArray str=null;\n        try{\n            str = new JSONArray(Arrays.asList(resultMap));\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n    }\n}","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2708,"question":"切点指示符?","simplecontent":null,"content":"第一个*代表:返回值类型,*可以匹配所有的返回值类型cn.zzsxt.aop2:被代理目标所在包第二个*代表：代表包的类，*可以匹配该包下的所有类\n第三个*代表：代表类中的方法，*可以匹配该类下的所有方法\n（）中的..代表方法中的参数 ..可以匹配所有的参数类型\n\n\n切点指示符是切点定义的关键字，切点表达式以切点指示符开始。开发人员使切点指示符来告诉切点将要匹配什么，有以下9种切点指示符：execution、within、this、target、args、@target、@args、@within、@annotation，下面一一介结这9种切点指示符。\n\nexecution\n\nexecution是一种使用频率比较高比较主要的一种切点指示符，用来匹配方法签名，方法签名使用全限定名，包括访问修饰符（public/private/protected）、返回类型，包名、类名、方法名、参数，其中返回类型，包名，类名，方法，参数是必须的，如下面代码片段所示：\n\n@Pointcut(\"execution(public String org.baeldung.dao.FooDao.findById(Long))\")\n上面的代码片段里的表达式精确地匹配到FooDao类里的findById(Long)方法，但是这看起来不是很灵活。假设我们要匹配FooDao类的所有方法，这些方法可能会有不同的方法名，不同的返回值，不同的参数列表，为了达到这种效果，我们可以使用通配符。如下代码片段所示：\n\n@Pointcut(\"execution(* org.baeldung.dao.FooDao.*(..))\")\n第一个通配符匹配所有返回值类型，第二个匹配这个类里的所有方法，（）括号表示参数列表，括号里的用两个点号表示匹配任意个参数，包括0个\n\nwithin\n\n使用within切点批示符可以达到上面例子一样的效果，within用来限定连接点属于某个确定类型的类。如下面代码的效果与上面的例子是一样的：\n\n@Pointcut(\"within(org.baeldung.dao.FooDao)\")\n我们也可以使用within指示符来匹配某个包下面所有类的方法（包括子包下面的所有类方法），如下代码所示：\n\n@Pointcut(\"within(org.baeldung..*)\")\nthis 和 target\n\nthis用来匹配的连接点所属的对象引用是某个特定类型的实例，target用来匹配的连接点所属目标对象必须是指定类型的实例；那么这两个有什么区别呢？原来AspectJ在实现代理时有两种方式：\n1、如果当前对象引用的类型没有实现自接口时，spring aop使用生成一个基于CGLIB的代理类实现切面编程\n2、如果当前对象引用实现了某个接口时，Spring aop使用JDK的动态代理机制来实现切面编程\nthis指示符就是用来匹配基于CGLIB的代理类，通俗的来讲就是，如果当前要代理的类对象没有实现某个接口的话，则使用this；target指示符用于基于JDK动态代理的代理类，通俗的来讲就是如果当前要代理的目标对象有实现了某个接口的话，则使用target.：\n\npublic class FooDao implements BarDao {\n    ...\n}\n比如在上面这段代码示例中，spring aop将使用jdk的动态代理来实现切面编程，在编写匹配这类型的目标对象的连接点表达式时要使用target指示符， 如下所示：\n\n@Pointcut(\"target(org.baeldung.dao.BarDao)\")\n如果FooDao类没有实现任何接口，或者在spring aop配置属性：proxyTargetClass设为true时，Spring Aop会使用基于CGLIB的动态字节码技为目标对象生成一个子类将为代理类，这时应该使用this指示器：\n\n@Pointcut(\"this(org.baeldung.dao.FooDao)\")\n参数\n\n参数指示符是一对括号所括的内容，用来匹配指定方法参数：\n\n\n@Pointcut(\"execution(* *..find*(Long))\")\n这个切点匹配所有以find开头的方法，并且只一个Long类的参数。如果我们想要匹配一个有任意个参数，但是第一个参数必须是Long类的，我们这可使用下面这个切点表达式：\n\n@Pointcut(\"execution(* *..find*(Long,..))\")\n@Target\n\n这个指示器匹配指定连接点，这个连接点所属的目标对象的类有一个指定的注解:\n\n@Pointcut(\"@target(org.springframework.stereotype.Repository)\")\n@args\n\n这个指示符是用来匹配连接点的参数的，@args指出连接点在运行时传过来的参数的类必须要有指定的注解，假设我们希望切入所有在运行时接受实@Entity注解的bean对象的方法：\n\n@Pointcut(\"@args(org.baeldung.aop.annotations.Entity)\")\npublic void methodsAcceptingEntities() {}\n为了在切面里接收并使用这个被@Entity的对象，我们需要提供一个参数给切面通知：JointPoint:\n\n@Before(\"methodsAcceptingEntities()\")\npublic void logMethodAcceptionEntityAnnotatedBean(JoinPoint jp) {\n    logger.info(\"Accepting beans with @Entity annotation: \" + jp.getArgs()[0]);\n}\n@within\n\n这个指示器，指定匹配必须包括某个注解的的类里的所有连接点：\n\n@Pointcut(\"@within(org.springframework.stereotype.Repository)\")\n上面的切点跟以下这个切点是等效的：\n\n@Pointcut(\"within(@org.springframework.stereotype.Repository *)\")\n@annotation\n\n这个指示器匹配那些有指定注解的连接点，比如，我们可以新建一个这样的注解@Loggable:\n\n@Pointcut(\"@annotation(org.baeldung.aop.annotations.Loggable)\")\npublic void loggableMethods() {}\n我们可以使用@Loggable注解标记哪些方法执行需要输出日志：\n\n@Before(\"loggableMethods()\")\npublic void logMethod(JoinPoint jp) {\n    String methodName = jp.getSignature().getName();\n    logger.info(\"Executing method: \" + methodName);\n}\n切点表达式组合\n\n可以使用&&、||、!、三种运算符来组合切点表达式，表示与或非的关系。\n\n@Pointcut(\"@target(org.springframework.stereotype.Repository)\")\npublic void repositoryMethods() {}\n\n@Pointcut(\"execution(* *..create*(Long,..))\")\npublic void firstLongParamMethods() {}\n\n@Pointcut(\"repositoryMethods() && firstLongParamMethods()\")\npublic void entityCreationMethods() {}","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:58","updateTime":"2021-05-26 00:52:58","isExist":null},{"id":2685,"question":"】什么情况使用到单例和多例？很多全局变量使用多例","simplecontent":null,"content":"《很多全局变量使用多例》\n如果你给controller中定义很多的属性，那么单例肯定会出现竞争访问了","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2686,"question":"】如何更改spring作用域？单例和原型","simplecontent":null,"content":"我们最常用到的是前两种，即单例和多例模式的切换。原型每次使用@Autowired自动注入的时候，系统会重新new一个新对象出来。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2687,"question":"】什么是Spring Beans？对象","simplecontent":null,"content":"Spring Beans是构成Spring应用核心的Java对象。这些对象由Spring IOC容器实例化、组装、管理。这些对象通过容器中配置的元数据创建，例如，使用XML文件中定义的创建。\n在Spring中创建的beans都是单例的beans。在bean标签中有一个属性为”singleton”,如果设为true，该bean是单例的，如果设为false，该bean是原型bean。Singleton属性默认设置为true。因此，spring框架中所有的bean都默认为单例bean。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2688,"question":"Spring的单例模式?","simplecontent":null,"content":"假设单例BeanA需要使用原型BeanB（BeanB可能是BeanA的一个属性值）。可是容器仅创建一次单例BeanA，因此只有一次机会来设置属性BeanB。\nSpring单例优缺点","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2689,"question":"】单例bean的优势？减少新创建消耗","simplecontent":null,"content":"spring中创建的bean默认就是单例bean。\n其优势实际上就是单例自身的各种优势：\n1.减少系统新创建实例消耗的资源\n2.减少jvm垃圾回收\n3.可以从缓存中快速获取到bean\n单例bean也存在缺点，主要表现在在并发环境下的线程不安全。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2690,"question":"】Spring 为啥把bean默认设计成单例？1.少创建实例2.垃圾回收3.缓存快速获取","simplecontent":null,"content":"答案：为了提高性能！！！从几个方面，1.少创建实例2.垃圾回收3.缓存快速获取","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2691,"question":"】单例有啥劣势？并发环境下线程不安全","simplecontent":null,"content":"如果是有状态的话在并发环境下线程不安全","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2692,"question":"】Spring原型优点？不会有线程安全问题","simplecontent":null,"content":"《原型的bean则不会有线程安全这样问题》","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2693,"question":"Spring / SpringBoot为什么推荐使用thymeleaf？","simplecontent":null,"content":"主要是thymeleaf的实现机制相较于其他模板引擎更加的优雅。由于各种绑定与控制采用属性的方式，可以使得模板不破坏html原有的语法结构，","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2694,"question":"BeanFactory和ApplicationContext区别?","simplecontent":null,"content":"·  BeanFactory和ApplicationContext是Spring的两大核心接口，而其中ApplicationContext是BeanFactory的子接口。它们都可以当做Spring的容器，Spring容器是生成Bean实例的工厂，并管理容器中的Bean。在基于Spring的Java EE应用中，所有的组件都被当成Bean处理，包括数据源，Hibernate的SessionFactory、事务管理器等。\n·  生活中我们一般会把生产产品的地方称为工厂，而在这里bean对象的地方官方取名为BeanFactory，直译Bean工厂（com.springframework.beans.factory.BeanFactory），我们一般称BeanFactory为IoC容器，而称ApplicationContext为应用上下文。\n·  Spring的核心是容器，而容器并不唯一，框架本身就提供了很多个容器的实现，大概分为两种类型：\n一种是不常用的BeanFactory，这是最简单的容器，只能提供基本的DI功能；\n一种就是继承了BeanFactory后派生而来的ApplicationContext(应用上下文)，它能提供更多企业级的服务，例如解析配置文本信息等等，这也是ApplicationContext实例对象最常见的应用场景。\n\nSpring容器最基本的接口就是BeanFactory。BeanFactory负责配置、创建、管理Bean，它有一个子接口ApplicationContext，也被称为Spring上下文，容器同时还管理着Bean和Bean之间的依赖关系。\n\n1.BeanFactory接口：\n 是Spring bean容器的根接口，提供获取bean，是否包含bean,是否单例与原型，获取bean类型，bean 别名的方法 。它最主要的方法就是getBean(String beanName)。\n\nBeanFactory 是 Spring 的“心脏”。它就是 Spring IoC 容器的真面目。Spring 使用 BeanFactory 来实例化、配置和管理 Bean。\nBeanFactory：是IOC容器的核心接口， 它定义了IOC的基本功能，我们看到它主要定义了getBean方法。getBean方法是IOC容器获取bean对象和引发依赖注入的起点。方法的功能是返回特定的名称的Bean。\nBeanFactory 是初始化 Bean 和调用它们生命周期方法的“吃苦耐劳者”。注意，BeanFactory 只能管理单例（Singleton）Bean 的生命周期。它不能管理原型(prototype,非单例)Bean 的生命周期。这是因为原型 Bean 实例被创建之后便被传给了客户端,容器失去了对它们的引用。\nBeanFactory有着庞大的继承、实现体系，有众多的子接口、实现类。来看一下BeanFactory的基本类体系结构（接口为主）：\n\n如果说BeanFactory是Spring的心脏，那么ApplicationContext就是完整的躯体了，ApplicationContext由BeanFactory派生而来，提供了更多面向实际应用的功能。在BeanFactory中，很多功能需要以编程的方式实现，而在ApplicationContext中则可以通过配置实现。\n\nApplicationContext：是IOC容器另一个重要接口， 它继承了BeanFactory的基本功能， 同时也继承了容器的高级功能，如：MessageSource（国际化资源接口）、ResourceLoader（资源加载接口）、ApplicationEventPublisher（应用事件发布接口）等。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2695,"question":"】BeanFactory和ApplicationContext二者区别？延迟加载注入bean，用到Bean时才对Bean加载实例化、容器启动时会一次性创建了所有的Bean","simplecontent":null,"content":"1.BeanFactroy采用的是延迟加载形式来注入Bean的，即只有在使用到某个Bean时(调用getBean())，才对该Bean进行加载实例化，这样，我们就不能发现一些存在的Spring的配置问题。而ApplicationContext则相反，它是在容器启动时，一次性创建了所有的Bean。这样，在容器启动时，我们就可以发现Spring中存在的配置错误。 相对于基本的BeanFactory，ApplicationContext 唯一的不足是占用内存空间。当应用程序配置Bean较多时，程序启动较慢。\nBeanFacotry延迟加载,如果Bean的某一个属性没有注入，BeanFacotry加载后，直至第一次使用调用getBean方法才会抛出异常；而ApplicationContext则在初始化自身是检验，这样有利于检查所依赖属性是否注入；所以通常情况下我们选择使用 ApplicationContext。\n应用上下文则会在上下文启动后预载入所有的单实例Bean。通过预载入单实例bean ,确保当你需要的时候，你就不用等待，因为它们已经创建好了。\n2.BeanFactory和ApplicationContext都支持BeanPostProcessor、BeanFactoryPostProcessor的使用，但两者之间的区别是：BeanFactory需要手动注册，而ApplicationContext则是自动注册。（Applicationcontext比 beanFactory 加入了一些更好使用的功能。而且 beanFactory 的许多功能需要通过编程实现而 Applicationcontext 可以通过配置实现。比如后处理 bean ， Applicationcontext 直接配置在配置文件即可而 beanFactory 这要在代码中显示的写出来才可以被容器识别。 ）\n3.beanFactory主要是面对与 spring 框架的基础设施，面对 spring 自己。而 Applicationcontex 主要面对与 spring 使用的开发者。基本都会使用 Applicationcontex 并非 beanFactory 。\nApplicationcontex 还有的功能\na. 国际化支持\nb. 资源访问：Resource rs = ctx. getResource(“classpath:config.properties”), “file:c:/config.properties”\nc. 事件传递：通过实现ApplicationContextAware接口","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:57","updateTime":"2021-05-26 00:52:57","isExist":null},{"id":2681,"question":"事务传播使用场景?","simplecontent":null,"content":"测试的异常一定是操作异常，不是int a=1/0；等异常，不是这样虽然也是运行时异常，但不是提交的异常\n1 PROPAGATION_REQUIRED :默认事务类型，如果没有，就新建一个事务；如果有，就加入当前事务。适合绝大多数情况。[关键点:是同一个事务]\n   场景:  \n不同的类,class1,class2\nclass1.fun1--->class2.fun2: fun1调用fun2 ,无论在fun1还是fun2里发生unchecked异常[不论是否catch处理异常],都会触发整个方法的回滚.\n \n2 PROPAGATION_REQUIRES_NEW：如果没有，就新建一个事务；如果有，就将当前事务挂起.[关键点:2个事务是单独的,没有依赖关系]\n  场景:\n class1.fun1--->class2.fun2: fun1调用fun2 ,\n如果fun2抛出异常且被catch处理,则fun2回滚,fun1不回滚.\n如果fun2抛出异常且没被catch处理,则fun2,fun1都回滚.\n如果fun1抛出异常,则fun1回滚,fun2不回滚. \nmain(){\n    TransactionManager tm = null;\n    try{\n        //获得一个JTA事务管理器\n        tm = getTransactionManager();\n        tm.begin();//开启一个新的事务\n        Transaction ts1 = tm.getTransaction();\n        doSomeThing();\n        tm.suspend();//挂起当前事务\n        try{这个捕捉只是默认，但是在增加try和catch才算是捕捉\n            tm.begin();//重新开启第二个事务\n            Transaction ts2 = tm.getTransaction();\n            methodB();\n            ts2.commit();//提交第二个事务\n        } Catch(RunTimeException ex) {\n            ts2.rollback();//回滚第二个事务\n        } finally {\n            //释放资源\n        }\n        //methodB执行完后，恢复第一个事务\n        tm.resume(ts1);\n        doSomeThingB();\n        ts1.commit();//提交第一个事务\n    } catch(RunTimeException ex) {\n        ts1.rollback();//回滚第一个事务\n    } finally {\n        //释放资源\n    }\n}\n\n \n3 PROPAGATION_NESTED：如果没有，就新建一个事务；如果有，就在当前事务中嵌套其他事务。[关键点:2个事务是依赖关系,fun2依赖fun1]\n  场景:\n class1.fun1--->class2.fun2: fun1调用fun2,\n如果fun2抛出异常且在fun1里catch处理了,则fun2回滚,fun1不回滚, 如果没有catch,则fun1也回滚.\n如果fun1抛出异常,则fun1和fun2都回滚.\nhttps://www.cnblogs.com/stxyg/p/5952736.html","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2682,"question":"事务传播记忆和区别?","simplecontent":null,"content":"方法a调用方法b时，b方式使用a还是创建，还是非事务，但是不会用自己的事务了\n1.支持当前事务。如果没有事务则开启一个新的事务\n2.支持当前事务。如果没有事务，则非事务的执行\n3.持当前事务。如果没有一个活动的事务，则抛出异常\n\n4.如果一个事务已经存在，则先将这个存在的事务挂起  创建一个新事务\n5.如果一个事务已经存在，则先将这个存在的事务挂起，总是非事务地执行\n6.如果一个事务已经存在，则抛出异常，总是非事务地执行\n\n1.如果一个活动的事务存在，则运行在一个嵌套的事务中。 如果没有活动事务, 则按TransactionDefinition.PROPAGATION_REQUIRED 属性执行。 \nhttps://blog.csdn.net/weixin_39625809/article/details/80707695","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2683,"question":"】什么叫事务传播行为？多个方法事务相互影响","simplecontent":null,"content":"《多个方法事务相互影响》\n即然是传播，那么至少有两个东西，才可以发生传播。单体不存在传播这个行为。\n事务传播行为指的就是当一个事务方法被另一个事务方法调用时，这个事务方法应该如何进行。 \nmethodA事务方法调用methodB事务方法时，methodB是继续在调用者methodA的事务中运行呢，还是为自己开启一个新事务运行，这就是由methodB的事务传播行为决定的。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2684,"question":"】Spring单例和多例实际效果？多例默认值不变、单例默认值是用前一个线程更改","simplecontent":null,"content":"@Controller\n@RequestMapping(\"/demo/lsh/ch5\")\n@Scope(\"prototype\")\npublic class MultViewController {\n    private static int st = 0;      //静态的\n    private int index = 0;    //非静态\n   \n    @RequestMapping(\"/test\")\n    public String test() {\n        System.out.println(st++ + \" | \" + index++);\n        return \"/lsh/ch5/test\";\n    }\n}\n单例的：\n0 | 0\n1 | 1\n2 | 2\n3 | 3\n4 | 4\n改为多例的：\n0 | 0\n1 | 0\n2 | 0\n3 | 0\n4 | 0\n最佳实践：定义一个非静态成员变量时候，则通过注解@Scope(\"prototype\")，将其设置为多例模式。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2676,"question":"】Get和post请求能接受requestbody吗？只能是post的json类型","simplecontent":null,"content":"只能是post的json类型才可以","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2677,"question":"】Get和post请求能接受PathVariable吗？都可以","simplecontent":null,"content":"都可以 包括json","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2678,"question":"Get和post请求能接受requestparam传参吗?","simplecontent":null,"content":"都可以，而且post类型下 不同content-type都可以，但是json进不去requestparam","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2679,"question":"】常见的post提交数据的方式？x-www-form、form-data、json","simplecontent":null,"content":"application/x-www-form-urlencoded、multipart/form-data、application/json、text/xml","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2680,"question":"】Get和post请求能接受无注解传参吗？","simplecontent":null,"content":"都可以","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:56","updateTime":"2021-05-26 00:52:56","isExist":null},{"id":2671,"question":"】@interface 作用？一个注解是一个类","simplecontent":null,"content":"java用  @interface Annotation{ } 定义一个注解 @Annotation，一个注解是一个类\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\n@Inherited\n@Documented\npublic @interface Transactional {","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:55","updateTime":"2021-05-26 00:52:55","isExist":null},{"id":2672,"question":"从spring容器中获取Bean的三种方式?","simplecontent":null,"content":"ApplicationContext app = new ClassPathXmlApplication(\"applicationContext.xml\");\n  //调用getBean方法,从容器中获取相应的bean \n  someService someService = app.getBean(\"someService\",SomeService.class);","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:55","updateTime":"2021-05-26 00:52:55","isExist":null},{"id":2673,"question":"获取所有的beans?","simplecontent":null,"content":"@Autowired\nApplicationContext applicationContext;\n\npublic void ff9() throws BeansException {\n    for(String beanName:applicationContext.getBeanDefinitionNames()){\n        //beanNames.add(beanName);\n        System.out.println(beanName);\n    }\n}","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:55","updateTime":"2021-05-26 00:52:55","isExist":null},{"id":2674,"question":"】spring多个AOP执行先后顺序？指定order，order越小越是最先执行","simplecontent":null,"content":"《指定order，order越小越是最先执行》\n指定order，order越小越是最先执行，这种也不能算是错，但有些片面。\n@Component\n@Aspect\n@Slf4j\n@Order(1)\npublic class MessageQueueAopAspect1{\n\t\n\n}\n\n需要在切面类上使用@Order注解，这里在校验的切面类中加入@Order注解，值为1，并在后面输入一个值，这个值越小的话优先级越高","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:55","updateTime":"2021-05-26 00:52:55","isExist":null},{"id":2675,"question":"get和post参数类型?","simplecontent":null,"content":"get请求的headers中没有content-type这个字段，post 的 content-type 有 ：\n\napplication/x-www-form-urlencoded \n这种就是一般的文本表单用post传地数据，只要将得到的data用querystring解析下就可以了\nmultipart/form-data ，用于文件上传，此时form的enctype属性必须指定为multipart/form-data。请求体被分割成多部分，每部分使用—boundary分割。\napplication/json，将数据以json对象的格式传递\ntext/xml","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:55","updateTime":"2021-05-26 00:52:55","isExist":null},{"id":2664,"question":"】Spring MVC的核心组件？","simplecontent":null,"content":"DispatcherServlet：中央控制器，把请求给转发到具体的控制类\nController：具体处理请求的控制器\nHandlerMapping：映射处理器，负责映射中央处理器转发给controller时的映射策略\nModelAndView：服务层返回的数据和视图层的封装类\nViewResolver：视图解析器，解析具体的视图\nInterceptors ：拦截器，负责拦截我们定义的请求然后做处理工作","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2665,"question":"】SpringMVC常用的注解有哪些？RequestMapping、RequestBody","simplecontent":null,"content":"@RequestMapping：用于处理请求 url 映射的注解，可用于类或方法上。用于类上，则表示类中的所有响应请求的方法都是以该地址作为父路径。\n@RequestBody：注解实现接收http请求的json数据，将json转换为java对象。\n@ResponseBody：注解实现将conreoller方法返回对象转化为json对象响应给客户。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2666,"question":"】SpringMVC怎么样设定重定向和转发的？转发是forward还是自己的、重定向是完全给别人","simplecontent":null,"content":"（1）转发：在返回值前面加\"forward:\"，譬如\"forward:user.do?name=method4\"\n（2）重定向：在返回值前面加\"redirect:\"，譬如\"redirect:http://www.baidu.com\"","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2667,"question":"】gateway 动态网关路由？动态从数据库查出来","simplecontent":null,"content":"我们需要自定义自己的路由存储，统一管理，全部路由配置都放在一起，除了一个默认的路由用于最后的默认拦截(其他路由断言匹配不上的统一走默认的格式返回)\n你可以将你的路由配置放到数据库、mongo、redis等等你方便的地方，这里我已文件系统为例介绍如何自定义路由配置存储。","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2668,"question":"】网关灰度发布是什么？将10%的请求转发到新的服务上，将90%的请求转发到旧的服务，等线上的新服务测试通过以后，就可以重新平均分配请求","simplecontent":null,"content":"微服务中，新版服务上线的时候，为了保证不出什么问题，可以将少量的请求转发到新的服务上，然后其他的请求还是转发到旧的服务上去，等线上的新服务测试通过以后，就可以重新平均分配请求。这种功能就称为灰度发布。\n \n要完成灰度发布，要做的就是修改ribbon的负载均衡策略，通过一些特定的标识，比如我们针对某个接口路径/gray/publish/test。将10%的请求转发到新的服务上，将90%的请求转发到旧的服务上，诸如此类，我们可以制定各种规则进行灰度测试。\n1.在生产上使用的时候，可以通过创建数据库表来动态配置负载均衡策略\nCREATE TABLE `gray_release_config` (\n   `id` int(11) NOT NULL AUTO_INCREMENT,\n   `server_name` varchar(255) DEFAULT NULL, //服务名\n   `path` varchar(255) DEFAULT NULL,//需要进行灰度发布的接口路径\n     `percent` int(11) DEFAULT NULL,//负载均衡策略，百分之percent的请求转发到forward上\n   `forward` int(11) DEFAULT NULL,//自定义元数据值\n   PRIMARY KEY (`id`)\n ) ENGINE=InnoDB DEFAULT CHARSET=utf8\n后每隔一段时间同步配置表中的信息，也就是写个定时任务。\n2.\n  @Override\n    public Object run() throws ZuulException {\n        RequestContext ctx = RequestContext.getCurrentContext();\n        HttpServletRequest request = ctx.getRequest();\n        String requestURI = request.getRequestURI();\n        if (requestURI.contains(\"/gray/publish/test\")){\n            int send = (int) (Math.random() * 100);\n            if (send >= 0 && send < 10) {\n                //也就是百分之10的请求转发到forward=1的服务上去\n RibbonFilterContextHolder.getCurrentContext().add(\"forward\", \"1\");\n//这句话就代表将请求路由到metadata-map里forward为1的那个服务\n            } else {\n                //百分之90的请求转发到forward=2的服务上去\n RibbonFilterContextHolder.getCurrentContext().add(\"forward\", \"2\");\n//这句话就代表将请求路由到metadata-map里forward为2的那个服务            }\n        }\n        return null;\n    }","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2669,"question":"AOP 面向切面的编程 （横向重复，纵向抽取）?","simplecontent":null,"content":"举例：拦截器（身份校验）、过滤器（编码处理）、动态代理（事务）","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2670,"question":"】事务底层原理？","simplecontent":null,"content":"　 　InvocationHandler.invoke方法将在被代理类的方法被调用之前触发。通过这个方法，我们可以在被代理类方法调用的前后进行一些处 理，如代码中所示，InvocationHandler.invoke方法的参数中传递了当前被调用的方法（Method）,以及被调用方法的参数。同 时，可以通过method.invoke方法调用被代理类的原始方法实现。这样就可以在被代理类的方法调用前后写入任何想要进行的操作。\n\n　 　Spring的事务管理机制实现的原理，就是通过这样一个动态代理对所有需要事务管理的Bean进行加载，并根据配置在invoke方法中对当前调用的 方法名进行判定，并在method.invoke方法前后为其加上合适的事务管理代码，这样就实现了Spring式的事务管理。Spring中的AOP实 现更为复杂和灵活，不过基本原理是一致的。\n\npublic class TxHandler implements InvocationHandler {\nprivate Object originalObject;\npublic Object bind(Object obj) {\n　this.originalObject = obj;\n　return Proxy.newProxyInstance(obj.getClass().getClassLoader(),obj.getClass().getInterfaces(),this);\n}\n\npublic Object invoke(Object proxy, Method method, Object[] args)\nthrows Throwable {\n　Object result = null;\n　if (!method.getName().startsWith(\"save\")) {\n　　UserTransaction tx = null;\n　　try {\n　　　tx = (UserTransaction) (new InitialContext().lookup(\"java/tx\"));\n　　　result = method.invoke(originalObject, args);\n　　　tx.commit();\n　　} catch (Exception ex) {\n　　　if (null != tx) {\n　　　　try {\n　　　　　tx.rollback();\n　　　　} catch (Exception e) {\n　　　}\n　　}\n　}\n} else {\n　result = method.invoke(originalObject, args);\n}\nreturn result;\n}\n}","filterContent":null,"type":"java-spring mvc","status":0,"createTime":"2021-05-26 00:52:54","updateTime":"2021-05-26 00:52:54","isExist":null},{"id":2659,"question":"】你能说下 idea 的常用几个快捷键吧？查找文件，撤销重做、查找关键词、删除当前行","simplecontent":null,"content":"Ctrl shift t、ctrl f、ctrl shift r\nCtrl+Z：撤销\nCtrl+Shift+Z：重做\nCtrl+X：剪贴\nCtrl+C：复制\nCtrl+V：粘贴\nCtrl+Y：删除当前行\nCtrl+D:复制当前行\nCtrl+Shift+J：将选中的行合并成一行\nCtrl+N：查找类文件\nCtrl+Shift+N：查找文件\nCtrl+G：定位到文件某一行\nAlt+向左箭头：返回上次光标位置\nAlt+向右箭头：返回至后一次光标位置\nCtrl+Shift+Backspace：返回上次编辑位置\nCtrl+Shift+反斜杠：返回后一次编辑位置\nCtrl+B：定位至变量定义的位置\nCtrl+Alt+B：定位至选中类或者方法的具体实现\nCtrl+Shift+B:直接定位至光标所在变量的类型定义\nCtrl+U：直接定位至当前方法override或者implements的方法定义处\nCtrl+F12：显示当前文件的文件结构\nCtrl+Alt+F12：显示当前文件的路径，并可以方便的将相关父路径打开\nCtrl+H：显示当前类的继承层次\nCtrl+Shift+H：显示当前方法的继承层次\nCtrl+Alt+H：显示当前方法的调用层次\nF2：定位至下一个错误处\nShift+F2：定位至前一个错误处\nCtrl+Alt+向上箭头：查找前一个变量共现的地方\nCtrl+Alt+向下箭头：查找下一个变量共现的地方\nCtrl+=：展开代码\nCtrl+-：收缩代码\nCtrl+Alt+=：递归展开代码\nCtrl+Alt+-：递归收缩代码\nCtrl+Shift+=：展开所有代码\nCtrl+Shift+-：收缩所有代码\nCtrl+Shitft+向下箭头：将光标所在的代码块向下整体移动\nCtrl+Shift+向上箭头：将光标所在的代码块向上整体移动\nCtrl+Alt+Shift+向左箭头：将元素向左移动\nCtrl+Alt+Shift+向右箭头：将元素向右移动\nAlt+Shift+向下箭头：将行向下移动\nAlt+Shift+向上箭头：将行向上移动\nCtrl+F：在当前文件中查找\nCtrl+R：替换字符串\nCtrl+Shift+F:在全局文件中查找字符串\nCtrl+Shift+R：在全局中替换字符串\nAlt+F7：查找当前变量的使用，并列表显示\nCtrl+Alt+F7：查找当前变量的使用，并直接对话框提示\nCtrl+F7：在文件中查找符号的使用\nCtrl+Shift+F7：在文件中高亮显示变量的使用\nCtrl+O：重写基类方法\nCtrl+I：实现基类或接口中的方法\nAlt+Insert：产生构造方法，get/set方法等\nCtrl+Alt+T：将选中的代码使用if，while，try/catch等包装\nCtrl+Shitf+Delete：去除相关的包装代码\nAlt+/：自动完成\nAlt+Enter：自动提示完成，抛出异常\nCtrl+J：插入Live Template 快速插入一行或者多行代码\nCtrl+Alt+J：使用Live Template包装\nCtrl+/：使用//注释\nCtrl+Shift+/：使用/**/注释\nCtrl+Alt+L：格式化代码\nCtrl+Alt+I：自动缩进行\nCtrl+Alt+O：优化import\nCtrl+]：快速跳转至诸如{}围起来的代码块的结尾处\nCtrl+[：快速跳转至诸如{}围起来的代码块的开头处\nCtrl+Shift+Enter：将输入的if，for，函数等等补上{}或者；使代码语句完整\nShift+Enter：在当前行的下方开始新行\nCtrl+Alt+Enter：在当前行的上方插入新行\nCtrl+Delete：删除光标所在至单词结尾处的所有字符\nCtrl+Backspace：删除光标所在至单词开头处的所有字符\nCtrl+向左箭头：将光标移至前一个单词\nCtrl+向右箭头：将光标移至后一个单词\nCtrl+向上箭头：向上滚动一行\nCtrl+向下箭头：向下滚动一行\nCtrl+W：选中整个单词\nCtrl+Shift+U：切换大小写\nShift+F6：重命名\nCtrl+F6：更改函数签名\nCtrl+Shift+F6：更改类型","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:34","updateTime":"2021-05-26 00:28:34","isExist":null},{"id":2660,"question":"】代码版本管理你们用的是啥？Git和svn","simplecontent":null,"content":"Git和svn","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:34","updateTime":"2021-05-26 00:28:34","isExist":null},{"id":2661,"question":"git rebase 和 merge 有什么区别？","simplecontent":null,"content":"","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:34","updateTime":"2021-05-26 00:28:34","isExist":null},{"id":2662,"question":"】你们公司加班多吗？多啊","simplecontent":null,"content":"多啊","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:34","updateTime":"2021-05-26 00:28:34","isExist":null},{"id":2663,"question":"指出下面程序的运行结果?","simplecontent":null,"content":"class A {\n \n    static {\n        System.out.print(\"1\");\n    }\n \n    public A() {\n        System.out.print(\"2\");\n    }\n}\n \nclass B extends A{\n \n    static {\n        System.out.print(\"a\");\n    }\n \n    public B() {\n        System.out.print(\"b\");\n    }\n}\n \npublic class Hello {\n \n    public static void main(String[] args) {\n        A ab = new B();\n        ab = new B();\n}\n父类静态方法，父类构造方法，自身静态方法，自身构造方法，使用上下接实例化调用顺序\n \n}\n答：执行结果：1a2b2b。创建对象时构造器的调用顺序是：先初始化静态成员，然后调用父类构造器，再初始化非静态成员，最后调用自身构造器。\n类ExampleA继承Exception，类ExampleB继承ExampleA，那么在try里throw捕捉ExampleB异常，那么catch捕捉ExampleA，finally捕捉Exception，最终返回什么\n34、类ExampleA继承Exception，类ExampleB继承ExampleA。\n有如下代码片断：\ntry {\n    throw new ExampleB(\"b\")\n} catch（ExampleA e）{\n    System.out.println(\"ExampleA\");\n} catch（Exception e）{\n    System.out.println(\"Exception\");\n}\n请问执行此段代码的输出是什么？\n答：输出：ExampleA。（根据里氏代换原则[能使用父类型的地方一定能使用子类型]，抓取ExampleA类型异常的catch块能够抓住try块中抛出的ExampleB类型的异常）","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:34","updateTime":"2021-05-26 00:28:34","isExist":null},{"id":2651,"question":"】为什么离职？\t换一下更好环境，太闲这样不好","simplecontent":null,"content":"《换一下更好环境，太闲这样不好》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2652,"question":"】最后你还想有什么了解吗？开发什么项目，使用框架，使用技术","simplecontent":null,"content":"《开发什么项目，使用框架，使用技术》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2653,"question":"】你未来3-5年的职业规划是怎样的？3-5年做到架构师，在更好平台发展","simplecontent":null,"content":"《3-5年做到架构师，在更好平台发展》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2654,"question":"】你们项目是怎么发布的？\t部署云服务器linux上","simplecontent":null,"content":"《部署云服务器linux上》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2655,"question":"】jmeter查看情况？查看结果树，聚合报告","simplecontent":null,"content":"《查看结果树，聚合报告》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2656,"question":"经常访问的技术网站？csdn，最代码，码云，java开源大全，springcloud中国社区和官方文档","simplecontent":null,"content":"《csdn，最代码，码云，java开源大全，springcloud中国社区和官方文档》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2657,"question":"】平时浏览的书籍？springcloud微服务实战，springboot深入浅出","simplecontent":null,"content":"《springcloud微服务实战，springboot深入浅出》","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2658,"question":"】你有什么问题想问我的吗？公司项目架构、新项目有吗，加班情况、薪水待遇情况、团体活动怎么样、存在发工资延迟吗","simplecontent":null,"content":"1、自我介绍、工作经历、技术栈\n2、项目中你学到了什么技术？\n3、微服务划分的粒度？\n4、微服务的高可用怎么保证的？\n负载均衡与反向代理，隔离，限流，降级，超时与重试，回滚，压力测试与应急预案\n5、常用的负载均衡，该怎么用，你能说下吗？","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:33","updateTime":"2021-05-26 00:28:33","isExist":null},{"id":2650,"question":"】谈谈你对加班的看法？\t根据项目进度完成，同时规划好进度","simplecontent":null,"content":"《根据项目进度完成，同时规划好进度>","filterContent":null,"type":"java-其它问题","status":0,"createTime":"2021-05-26 00:28:32","updateTime":"2021-05-26 00:28:32","isExist":null},{"id":2649,"question":"粉刺不挤自己会消掉吗?","simplecontent":null,"content":"首先粉刺不建议挤，因为粉刺挤了之后可能造成粉刺炎症向周围、深部发展，还会导致毛孔粗大。其次不采取积极的措施治疗，粉刺是很难自动消失的，建议在医生的指导下使用维A酸乳膏、阿达帕林凝胶等改善皮肤角化过度情况，从而减轻粉刺。还可以自行使用一些含有果酸、杏仁酸或者水杨酸的护肤产品，也可以改善粉刺的症状。 在日常生活中还需要规避会引起粉刺加重的因素，比如经常熬夜、精神压力过大，食用过多肥甘肉厚的食物等，改善这些因素后，皮脂分泌会变少，所以可以改善病情，还可以预防粉刺的产生。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:56:54","updateTime":"2021-05-25 18:56:54","isExist":null},{"id":2648,"question":"粉刺不挤自己会消掉吗?","simplecontent":null,"content":"病情分析：粉刺如果不挤很难自己消退，因为所谓的粉刺其实是面部痤疮，属于比较轻微的面部痤疮。这种粉刺是局部的皮脂分泌油脂过多油脂难以排出，固化而形成的。治疗不建议经常挤，因为挤虽然可以排出部分固化的皮脂，但是不能解决根本问题。一般建议每天用温水沾的洗面奶轻揉局部，一般每次洗脸在5分钟以上，一天就要洗两次，连续一个月以上时间可以有效去除粉刺，另外也可以酌情使用维生素b6软膏。\n\n\n概述：\n粉刺不挤，自己也能慢慢消退，但是过程会很慢，会很久。不挤粉刺，是为了防止发生皮肤感染，挤粉刺，容易使细菌进入粉刺内，增加感染机会，特别是如果手的清洁不到位，使用脏手挤粉刺，会增加发生感染的机会，导致粉刺加重。\n\n对于已经发生的粉刺，建议可以使用外涂药物，进行消炎、消肿治疗，还能加快粉刺康复的速度。常用的外用药物有，明康欣阿达帕林凝胶，轻轻一涂，方便，快捷。清洁皮肤后，涂上明康欣阿达帕林凝胶，观察药物效果，注意有无不良反应。\n\n相关知识：\n粉刺皮肤，一定特别注意皮肤护理。比如皮肤的保湿，并不是皮肤油脂很多，就不需要保湿了，保湿护肤品并不会导致皮肤更油，只会增加皮肤的湿润度，减少皮肤敏感，促进水油平衡。\n\n粉刺的产生，主要原因是由于皮肤的皮脂腺分泌旺盛，导致皮脂腺淤积，堵塞毛孔，加之清理不当，引起粉刺发生。\n\n对于粉刺治疗，日常皮肤护理更加重要。每天温水洗脸，急性炎症期，尽量少用化妆品，或者不化妆。避免粉剂类、霜剂类化妆品，因为清理不当，导致堵塞毛孔，加重皮肤的负担。\n\n常识：\n油性肌肤，在使用控油的洗面奶后，皮肤会发生缺水，容易出现皮肤干燥，皮肤在干燥的情况下，就会分泌更多的油脂来保护皮肤，这样就会使粉刺增加。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:56:05","updateTime":"2021-05-25 18:56:05","isExist":null},{"id":2647,"question":"怎么判断荨麻疹和湿疹?","simplecontent":null,"content":"荨麻疹的特点它是全身起红斑、风团。风团的特点就是突然的发生，突然的消退，并没有什么固定的地方，而且消退之后局部一般是不留下任何的痕迹的。\n\n对于这种湿疹而言，那么它可以分为急性湿疹、慢性湿疹、亚急性湿疹的不同的表现。在急性期，可能会出现边界不清的红斑、丘疹、水疱，往往还会有渗液、糜烂等等表现；在慢性期皮肤会出现肥厚、粗糙、苔藓样变、脱屑等等症状，往往还会留下局部皮肤上的色素沉着、色素减退等等。这一个和荨麻疹是显著不同的，所以两者不难区分。\n\n荨麻疹和湿疹都是常见的过敏性皮肤病，但在临床表现上还是是有显著不同的，也是比较容易区分的。\n\n\n\n湿疹和荨麻疹均为变态反应性疾病，与过敏因素有关，具体区别如下：\n\n1.荨麻疹的皮疹主要是风团为主，或者出现水肿性红斑，并且皮肤划痕症阳性。荨麻疹的皮疹特点是发无定处，时起时消，消退无痕，一般在24小时内可以消退，但可以反复发作。\n\n2.湿疹的皮疹表现主要是多形性的皮疹，可以出现红斑，丘疹，糜烂，渗出，结痂，抓痕，鳞屑，苔藓样变等。湿疹皮疹相对稳定，不会时起时退，也不会24小时就能消退。\n\n共同点基本都是由于过敏或者感染引起的，治疗也都是抗过敏治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:34:02","updateTime":"2021-05-25 18:34:02","isExist":null},{"id":2646,"question":"去美容院挤痘痘好吗？","simplecontent":null,"content":"我的是自己fu面膜，水膜，，两三天痘痘就消了，做好清洁，调理好饮食一般都不会一直长痘。敏感肌是可以调理好的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:26:03","updateTime":"2021-05-25 18:26:03","isExist":null},{"id":2645,"question":"是否需要到美容院挤痘痘?","simplecontent":null,"content":"病情分析：\n对于这个痘痘来说，不能够用手挤压的正常的涂抹药膏就能够恢复，并且他也能够自行吸收的，越是积压越容易增大，而且越容易留下这个色素沉着或者是疤痕的表现的。\n\n当然可以去美容院啦，千万不能在家里自己挤，在家里消毒不够，方法不对，容易留疤痕的。\n不过要解决根本的问题，就要找到是什么原因导致的痘痘，对症下药才能彻底根治。\n长痘的原因：上火、肠胃不好、血热、肺热、内分泌失调、等等。每种原因的对症方法都不一样。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:23:57","updateTime":"2021-05-25 18:23:57","isExist":null},{"id":2644,"question":"痘痘可以去美容院挤吗？","simplecontent":null,"content":"病情分析：痘痘可以去美容院挤，不过最好选择一家正规的美容院，一般是在严格的无菌操作下进行针清治疗，不要随意挤压痘痘，以免留下感染加重，留下痘印。长痘期间注意饮食清淡，避免辛辣刺激性食物，多喝水。要保持充足的睡眠，避免熬夜，保持良好的心态。\n\n病情分析：因为痤疮是一个炎症，乱挤乱挑很多时将痤疮杆菌挤到皮肤更深的地方，炎症的范围加大，特别使一些美容院的美容师素质较差，消毒意识不强，结果造成面部的感染脓肿，这种病例经常见到。\n\n若问去美容院挤痘痘好吗?首先，需要明确的是医学上不提倡随意挤痘痘的。因为挤痘痘的过程中需要用到暗疮针挑破痘痘并且挤压皮肤，这会破坏到个人的肌肤皮质层，很有可能导致痘印的产生。而且，在美容院挤痘痘过程中还会伴有刺痛感，给个人造成心理压力。更值得注意的是，一些美容院的卫生环境或资质都让人堪忧，一旦操作错误或是消毒卫生做不到位，会导致顾客受到感染，而一些挤痘痘的工具不经消毒而又交叉使用，更可能会导致顾客感染到其他疾病。当然，对于长痘痘的人是可以选择适当去美容院做肌肤护理的，这对于个人消除痘痘有很大的帮助，不过，就是不建议在皮肤护理期间去人为的挤痘痘，这样的行为不利于痘痘肌肤的康复。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:21:50","updateTime":"2021-05-25 18:21:50","isExist":null},{"id":2643,"question":"女生礼仪包括哪些?","simplecontent":null,"content":"座椅，脚姿，弄头发姿势","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:17:49","updateTime":"2021-05-25 18:17:49","isExist":null},{"id":2642,"question":"吃粉肠的危害?","simplecontent":null,"content":"少量吃一些粉肠并没有什么危害性，但是如果经常性的食用粉肠，就容易导致出现有血管硬化。\n\n主要就是因为粉肠中含有大量的饱和脂肪酸和胆固醇，这样就很容易导致猪油大量进入人体，附着在血管壁，容易引起血管硬化，导致血管狭窄，也容易导致一些心脑血管等异常疾病的发生，就容易诱发脑梗和心梗等情况。\n\n如果吃粉肠比较多，建议多搭配新鲜的蔬菜和水果，同时配合适当运动锻炼。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:14:48","updateTime":"2021-05-25 18:14:48","isExist":null},{"id":2641,"question":"粉肠和猪小肠里面要洗吗？","simplecontent":null,"content":"粉肠里面的粉要洗吗\n如果是粉肠就不能洗，里面的粉营养成分非常之高，只要烫下开水就可以了，如果是小肠就要把里面的东西洗干净，不然会苦的，买的时候问清楚就行了。\n\n小肠的处理 ：需在翻过来用盐反复搓洗干净。再下锅煮熟或者其它做法。\n\n粉肠的处理 ：不用翻过来，直接用盐先腌制10分钟，再清洗干净，然后热水下锅让其成型再切成段。这样里面的粉不容易流出来。 切好后直接可以下汤里煮，2分钟就熟。爽口脆嫩。原味汤粉王的粉肠就是这样处理的。\n\nspace\n粉肠里面要洗吗？粉肠怎么洗才干净？\n\n粉肠清洗步骤\n1、把粉肠的一端，接在水龙头上，打开水龙头，让水把粉肠里面的脏物冲走。\n\n2、冲洗至水变清以后就关水，加入1勺盐在粉肠上面：用手反复地抓挤，直到盐全部融化，就用水重新干净：再重复放一次盐，重复抓挤至盐融化，冲洗干净。\n\n3、撕掉边上白色的东东（很多人喜欢不撕掉），把粉肠反过来，重复第一个步骤，接在水龙头上用水冲洗：关水以后，放上1勺生粉：用手抓挤十几下，然后用水冲洗干净；再放一次生粉，重复抓挤十几下，再洗干净。\n\n4、锅里倒2碗水，加入1汤匙料酒，把粉肠放进去，煮至水开后1分钟，把粉肠捞起。\n\n5、把粉肠切段，再放入1勺盐和1勺生粉，再抓挤十几下，然后冲洗干净就完全没异味了。\n\nspace\n粉肠里面要洗吗？粉肠怎么洗才干净？\n\n粉肠快速清洗方法\n烹调猪小肠最重清洗的功夫。由于小肠内有层黏膜，如果不将其洗净，会有股腥臭味，所以清洗的功夫相当重要。彻底洗净猪小肠的方法有很多种，较简单的便是将猪小肠浸泡在可乐、苏打水或是明矾水中半小时，浸泡过后再用清水洗净，这样便能轻松地去除黏膜。浸泡过苏打水的猪小肠用开水汆烫后再烹煮，吃起来不但脆脆的，还能防止吐水变色。而另外一种方法也相当容易，可以利用色拉油（或回锅油）、面粉、醋或青蒜尾任意一种材料来搓洗猪小肠，洗过后再用清水将搓洗下来的杂质冲洗干净便可。\n\n粉肠煮多久才熟\n要看你是怎么吃了。如果是想杀菌、煮熟，建议在水开后小火煮上15到20分钟。既能保证杀菌，有可以保证小肠不会太烂，味道也比较好。此外，在炖的时候要掌握好火候，避免粉肠炖不熟或者炖烂了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:14:02","updateTime":"2021-05-25 18:14:02","isExist":null},{"id":2640,"question":"猪小肠和苦肠是一个东西么 ?","simplecontent":null,"content":"不是的   \n苦肠:小肠下接盲肠俗称苦肠，盲肠下接细肥肠","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:10:02","updateTime":"2021-05-25 18:10:02","isExist":null},{"id":2639,"question":"猪小肠为什么会苦?","simplecontent":null,"content":"1\n残留了苦肠\n猪小肠中一段花油里面夹着一根分泌胆汁的导管，通常也称为 “苦肠”。我们都知道胆囊分泌的汁液是苦的，如果屠工没将其管道摘除干净，买回家后又没有注意到，炒出来的小肠就会带有苦味。\n\n2\n胆汁分泌过剩\n有的猪在生长时，由于某种原因单子分泌过剩或通路不畅，使得猪小肠、猪大肠等消化器官，胆汁聚集过多，会使得猪小肠苦味增加。\n\n3\n清洗不当引起\n猪小肠里面有很多消化液及食物残渣，这些消化液是有苦味和腥臭味的，在清洗这些粘液的时候，既要确保粘液被彻底洗干净了，同时也要避免揉搓太久，弄破黏膜而引起肠发苦。\n\n4\n猪小肠苦能吃吗\n一般是能吃的。\n\n大多数情况猪小肠发苦，是因为“苦肠”，这是猪肠中特定的一段，除了口感不太好意外，对健康没有大碍，是可以吃的。而且多数只是很小的一部分，不会全部都是苦的。\n\n5\n猪小肠怎么清洗不发苦\n第一步\n\n把新鲜的猪小肠买回家以后，不要急于清洗，先放入冰箱冷藏一小时左右再开始清洗。这样，去除肥油的时候会更快更方便。\n\n第二步\n\n用手捋去小肠中的污秽，然后摘掉小肠表面的大片肥油，但不用除得太干净，小肠要带点油脂更好吃。\n\n第三步\n\n准备一盆温热水，把整根猪小肠放入热水中烫一下，然后捞出。\n\n第四步\n\n将小肠的一端的开口往外翻一点，将翻开的一端抵住筷子。然后，顺着筷子将小肠往筷子上套，一边套一边往筷子尾端捋，直到小肠的另一端也穿过筷子的头部。\n\n第五步\n\n一端拉着筷子的头部，另一手拉着筷子上小肠。拿着筷子的手和抓小肠的手往反方向拉。筷子抽出后，顺势翻出余下的小肠，直到小肠翻个面。\n\n第六步\n\n翻好面的小肠用温水漂洗一遍，去除污秽和部分粘液。然后再准备一盆干净的温水，加入适量的醋、料酒、以及地瓜粉（或者面粉也可以），用手充分揉搓，但这个过程不要太","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:09:11","updateTime":"2021-05-25 18:09:11","isExist":null},{"id":2638,"question":"粉肠和小肠的区别？","simplecontent":null,"content":"粉肠和小肠的区别在于两者的位置和口感不同。\n\n一、位置不同\n\n粉肠和小肠都是猪的小肠，但是粉肠处在胃接下来的一段，也就是整条肠子的前半段，而小肠在肠子的后半段。\n\n二、口感不同\n\n粉肠含有的脂肪多，吃下去有些粉状的口感，而形状则像肠一样，所以取名叫粉肠，而小肠只要是不煮的过于长久，吃起来会更筋道一些。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:06:27","updateTime":"2021-05-25 18:06:27","isExist":null},{"id":2637,"question":"猪肠中的猪大肠、猪小肠、生肠、苦肠、肠套都是什么肠，有什么区别，用途怎样？","simplecontent":null,"content":"猪中有各种肠，有的网友经常分不清，也不知道各自的用途和区别。\n\n那么猪肠中的猪大肠、猪小肠、生肠、苦肠、肠套都是什么肠，有什么区别，用途怎样？\n\n答案抢先看：\n猪大肠指盲肠、结肠和直肠，也称为肥肠，猪的小肠从与胃的连接部分开始，依次为十二指肠、空场、回肠，猪的小肠靠近胃的一段称为粉肠，靠后一段的称为苦肠；猪生肠，准确来说是指母猪的整副子宫，但是我们通常能吃到的部位多为输卵管；苦肠就是猪小肠的后半段，以上几种肠都是常见的猪内脏副食品。\n\n而肠套通常指猪肠套叠，是一种常见的猪病现象，大多发生在哺乳后不久的仔猪，套叠的肠段以十二指肠和空肠较为常见。\n\n\n【猪大肠】\n\n猪肠是用于输送和消化食物的，有很强的韧性，还有适量的脂肪，大体可分为猪大肠、猪小肠和肠头，它们主要的区别在于脂肪含量不同，小肠最瘦，肠头最肥，近猪肛门部分的猪肠就是猪肠头。\n\n其中，猪大肠是指盲肠、结肠和直肠，也称为肥肠，是一种常见的猪内脏副食品。\n\n\n（图为猪大肠）\n\n【猪小肠】\n\n猪的小肠从与胃的连接部分开始，依次为十二指肠、空场、回肠，猪的小肠靠近胃的一段称为粉肠，靠后一段的称为苦肠。\n\n猪的小肠也是一种常见的猪内脏副食品，但其胆固醇含量较高，每100克就含胆固醇183毫克[1]，因此肥胖、血脂偏高者、动脉粥样硬化的人不可长期大量食用。\n\n\n（图为猪小肠）\n\n【生肠】\n\n猪生肠，准确来说是指母猪的整副子宫，在某些地方也叫猪花肠，也是一种常见的猪内脏副食品。但是我们通常能吃到的部位多为输卵管，由于输卵管的形状与猪肠比较相似，而且又是负责生殖功能的部位，所以人们就把母猪的输卵管简单称为生肠。\n\n\n（图为猪生肠）\n\n　　我们买到的猪生肠，通常是很粗的一段连着两根比较细的分支，其中较粗的部分就是退化的猪子宫，而两根较细的就是输卵管。因为母猪在很小的时候就被阉割，摘掉了卵巢，没有卵巢的作用，子宫不可能正常发育从而退化，后来便成了餐桌上的猪生肠啦。\n\n\n（图为猪的输卵管）\n\n【苦肠】\n\n猪前段的小肠（胃接下来的这一段）称粉肠，而后段的猪小肠就叫做苦肠，猪的苦肠也是一种常见的猪内脏副食品。\n\n猪的苦肠是猪的小肠中靠后的一段，因为小肠是主要的消化吸收场所，里面有胆囊分泌的胆汁，胰腺分泌的胰液、还有肠液，而胆汁中的胆盐都具有苦味，所以俗称“苦肠”。\n\n\n（图为苦肠）\n\n【肠套】\n\n肠套通常指猪肠套叠，是一种常见的猪病现象","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:05:25","updateTime":"2021-05-25 18:05:25","isExist":null},{"id":2636,"question":"粉肠和苦肠的区别?","simplecontent":null,"content":"图片上为粉肠。粉肠与苦肠的唯一区别是位置不同，具体如下：\n\n（1）、有很多血筋的是粉肠。猪前段的小肠（胃接下来的这一段）称粉肠。\n\n\n\n（2）、没有血丝的是苦肠。后段的猪小肠就叫做苦肠，猪的苦肠也是一种常见的猪内脏副食品。猪的苦肠是猪的小肠中靠后的一段，因为小肠是主要的消化吸收场所，里面有胆囊分泌的胆汁，胰腺分泌的胰液、还有肠液，而胆汁中的胆盐都具有苦味，所以俗称“苦肠”。\n\n\n\n扩展资料\n\n北方的粉肠：\n\n在中国北方，粉肠亦是指北京、河北及东北内蒙古等地区流行的用淀粉糊混合猪五花肉或是猪瘦肉等作为馅料，并灌注在普通肠衣中蒸煮后晾干或是熏干而成的一种香肠制食品，如加入大蒜等馅料则成为蒜肠，有人考据这是由居住东北的白俄带来的俄式食品。\n\n在黑龙江，这种香肠与哈尔滨红肠并不相同，其味道与松仁小肚略相似，但比松仁小肚味淡质软，非常受大家的喜爱，已成为黑龙江的一道物产。\n\n南方的粉肠：\n\n原指淀粉与各种调料混合后灌入肠衣蒸熟的食品。粉肠是中国广东和香港的一种食品。要有好吃的粉肠，在屠宰前必须让猪只空腹，此段肠子就会有消化液等，所以煮的时候并不需要翻肠子出来洗净，而后段肠子就必须整条倒翻过来洗。\n\n一般说的粉肠是指猪的粉肠。虽然牛也有粉肠，但因为质感欠佳，所以很少被人食用。\n\n参考资料：百度百科-粉肠\n\n参考资料：百度百科-苦肠\n\n\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:03:13","updateTime":"2021-05-25 18:03:13","isExist":null},{"id":2635,"question":"如何腌制瘦肉?","simplecontent":null,"content":"加入姜丝，盐油，淀粉，料酒拌匀腌制15分钟。\n\n锅里烧开水，放入猪肝，瘦肉，粉肠煮2分钟。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:01:56","updateTime":"2021-05-25 18:01:56","isExist":null},{"id":2634,"question":"及第汤的正宗做法?","simplecontent":null,"content":"三及第汤是一道汉族小吃，属于客家菜。在科举取仕时代，状元、榜眼、探花为 殿试头三名，合称三及第。林召棠（清朝状元）用猪肝、瘦肉、猪肚子三种猪内脏比作三及第，三及第汤由此而得名。客家人将三及第配上枸杞叶、咸菜等辅料，再加上几滴酒糟，便做成了味道鲜美、营养丰富的三及第汤。一碗三及第，加上一大碗的腌面，这样丰富的早餐是许多梅州客家人的最爱。\n\n工具/原料\nmore\n粉肠 (100g)\n方法/步骤\n食材\n\n主料\n\n粉肠\n\n100g\n\n猪肝\n\n100g\n\n猪瘦肉\n\n150g\n\n\n\n辅料\n\n油\n\n适量\n\n盐\n\n适量\n\n枸杞叶\n\n适量\n\n姜\n\n适量\n\n胡椒粉\n\n适量\n\n \n\n1.备好主料,粉肠,瘦肉和猪肝;\n\n\n2.猪肝肝和粉肠分别用生粉,料酒洗净,去味,切片和切小段;\n\n\n3.瘦肉切片并用油盐腌一下;\n\n\n4.汤锅里入少许油,下姜片爆香一下;\n\n\n5.然后倒入瘦肉,粉肠和猪肝,稍为爆一下,不爆也是可以的,水开再放;\n\n\n6.然后加入适量的开水;\n\n\n7.煮开,撇去浮沫,然后转小火煲约半小时左右;\n\n\n8.正在煮汤的时候可以把枸杞叶洗净,沥干;\n\n\n9.汤好了,下枸杞叶煮软;\n\n\n10.下盐和胡椒粉调味即可。\n\n\n11.盛起享用吧,配着一碗腌面就是客家人美美的早餐。\n\n\n注意事项\n粉肠和猪肝都一定要洗净,不然有异味,影响到整锅","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 18:00:21","updateTime":"2021-05-25 18:00:21","isExist":null},{"id":2633,"question":"如何煮肉比较软?","simplecontent":null,"content":"其次要保证软的话，那就需要先腌制一下，这样做出来的猪肉才软滑。腌制的时候要先放盐、生抽、胡椒粉，充分抓匀，让肉入味，然后加淀粉并放少量香油抓匀。根据个人的口味制作，如果不虚幻胡椒粉的味道的话，可以不放，但是要记住一点，那就是淀粉必须放，不过也可以用其他的生粉代替，这样才能保证瘦肉吃起来会比较软。\n\n最后就是炒的步骤了，这一步也很关键，炒的时候，锅要先烧热，热锅冷油，这样才不粘锅，油烧到七成热，放入肉，翻炒均匀。如此做出来的一道瘦肉才能像饭店那样又嫩又软。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 17:58:21","updateTime":"2021-05-25 17:58:21","isExist":null},{"id":2632,"question":"如何去掉瘦肉的臭味?","simplecontent":null,"content":"用料酒和酱油腌，炒得时候用点醋或者料酒爆锅，应该会减轻肉的异味\n\n在夏天时候，如果肉不能够及时吃完，那么放置一天就可以出现发臭情况，有些人会把臭掉肉扔，而很多一些节省的人群会将肉经过一些小加工小处理。把肉上的臭味去掉之后还能够在食用，用水煮是一种方法，其实用盐水浸泡有臭味的肉，也能够起到去异味作用。\n\n\n\n用白酒浸泡臭的肉，并且反复进行清洗。大概在15分钟左右再用清水泡一泡，这样肉里的臭味就可以完全消除。另外用白醋也可以去掉肉上臭味，当然与用白酒清洗臭肉方法是一样的。能够得到的效果也是一样，所以大家都可以试一下。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 17:56:10","updateTime":"2021-05-25 17:56:10","isExist":null},{"id":2631,"question":"瘦肉有点臭，怎样去味？","simplecontent":null,"content":"1、焯水是减轻肉臭味的好方法，要采用冷水焯肉，不能用热水或是沸水焯，否则异味会固封在肉里。焯水时加点盐，肉熟透后，把肉捞起来，然后用清水冲洗一下，即可去掉大部分异味。\n2、盐处理也是去除肉类腐臭的好方法，未经处理的轻异味肉类，先用大量盐腌渍三四小时，然后用浓盐水浸泡一小时，再用清水浸泡一小时，即可去掉大部分臭味。对于焯水过肉类，可以放盐水里浸泡半小时左右，最后捞起来清水再浸泡半小时。\n3、酒洗也可以除腐臭味，用度数比较高的白酒反复搓洗肉类，或用白酒泡着，可以用白酒兑水搓洗。用酒搓洗后，再用清水冲泡十五分钟左右。\n4、白醋也是去除肉类腐臭味的好东西，对于未经处理的异味肉类，可以用白醋兑水来搓洗，最后再用清水泡洗十五分钟左右。也可以用过醋水热河的方法来除臭，具体做法就是平时烹饪的焯水，只不过是用白醋兑水来进行焯水而已，要用冷焯水。\n5、酸味水果也是除臭的好东西，找来酸味柠檬、杨桃之类的酸味水果，可以打成浆，适当兑点水，然后对肉类进行搓洗，再用清水浸泡十五分钟，也可以把酸味水果切片，加到锅里，再加水，对肉类进行冷焯水。\n6、橘子皮、柠檬皮或是柠檬叶，也可以除臭，柠檬叶效果最佳。把柠檬叶等放锅里，加冷水，然后把肉类倒进锅里煮熟透，最后把肉捞起来清水浸泡半小时左右。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 17:55:08","updateTime":"2021-05-25 17:55:08","isExist":null},{"id":2630,"question":"为什么每次炒瘦肉都炒得老，总是炒不出很嫩的?","simplecontent":null,"content":"很多新手炒猪肉的时候都会碰到一些问题，炒不嫩或者粘锅了，下面跟喜欢自己动手炒肉的新手们介绍一些简单实用的方法。\n1.众所周知的办法——淀粉法\n将肉片切好后，倒入适量淀粉抓匀，放约15分钟再下锅炒，炒出来的肉非常嫩，而且不腻。\n2.冻肉的特别办法——盐水法\n冷冻猪肉可以用高浓度的盐水来解冻，成菜后肉质爽嫩。\n注意：冷冻猪肉不能用热水来解冻。用热水解冻，会使猪肉会失去一部分蛋白质和其香味物质，还会生成丙醛，而丙醛是一种强致癌物。选择将冷冻猪肉放在盐水里解冻，可以缩短解冻时间，也能保持猪肉的鲜嫩。\n3.你可能不知道的办法——加蛋清法\n先将猪肉切成肉丝或者是肉片，然后拿一个鸡蛋，敲一个小口子，让鸡蛋清流出来，滴在装肉的碗里，搅拌均匀后放十来分钟，再下锅炒。\n4.值得一试的办法——食油法\n在切好的猪肉丝里，加入一勺食用油拌匀，放几分钟后炒，也能解决你猪肉怎么炒才嫩的问题。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 17:53:44","updateTime":"2021-05-25 17:53:44","isExist":null},{"id":2629,"question":"为什么恒河水那么脏，印度人还说是治病?","simplecontent":null,"content":"这个就是一种信仰问题，印度人把恒河当做母亲河，恒河水当做圣水这都是印度佛教的一种信仰。相当于我们把黄河当做我们的母亲河一样，只不过前者更加注重的信仰，而后者更加关注的是发源。\n\n因为当时印度的开放水平不高，教育水平也是很低。人们都没有最基本的常识，只是相信封建迷信。觉得恒河水是他们的母亲河。\n\n为他们认为这是母亲河。\n\n说到印度，这对我们的人民来说是一个神秘的国家。仅就人口而言，印度是仅次于我们国家的世界第二大国家。而且，略有超过中国的趋势。根据目前的出生率，印度的人口将在不到十年的时间内超过中国。就像中国文化中黄河和长江的地位一样，印度恒河在印第安人心目中的地位是无与伦比的。运用口号，父亲和母亲比恒河更好，恒河是印第安人的母亲河。事实证明，在印度教的宗教神话中，恒河是最接近天堂的地方，灵魂是每个印度教徒的最佳目的地。\n\n\n\n恒河之水是圣水的主要原因是恒河起源于青藏高原阿里地区的玛法木错湖，这个湖泊是中国最透明的湖泊，湖心的透明度达到14米。 被视为印度教中的圣湖，这里是藏传佛教，，拜尼教和印度教的圣地。相传这是印度湿婆神的湿婆神。恒河水来自圣湖，所以整个河水都是圣水。无数印度教徒会去恒河洗澡，喝恒河水以消除灾难。尽管恒河的水质不能令人满意，但在印度教徒的心中，它是圣水。\n\n\n\n参观印度圣城瓦拉纳西的游客会发现，恒河的火葬和水葬受到了严重污染，但是仍然有很多印度人选择洗澡，洗衣服甚至喝恒河水。这条河曾经被认为是该国最脏的河，一位中国游客由导游带领前往恒河，想和恒河水试饮，但被导游拦住，说喝恒河水肯定会腹泻。跟他们一起来的游客很好奇，为什么印第安人可以喝恒河水呢？向导说了实话。不是印度人喝恒河水。实际上，许多印第安人每年因喝恒河水而生病。仅仅因为他们的身份，他们一直认为恒河水是世界上最干净的水。如果他们不是虔诚的信徒，恐怕我不会喝。因此，他们很少怀疑这是恒河的问题。当然，也有很多外国游客试图喝恒河。美国人、中国人喝了之后都无一例外的闹肚子。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 17:52:15","updateTime":"2021-05-25 17:52:15","isExist":null},{"id":2628,"question":"7．寻找出路式？","simplecontent":null,"content":"例1：甲：您就帮我把这件事办了吧！ 乙：这件事我实在没有时间帮你去办了，你不妨去找××试试。 例2：甲：这份资料，我能借用几天吗？ 乙：对不起，这份资料我这几天还要用，不过图书馆里还有一份没有借出去，你赶快去还可以借到。 招式妙诀：当对方确有为难之事求助于你，你又无法承担或不想插手时，可以用为对方另找其他出路的方法，来弱化可能产生的不愉快。对方有了其他“出路”，就会对你的回绝不在意了。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 12:30:27","updateTime":"2021-05-25 12:30:27","isExist":null},{"id":2627,"question":"◎滴水不漏的回绝5法?","simplecontent":null,"content":"1．诱导法 甲向乙打听机密事件，乙神秘地问：“你能保密吗？”甲说：“能。”乙接着说：“你能，我也能。”\n\n2．推托法 “前几天经理刚宣布过，不准任何客户进仓库，我怎能带你去呢？” “这个问题涉及好几个人，我个人决定不了。我把你的要求带上去，让人事部讨论一下，过几天答复你，好吗？” “这件事我做不了主，我把你的要求向领导反映一下，好吗？” \n\n3．委婉法 “这个设想不错，只是目前条件不成熟。” “这倒是个好办法，但我的上司恐怕接受不了。” “主意不错，可惜我那天正好出差在外。” \n\n4．隐晦法 “小伙子，我真难以想象公司少了你会怎样，不过我从下星期一开始想试试看。” “贵公司地理环境不太好，我看另一家公司可能更适合举办这次活动。” \n\n5．虚实法 问：“中国能拿几块金牌？”答：“到时候就知道了。” 问：“有人认为贵公司不可能按时交货。”答：“他们有充分的言论自由，他们想怎么说，就怎么说吧。”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 12:28:20","updateTime":"2021-05-25 12:28:20","isExist":null},{"id":2626,"question":"回绝不要让人难堪?","simplecontent":null,"content":"经理说：“这个商标的主题是旭日。这个旭日很像日本的国徽，日本人民见了一定乐于购买我们的产品。”\n\n年轻的销售部主任没有同经理争论那个带红圈圈的设计是否雅观，而是说：“我恐怕它太好了。”\n\n“这个设计与日本国徽很相似，日本人喜欢，然而，我们另一个重要市场中国的人民，也会想到这是日本国徽，他们就不会引起好感，就不会买我们的产品，这不同本公司要扩展对华贸易营业计划相抵触吗？这显然是顾此失彼了。”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 12:27:02","updateTime":"2021-05-25 12:27:02","isExist":null},{"id":2625,"question":"委婉的拒绝?","simplecontent":null,"content":"不要生硬地回绝朋友的求助，应该让朋友意识到你是为了他的“利益”而回绝的。你可以这样说：“我非常同情您，也非常想帮助您，但对这件事我并不在行，一旦干坏了，既耽误了工作，又浪费了财物，影响也不好。您不如找一个更稳妥的人办。”或者说：“您的事限定的时间太短了，我若轻易接下来，在这么短的时间内，肯定干不好。您可以先找别人，实在不行了咱俩再商量。”这位朋友即使转了一圈回来再求你，你已有言在先，这时你就可以提出一些诸如推迟完成日期之类的条件。如果这位朋友认为不行，他自己就会另请高明去了。 如果朋友请求帮助的事的确思考不周，你可以耐心地实事求是地给朋友分析这件事办与不办的利弊。让朋友自己得出“暂时不办此事”的结论。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 12:25:19","updateTime":"2021-05-25 12:25:19","isExist":null},{"id":2624,"question":"◎只给出一个选择答案：Yes或No?","simplecontent":null,"content":"“网球和电影，你喜欢哪一种？” “我喜欢看电影。” “国产片和外国片，你是喜欢外国片？” “是的，但是华星国际影城正在上演张艺谋导演的新片，虽然是国产片，我也很想看。” “这样好了，这个礼拜天我们一起去看。” 这个女孩不假思索，轻松地答道：“好吧！我们去看。” 然后，他们就经常一起看电影。 刚开始时，这个女孩根本没有想过要和这个男士约会，但事后想起来，当时男士问的问题中，她好像没有回答“No”的余地，都是说“Yes”或“OK”的。本来在一开始约会时，其内容都会有“Yes”和“No”的选择，如果是“Yes”的话，那么在以后的约会中，就会谈有关“Yes”的内容，或A和B问题中的内容，而这个男士提问时，几乎无视这一点，他只让她从A或B中来选择“Yes”或“No”。 虽然，她在这场心理战中失败了，所幸的是她建立了一个幸福的家庭，所以也就没有什么关系。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 11:08:48","updateTime":"2021-05-25 11:08:48","isExist":null},{"id":2623,"question":"2．要使对方回答“是”，提问题的方式是非常重要的?","simplecontent":null,"content":"比如，在推销商品时，不应问客户喜不喜欢，想不想买。因为你问他“你想不想买”“喜不喜欢”时，他可能回答“不”。因此，应该问：“你一定很喜欢，是吧？”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 11:07:38","updateTime":"2021-05-25 11:07:38","isExist":null},{"id":2622,"question":"◎如何提问让对方点头说“是”?","simplecontent":null,"content":"有一次，他到一家新客户的公司去拜访，准备说服他们再购买几台新式电动机。不料，刚踏进公司的大门，便挨了当头一棒： “哈里森，你又来推销你那些破烂了！你不要做梦了，我们再也不会买你那些玩意儿了！”总工程师恼怒地说。\n\n经哈里森了解，事情原来是这样的：总工程师昨天到车间去检查，用手摸了一下前不久哈里森推销给他们的电机，感到很烫手，便断定哈里森推销的电机质量太差，因而拒绝哈里森今日的拜访，推销更是无门啦！ 哈里森冷静考虑了一下，认为如果硬碰硬地与对方辩论电机的质量，肯定于事无补。他便采取了另外一种战术，于是发生了以下的对话： “好吧，斯宾斯先生！我完全同意你的立场，假如电机发热过高，别说买新的，就是已经买了的也得退货，你说是吗？” “是的。” “当然，任何电机工作时都会有一定程度的发热，只是发热不应超过全国电工协会所规定的标准，你说是吗？” “是的。” “按国家技术标准，电机的温度可比室内温度高出42℃，是这样的吧？” “是的。但是你们的电机温度比这高出许多，喏，昨天差点把我的手都烫伤了！” “请稍等一下。请问你们车间里的温度是多少？” “大约24℃。” “好极了！车间是24℃，加上应有的42℃的升温，共计66℃左右。请问，如果你把手放进66℃的水里会不会被烫伤呢？”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:59:13","updateTime":"2021-05-25 10:59:13","isExist":null},{"id":2621,"question":"2．开放式提问?","simplecontent":null,"content":"例一：使大家畅所欲言 “你对自己当前工作表现有什么看法？” “你看我们承担任务应该怎样开展才好？” “你对明年的工作计划有什么考虑？” \n\n例二：征求意见 “公司经理说需要派一个人去洽谈业务，你愿意去吗？” “工厂要搞一项技术革新，你在这方面有基础和经验，你愿意参加吗？” “我校新兴学科缺乏教师，要公开招聘，你愿意报考吗？” \n\n例三：探索式问话可以显示兴趣和重视 “你谈到在工作中遇到不少困难，你能不能告诉我主要有哪些？\n\n“你刚才讲不适合承担这项工作，你能进一步说明原因吗？” “你说小张有才华可以提拔重用，能不能进一步谈谈理由？” 例四：启发对方说出新看法 “现在接近年末了，你能不能谈谈对今年工作的评价？” “你在报刊上发表了很多方面的学术论文，对于学术研究有什么窍门？” “明年的物价可能还要上涨，你有什么看法和意见？”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:56:54","updateTime":"2021-05-25 10:56:54","isExist":null},{"id":2620,"question":"1．封闭式提问?","simplecontent":null,"content":"例一：有相当程度的威胁性，令人不舒服“上星期三，你上哪儿啦？” “你有没有向××提那件事？” \n\n例二：供对方任意选择 “你的专业是文科还是理科？” “毕业后，你是去政府机关，还是到工矿企业？还是选择留校？” \n\n例三：让对方进一步明朗态度 “你想办××那件事，决定了没有？有什么困难吗？” “你说领导交给你的那项任务非常不好办，现在有没有勇气承担？” \n\n例四：敦促对方表态 “一个共产党员，必须无条件服从革命需要，你说是吗？”\n“学习刘翔的拼搏精神，就能克服困难，你说对不对？” “他一贯表现很好，应不应该受到表扬？” 例五：参照式问句，用第三者的意见说服对手 “老李认为这事应该采取一定的措施确保完成，你以为如何？” “经理说，今年把营业额提高10%，大家认为怎么样？”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:56:06","updateTime":"2021-05-25 10:56:06","isExist":null},{"id":2619,"question":"需求放在最后?","simplecontent":null,"content":"他还举过这样一个例子： 某男演员是一个著名的花花公\n\n子。有一次，他在一家杂志上发表一段话，对于如何说服一名女性留下过夜，他用了这样的问法：“你是要回去呢？还是要住下来？”而绝不会问：“你是要住下来，还是要立即回去？”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:54:28","updateTime":"2021-05-25 10:54:28","isExist":null},{"id":2618,"question":"◎将你期待的问题放在最后?","simplecontent":null,"content":"有人说，女性的心理真是难以捉摸，在邀请女孩子时，如果你先问：“去吗？”然后再问她：“不去吗？”可能百分之八十的女孩子会拒绝说：“算了吧！”因为女孩子总是比较含蓄和留有余地的，对于没有把握的事往往选择“不”。 \n\n知道了女孩子的这种心理，你在邀请女孩子时就不妨运用一点攻心上的技巧，即不妨先问她：“不去吗？”然后再问：“去吗？”增加她考虑答应的几率，情况就可能改观。 \n\n也有些女性总是难以开口说“不”，让你搞不清她的意思，你问她：“怎么决定？是去，还是不去？”她沉默不语。有位心理学家是这样说的：“女孩子的沉默不语，表示答应。”因此，你不妨这样问她：“怎么样，还是去吧？”除非她很快地开口说“不”，否则就表示默许了。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:53:50","updateTime":"2021-05-25 10:53:50","isExist":null},{"id":2617,"question":"◎相同的问题，不同的问法?","simplecontent":null,"content":"“吉布小姐，昨天你穿了件什么颜色的大衣呀？”（自由式） “吉布女士，你昨天穿了件大衣，是红色，还是什么别的颜色？”（半自由式） “是红色的么？”（肯定式） “不是红的吧？”（否定式） “是红的，还是白的？”（选择式） “是深红还是浅红？”（强迫式） 吉布事后对人说，她最不开心是听到“否定式”的提问，对于强迫式也不感愉快。她笑道：“他们何不问我那大衣是浅绿还是深绿？这样，我会爽快地回答他是红的。”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:52:29","updateTime":"2021-05-25 10:52:29","isExist":null},{"id":2616,"question":"3．掌握由提问到表达的过程?","simplecontent":null,"content":"电车上，一位中年人给一位妇女让座。这妇女一声不吭就坐下了。 中年人问：“嗯，您说什么？” “我没说什么呀！” “哦，对不起。我以为你说了‘谢谢’呢。” 先生的提问是为了引出自己后面对女方的批评，显得含蓄而有心计。 又如孟子在批评齐宣王不会治国时问： “假若一个人，把妻室儿女托付给朋友照顾，自己到楚国去了。等他回来时，妻子儿女却在挨饿受冻。对这样的朋友，该怎么办？”王答：“和他绝交。” 孟子说：“假若管刑罚的官吏不能管理他的部下，怎么办？” 王答：“撤掉他！” 孟子又问：“假若一个国家搞得很不好，那又该怎么办？” 王这时只好看看左右，而讲其他的了。 孟子先设两问，诱导齐宣王做出肯定的回答，然后提出应该怎样处置不会管理国家的国君，使宣王无以对答，最后服从自己的想法。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:37:27","updateTime":"2021-05-25 10:37:27","isExist":null},{"id":2615,"question":"同一立场?","simplecontent":null,"content":"卡耐基曾用某家大礼堂讲课。有一天，他突然接到通知，租金要提高3倍。卡耐基前去与经理交涉。面对经理的指责，他回答说：“我接到通知，有点震惊，不过这不怪你。如果我是你，我也会这么做。因为你是旅馆的经理，你的职责是使旅馆尽可能盈利。” 紧接着，卡耐基为他算了一笔账，将礼堂用于办舞会、晚会，当然会获大利。“但你撵走了我，也等于撵走了成千上万有文化的中层管理人员，而他们光顾贵旅社，是你花5000元也买不到的活广告。那么，哪样更有利呢？”经理被他说服了。 卡耐基之所以成功地说服了经理，在于当他回答说“如果我是你，我也会这么做”时，他已经完全站在了经理的立场。接着，他站在经理的角度上算了一笔账，抓住了经理的兴奋点——盈利，使经理心甘情愿地把天平砝码加到卡耐基这边。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:27:24","updateTime":"2021-05-25 10:27:24","isExist":null},{"id":2614,"question":"同一个立场?","simplecontent":null,"content":"对于不易说服的人，最好的办法就是要使对方认为你的回话是与他站在同一立场的。通常出现在探讨有关人生问题的电视节目的观众朋友，离婚女子占多数。此时，负责解答疑难者说的一句话是：“如果我是你的话，我会原谅他的，而且绝不与他分手。”","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:26:49","updateTime":"2021-05-25 10:26:49","isExist":null},{"id":2613,"question":"顺着对方的心理趋向进行回答？","simplecontent":null,"content":"（1）从细小的事说起。杰出的推销员，最精于此道。譬如，推销某种东西时，就说：“不买也不要紧，请拿在手里试试它的感觉吧。”先避谈买不买，只求对方拿在手里试试感觉（这是比购买行为更小的行为）。如果推销的是香水就说：“怎么样？闻一闻它芬芳的香味吧。”这样由小而大，一步紧似一步地进击，这种过程，不会让对方觉得有任何心理压力。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:25:59","updateTime":"2021-05-25 10:25:59","isExist":null},{"id":2612,"question":"2．以话试探，侦察共同点?","simplecontent":null,"content":"可以打招呼开场，询问对方籍贯、身份，从中获取信息；可以通过听说话口音、言辞，观察对方情况；可以动作开场，边帮对方做某些急需帮助的事，边以话语试探；甚至借火吸烟，也可以打开交际沉寂的局面。比如乘车时，你可以问对方：“在什么地方下车？”“南京，你呢？”“我也是。你到南京什么地方？”“我到南京山西路一亲戚家有事，你是本地人吧？”“不是的，我是从南京来走亲戚的。”……经过双方的“火力侦察”，双方对县城熟悉、对南京了解、都是走亲戚的共同点就清楚了。这种融洽的效果看上去是偶然的，实际上也是有其必然原因的：“火力侦察”，发现共同点，打破了陌生感。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:20:51","updateTime":"2021-05-25 10:20:51","isExist":null},{"id":2611,"question":"1．善于观察，寻找共同点?","simplecontent":null,"content":"以巧妙地接近对方：“你是哪个学校毕业的？”对方回答：“××学校。”“哦，算来咱俩还应算是校友呢。”……于是，交谈的窘境就轻而易举地消除了。当然，察言观色还要同自己的情趣爱好相结合，自己对此也有兴趣，打破沉寂的气氛才有可能。否则，即使发现了共同点，也还会无话可讲，无话可回，或讲一两句就“卡壳”。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:20:18","updateTime":"2021-05-25 10:20:18","isExist":null},{"id":2610,"question":"◎投其所好，回得高妙?","simplecontent":null,"content":"其中一个回答说：“请坐，我为您擦擦皮鞋吧，又光又亮。” 另一个却回答说：“约会前，请先擦一下皮鞋吧？” 结果，前一个擦鞋童摊前的客户寥寥无几，而后一个擦鞋童的喊声却收到了意想不到的效果，一个个青年男女都纷纷要他擦鞋。这究竟是什么原因呢？ 第一个擦鞋童的回话，尽管礼貌、热情，并且附带着质量上的保证，但这与此刻青年男女们的心理差距甚远。因为，在黄昏时刻破费钱财去“买”个“又光又亮”，显然没有其中一个回答说：“请坐，我为您擦擦皮鞋吧，又光又亮。” 另一个却回答说：“约会前，请先擦一下皮鞋吧？” 结果，前一个擦鞋童摊前的客户寥寥无几，而后一个擦鞋童的喊声却收到了意想不到的效果，一个个青年男女都纷纷要他擦鞋。这究竟是什么原因呢？ 第一个擦鞋童的回话，尽管礼貌、热情，并且附带着质量上的保证，但这与此刻青年男女们的心理差距甚远。因为，在黄昏时刻破费钱财去“买”个“又光又亮”，显然没有","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:17:11","updateTime":"2021-05-25 10:17:11","isExist":null},{"id":2609,"question":"◎倾听中适时插话回复?","simplecontent":null,"content":"第一，当对方在同你谈某事，因担心你可能对此不感兴趣，显露出犹豫、为难的神情时，你可以趁机说一两句安慰的话。 “你能谈谈那件事吗？我不十分了解。” “请你继续说。” “我对此也十分有兴趣。” 此时你说的话是为了表明一个意思：我很愿意听你的叙说，不论你说得怎样，说的是什么。这样可以消除对方的犹豫，坚定他倾诉的信心。 \n\n第二，当对方由于心烦、愤怒等原因，在叙述中不能控制自己的感情时，你可用一两句回话来疏导。 “你一定感到很气愤。” “你似乎有些心烦。” “你心里很难受吗？” 说这些话后，对方可能会发泄一番，或哭或骂都不足为奇。因为，这些话的目的就是把对方心中郁结的一股异常情感“诱导”出来，当对方发泄一番后，会感到轻松、解脱，从而能够从容地完成对问题的叙述。 值得注意的是，说这些话时不要陷入盲目安慰的误区。不应对他人的话做出判断、评价，说一些诸如“你是对的”“他不是这样”一类的话。你的责任不过是顺应对方的情绪，为他架设一条“输导管”，而不应该“火上浇油”，强化他的抑郁情绪。 \n\n第三，当对方在叙述时急切地想让你理解他的谈话内容时，你可以用一两句插话来“综述”对方话中的含意。 “你是说……” “你的意见是……”“你想说的是这个意思吧……” 这样的插话既能及时地验证你对对方谈话内容的理解程度，加深对其的印象，又能让对方感到你的诚意，并能帮助你随时纠正理解中的偏差。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:13:44","updateTime":"2021-05-25 10:13:44","isExist":null},{"id":2608,"question":"诱导对方自我否定。?","simplecontent":null,"content":"一次，美国前总统罗斯福的一位朋友问他在加勒比海小岛上建立潜艇基地的计划。罗斯福小声问他的朋友：“你能保密吗？”朋友脱口而出：“能。”罗斯福接过来道：“我也能。”显然，罗斯福巧妙地设计了圈套，诱导对方说出自己不想回答的原因，而表面上又是在回答。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:09:10","updateTime":"2021-05-25 10:09:10","isExist":null},{"id":2607,"question":"回避回答?","simplecontent":null,"content":"直接说出对方不得不承认的避答理由，使双方均不难堪。一次，一位记者在中央美术馆和大家谈“女模特儿具有艺术献身精神”的话题时，问其中的一位女画家：“假如让你当人体模特儿，你愿意吗？”公开说“愿意”吧，对一个青年女性非易事；说“不愿意”吧，又是自己打自己的嘴巴。于是，这个聪明的女画家说：“这是我的私事，不在采访之列吧？”解脱了窘境，且自然而有道理。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:08:35","updateTime":"2021-05-25 10:08:35","isExist":null},{"id":2606,"question":"无效回答?","simplecontent":null,"content":"我国一位涉外工作者到澳大利亚工作时，一澳大利亚人问他：“你爱澳大利亚吗？”这位工作人员觉得答“爱”与“不爱”都不合适，于是答道：“澳大利亚的袋鼠挺可爱。”这类答复一般用于那些不便于具体肯定或否定的问题。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 10:02:30","updateTime":"2021-05-25 10:02:30","isExist":null},{"id":2605,"question":"面试官：“说一下你为什么想进本公司。”?","simplecontent":null,"content":"应聘者A：“因为贵公司在业界拥有领先的市场占有率，福利待遇优厚，而且MBA还可以享有公司出资的留学待遇，公司的这些条件都非常有魅力。”\n\n应聘者B：“我想将贵公司的益智玩具推广到全国，使全国儿童的智力水平得到开发。” 如果要在这两位应聘者中选出一位，面试官无疑会选B。因为面试官问的是“你的志向”，而不是“你的要求”。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 09:56:43","updateTime":"2021-05-25 09:56:43","isExist":null},{"id":2604,"question":"3．使对方明白采取行动?","simplecontent":null,"content":"如果在说话时，你能够具体地为对方提示事情的关键和问题的要点，那么你就要比其他人更容易和别人交谈，也更容易使对方感动。“请把发给客户的商业信函尽快寄出去”比起漠然地对下属说“去把发给客户的商业信函打印出来”更有效果。","filterContent":null,"type":"回话的技术","status":0,"createTime":"2021-05-25 09:55:05","updateTime":"2021-05-25 09:55:05","isExist":null},{"id":2603,"question":"刚才吃火锅时突然感觉被辣椒呛住?","simplecontent":null,"content":"因为火锅里的辣椒是炒香了之后熬的汤～。辣椒很呛（在家自己炒青椒或辣椒都会呛）","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:59:26","updateTime":"2021-05-25 00:59:26","isExist":null},{"id":2602,"question":"不同城市辣椒?","simplecontent":null,"content":"辣不是一种味道，而是一种感觉，一种火热的感觉。辣让人心情激昂，让人热血沸腾，让人痛并快乐着，无数的人对它欲罢不能，想戒都戒不掉。在我国，辣椒是辣的主要来源，而全国出产的辣椒品种多到你想不到的地步。不同的省份，出产的辣椒品种也是不同的。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n1、湖南辣椒\n湖南人吃辣，全国闻名，不怕没盐，就怕不辣。像辣椒炒肉、剁椒鱼头、东安子鸡等，这些最出名的菜品里，都有辣椒的身影。湖南辣椒各式各样，烹饪方式也大有不同，湖南人更偏向于干辣，就是辣椒看起来没多少，吃起来辣得窒息。\n\n2、四川辣椒\n说起四川，很多人会认为四川人直接把辣椒当饭吃。其实，对于辣椒，四川人有着自己独特的见解，不仅要辣，还要香。四川的水煮牛肉，辣得让舌尖在口腔跳舞，香得让自己神魂颠倒。在四川，辣更像四川人对待生活的一种态度，热情、积极，有着专属自己的特色。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n3、重庆辣椒\n火锅，重庆的代名词。在重庆，没有什么是一顿火锅不能解决的，如果有，那就两顿吧 ，而火锅最重要的材料就是辣椒，重庆的辣椒跟四川很相似，都是属于鲜香麻辣。其实，在重庆不吃辣，是很容易遭到鄙视的。\n\n4、贵州辣椒\n贵州人吃辣椒更多是因为气候的关系，吃辣椒能发汗、开胃。贵州的每个家庭都有属于自己的辣椒酱，什么样的辣椒对应着怎么吃，都有自己的考究。如果到了贵州，一定要尝尝当地的辣椒，买回家也是可以的。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n5、河南辣椒\n河南地区并不适合吃辣椒，所以河南辣椒的辣味程度不是很高，像子弹头、三樱椒、益都红003等，都是河南主要的辣椒品种。不太会吃辣的人，可以选择河南辣椒试试。\n\n6、甘肃辣椒\n中国国家地理标志产品――甘谷辣椒，就是产自于甘肃省。甘谷辣椒皮厚油多味浓，吃法多样，即可生吃，还可炒着吃，用来焯水拌凉菜还不错。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n7、新疆辣椒\n因新疆阳光充足、空气干燥，所以新疆出产的辣椒个大、辣味适中、红色素含量高，且无虫害，品质远远高于其他地区。新疆辣椒的大量出产，更多的只用于工厂生产。新疆最出名的就是线椒。\n\n8、内蒙辣椒\n内蒙人很多是不爱吃辣椒的，因地理位置，气候变化与饮食关系，内蒙人以牛肉、奶、野菜与面食为主，常常将辣椒用来提味。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n9、山东辣椒\n山东人喜淡食，但随着各个区域的饮食文化交流，在山东也有爱好辣的人。如果要问他们喜欢什么样的辣，可能很多人都会想到麻辣香锅，麻辣鲜香，辣到极致时，来个馒头解解辣，感觉瞬间复活。\n\n10、河北辣椒\n河北标志性产品――望都辣椒，望都辣椒色泽纯正，辣素、香素含量高，肉质厚且久放不坏等特点。适量食用望都辣椒可以增加食欲，但千万记得望都辣椒不可多食。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n11、云南辣椒\n云南辣椒品奇多，小米辣、那刀辣、涮涮辣、小雀辣，但最为出名的还是丘北辣椒。丘北辣椒呈线性，鲜红色或暗红色，看着很辣，却不像湖南辣椒哪样呛人。\n\n12、福建辣椒\n福建菜以甜味为主，不怎么吃辣，偶尔放辣椒也只是为菜品增添一点色彩，但福建也是会出产辣椒的。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n13、湖北辣椒\n湖北的辣跟湖南的差不多，湖北的辣介于干辣和麻辣之间，特别是带着卤味的辣，更受人们的喜爱。例如在全国知名的周黑鸭。\n\n14、海南辣椒\n说起海南辣椒，可能我会先想到那金黄金黄的黄灯笼椒，买回来制成辣椒酱，鲜香无比。不过黄灯笼椒的辣度非常高，对辣敏感的人，还是不要轻易去尝试。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n15、陕西辣椒\n陕西的著名特色美食之一就是油泼辣子，是将辣椒粉与花生芝麻等调料和匀，再用热油一泼，瞬间香味扑鼻，拿来下面条也是不错的选择。\n\nspace\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n全国15种辣椒大比拼，到底谁才是辣椒之王？据说湖南位居第一\n\n内容由用户发布，不代表本站观点。如发现有害或侵权内容。请点击这里","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:57:11","updateTime":"2021-05-25 00:57:11","isExist":null},{"id":2601,"question":"哪个城市最辣?","simplecontent":null,"content":"NO.1 贵阳\n\n刺激指数：★★★★☆\n\n辣味指数：★★★★☆\n\n\n\n为什么先说贵阳？\n\n因为“老干妈”就来自贵阳，\n\n而且贵州辣椒是世界上最好的，\n\n没有之一！\n\n《舌尖3》都打卡了贵州辣椒，\n\n单是吃一个火锅，\n\n桌上就有十几个不同的辣碟，\n\n等你蘸~\n\nNO.2 成都\n\n刺激指数：★★★★☆\n\n辣味指数：★★★★★\n\n\n\n\n\n哈哈哈超级爱成都！\n\n不用费心查资料，\n\n更不用做攻略，\n\n反正街边随便一个馆子，\n\n都有让人惊喜的美味。\n\n成都的辣又麻、又鲜、又香，\n\n吃串串超过瘾的！\n\nNO.3 萍乡\n\n刺激指数：★★★☆☆\n\n辣味指数：★★★★★\n\n\n\n如果要论吃辣，\n\n江西这个地方是出了名的，\n\n这里有全中国吃得最辣的地方，\n\n那就萍乡市！\n\n吃辣简直就是家常便饭，\n\n口味超级重。\n\nNO.4 长沙\n\n刺激指数：★★★★★\n\n辣味指数：★★★★☆\n\n\n\n\n\n湖南人的辣是纯辣，\n\n辣出了湖南人的血性。\n\n长沙作为中坚力量更是无辣不欢，\n\n一到了吃饭点儿，\n\n家家冒出的烟都是浓浓的辣味！\n\n只要你下馆子，\n\n都问要微辣、中辣，还是巨辣？\n\nNO.5 重庆\n\n刺激指数：★★★★★\n\n辣味指数：★★★★★\n\n\n\n\n\n辣乎乎的重庆火锅，\n\n辣滋滋的重庆小面！\n\n辣椒是重庆美食的底色，\n\n就连凉面都是辣到心里的感觉~\n\n辣的味道都在红油里，\n\n越吃越爱有没有！\n\nNO.6 武汉\n\n刺激指数：★★★★☆\n\n辣味指数：★★★★☆\n\n\n\n集合了严寒与酷暑的武汉，\n\n也是家家户户爱吃辣。\n\n介于干辣和麻辣之间，\n\n周黑鸭你吃过吧~\n\n就那种感觉~\n\n武汉是一座有江湖气的城市，\n\n街头小龙虾也要记得吃哦！\n\nNO.7 西安\n\n刺激指数：★★★☆☆\n\n辣味指数：★★★★☆\n\n\n\n\n\n西安美食小吃遍地，\n\n肉夹馍、羊肉泡馍、凉皮…\n\n有很多耳熟能详的陕西名吃。\n\n而西安的面，\n\n几乎都是有辣才有了灵魂！\n\nbiangbiang面、臊子面、油泼面，\n\n有辣椒面才美味~\n\nNO.8 大理\n\n刺激指数：★★★☆☆\n\n辣味指数：★★★★★\n\n\n\n中国的吃辣地图里，\n\n云南必须有姓名！\n\n云南的辣很独特，\n\n拥有世界上最辣的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:55:13","updateTime":"2021-05-25 00:55:13","isExist":null},{"id":2600,"question":"湖南干辣椒的特点?","simplecontent":null,"content":"湖南是全国的辣椒研究基地，大约有4000多种辣椒，品种非常多，但是大面积种植的也只有几十种。湖南辣椒给人感觉就是直白白的辣，干辣，上来就告诉你，我是很辣的。而且湖南人吃的辣椒酱，口味复杂，酸辣、甜辣、香辣都会有。有人说，在湖南吃一口辣椒酱，如果品尝出酸甜辣咸香这5种味道，你也不要惊讶。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:53:44","updateTime":"2021-05-25 00:53:44","isExist":null},{"id":2599,"question":"为什么火锅用牛油?","simplecontent":null,"content":"牛油可以很好的吸附在食物上，所以我们吃到在牛油底料锅里涮熟的菜感觉到它的油脂香味，重庆火锅好吃的原因之一就是它里面的牛油底料。\n而一个更重要的原因是牛油其实是被反复利用的，就像老汤一样，在不断的熬煮过程中，涮品里边的肉类油脂，气味甚至是残留的肉质都会融入到牛油底料之中， 而底料里的花椒，海椒等香味也不断融入到锅底，让牛油可以散发出醇厚迷人的味道。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:53:03","updateTime":"2021-05-25 00:53:03","isExist":null},{"id":2598,"question":"二、火锅用牛油有什么作用?","simplecontent":null,"content":"大多数红汤火锅中或多或少都要加入牛油，可起到增加香味的作用。牛油质量的好坏对火锅的味道有很大影响。所以，炼制牛油就显得十分重要了。\n\n选用新鲜无异味的牛油，洗净后切成小块，放入净锅中，掺入适量的清水，投入大蒜和姜块（拍破），倒入料酒，上火熬至水分干且香味溢出时转小火，继续熬至全部出油后，打去渣子，即得牛油。若选用市场上制好的牛油，可先将牛油放入沸水锅中融化后，倒入料酒，上火熬制片刻，除去异味，滤净杂质，再将表面油脂，放入另一口锅中，加入姜块和大蒜，上火熬至水分干时，拣去姜蒜，即得干净牛油。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:52:22","updateTime":"2021-05-25 00:52:22","isExist":null},{"id":2597,"question":"一、重庆火锅底料里面为什么用牛油?","simplecontent":null,"content":"清油火锅和牛油火锅的炒料、高汤完全是一样的，只不过在炒料后配料成汤锅时一个用牛油，一个用清油而已。 不过个人认为还是牛油火锅吃起好吃，清油的甚至比不上清汤火锅，而且外面吃的清油火锅的清油比牛油更不让人放心。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:52:02","updateTime":"2021-05-25 00:52:02","isExist":null},{"id":2596,"question":"重庆火锅和成都火锅有什么区别？","simplecontent":null,"content":"如果非要用一道菜来代表重庆，那必定是重庆火锅了。重庆火锅又被称为麻辣火锅，最早起源于明末清初，早在2016年，重庆火锅就已经被评选为“重庆十大文化符号”之首，所以，用火锅来代表重庆是最适合不过的一道菜了\n\n四川成都也有火锅，和重庆却完全不一样，其辣度，锅型，用油、油碟都有显著差异。1、正宗重庆火锅使用牛油重庆火锅对牛油的偏爱是不言而喻的，随便走进哪家火锅店，扑面而来的都是醇香的牛油味。油和水的比例也是油占比极大，通常都是油6水4，有的店甚至能做到油8水2。成都火锅相对以清油（植物油）为主，口感上少了几分醇香浓厚，但是也相对清爽了许多。\n2、重庆火锅注重麻辣巴渝火锅非常注重麻辣，麻与辣必须均分，切记不能只麻不辣，也不能只辣不麻，二者须得完美融合在一起。而成都火锅则有所不同，其口味的侧重点在于香辣，喜欢用众多香味来衬托辣椒的味道，对麻味的追求并不是很高。\n3、重庆火锅使用九宫格重庆九宫格的由来已久，最初是因为重庆火锅是给江边码头和街边贫苦力夫吃的廉价美食，隔成九个格子可以给九个人吃，现如今已经变成不同涮菜的区域了。成都火锅就没有这样的说法，也甚少能吃到九宫格（多是借鉴于重庆）。\n4、重庆火锅只有一种油碟重庆人豪放、不拘小节，吃火锅也不想多搞什么花样，几乎所有火锅店只有一种油碟（除了可以自助式打料的），那就是香油蒜泥，最多再配一碟小葱。而成都火锅就要精细得多，除了香油蒜泥豌，还会有香辣料碗，极大适应更多不同口味的人群。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:51:08","updateTime":"2021-05-25 00:51:08","isExist":null},{"id":2595,"question":"　　四川火锅和重庆火锅最大的区别？","simplecontent":null,"content":"就是汤底的不同，四川火锅使用的是菜籽油，口感清爽麻辣，汤底口味丰富，而重庆火锅制作时则使用的是牛油，味道麻辣浓厚，汤底的口味较为单一，另外重庆火锅在食材、和蘸料上比四川火锅种类更为丰富。\n\n　　汤底区别\n\n　　四川火锅制作汤底时，通常都是使用菜籽油，或者是食用油，而且还会使用大量的香料提香，汤底的口味也非常丰富，有鸳鸯、番茄等，而重庆火锅则使用的是牛油，并且只放姜、蒜、花椒和海椒提香，牛油可以很好的锁住食物的味道，汤底的口味较为单一。\n\n　　口味区别\n\n　　四川火锅制作底料时会使用大量的香料，所以四川火锅的味道以香辣为主，而重庆火锅则是以麻辣为主，因其牛油与水的比例为6：4，所以重庆火锅的辣味也更加浓厚。\n\n　　食材区别\n\n四川火锅和重庆火锅区别\n\n　　四川火锅的食材种类较多，有丰富的肉类，以及蔬菜，而重庆火锅则以肉类食材为主，蔬菜种类较少。\n\n　　蘸料区别\n\n四川火锅和重庆火锅区别\n\n　　四川火锅的蘸料种类丰富，有芝麻碎、耗油、芝麻酱等等，而重庆火锅属于较为传统的火锅，它的蘸料也只有香油、蒜泥、醋等常见的蘸料。\n\n　　四川和重庆虽然都以火锅出名，但两者在味道上有着非常大的区别，四川的火锅以香辣为主，食用起来口感会更偏香与麻，而重庆火锅则是以辣为主，使用牛油制作的火锅底料，可以很好的锁住食物吸收的味道，食用起来辣味浓厚，非常适合重口味的人食用。\n\n下一篇","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:48:16","updateTime":"2021-05-25 00:48:16","isExist":null},{"id":2594,"question":"火锅呛鼻子?","simplecontent":null,"content":"我觉得很多都是这样呀，越吃越辣，很呛人，那是人体刚刚适应那个味道。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:46:58","updateTime":"2021-05-25 00:46:58","isExist":null},{"id":2593,"question":"伤喉咙的食物?","simplecontent":null,"content":"这4种美食容易“伤喉咙”，最爱的火锅上榜，都是你经常吃的吗？\n喉咙是我们发音的地方，如果平时对喉咙的保养不到位就会伤到喉咙，有很多人非常的羡慕人家的嗓音好听，虽然嗓音是天生的，但是我们也要保护好喉咙，这就需要我们在饮食上多加注意了，少吃一些辛辣刺激的食物，今天就跟大家分享4种美食，是非常容易烧喉咙的，而我们最爱的火锅上榜了，这些都是你经常吃的吗？\n\n1、火锅。火锅可以说是我们都非常喜欢的一种美食，即使是炎热的夏天，也阻挡不了我们对它的喜爱，总是会和朋友们三五成群的一起去吃火锅，真的是超级的过瘾，尤其是麻辣的汤锅再加上蘸料，太美味了，但其实火锅是一种非常伤喉咙的美食，经常吃的话，喉咙就会发炎，特别的痛，严重的还会影响肠胃，但很多人是戒不了的，所以这就需要我们把握好吃得频率。\n\n2、菠萝。菠萝是大家都非常喜欢吃的一种水果，尤其是现在菠萝大量的上市了，很多人都喜欢买很多回家吃，吃的多了很多人就会发现为什么嘴上会起泡，而且喉咙还特别的疼，其实这是因为菠萝是热性的，水果吃多了是非常容易上火的，我就是非常的喜欢吃菠萝，所以一次性吃得很多，那一段时间喉咙天天的疼，就没有在吃菠萝。但是过了几天喉咙不疼了，我才知道原来是菠萝的问题，所以即使是喜欢吃也要适量。\n\n3、碎碎冰。现在天气已经越来越暖和了，很多人都开始吃起了冷饮，比如说碎碎冰或者是雪糕，我也是抵抗不了他们的诱惑，就吃了一些，这边刚吃完，那边就开始咳嗽了，我的喉咙搞的非常疼，吓得我不敢再吃，即使是现在也还没有好利索，一直咳嗽，所以大家一定要少吃，能不吃尽量不吃。\n\n4.榨菜。榨菜也是大家非常喜欢的咸菜，有时候家里不想吵，散了就会买一些榨菜来就着吃，配粥是最好的了，这是很多人都非常喜欢的一种吃的方式，但是榨菜却是一种盐分非常高的食物，一次吃太多是很容易伤喉咙的，因为盐分太多，喉咙就会缺水，所以大家尽量少吃这种腌制的食品。\n\n那就是我要跟大家分享的4种食物，经常吃的话是会伤到我们喉咙的，所以大家在吃的时候一定要控制量，尤其是最爱的火锅，吃的频率一定要控制住，这些里面有没有你经常吃的呢？","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-25 00:44:34","updateTime":"2021-05-25 00:44:34","isExist":null},{"id":2592,"question":"电动车排名前十名？","simplecontent":null,"content":"雅迪、台铃、爱玛、新日、绿源、小刀、赛鸽、新蕾、比德文、小本文来自：披毛犀角(微信号：5735363)，原地址：http://chuangzai.com/post/6901.html","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 22:40:00","updateTime":"2021-05-24 22:40:00","isExist":null},{"id":2591,"question":"有哪些好的可折叠电动车品牌？","simplecontent":null,"content":"建议优先考虑一二线老牌电动车品牌，比如雅迪、爱玛、绿源、新日等这些老牌电动车厂家。他们也有可折叠的电动车型，购买这些大品牌的可折叠电动车是可靠的。\n\n同时，也有专注与做可折叠电动车细分领域的品牌，比如英格威、G-force等\n\n不建议购买小品牌杂牌电动车产品，产品质量与售后无法保证，可能会出现花少钱多麻烦的现象。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 21:35:53","updateTime":"2021-05-24 21:35:53","isExist":null},{"id":2590,"question":"折叠电动车使用什么电池?","simplecontent":null,"content":"、电池：电动车主流的电池分为铅酸电池与锂电池，两种电池都更有优缺点。因为对整车轻便的要求，可折叠电动车基本采用的基本都是锂电池。\n\n锂电池更轻便，一般都是重量5KG以内，但是它的容量更大续航更强，这样能让电动车整体的重量更轻，续航性能更强。\n同时锂电池的使用寿命更长，一般4年左右，但是锂电池的价格比较贵，这也是可折叠电动车价格较高的原因。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 21:34:25","updateTime":"2021-05-24 21:34:25","isExist":null},{"id":2589,"question":"电动车助力模式?","simplecontent":null,"content":"车子有三种模式的呢\n电力模式：开电，拧转把 不用脚踩 完全使用纯电力行驶；\n助力模式：打开电源，不拧动转把，用脚踩带动电力行驶；\n人力模式：关闭电源，完全用脚踩，可以锻炼身体\n\n助力续航的意思是 您踩一段时间 电机就会跑一段时间 等电机停了 你在踩一段时间 电机又会重新跑一段时间 （助力和人力）一种是增加续航能力的 一种是万一完全没电了使用的呢额 ,平时用电力模式不需要踩的\"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 11:18:11","updateTime":"2021-05-24 11:18:11","isExist":null},{"id":2588,"question":"买电动车要考虑的事情?","simplecontent":null,"content":"是助力还是纯电模式\n\n亲,这个型号是48V720WH的电池\n助力模式:150公里\n纯电模式:50公里\nPS:我们是载重100斤的人在未解除限速时速一次性骑行的续航实测数据，您参考一下!因驾驶习惯，路况，温度和载重不同续航会有所偏差哦","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 10:31:39","updateTime":"2021-05-24 10:31:39","isExist":null},{"id":2587,"question":"北京景点排名?","simplecontent":null,"content":"1.故宫博物院 AAAAA全国重点文物保护单位\n故宫博物院\n　　故宫博物院是在明、清两代皇宫及其收藏的基础上建立起来的中国综合性博物馆。其位于北京市中心，前通天安门，后倚景山，东近王府井街市，西临中南海。1961年，经国务院批准，故宫被定为全国第一批重点文物保护单位。1987年，故宫被联合国教科文组织列入“世界文化遗产”名……\n2.北京八达岭－慕田峪长城旅游区 AAAAA\n北京八达岭－慕田峪长城旅游区\n　　长城中外闻名，中国很多地方有长城，国内最著名的名为八达岭长城，国外最著名的名为慕田峪长城。八达岭长城，位于北京市延庆区军都山关沟古道北口。是中国古代伟大的防御工程万里长城的重要组成部分，是明长城的一个隘口。八达岭长城为居庸关的重要前哨，古称“居庸之险不在关而在……\n3.天安门广场 \n天安门广场\n　　天安门广场位于北京市中心，南北长880米，东西宽500米，面积达44万平方米，可容纳100万人举行盛大-，是当今世界上最大的城市广场。天安门广场记载了北京人民不屈不挠的革命精神和大无畏的英雄气概，五四运动、一二九运动、五二○运动都在这里为中国现代革命史留下了浓……\n\n4.天坛公园 AAAAA全国重点文物保护单位\n天坛公园\n　　天坛在北京市东南部，崇文区永定门内大街东侧。占地约２７０万平方米，是中国现存最大的古代祭祀性建筑群。今日天安门东侧的劳动人民文化宫就是当年皇帝祭祖的地方，西侧的中山公园是祭祀丰收神即五谷耕地之所。在整个北京城里，北有地坛祭地，南有天坛祭天，东有日坛祭太阳，西有……\n5.八达岭长城 全国重点文物保护单位\n八达岭长城\n　　八达岭长城座落于北京市延庆区境内，蜿蜒腾跃于燕山山脉的崇山峻岭，是万里长城千百座名关险隘中，历史最为悠久、文化最为丰富、建筑最为宏伟、景色最为壮观、名声最为远大、保存最为完整的一段。它是万里长城的杰出代表，明代长城中最为精华的地段。今天的八达岭长城更成为全世界……\n6.北京奥林匹克公园 AAAAA\n北京奥林匹克公园\n　　北京奥林匹克公园位于北京市朝阳区，地处北京城中轴线北端，北至清河南岸，南至北土城路，东至安立路和北辰东路，西至林翠路和北辰西路，总占地面积11.59平方千米，集中体现了“科技、绿色、人文”三大理念，是融合了办公、商业、酒店、文化、体育、会议、居住多种功能的新型……\n\n7.颐和园 AAAAA全国重点文物保护单位\n　　颐和园是中国现存规模最大、保存最完整的皇家园林，中国四大名园（另三座为承德避暑山庄、苏州拙政园、苏州留园）之一。位于北京市海淀区，距北京城区十五公里，占地约二百九十公顷。利用昆明湖、万寿山为基址，以杭州西湖风景为蓝本，汲取江南园林的某些设计手法和意境而建成的一……\n8.圆明园遗址公园 AAAAA全国重点文物保护单位\n圆明园遗址公园\n　　圆明园坐落在北京西郊海淀区，与颐和园紧相毗邻。它始建于康熙46年（1709年），亦称“圆明三园”，是圆明园及其附园长春园、万春园的统称，是清代行宫式御园，占地350公顷（5200余亩），其中水面面积约140公顷（2100亩），有园林风景百余处，是清朝帝王在15……\n9.明十三陵景区 AAAAA全国重点文物保护单位\n明十三陵景区\n　　十三陵是明朝十三代皇帝及皇后之陵墓的简称，在北京西北约44公里的昌平县天寿山下的小盆地上，面积约40平方公里。从德胜门驱车直下，向北经沙河、昌平就可到达十三陵了。十三座墓陵的建筑布局、规制等基本相同，只在面积大小、建筑繁简等方面略有差异。其中明成祖朱棣所葬之墓……\n10.恭王府 AAAAA全国重点文物保护单位\n恭王府\n　　恭王府简介:恭王府——世界最大的四合院除皇帝和家眷外，任何人是不得住进紫禁城的。因此皇亲国戚们都要建造自己的宅弟，以为家居之所。于是，王府便产生了。今日的北京城里，还有60余座清代王府，其中恭王府是保存最完整的一个。北京的清代王府都分布在内城区里，这和清代北京……","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:56:28","updateTime":"2021-05-24 09:56:28","isExist":null},{"id":2586,"question":"北京景点?","simplecontent":null,"content":"北京景点有很多，比较有名的是：故宫博物院、颐和园、八达岭古长城、天坛公园、明十三陵景区、王府井、天安门广场等。\n\n我个人觉得值得去的是：故宫博物院、颐和园、八达岭古长城，今天给大家简单介绍下这几个景点。\n\n1、北京故宫博物院建立于1925年10月10日，位于北京故宫紫禁城内。\n\n是在明朝、清朝两代皇宫及其收藏的基础上建立起来的中国综合性博物馆，也是中国最大的古代文化艺术博物馆，其文物收藏主要来源于清代宫中旧藏，是第一批全国爱国主义教育示范基地。\n\n\n\n北京故宫博物院位于北京故宫即紫禁城内。\n\n北京故宫是第一批全国重点文物保护单位、第一批国家5A级旅游景区、全国未成年人思想道德建设工作先进单位， 1987年入选《世界文化遗产名录》。\n\n2、颐和园，中国清朝时期皇家园林，前身为清漪园，坐落在北京西郊，距城区15公里，占地约290公顷，与圆明园毗邻。\n\n它是以昆明湖、万寿山为基址，以杭州西湖为蓝本，汲取江南园林的设计手法而建成的一座大型山水园林，也是保存最完整的一座皇家行宫御苑，被誉为“皇家园林博物馆”，也是国家重点旅游景点。\n\n\n\n3、八达岭古长城景区位于八达岭长城景区西南5公里，是八达岭长城的西大门。\n\n古长城旧称“残长城”，是八达岭长城的西南延伸段，由于没有经历过大规模的翻新修复，仍保持着古老的形态，伴有残缺的痕迹，为国家AAA级旅游景区  。\n\n\n\n八达岭古长城景区是在原来残破坍塌、野草丛生的基础上进行了一种尽可能还原和维持原貌的加固与补坍，使得这段蜿蜒在崇山峻岭间的古长城将那份历史沧桑和厚重感保留下来。\n\n 4502","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:55:30","updateTime":"2021-05-24 09:55:30","isExist":null},{"id":2585,"question":"现在义务教育是多少年？","simplecontent":null,"content":"义务教育有九年义务教育和12年义务教育，两者并行。大范围的是九年义务教育，十二年义务教育主要还集中在民族地区、沿海等发达地区，没有大范围普及。\n九年义务教育制度是国家统一实施的所有适龄儿童、少年必须接受的教育，是国家必须予以保障的公益性事业。实施九年义务教育，就是适龄儿童、少年开始接受教育的九年不收学费、杂费。国家建立义务教育经费保障机制，保证义务教育制度实施。九年义务教育制度是我国现行的教育制度。\n十二年义务教育，是指将高中教育纳入到义务教育范围之内从而推行十二年义务教育，中国特区、民族地区、浙江、广东、河北多地都尝试了高中免费教育，取得很好反响。但主要还集中在民族地区、沿海等发达地区，没有大范围普及。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:53:34","updateTime":"2021-05-24 09:53:34","isExist":null},{"id":2584,"question":"陶瓷diy好玩吗?","simplecontent":null,"content":"现代陶艺，更加倾向于陶艺DIY，它简单，易学，不需要什么基础，结合自己的思想，做出有色彩，有个性的艺术品，进一步秀出自己的风采。在红坎岭陶艺园游玩的小伙伴们八卦了一会儿，陶艺DIY，是一件连明星也不会忘记的事情，它的流行，使它走上潮流时商的舞台。\n\n当周末休闲无聊睡觉时、看电影占满位的时，DIY陶艺，逐渐取代了人们的生活习惯。这不，在许多影视作品和综艺节目中，都有陶艺DIY陶艺的桥段。\n\n综艺节目《十二道锋味》中，赵丽颖也去体验了一把陶艺的快乐，颖宝做的有滋有味的，兴趣浓厚，表情很快乐，看来，陶艺DIY，连明星都爱不释手。\n\n《我们相爱吧》第二季中周冬雨和余文乐。两个人双手黑乎乎的，看着自己做的陶艺品，她们甜到爆，有木有！\n\n陶艺DIY，连明星也爱的DIY手工。\n\n做陶艺，讲究的一种快乐，它不需要很高的技艺，也需要多么的认真严谨，只要自己满意喜欢就够了。它吸引很多人，朋友、家人、小孩、情人，都在里面体验陶艺中的快乐。时指间陶艺店是一家有着浓厚文化底蕴，特色陶艺建筑与湖光山色为一体，环境优雅，休闲度假的最佳场所，里面有很多游玩的乐趣，而陶艺DIY是人们最为喜欢的，因为它能带你感受泥土的气息，文化的熏陶，思想的交际，感受不一样的世界。时指间陶艺店，一个缓解压力、舒适、快乐，促进您与亲朋好友情感的平台。带着您的爱人，拉着您的朋友，陪着您的孩子，一起走进时指间陶艺店，我们等着你！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:52:20","updateTime":"2021-05-24 09:52:20","isExist":null},{"id":2583,"question":"空调会换室内空气吗?","simplecontent":null,"content":"一般的家用空调是不会交换室内外空气的，完全是室内空气循环。高端的空调可以，也就是主动机械式换新风，主要有三种，一种是只往外排风，一种是只往室内进风，一种是排进同时进行。排风的效果最好。\n\n该答案适用于格力、美的、海尔等大部分品牌的空调机型。\n\n\n会（个别的空调可以交换室内外空气）。\n\n相较于普通空调来说，换气空调的价格比普通空调要贵一些，耗电量方面也要大一些。\n\n目前来说只有一部分空调具有换气功能，换气的原理是通过空调内置的换气装置实现的，而当换气时，一部分室内回风被换气装置抽出室外。这时候室内空气密度会下降。相对于室外气压来说产生了负压，由于室内外有了压力差，室外的新鲜空气就通过门窗缝进入室内，达到改善室内空气质量的目的。\n\n换气空调主要针对环境：\n\n密闭性比较好的卧室 ；\n\n室内空气流通性差的客厅 ；\n\n长时间使用空调时。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:49:40","updateTime":"2021-05-24 09:49:40","isExist":null},{"id":2582,"question":"空调病是什么？","simplecontent":null,"content":"顾名思义与空调息息相关，一般指长时间呆在空调房内引起的，比如头晕、头痛、上呼吸道感染、关节痛、食欲不振等症状，称为空调病。一般年老体弱、儿童、妇女容易得此病。常见病因有空气干燥、空调房内微生物滋生，引发的感染。预防空调病的措施有不要长时间呆在空调房内，空调房要定时开窗透气，进出空调房温差不要过大，让机体有一个适应的过程。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:48:20","updateTime":"2021-05-24 09:48:20","isExist":null},{"id":2581,"question":"我买的联想电脑简直比垃圾都坏？","simplecontent":null,"content":"我买的联想电脑简直比垃圾都坏！！！！显示器有重影，字都是虚的，而且不是纯黑，花的！只有一种分辨率的设置多少好一点，其它分辨率的设置根本不能看！！刚开始没注意，孩子用了一个多月眼睛就坏了，大人看一会眼睛也发花！！头晕！！联想维修站来了一个工程师，检测后说显示器硬件有问题，需要返厂修理，实在不行就换一个，结果一周后拿回来了，说厂家说了：都是这样的，宽屏的就这样。真是岂有此理！！！！这么伤害眼睛难道是正常的？？？？都这样？？？？为什么我看了其它宽屏显示器都不这样呢？？？","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:41:41","updateTime":"2021-05-24 09:41:41","isExist":null},{"id":1592,"question":"惠普电脑如何?","simplecontent":null,"content":"惠普笔记本算是老牌子的电脑厂商，它、联想和苹果是笔记本行业的三大巨头。每一家都有自己过硬的技术和买点。惠普的笔记本预算在6000-7000可以买到配置非常高的型号。同时惠普的综合平衡能力笔记过关，虽然各方方面都不特别突出。我推荐惠普Spectre XT。\n\n\n\n外观全金属纹的机壳设计，让人看到觉得特别帅气和风格硬朗。同时采用新的一块13.3寸镜面，边框采用的钢琴烤漆。键盘带有led背光，是出差的好伴侣，无论什么时候都不耽误办公。\n\n\n\n内部配置是i7的处理器配上512G的固态硬盘，这样让电脑的开机速度可以在20s以内，电池可以60Wh，最高待机时长达到8个小时，这是商务本的最基本配置。\n\n\n\n机身本身很薄，同时只有13.3寸的大小特别适合携带，同时总重量不超过3斤，无论男女老少都可以方便携带。\n\n对于这款屏幕来讲更是最大的买点，ips硬屏从色彩到色域都非常精准，让看电视剧和看电影都特别享受，对一个普通的电脑小白也算是吸引力了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:40:26","updateTime":"2021-05-24 09:40:26","isExist":null},{"id":1596,"question":"房租朝向哪个喜欢?","simplecontent":null,"content":"南北朝向的房子是比较好的，如果朝向南面的房子采光是比较好的，通风也是比较好的，因为我们的国家是属于北半球的，主要是以南北风向为主的，所以大家在选购房子的时候，可以注意房子的朝向，也尽量选择一些南北方向的房子。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:39:21","updateTime":"2021-05-24 09:39:21","isExist":null},{"id":1595,"question":"看图买房到时会很坑?","simplecontent":null,"content":"房价高企，特别是面对大城市的房价，一套百十平米的房子可能有些人一辈子的努力也买不起，因此对于买房动辄百万以上的投入，购房者应谨慎更谨慎。下面小编就为大家盘点一些买房时容易碰到的\"坑\"，不管是首次置业的小白，还是多次买房的\"老司机\"，这些\"坑\"你最好提前了解以及做好\"防坑\"准备。\n\n\n一、会\"迷惑\"人的样板间\n\n不少人看了楼盘的样板间后十分满意，就很爽快地买了一套同户型房子。然而交房后却发现不是那么回事。这是怎么回事呢?\n\n原来，这个\"坑\"就是开发商的样板间运用了\"视觉特效\"。例如\"采用高度照明让房间更加透亮\"、\"缩小家具尺寸让空间看起来更大\"、\"做成开放型厨房或透明式卫生间\"等等。\n\n面临眼花缭乱的样板间，购房者一定要做好\"防坑\"准备，小编认为:对于有意向的楼盘，看它的样板房时，最好带上一把尺，边看边量，不仅要测量样板间家具的尺寸，也要实际测量每个房间尺寸，并与该项目的置业顾问介绍的实际数据进行对比。\n\n这样才能避免被\"空间大\"、\"足够用\"的这些假象所蒙蔽。\n\n二、吹嘘\"赠送面积多\"\n\n买房时会经常听到置业顾问介绍:有多少多少平米的赠送面积，或者哪里哪里的面积是赠送的。但到签合同时，不容易发现总平面测绘图上\"蚂蚁小\"的尺寸标示赠送面积缩水了一半。\n\n对此，要做好\"防坑\"准备，小编认为:虽然口头承诺及户型销售资料上都标明了赠送面积，但要注意户型资料图上还有这么一句\"本资料所有图片及文字说明仅供参考，实际交付标准以规划国土部门的批准文件及双方签署的买卖合同为准\"。\n\n因此买房签合同时，要与开发商签附加协议，约定清楚赠送面积，别马虎了。\n\n\n三、\"特价房\"真的是买到就赚到了吗?\n\n虽然，\"特价房\"的价格确实诱惑人，但往往有诸多瑕疵。是的，小毛病可以忍，但比如靠近路边极吵、西晒又在顶楼等等，就不是一般人能忍受得了的。\n\n对此，要做的\"防坑\"攻略，小编认为:看房不要只看一次，可不同时间如白天、晚上、晴天、阴天等情况多看几次。如果是新房特价房，那么对户型、朝向、楼层等方面\"先天不足\"的折扣房，一定要综合衡量、慎重选择。\n\n\n四、虚假夸大的广告词\n\n\"奢华园林\"、\"成熟配套\"、\"尊享人生\"……这些是开发商在宣传广告中最爱用的词汇，但很少人知道在开发商的广告中，往往会有一行小字:\"本广告仅作宣传使用，不作为合同邀约\"。因为字很小，所以不容易被发现。\n\n对此，小编建议:购房者要保持理","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:38:47","updateTime":"2021-05-24 09:38:47","isExist":null},{"id":2580,"question":"买房子分摊面积收钱？","simplecontent":null,"content":"你买房子的时候，房本上记录的面积已经包含了公摊面积在内。\n以后交任何费用的时候，都会有公摊面积的费用在内。\n即使是取暖费，按照房本上的面积收取的费用，也包括公摊面积在内的交费。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:37:40","updateTime":"2021-05-24 09:37:40","isExist":null},{"id":2579,"question":"公摊面积什么意思?","simplecontent":null,"content":"公摊面积指导是整栋楼所有的产权人共同所拥有的整栋楼公用部分的建筑面积。通常包括两部分：一是为所在建筑服务的公共用房和管理用房建筑面积；二是所在单元与公用建筑空间之间的分隔墙以及外墙的墙体水平投影面积的一半。但是如果是属于独立使用空间进行销售或出租的地下室、车棚等，不能算进公摊面积里。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:36:25","updateTime":"2021-05-24 09:36:25","isExist":null},{"id":1611,"question":"养老和医保断开区别?","simplecontent":null,"content":"一、含义不同：\n\n停保是无法使用医保报销的，但可以继续缴纳社保。\n\n养老保险中断之后是可以继续续保的，根据国家规定，一般要交满15年，到退休的时候才能终生享受养老金,所以想拿养老金的人请务必在自己退休前15年就开始交。\n\n二、缴费时间不同：\n\n停保缴费时间而未缴保费的，有60天的宽限期，宽限期内出险保险公司仍然赔偿，只要把欠缴的保费补上就行，60天宽限期仍未交保费。\n\n保单中止，两年内缴纳所欠保费和滞纳金，保单复效，复效后重新计算等待期。\n\n三、影响条件不同：\n\n停保随时随地可以停，不需要任何条件。\n\n中断养老和失业没影响，但生育和医疗是有的。生育原则上必须连续参保6个月以上才能享受待遇，中途断了，就需要重新缴了。\n\n医疗停了1-3个月，必须补齐之前的才能享受，停了3个月以上的，除了补交之前的之外，而且还要等3个月之后才能享受医保待遇。\n\n\n\n四、个人参保性质不同：\n\n停保的缴费年限是累计计算，养老保险停保与中断缴费是不一样的。停保是通过办理相关手续停止缴纳养老保险。\n\n参保后中断缴费的，从中断缴费次月起，停止享受基本医疗保险待遇。中断缴费在3个月内补足欠费的，补划个人帐户，并从补缴的次月起恢复享受基本医疗保险待遇。\n\n中断缴费期间发生的医疗费用，全部由个人负担。中断缴费超过3个月的，医疗保险关系自行终止。再次参保的，按首次参保规定办理。\n\n参考资料来源：百度百科-社保补缴\n\n参考资料来源：百度百科-退保\n\n参考资料来源：百度百科-职工基本养老保险个人账户管理暂行办法","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:24:01","updateTime":"2021-05-24 09:24:02","isExist":null},{"id":2049,"question":"毒蛇泡酒有用吗?","simplecontent":null,"content":"您好\n毒蛇泡酒对人体有功效，这在中国传统医学典籍上早有记载，并广为流传。但医学人士认为，毒蛇泡酒不仅要讲究方法，且不是所有的人都能喝毒蛇酒，饮用时最好遵医嘱。\n蛇酒确实有祛风通络、活血、镇痛、解毒、强壮的作用，但由于不同种类的毒蛇毒性不同，其功效也不尽相同，并非包治百病，乱吃乱喝反而有害无益。所以毒蛇酒对每个人都有保健的作用，是没有科学依据的民间说法。\n用眼镜蛇、金环蛇等毒性较强的毒蛇，一般要去头去尾，去毒囊，用其泡的药酒不能轻易内服也不要轻易外用，因为蛇毒可渗透进人的皮肤和内部器官，影响到肾脏功能，甚至还会危及生命。搭配上也有讲究，一般是两三种毒性相同的毒蛇放在一起浸泡较为合适，再放入50度以上的白酒，浸泡半个月以上，毒性被分解后才能放心饮用。\n\n\n1.毒蛇泡酒不能乱喝 :眼镜蛇、竹叶青蛇等毒蛇的毒性都很大，用其泡的药酒既不能轻易内服也不能外用。蛇毒可渗透进皮肤，影响肾脏功能，还有些蛇体内的未知毒性会危及生命。所谓用毒蛇泡酒对人健康有益只是一种民间流传的说法，并无任何科学依据，所以，不能乱用毒蛇泡酒饮用。 2.毒蛇的毒是在它的牙，它在攻击敌人时就会从牙里分泌出毒液，毒液顺着伤口侵入人体的血液，麻痹人的神经。而泡酒的毒蛇在泡酒前都是已经先刺激毒蛇，让它蓄存毒液，再把它的牙齿扣在杯子边沿，毒液便会顺着边沿流出，然后拔掉毒牙，所以没有毒的 。毒蛇有毒尽皆知。其实有毒是指蛇的毒液，而不是肉有毒。有毒蛇有一对毒腺，在上颚，与两颗牙齿相连。牙齿中空，蛇咬人时将毒液从牙齿注入人体。泡酒用的毒蛇是经过严格加工炮制的。最重要的就是去掉牙齿和毒腺，其次是清干净内脏，这样就可以食用或药用了。其实蛇肉也有微毒，但和蛇的毒液不是一种毒。就好像蝎子有毒一样，就是尾尖有个毒腺，去掉后既可食用也可药用。 3。蛇酒确实有祛风通络、活血、镇痛、解毒、镇惊、强壮的功效，但由于各种蛇的毒性不同，功效不同，各种蛇酒也有不同的功效，并非包治百病，乱吃一通，要对症下药。蝮蛇、五步蛇、金银环蛇、眼镜蛇、竹叶青等都是极毒性蛇类，用毒蛇泡酒应格外谨慎，讲究严格的科学炮制，来不得半点马虎。一般来说，制酒时先要去头、去尾、去毒囊，也不能要浸几条就几条，一般两三种同一毒性的蛇浸泡较合适，再泡入50度以上的优质白酒中，须浸泡半个月以上毒蛇的毒蛋白分解毒性才能完全消失，成为能饮用的有一定攻效的蛇酒，每次服用量25.5毫升(二汤匙)即半两酒为宜。显而易见，街头蛇贩活毒蛇浸酒，不讲科学炮制，夸夸其谈、言过其实的宣传广告又起了误导消费者作用，饮用后对人体健康反而有害无益。 4。因为蛇毒是一种活性蛋白酶。这种活性蛋白酶只要在下列几种情况下进行处理，其活性便会失去作用：①高温100℃；②较强的氧化作用；③较高浓度的有机溶剂。 古岭纯米酒的主要成份之一是乙醇，而乙醇是一种公认较好的有机溶剂，具有良好的穿透性，易于进入蛇毒组织细胞中，把蛇毒里的大部水溶性物质以及水不能溶解、必需","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:21:57","updateTime":"2021-05-24 09:21:58","isExist":null},{"id":2152,"question":"皮肤什么配什么衣服好?","simplecontent":null,"content":"东方人的皮肤大都呈黄色，有一种被弃卒阳光照射的美感. 但总给人一种不够健康的印象，面色偏黄的女性，适合穿蓝色或浅蓝色的上装，它能衬托出皮肤的洁白娇嫩，适合穿粉色、橘色等暖色调服装。\n\n \n\n少穿绿色或灰色调的衣服，这样会使皮肤显得更黄甚至会显出“病容”，品蓝，连紫色上衣也不好看。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:20:05","updateTime":"2021-05-24 09:20:05","isExist":null},{"id":2151,"question":"暖色是什么颜色?","simplecontent":null,"content":"暖色系包括红紫,红,红橙,橙,黄橙; 1.暖色系：由太阳颜色衍生出来的颜色，红色，黄色，绿色，给人以温暖柔和的感觉，春天色系和暖色与冷色： 红色、橙色、黄色--为暖色，象征着：太阳、火焰 色彩分类\n1.绿色、兰色、紫色--为冷色，象征着：森林、大海、蓝天。灰色、黑色、白色--为中间色； 冷色调的亮度越高--越偏暖，暖色调的亮度越低--越偏冷。 2．兴奋与沉静：红色和明亮的黄色调成的橙色--给人活泼、愉快、兴奋的感受。青色、青绿色、青紫色--让人感到安静、沉稳、塌实。 3．前进与后退：色彩可以使人有距离上的心理感觉。黄色有突出背景向前的感觉，青色有缩入的感觉；其排列如下：红色 > 黄色≈橙色 > 紫色 > 绿色 > 青色；暖色为前进色--膨胀、亲近、依偎的感觉。色彩明亮--前进！冷色为后退色--镇静、收缩、遥远的感觉。色彩暗 --后退！ 在家庭装修中，面积较小的房间要选用\"暗色调的地板\"；使人有面积扩大的感觉。如果选用明亮色彩的地板就会显得空间狭窄，增加压抑感。 4．轻与重： 色彩可以给人带来\"轻与重\"的感觉；白色和黄色给人感觉较轻，而红色和黑色给人感觉较重。在家装中，居室的顶部（天花）易选用浅颜色或较亮的色调；而墙和地面可适当加重，否则给人头重脚轻的感觉。 5．柔和与强硬： 暖色感觉柔和、柔软，冷色给人坚实、强硬；中性为过度色。秋天色系的人特别适合穿暖色系的衣服，化暖色系的妆。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:19:09","updateTime":"2021-05-24 09:19:10","isExist":null},{"id":2059,"question":"免税店多少钱?","simplecontent":null,"content":"举例来说，比如在三亚免税店购物比国内百货商场购物会免去进口关税、进口环节增值税和消费税，大概会比国内商场便宜10%-45%，具体的情况还得看商品的品类，不同品类的商品，税率是不同。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:18:08","updateTime":"2021-05-24 09:18:08","isExist":null},{"id":2578,"question":"妃子笑和白糖罂的区别?","simplecontent":null,"content":"荔枝是很多人都喜欢吃的水果，从外面进到屋内的时候吃上几个冰镇荔枝，美味又解暑，买荔枝的时候看到了两种，一种叫妃子笑，一种叫白糖罂，妃子笑和白糖罂的区别是什么呢？\n妃子笑和白糖罂的区别\n品种不同。\n1、妃子笑\n妃子笑是常见的荔枝品种，妃子笑又称：落塘蒲、玉荷包等。妃子笑的果实较大、果肉饱满、外壳精致、荔枝核小、味道香甜、风味独特，妃子笑主要分布在广东、广西等地区，该品种是中早熟优质品种之一。\n2、白糖罂\n白糖罂是常见的荔枝品种，白糖罂又称蜂糖罂、中华红等。白糖罂荔枝果肉吃起来非常爽脆、口感清甜，是广东省品质最优良的早熟品种。主要产于茂名市的高州、电白等地，有一千三百年以上的栽培历史。\n\n白糖罂和妃子笑哪个贵\n白糖罂价格更高。\n妃子笑的味道酸酸甜甜，是常见的荔枝品种，而白糖罂味道纯甜，大众接受度较高，一般人群即可食用，从接受度来说，白糖罂的接受度更高，而且，妃子笑种植更多，价格会更为便宜。\n\n妃子笑是什么味道\n妃子笑酸甜可口。\n妃子笑中含有大量的水分、有机酸、糖类物质，食用妃子笑的时候会觉得，汁水充沛、酸甜适中，成熟度高的妃子笑甜度高、酸味少，食用口感非常的好，夏天胃口不是很好，吃一些妃子笑还可以促进食欲。\n\n妃子笑荔枝多少钱一斤\n3-20元一斤。\n在妃子笑荔枝批量上市的时候，最低的时候可以卖到3元一斤，市场价格是比较便宜的，但是，妃子笑刚刚上市的时候，物以稀为贵，卖15-20元一斤，品质好的可以卖30元以及上价格。\n\n荔枝吃多了会怎样\n1、引发低血糖\n荔枝吃多了引发的低血糖实际就是荔枝病，主要症状表现为面色苍白、出汗、头晕、乏力及心悸，部分患者还会会出现饥饿、口渴、腹痛和腹泻等症状，严重的会抽搐或者昏迷。因此大家在吃荔枝的时候一定要控制好剂量。\n2、容易上火\n俗话说“一颗荔枝三把火”，荔枝吃多了的话很容易引起上火。特别是患有咽喉炎和慢性扁桃体炎的人，多吃荔枝的话会提升虚火，导致症状加重。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:16:12","updateTime":"2021-05-24 09:16:12","isExist":null},{"id":2577,"question":"最早出的荔枝是什么品牌?","simplecontent":null,"content":"妃子笑，黑味，白糖罂","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:15:31","updateTime":"2021-05-24 09:15:31","isExist":null},{"id":2576,"question":"会上火的水果?","simplecontent":null,"content":"桂圆（性热）、荔枝（生活中常听见“一颗荔枝三把火”，其性温）、橘子（性温）、樱桃(性温)、红枣（性热）、木瓜（性温）等\n\n\n病情分析：容易上火的水果有:荔枝、桂圆、橘子、甘蔗、芒果、龙眼、榴莲、菠萝、石榴、桃子","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:13:12","updateTime":"2021-05-24 09:13:12","isExist":null},{"id":2575,"question":"凤梨会上火吗?","simplecontent":null,"content":"凤梨属于热性水果，吃多了会上火。尤其是在气候干燥的春季，人们体内易生燥热，此时吃凤梨更容易引起人体上火，吃凤梨的量一次应控制在一个凤梨的1/5以内。如果凤梨个头比较大，应控制在1/6以内，而且不能连续3天以上都吃凤梨，否则一定会产生程度不同的上火现象。吃凤梨如果出现上火时，应停止食用，多喝白开水，也可以多喝一些绿豆汤，以消除上火现象。眼、鼻上火的可用淡盐水冲洗。如果是过敏体质的人是不能吃凤梨，患有湿疹、疥疮、牙龈病，溃疡病等的患者最好也别吃。因为凤梨是酸性比较大的水果，对患者有较强的刺激作用，多吃会加重病情。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 09:10:15","updateTime":"2021-05-24 09:10:15","isExist":null},{"id":2574,"question":"人体的自愈能力?","simplecontent":null,"content":"小病小痛可以治愈，大病就要看医生","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-24 01:32:28","updateTime":"2021-05-24 01:32:28","isExist":null},{"id":2573,"question":"我在小商品批发市场买了一箱洗衣膏（价款30元），经过使用发现和我原来用的不一样，因该洗衣膏的生产厂家就在本地，我拿到厂家咨询，厂家明确告知我购买的是假货。我只知道购买到假冒伪劣商品可以获得商家的赔偿，但具体是几倍不太清楚，请您解释一下?","simplecontent":null,"content":"答：你可以得到支付价款一倍的赔偿。\n\n    首先，《中华人民共和国消费者权益保护法》第二条规定：消费者为生活消费需要购买、使用商品或者接受服务，其权益受本法保护。你购物是为了生活消费，你的行为受该法保护。\n\n    其次，1994年1月1日实施的《中华人民共和国消费者权益保护法》第49条明确规定：经营者提供商品或服务有欺诈行为的，应当按照消费者的要求增加赔偿其受到的损失，增加赔偿的金额为消费者购买商品的价款或者接受服务的费用的一倍。\n\n    所以，就你的情况而言，除预先支付的商品价款如数退还外，还可以得到支付价款一倍的赔偿即30元。\n\n    “三倍赔偿”是即将于2014年3月15日实施的新消法中的内容，该法第55条规定： 经营者提供商品或者服务有欺诈行为的，应当按照消费者的要求增加赔偿其受到的损失，增加赔偿的金额为消费者购买商品的价款或者接受服务的费用的三倍；增加赔偿的金额不足五百元的，为五百元。法律另有规定的，依照其规定。”假设你的购物行为发生于2014年3月15日以后，就可以获得价款三倍的赔偿，因三倍不足500元，你能获得500元的赔偿。\n\n    “十倍赔偿”是针对食品的规定。《中华人民共和国食品安全法》第96条规定：“生产不符合食品安全标准的食品或者销售明知是不符合食品安全标准的食品，消费者除要求赔偿损失外，还可以向生产者或者销售者要求支付价款十倍的赔偿金。” 有毒有害食品直接危害消费者的健康，所以对经营者的惩罚力度更大。显然，你的行为不受该法调整。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:41:19","updateTime":"2021-05-23 21:41:19","isExist":null},{"id":2572,"question":"什么样投诉赔偿3倍和10倍?","simplecontent":null,"content":"依据法律，三倍赔偿和十倍赔偿不同时适用。　　\n\n“三倍赔偿”是即将于2014年3月15日实施的新消法中的内容，该法第55条规定：经营者提供商品或者服务有欺诈行为的，应当按照消费者的要求增加赔偿其受到的损失，增加赔偿的金额为消费者购买商品的价款或者接受服务的费用的三倍；增加赔偿的金额不足五百元的，为五百元。\n\n法律另有规定的，依照其规定。”假设你的购物行为发生于2014年3月15日以后，就可以获得价款三倍的赔偿，因三倍不足500元，你能获得500元的赔偿。　　\n\n“十倍赔偿”是针对食品的规定。《中华人民共和国食品安全法》第96条规定：“生产不符合食品安全标准的食品或者销售明知是不符合食品安全标准的食品，消费者除要求赔偿损失外，还可以向生产者或者销售者要求支付价款十倍的赔偿金。”\n\n有毒有害食品直接危害消费者的健康，所以对经营者的惩罚力度更大。显然，你的行为不受该法调整。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:36:15","updateTime":"2021-05-23 21:36:15","isExist":null},{"id":2571,"question":"顾客在一个月前买的一台电视，但当时没有开发票， 现要求补开，公司要求回收4%的金额，顾客不能接受，要 求处理。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:51","updateTime":"2021-05-23 21:34:51","isExist":null},{"id":2570,"question":"顾客在公司购买了一瓶特价洗头水，洗了之后脱发，要求处理。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:44","updateTime":"2021-05-23 21:34:44","isExist":null},{"id":2569,"question":"顾客昨天买的抽油烟机，厂家上门安装，对此服务和专业技能表示不满意，要求公司处理。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:38","updateTime":"2021-05-23 21:34:38","isExist":null},{"id":2568,"question":"顾客反映到章业修改裤脚，取回时发现不是他的裤子，要求公司赔偿一条新的西裤。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:33","updateTime":"2021-05-23 21:34:33","isExist":null},{"id":2567,"question":"顾客在三天前在本商场购买了一瓶保利牛奶，买回去后一直放在冰箱里冷藏，直到今早拿出来喝时发现没有牛奶味道了，请给一个满意的答复。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:29","updateTime":"2021-05-23 21:34:29","isExist":null},{"id":2566,"question":"顾客昨天晚上在公司购买了一条鲤鱼，煮熟后吃时有一股化学药味，不是鱼胆破的原因（鱼是由我司帮杀的），怀疑这条鱼是来历不明，要求回复。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:20","updateTime":"2021-05-23 21:34:20","isExist":null},{"id":2565,"question":"送货时没有安装，说厂家上门安装，但过了几天仍没有到，现顾客要求退货。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:10","updateTime":"2021-05-23 21:34:10","isExist":null},{"id":2564,"question":"送货给顾客，顾客发现电器不是自己的，包装好象拆开过，包装带少了\t2 条。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:34:05","updateTime":"2021-05-23 21:34:05","isExist":null},{"id":2563,"question":"顾客投诉安装员服务态度不好，装好热水器没有试机，水管电源不帮做。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:33:59","updateTime":"2021-05-23 21:33:59","isExist":null},{"id":2562,"question":"顾客昨天买了一袋圣安奇香枕，今早打开来吃，发现面包里面夹了一个很大的甲虫，要求赔偿来回车费，并以商品的十倍价钱赔偿给顾客。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:33:50","updateTime":"2021-05-23 21:33:50","isExist":null},{"id":2561,"question":"顾客反映购买了一排新鲜鸡蛋回去，开封后发现已经发臭，要求退款。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:33:41","updateTime":"2021-05-23 21:33:41","isExist":null},{"id":2560,"question":"顾客反映昨天购买了一套餐具回去，拆开包装后发现\n\n其中一个碟是烂的，还少了一个碗，要求退货。?","simplecontent":null,"content":"处理： 1、询问顾客在收银台付款后是否有打开包装检查（因为陶瓷制品、玻璃制品需当时检查清楚）\t，或有没有碰撞过。\n2、 餐具通常有一层透明包装膜将商品密封，\t询问顾客在打开时此包装膜是否破裂。 （如果包装膜未开封，有可能是厂家装箱时漏装，如果是这种情况可换货；如果已开封，请顾客留下联系电  话，我们会尽快给予答复。 ）","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:33:35","updateTime":"2021-05-23 21:33:35","isExist":null},{"id":2559,"question":"顾客反映昨天购买了一套餐具回去，拆开包装后发现其中一个碟是烂的，还少了一个碗，要求退货。?","simplecontent":null,"content":"处理： 1、询问顾客商品名称、条码，现收银单上的价格、当时卖场的标格。\n2、请顾客留下姓名、联络电话，会尽快给予回复。\n3、到百货部调查是否已升格未更改价钱牌，\t如果现已更改正确，查核更改的时间，看是否在顾客购买时是未换价钱牌的。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:33:24","updateTime":"2021-05-23 21:33:24","isExist":null},{"id":2558,"question":"顾客反映他在昨天购买的衣服，当时在卖场看到的价格与收银单上的价格不相符，要求回复是什么回事，并要求退回差价。?","simplecontent":null,"content":"处理： 1、询问顾客商品名称、条码，现收银单上的价格、当时卖场的标格。\n2、请顾客留下姓名、联络电话，会尽快给予回复。\n3、到百货部调查是否已升格未更改价钱牌，\t如果现已更改正确，查核更改的时间，看是否在顾客购买时是未换价钱牌的。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:33:07","updateTime":"2021-05-23 21:33:07","isExist":null},{"id":2557,"question":"顾客反映买的化妆品“去斑灵洗面奶”\t，买时促销员介绍说，使用后没有效可以退货，而现在顾客使用了半个月\n后，还没有效果，要求退货。?","simplecontent":null,"content":"处理： 1、询问顾客购买的具体时间、商品名称、条码、促销员的名字。\n2、请顾客留下姓名、联络电话我们会马上进一步调查、跟进给予回复。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:32:57","updateTime":"2021-05-23 21:32:57","isExist":null},{"id":2556,"question":"顾客当天买了一台脱水机，回去后检查包装发现上盖\n有一条破开的裂痕，外观很陈旧，要求退货。?","simplecontent":null,"content":"处理； 1、询问顾客当时是否有试机，当时有无发现此现象，是由我们公司送货还是自提。\n2、请顾客留下姓名、联络电话，我们会在最快的时间内回复。\n3、到家电部进一步调查，如果是由公司送货，亦需要调查送货过程中是否有碰撞。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:32:49","updateTime":"2021-05-23 21:32:49","isExist":null},{"id":2555,"question":"顾客反映三天前购买的纯棉袜，只穿了一天脚趾处已\n破洞，要求退货。?","simplecontent":null,"content":"处理： 必须请顾客出示有效的单据，\t因为是贴身衣物要确定顾客的购买日期， 在一个星期内如果证实是属于质量问题可退款给顾客。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:32:37","updateTime":"2021-05-23 21:32:37","isExist":null},{"id":2554,"question":"顾客反映他买的针织毛衣才穿一个月，电脑单已遗失，毛衣一拉就会脱线的现象，怀疑是质量问题，要求退货。?","simplecontent":null,"content":"处理： 1、感谢顾客向我们提出意见，因为是毛衣空隙和密度是比较大的，所以要小心保管，不要被勾破或拉破，要不什么毛衣都会脱线的，所以这种现象也不属于质量问题。\n2、并且也超出了我们的退换货的服务范围，非食品商品在七天内有质量问题才可退货，对不能满足顾客的要求表示道歉。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:32:30","updateTime":"2021-05-23 21:32:30","isExist":null},{"id":2553,"question":"顾客反映在三天前购买一台电视机，不满意此牌子的使用效果，由于包装已丢失，要求退款。?","simplecontent":null,"content":"处理：如果是不满意此机的使用效果可以跟顾客更换另一台相同的，如果是不满意此品牌且包装已丢失不能满足顾客做退款处理，向顾客表示道歉。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:32:20","updateTime":"2021-05-23 21:32:20","isExist":null},{"id":2552,"question":"顾客反映在\t20 天前购买了一台相机，照出相片效果不满意，对此牌子的商品已没有信心，此机不影响第二次销 售，没有电脑单，要求退款。?","simplecontent":null,"content":"处理： 1、因顾客没有电脑单或发票，查会员卡资料或历史销售\n记录等，判断此商品是在我司所购。\n\n2、检查商品，因一般情况下相机的使用上频率不高，完全不影响第二次销售的情况下，可征求上司意见可否更换。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:32:02","updateTime":"2021-05-23 21:32:02","isExist":null},{"id":2551,"question":"顾客反映他购买的5号电池拆开包装拿来用，不到半个小时，就已经没电了，怀疑是假货，要求退货?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:31:53","updateTime":"2021-05-23 21:31:53","isExist":null},{"id":2550,"question":"顾客于昨天购买了一双男装皮鞋，当时收银员忘记解码，到了出口时报警器响个不停，导致很多顾客回头观看，顾客认为这样损害了他的名誉，要求我公司公开道歉或书 面道歉。?","simplecontent":null,"content":"处理： 因为我们人员的工作失误造成顾客的不便和难堪，\t感到非常的抱歉， 祈求顾客的原谅， 并向顾客承诺我们会加强对内部工的管理， 如果顾客对我们的道歉仍感到不满意的，\t我们可以进一步要求部门经理和该员工到顾客户上跟顾客当面鞠躬道歉。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:31:40","updateTime":"2021-05-23 21:31:40","isExist":null},{"id":2549,"question":"顾客于上个星期购买了一支家具光油，回家使用后家具出现斑点性脱色的情况，现顾客要求我公司进行调查并赔偿家具的损失。?","simplecontent":null,"content":"1、询问顾客是否有按照产品的说明书所标的使用范围。\n\n2、询问顾客所购商品名称、条码，我们会经调查马上给予回得。\n3、如果家具脱色现象是由于我们的产品有质量问题所造成的，  我们公司会赔偿相应的经济损失，\t但必须经过调查后才能给予明确的答复。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:31:19","updateTime":"2021-05-23 21:31:19","isExist":null},{"id":2548,"question":"顾客于前天在我公司导购员的指引下买了一瓶玉兰油，可是使用后皮肤出现红肿的现象，顾客认为玉兰油是假冒产品，要求退款并负责她去医院的检查、治疗的费用。?","simplecontent":null,"content":"处理： 1、首先对顾客出现此问题表示关心，并停止使用该产品， 如果情况严重建议顾客先去看医生，\t如果医院证明是我们的产品有质量问题而导致，我们公司一定会负完全的责任。\n2、询问顾客是否按照说明书的要求使用，有可能是个人的皮肤\n\n不适应该种产品，或有没有跟其它化妆品同时使用。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:31:10","updateTime":"2021-05-23 21:31:10","isExist":null},{"id":2547,"question":"顾客昨天拿朋友的会员卡来购物，他在文具专购物时收银员未提出疑问就打会价，但来到二楼收银台结帐时收银员却不让他享受会员价，顾客问为什么同一间商场却有不同的制度，要求回复。?","simplecontent":null,"content":"处理： 1、首先向顾客道歉，这是我们工作人员的疏忽，我们的会员卡都亦有标明， 只限本人使用的， 对您造成的不便和误解表示抱歉。\n2、感谢顾客的建议和意见，我们会加强对员工的管理。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:30:58","updateTime":"2021-05-23 21:30:58","isExist":null},{"id":2546,"question":"顾客没有会员卡，她刚才购买了\t1200 多元的商品，当时收银员向她介绍时说可以送货，但到了服务台又说只能是会员购物满1000 元以上才可以送货， 顾客认为这是欺骗顾客、不负责的行为，要求处理。?","simplecontent":null,"content":"处理： 1、按公司要求是限会员，由于收银员一时的工作失误，\n向顾客许下送货的承诺，\t我们要为自己的言行负责任，\t所以第一时间答应跟顾客送货，\t并向顾客道歉， 是我们人员的工作失误造成。\n2、将收银员的工号摘抄下来，将事情反馈给收银部，加强这方面的培训和管理。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:30:47","updateTime":"2021-05-23 21:30:47","isExist":null},{"id":2545,"question":"顾客8 月 30 日购买了一袋红提，但回家后才发现称成榴连，大概多收了10 元，现已将红提吃掉了，但要求补回差价。?","simplecontent":null,"content":"处理： 1、询问顾客是否保存有电脑单和过称的价格牌。\n\n2、如果有以上的其中一种单据都可以按照单上的相应数量退回顾客的差价。（操作时注意：退前一种商品然后再销售）","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:30:32","updateTime":"2021-05-23 21:30:32","isExist":null},{"id":2544,"question":"顾客反映\t5 月\t1 日在公司购买了一粒电子，当时售货员介绍时说最少可使用半年，但现在只用了半个月就没电 了，顾客要求答复，并退款。?","simplecontent":null,"content":"处量： 1、电子或电池是易耗产品，一旦售出后一般是不能退换货的。\n2、因为顾客已经使用了半个月的时间，询问顾客所购的型号、伏数是否符合产品的使用要求。\n3、感谢顾客对我们反映这个问题，我们以后收货时会严格把好质量关。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:30:14","updateTime":"2021-05-23 21:30:14","isExist":null},{"id":2543,"question":"顾客反映5 月1 日在公司购买了一粒电子，当时售货员介绍时说最少可使用半年，但现在只用了半个月就没电 了，顾客要求答复，并退款。?","simplecontent":null,"content":"处量： 1、电子或电池是易耗产品，一旦售出后一般是不能退换货的。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:28:05","updateTime":"2021-05-23 21:28:05","isExist":null},{"id":2542,"question":"顾客于 10 月 2 日在公司购买了一批商品，其中有一瓶 洗头水已打单，但没有给顾客，销售号\tXXX ，要求给回洗头水。?","simplecontent":null,"content":"处理： 1、询问顾客购买的具体时间、销售号、收银员编码。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:27:46","updateTime":"2021-05-23 21:27:46","isExist":null},{"id":2541,"question":"顾客投诉刚在里面买了2个烧春鸡，食用时已变味，要求赔偿 10 倍差价。?","simplecontent":null,"content":"处理： 1、诚心向顾客道歉，说明是我们的管理不当而造成的，向顾客承诺我们一定会加强这方面的管理。\n2、第一时间将该商品的单价退回给顾客，因为不是假冒产品，不能按该商品\t10 倍赔偿给顾客。\n3、如不能进一步得到顾客的谅解，马上向上司汇报，看能否送一个新鲜的烧春鸡给顾客，以取得顾客的谅解。\n4、向卖场反馈此问题，将陈列的商品检查或回收起来。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:27:36","updateTime":"2021-05-23 21:27:36","isExist":null},{"id":2540,"question":"王小姐反映在商场里面，海报上标示购物满\t38 元有送XXX ，现付款后到赠品处领时又说已送完，顾客将所有的商品退货，并要指控我们商场有欺骗顾客的行为。?","simplecontent":null,"content":"处理： 1、到卖场查核是否贴有此海报，并看海报上是否注明 “送完即止”字样。\n\n2、可向服务台经理或市场部经理反映，看能否用其它赠品代替送给顾客，并向顾客道歉，取得顾客的谅解。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:21:59","updateTime":"2021-05-23 21:21:59","isExist":null},{"id":2539,"question":"顾客反映购买了一袋特价苹果，里面的心全部是黑色的，根本不能食用，要求退款。?","simplecontent":null,"content":"处理：询问顾客购买时间，如果是当天买的，则退款给顾客。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:21:15","updateTime":"2021-05-23 21:21:15","isExist":null},{"id":2538,"question":"顾客在一个月前购买了一台榨汁搅拌机，不小心将磨杯打破了，要求换一个新的。?","simplecontent":null,"content":"处理： 1、不属于商品本身的质量问题，是操作不当而造成的。\n\n2、可向顾客解释，我司可向供应商联络，看能否重新配置一个新的配件， 如不能配置需收相应的材料费则由顾客承担。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:21:01","updateTime":"2021-05-23 21:21:01","isExist":null},{"id":2537,"question":"顾客反映只是购买了10条毛巾，但电脑小票打成\t12条，说是收银员多收款，要求退款。?","simplecontent":null,"content":"处理： 1、询问顾客购买的具体时间、收银单号、收银员编码并做好登记。\n2、留下顾客的姓名、联系电话，将资料交收银部调查，并向顾客解释会以最快的速度给予答复。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:20:47","updateTime":"2021-05-23 21:20:47","isExist":null},{"id":2536,"question":"顾客在半个月前购买了一包泰国香米，今天才刚刚拆开包装，里面有部分米凝结成一团，有发霉现象，要求退款。?","simplecontent":null,"content":"处理： 1、询问顾客商品上的保质期是否在范围内，购回去后是否放到干燥处适当保管。\n2、到卖场检查同一批货是否有类似现象，如没有此现象有可能是顾客保管不当，如顾客强烈要求可根据实际情况换货给顾客。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:20:23","updateTime":"2021-05-23 21:20:23","isExist":null},{"id":2535,"question":"顾客购买了一盒玉牌燕窝，吃后发觉肚痛现象，怀疑是假货有质量问题，现已经吃了两瓶，要求退款。?","simplecontent":null,"content":"处理： 1、询问顾客购买时间，产品上的有效期。\n2、对顾客的身体状况表示关心，如有不适需到医院就医，并暂时停止服用。\n3、我们的产品都是来自全法的供应商，销售以来都未有顾客反映过此现象， 并请顾客最好不要空腹食用，并可以建议给家人食用看是否会有此现象，\t因为开封食品没有质量问题我们是不能作退货处理的。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:19:58","updateTime":"2021-05-23 21:19:58","isExist":null},{"id":2534,"question":"顾客购买了两条肉粽，吃到中间时，突然有一条铁丝卡在喉咙时，差点就咽下去，要求公司立即处理，并赔偿10倍差价。?","simplecontent":null,"content":"","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:19:29","updateTime":"2021-05-23 21:19:29","isExist":null},{"id":2533,"question":"顾客反映我们公司说“全镇最平”\t，其实样样商品都比别人贵，全是骗人的，比天天、华润还要贵，现买的沙田柚，  要求赔偿双倍差价。?","simplecontent":null,"content":"处理：按倍偿差价流程处理","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:19:02","updateTime":"2021-05-23 21:19:02","isExist":null},{"id":2532,"question":"顾客购买了两瓶洋酒，回家仔细看一下发觉两瓶的包装不相同，有一瓶包装看起来好像特别陈旧，是不是章业卖假冒商品。?","simplecontent":null,"content":"处理： 1、我们酒全部都是来自合法的供应商，商品上面都有注册商标、有效期、产地等，如果包装不同，可能是因为出厂日期不同而造成的，请放心，如有假冒，我们除了按国家有关法规赔偿外，我公司还按该产品单价的十倍奖励顾客的。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:18:39","updateTime":"2021-05-23 21:18:39","isExist":null},{"id":2531,"question":"顾客买一条白沙烟回去，下午来商场退货，说我们的烟比外面要贵很多。?","simplecontent":null,"content":"处理： 向顾客说明我们的烟是从国家烟草局直接供应的，\t都是统一售价，没有质量问题我们是不能作退货处理的。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:18:08","updateTime":"2021-05-23 21:18:08","isExist":null},{"id":2530,"question":"顾客半个月前购买了一条香烟，折开一包吸时觉得此烟的味道比较淡，怀疑是假烟，说电脑小票已遗失，要求退货。?","simplecontent":null,"content":"1、向顾客说明我们的公司的烟全部是由烟草局直接供应的，绝无假货，请顾客放心。\n2、烟草局亦有规定，如没有质量问题是不可以退换货的。\n3、如果觉得烟的味道比较淡，是因为烟所含的焦油量不同出会影响到烟的浓度","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:17:53","updateTime":"2021-05-23 21:17:53","isExist":null},{"id":2529,"question":"顾客购买了一件温琦衬衫，回家后试穿时发现有一个小洞，对此种商品不满，要求换其它商品?","simplecontent":null,"content":"处理： 1、询问顾客购买的时间、是否有电脑小票，在一个星期内如属是商品质量问题的我们可以换货或者退货。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:17:30","updateTime":"2021-05-23 21:17:30","isExist":null},{"id":2528,"question":"顾客于半小时前在超市购买了两个肉粽，吃到一半时，发现里面有少部分的米未熟，这么大一个超市，食品未熟就拿出来销售，要求我司赔偿10倍价钱。?","simplecontent":null,"content":"处理： 1、诚心向顾客道歉，说明是我们的管理不当，获得顾客的原谅。\n2、第一时间将该商品的单价退回给顾客，因为不是假冒产品，不能按10价格赔偿给顾客。\n3、马上通知卖场，将所有商品检查或将商品回收起来。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:17:09","updateTime":"2021-05-23 21:17:09","isExist":null},{"id":2527,"question":"顾客反映昨天购买了一台高宝\tCFQB 电饭煲回家第一次煮时，还未煮熟饭，电源就自动跳闸，要求退款。?","simplecontent":null,"content":"处理： 1、询问顾客是否有发票或电脑小票、包装配件是否齐全。\n\n2、叫顾客前来换货或退货处理。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:16:42","updateTime":"2021-05-23 21:16:42","isExist":null},{"id":2526,"question":"顾客反映前两天在本公司购买了一套书《儿童大世界》  ，书上说明每一册共有 6 本，但顾客现在手上只有  5 本，要求退款。?","simplecontent":null,"content":"处理： 1、询问顾客购买的具体时间，是否有电脑小票。\n2、询问顾客从卖场拿到收银台付款时是否记得一共拿几本下来。\n3、留下顾客的联系电话，马上到卖场或收银台是否有此商品遗留下来，并尽快给予回复。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:16:26","updateTime":"2021-05-23 21:16:26","isExist":null},{"id":2525,"question":"客今天在商场购买了一台\t2513ETCL牌电视机，回家后取出来看电视时，发现少说明书与遥控器，当时在家电部  试机时都有，要求补回来并给解释，尽快回复。?","simplecontent":null,"content":"处理： 1、询问清楚顾客是否有检查清楚包装箱。\n2、请顾客留下电话，我们将马上到家电部去调查，并马上给予答复。\n3、家电部如没有遗留，将进一步与厂家联系寻求帮助。","filterContent":null,"type":"客户投诉","status":0,"createTime":"2021-05-23 21:15:24","updateTime":"2021-05-23 21:15:24","isExist":null},{"id":2524,"question":"如何拆解产品需求？受益人，出发点，迫切程度","simplecontent":null,"content":"我接收到的需求是这样的：“在xxx业务里，我要做一个xxx的微信小程序”。到此，需求描述就结束了。\n\n对于这个“需求”，产品经理得到的有效信息会非常的贫乏。为什么我要对这个需求打引号呢，因为这称不上是一个有效需求，而是一个结论性方案。\n\n当然，从句式表达上来看，这确实是一个诉求，“我要…”这种句式表达的就是一种诉求。\n\n但本着为用户负责以及优化资源配置的角度来看，这个结论性的方案真的能解决它背后的问题吗？\n\n那什么是结论性方案背后的问题呢？其实就是这个需求对应的场景，一个方案一定是为了解决某一个问题而存在。如果我们进一步把“场景”这个词细化，能从如下三个角度去拆解一个需求。\n\n需求受益人；\n问题触发节点；\n迫切程度。\n\n从以上三个角度，我们分别定义了需求受益人、问题触发节点、需求迫切程度，这三个角度分别对应了人、问题、优先级。几乎所有的需求都可以从以上三个角度来拆解，接下来分别做进一步研习。\n\n\n1. 需求受益人\n\n前文有提到，每一个需求都有其对应的场景，提到场景，人是第一要素。如果需求是为了解决一个问题，那首要回答的是，我们解决的是谁的问题。也就是说，如果需求转化成产品方案，经过研发上线变成产品功能，这个功能的受益人是谁？\n\n很多时候，我们看似做了很多正确的需求，上线了很多产品功能，结果发现最后压根没人用。其核心原因就是需求受益人不清晰。\n\n需求受益人不清晰的原因要么是主观设想，要么是为了方案而方案。前者简单说就是YY，通俗说就是“有一种冷叫你妈觉得你冷”。后者简单说就是做设计做功能，通俗说就是“沉迷在完成任务后的成就感里”。\n\n找到需求受益人，去感受他们的问题。\n\n需求受益人有可能在内部，例如一个批量操作的功能可能会让运营人员的效率直线提升。需求受益人也有可能在外部，例如一个“随机播放音乐”的功能能解放那些选择困难或者没有选择的人。\n\n拆解需求第一步，找到需求受益人。这些人在哪？是否真实存在？如果存在，需求对应的方案是否能让他们产生感知并且能给他们带去价值？\n\n找到产品的真实用户，加几个用户的微信，当你需要判断一些需求时，或者需要做一些产品决策时，带上问题和他们聊聊。另外，把自己变成产品用户，场景化的感受一下用户所需。\n\n我现在做的一个toB的项目，加了一个重度核心用户，当面对需求方的一些新想法时，我都会和这个核心用户聊一聊，确认他是不是这个需求受益人。过程中，会得到很多的有价值信息输入。\n\n如果一个需求讨论开始，我们都无法定义出需求受益人是谁，那很大程度上就是一个看似正确的伪需求。\n\n\n2. 问题触发节点\n\n对于产品经理而言，要用“问题眼光”来看待需求，而不要用“结论眼光”，这两种视角会有非常大的区别。\n\n先说“结论眼光”，很多时候，我们的需求方或者用户提过来的大部分都是一些结论性方案。例如要开发一个什么功能，或者要修改现有的逻辑。\n\n此时，如果产品经理不加拆解判断就接受的话，很有可能做了一个正确但无用方案。\n\n而这种损害就是一个连锁效应，接收结论、制定方案、产品设计、技术研发、产品上线，牵动的都是一系列资源的投入。\n\n好不容易上线了，发现现实情况和当初的设想差距过大，然后再经过方案调整、产品设计、技术研发、产品上线。\n\n这么来看，产品经理如果不扮演好守门员的角色，对公司资源的消耗就会非常严重，最终，也无法带来用户价值。\n\n接下来，我们再说“问题眼光”，产品经理以探究问题的角度去拆解需求，也就是说，对应需求所解决的问题是在哪个环节节点？我们制定的产品方案是在什么节点对之前有了提升性的补充？\n\n这时候，需求会转变成问题。面对需求方，不要跟我说你想做什么，而是告诉我你遇到了什么问题，而且是在什么时候在完成什么动作时遇到了这个问题。这就是问题出发节点，也是需求的原始起点。\n\n找到这个点，才是真正解决问题的开始。很多时候，需求方自己是明白有问题的，基于自己的理解加工后，都会习惯性的得出结论性方案，然后把方案本身当成了需求。\n\n找到问题触发节点，探究原始问题，才能get到真正要解决的问题是什么。以免陷入争论和解决一个看似正确的错误问题。\n\n\n3. 迫切程度\n\n迫切程度对应了需求的优先级，优先级不是单一维度的考量，而是综合多方因素整体衡量。可以通过重要紧急四象限去划分优先级。\n\n涉及到需求迫切程度，直接决定的是资源的分配，包括设计资源、研发资源、运营资源。在明确需求受益人和问题触发节点之后，迫切程度的判断就是需求拆解的最后一个环节。\n\n提供几个判断需求迫切程度的考虑点，首先是对应需求是否处于关键业务路径上。\n\n例如电商业务中，从商品浏览到下单支付的核心路径上，期间的每个节点都是关键节点。如果对应需求是落在这些节点上，都是可以优先考虑解决的，也就是可以提上相对靠前优先级的。\n\n另外，对于一些关键性的Bug，例如阻碍用户完成关键业务路径的一些问题，是需要立刻马上解决的。除此之外，对于新特性、优化项或者补充性功能，都可以作为次要优先级在后期迭代。\n\n\n最后\n\n上述提供了如何拆解一个需求的三个角度，面对一个需求，分别从需求受益人、问题触发节点、迫切程度来进行分析。可能认知有限而略显片面，从我自己的认知里，这三个考量点基本能覆盖我经历过的一些需求。希望对你有用，也欢迎你留言来说一说，你是如何拆解一个需求的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 21:02:29","updateTime":"2021-05-23 21:02:29","isExist":null},{"id":2523,"question":"梅菜和酸菜区别?","simplecontent":null,"content":"梅菜一般是客家人做梅菜瘦肉汤，酸菜特别酸一般用来送粥","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:58:07","updateTime":"2021-05-23 20:58:07","isExist":null},{"id":2522,"question":"梅菜和酸菜是一样的吗？","simplecontent":null,"content":"梅菜和酸菜是不一样的。酸菜的口感是酸爽，而梅菜则有咸甜两种口味。而且酸菜是中国一些地区和德国存在的一种泡菜，梅菜主要产地是在梅州地区、惠州地区。\n\n二、梅菜和酸菜有什么区别？\n\n1.梅菜\n\n梅菜也叫梅干菜或霉干菜，是一种中国传统烹饪原料。使用雪里蕻或其他芥菜种类的茎叶，用盐腌制风干而成。一说因在南方梅雨季节制作而得名，另一说是发霉的霉。\n\n从口味上又有“甜梅菜”和“咸梅菜”之分。常用于上海菜、浙菜和粤菜。着名的传统梅菜产地有浙江省绍兴、广东省惠州等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:57:27","updateTime":"2021-05-23 20:57:27","isExist":null},{"id":2521,"question":"梅菜和梅干菜一样吗?","simplecontent":null,"content":"在梅州和惠州生产，\n\n1、梅菜是广东惠州的特产，又称为“惠州贡菜”。而梅干菜是享誉海内外的一种客家乡土菜，它有芥菜干、油莱干、白菜干之别，多系居家自制。\n\n2、用梅干菜烹制的菜肴，其鲜香之味，皆令食者难以忘怀。如梅干菜扣肉，因肉里渗人梅干菜之清香，而梅干菜又得肉香，故而相得益彰，浓香扑鼻，肥而不腻。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:56:40","updateTime":"2021-05-23 20:56:40","isExist":null},{"id":2520,"question":"普洱茶会上火吗?","simplecontent":null,"content":"便宜的熟普洱是用现代工艺发酵的，喝多了反而容易上火。有年限的熟普洱是最好的、不会上火的，生普洱不会上火的。\n\n普洱茶分生茶和熟茶：熟茶性温且养胃，可以多喝，但是熟茶喝多会的确会上火。生茶性寒，喝了不会上火；但是胃不好的或胃寒的喝了易伤胃，胃好的可以喝，但也不宜喝太多。要是人本身觉得热气的时候最好不要再喝，平时身体没有什么火气时喝。\n　　普洱茶生茶，味道清爽，有清热、消暑、解毒、止渴生津、消食、通便等功效；普洱茶生茶含有较多的茶多酚。茶多酚有抑制细菌帮助消化，清理肠道。生茶茶性烈，这也是被认为普洱茶会引起上火的原因。\n　　失眠者、孕妇、感冒发热者、胃溃疡患者不宜饮用普洱茶生茶。饮用普洱茶生茶有不良反映，推荐改饮用普洱茶熟茶。普洱茶熟茶茶性温和。有养胃护胃，减肥的作用，营养价值较高。普洱生茶茶气重、去油腻效果好,但对胃有一定的刺激,适宜胃功能较好，身体肥胖，血脂血压较高的人士饮用；普洱熟茶茶气温和，润滑细腻、温胃暖胃、通便利尿、瘦身养颜，适宜所有人群饮用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:53:30","updateTime":"2021-05-23 20:53:30","isExist":null},{"id":2519,"question":"铁观音会上火吗?","simplecontent":null,"content":"喝铁观音不会上火。铁观音作为茶叶的一种性偏寒凉，具有清心明目，杀菌消炎，减肥美容，还有延缓衰老等一系列的功效。日常生活中通过喝铁观音可以预防一些疾病，像恶性肿瘤的出现，还可以降低血脂，降低胆固醇，减少心脑血管疾病的出现。对于辅助治疗糖尿病也有一定的好处。铁观音在临床中不会引起上火，反而会治疗一些上火的症状，像上火所导致的口腔溃疡、急性的上呼吸道感染，还有相关的炎症，都可以通过铁观音来进行辅助治疗。铁观音可以提高人体的免疫力，可以清除人体过多的自由基，对于美容养颜，也是有一定的益处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:51:11","updateTime":"2021-05-23 20:51:11","isExist":null},{"id":2518,"question":"龙井茶的功效?","simplecontent":null,"content":"、有很好的生津止渴，消除疲劳的作用，龙井茶所含的咖啡碱可以很好起到兴奋中枢神经系统效果。2、茶叶所含的茶多酚以及维生素c等元素，具有很好的抗氧化、进一步降低血液胆固醇及低密度脂蛋白的含量，有效抑制血压偏高的作用。\n\n3、龙井茶中的咖啡碱、肌醇、叶酸、泛酸等可以调节人体脂肪代谢，进一步促进人体多余脂肪的排出，具有很好的减肥效果。4、可以延缓衰老以及抗菌抑菌的作用，茶中所含的茶多酚以及鞣酸可以有效中和自由基，凝固细菌的蛋白质等作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:50:32","updateTime":"2021-05-23 20:50:32","isExist":null},{"id":2517,"question":"为什么男生喜欢女生的脚?","simplecontent":null,"content":"因为女生的脚又白又美。我每次都追着穿凉鞋的女生的脚看。\n\n首先，女孩的脚并不是仅仅用来看的，而她的脚更能看出这个女孩的一些性格等什么啊，脚越小与好看，男人都喜欢那种小脚穿着高跟凉鞋的那种女孩吧，这大家都知道吧，再说过去也是这种啊，脚代表女孩的一切呢，别看那仅仅的小丫啦，性感小丫啊，女孩子的小脚和男人必不成的！\n\n首先，女性的脚丫子，本身是非常美丽的（当然因人而异）。现在有的男子是恋足癖，甚至有恋丝袜癖。这当然是不太正常的心理，但可以说明，女性的脚，确实是具备吸引人的魅力的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:49:49","updateTime":"2021-05-23 20:49:49","isExist":null},{"id":2516,"question":"2020年广州马拉松赛什么时候开始？","simplecontent":null,"content":"比赛时间：7:30\n\n　　参赛规模：20000人(含300个公益、慈善名额，其中公益名额200个、慈善名额100个)\n\n　　9月15日，广州市政府部门定期新闻发布会上（2020年总第187场），广州市体育局副局长吴民春介绍，备受关注的2020广州马拉松赛将按照原定计划，于今年12月13日举办。目前，市体育局正在密切与中国田协和相关防疫部门沟通，根据疫情防控形势，推进筹备工作。\n\n　　根据广州马拉松赛组委会规定，本届赛事报名将于11月2日15点正式启动，11月8日17时结束报名。报名人数超出限制将抽签决定参赛人员。本届赛事全国跑友均可报名，赛事中签选手需在领物时提供近1周内核酸检测证明方可领取参赛物资。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:46:28","updateTime":"2021-05-23 20:46:28","isExist":null},{"id":2515,"question":"广州马拉松什么时候举行?","simplecontent":null,"content":"每年11月或12月上旬","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:45:49","updateTime":"2021-05-23 20:45:49","isExist":null},{"id":2514,"question":"什么品牌糖果好吃?","simplecontent":null,"content":"阿尔卑斯\n徐福记\n旺仔\n大白兔\n雅客\n金丝猴\n箭牌","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:45:17","updateTime":"2021-05-23 20:45:17","isExist":null},{"id":2513,"question":"深圳春笋大厦?","simplecontent":null,"content":"深圳西部第一摩天楼，华润中心大厦。这栋楼又被称为春笋，因外形像子弹，也有人称之为子弹大楼，这栋楼还曾获得世界最佳高层建筑称号，我们去的时候还有很多网红在拍照，是一个非常适合约会逛街的宝藏打卡地，推荐推荐","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:43:50","updateTime":"2021-05-23 20:43:50","isExist":null},{"id":2512,"question":"初中1000米跑步标准成绩?","simplecontent":null,"content":"1、从《国家学生体质健康标准》表中，我们可以了解到，中考体育中男生的跑步项目为1000米，中考女生的跑步项目为800米，同时从表中可知，男生中考体育跑步项目的标准时间是3分30秒，如果达到了这个时间就可以得到100分的分数，60分的及格线所对应的时间是4分35秒;\n \n　　2、中考体育女生跑步考试中，达到3分24秒就可以拿到100分的成绩，60分的中考及格线所对应的时间是4分23秒，中考生们可以先测试一下自己跑步完全程所用的时间，然后再逐渐提高自己的体育素质。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:42:28","updateTime":"2021-05-23 20:42:28","isExist":null},{"id":2511,"question":"马拉松式跑多久?","simplecontent":null,"content":"1、全程马拉松距离42.195公里，半程21.095公里。对于全程马拉松完赛时间要求从2小时40分到8小时不等，不限时的不算在内，像日本琵琶湖马拉松这种飞一般的享受我们也不讨论。\n\n2、全球马拉松普通标配时间基本为6小时，国内马拉松赛事也不例外，当然北上广重等口碑不错的赛事关门时间为6小时15分钟。要想顺利跑完，拿到心仪的小奖牌，在朋友圈炫耀一下，对于6小时关门的赛事来说，你的配速最少得达到每公里8分32秒，而6小时15分关门的赛事，配速每公里最少得8分53秒。\n\n3、这个关门配速时间是什么概念，我们正常人步行速度每公里12分钟，你在正常步行速度下加快步伐就能达到这个速度，而能不能持续性步行就看自身的积淀，毕竟马拉松不是说说的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:40:34","updateTime":"2021-05-23 20:40:34","isExist":null},{"id":2510,"question":"马拉松式多少公里?","simplecontent":null,"content":"马拉松是一项长跑比赛项目，其距离为42.195公里，也有说法为42.193公里，但比赛都是用42.195公里，马拉松的诞生与希波战役有关，是为了纪念一位叫菲迪皮茨的士兵","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:39:07","updateTime":"2021-05-23 20:39:07","isExist":null},{"id":2509,"question":"袁隆平的贡献?","simplecontent":null,"content":"发明“三系法”籼型杂交水稻，成功研究出“两系法”杂交水稻，创建了超级杂交稻技术体系\n\n1997年，袁隆平再次发起研究超级杂交稻。2000年，超级杂交稻实现百亩示范片亩产700公斤的第一期目标。2004年，超级杂交稻实现百亩示范片亩产800公斤的第二期目标。除了增产外，袁隆平表示新型的超级杂交稻将更重视水稻营养，其研究团队已经致力于试验新品种中增加维生素A、蛋白质、淀粉及其他营养含量，以期减少贫血和视觉疾患。\n\n2011年9月19日，中国农业部验收组刚刚公布，袁隆平指导的“Y两优2号”百亩超级杂交稻试验田平均亩产926.6公斤，创中国大面积水稻亩产最高纪录。2013年9月29日国家杂交水稻工程技术研究中心证实，经农业部测产验收，由“杂交水稻之父”袁隆平院士科研团队攻关的国家第四期超级稻百亩示范片“Y两优900”中稻平均亩产达988.1公斤，创世界纪录。2016年10月10日，袁隆平指导的超级杂交稻“百千万”工程百亩片攻关基地收割。该基地的水稻实验品种为湖南杂交水稻研究中心选育的“超优1000”，经以谢华安为组长的专家组验收，实测亩产达到1013.8公斤，创造了新的杂交水稻高纬度亩产世界纪录。2017年10月16日，袁隆平团队超级杂交稻亩产1149.02公斤再次创下世界纪录。\n\n\n贫穷、挨饿，有好多原因，但水稻的产量太低，也是其中一个重要问题。感谢改革开放，最大程度地解放了国家和人的生产力；感谢袁隆平，他最大程度地提高了水稻和土地的生产力。没有在那个特殊的年代挨过饿的人，是难以体会袁隆平的巨大贡献的！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:37:52","updateTime":"2021-05-23 20:37:52","isExist":null},{"id":2508,"question":"吸烟有什么危害?","simplecontent":null,"content":"因为烟中含有大量的尼古丁，尼古丁是有一定毒性的，很容易引发一些疾病的发生，很多种疾病都与吸烟有着直接的关系，如果养成吸烟的坏习惯，是不容易戒掉的，吸烟对人体会造成什么样的危害呢！下面小编就给大家做一简单介绍。\n\n1、 首先一点，吸烟能破坏人体体内的营养成分，并且对人体内的细胞会造成侵害并破坏。还会造成体内物质的流失，从而导致多种并发症的出现。特别是对于一些身体不健康的人们，如果长期的吸烟会加重病情。\n\n2、 其次，吸烟还能诱发多种疾病，其主要是呼吸道的疾病，还有对肺部的感染，从而引发肺结核等症状，严重者会得肺癌。在日常生活当中，气管炎肺炎的患者，都与吸烟有直接的关系，所以一定要戒烟。\n\n3、 最后一点，吸烟能直接致人死亡。这是非常可怕的一点，因为烟中含有尼古丁等有毒物质，长期吸烟者会造成血管收缩，从而导致死亡。可想而知，吸烟是一种百害而不一利的。所以大家一定要远离抽烟。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:31:42","updateTime":"2021-05-23 20:31:42","isExist":null},{"id":2507,"question":"为什么吃个火锅、麻辣烫也能成为“吸毒人员”?","simplecontent":null,"content":"这种东西大家并不陌生，又名御米壳，俗称米壳、栗壳、烟斗斗、鸦片烟果果。看到鸦片字样就清楚的知道，这就是阿片类毒品的原植物果实，曾经在我国滇川贵，以及西北地区遍地都有种植。\n\n是长期使用，那么必然会对人体造成伤害，例如对神经系统、免疫系统和消化系统造成损害，以及慢性中毒。即使作用药品使用，也有是严格要求的，像运动员、支气管哮喘者、肝功能不全者、婴幼儿、孕妇等特殊人群是需要远离此类成分药物。\n\n正常人使用含有阿片类的止咳化痰药物、药水，都必须严格按说明书在医生的指引下服用。罂粟壳中的阿片类物质不仅可以让人兴奋、抑制呼吸，还可以进入乳汁，因此也可以通过胎盘进入胎儿体内。\n\n目前在警察的毒品检测手段中，尿检是比较常规的手段。因此无论是直接吸毒，还是吃了添加罂粟壳的食物，进入人体后有部分阿片成分会通过尿液代谢出去，而毒品尿检正是利用检测版对尿液（代谢物）中的毒品成分起化学反应的原理进行检测，因此呈阳性也并不意外。\n\n不仅是吃了添加罂粟壳的食物，一些药物大量滥用同样也有可能尿检呈阳性，例如含有麻黄碱的感冒药，含有阿片成分的甘草片，以及止咳水，甚至在一间封闭的房内，吸多了二手毒烟都有可能。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:30:19","updateTime":"2021-05-23 20:30:19","isExist":null},{"id":2506,"question":"老虎斑和东星斑区别?","simplecontent":null,"content":"石斑鱼是总称，有东星斑、老虎斑等等。东星斑是石斑鱼里比较好的，所以价也稍微贵点的。东星斑是豹纹鳃棘鲈，有两种体色，红色比绿色的贵。老虎斑是褐点石斑鱼。\n\n东星斑的色泽有蓝色、红色、褐色及黄色等，体形比一般斑鱼瘦长，头部细小。蓝色的眼睛中有乌黑的瞳仁，身上布满白色的幼细花点，形似天上的星星，因而称为“星斑”，至于“东”字，是因为它产自中国东部的东沙群岛。 东星斑因为头部细小，肉较多，而且颜色雪白。在潮菜中，东星斑常被用作生炊。东星斑的外皮光滑，炊熟的鱼皮裂开，见到那雪白的鱼肉，颇吸引人。\n\n自从东星斑被列为受保护的鱼类后，政府已经严厉禁止人们捕抓这种鱼，因此东星斑已经成为稀有品种的鱼类。\n\n老虎斑是石斑中的普通品种，身体黄色至浅褐色，以金黄色最靓，有五块不规则的深褐色斑纹垂直排列，全身布满密集的细小褐色斑点，在斑纹上的斑点颜色较深，尾柄的后半部有黑色鞍形小斑纹，鱼皮厚，头腩丰满，多肉爽脆。\n\n老虎斑蛋白质的含量高，而脂肪含量低，除含人体代谢所必须的氨基酸外，还富含多种无机盐和铁、钙、磷以及各种维生素;鱼皮胶质的营养成分，对增强上皮组织的完整生长和促进胶原细胞的合成有重要作用，被称为美容护肤之鱼。尤其适合妇女产后食用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 20:26:54","updateTime":"2021-05-23 20:26:54","isExist":null},{"id":2505,"question":"清蒸哪些鱼好?","simplecontent":null,"content":"清蒸的鱼家常一点有桂鱼、鲈鱼、鲳鱼，再高档一点就有石斑、东星斑啊，鱼没骨头那是不可能滴，只是说背部的刺会比较少，不容易卡到大的话，石斑、东星斑很大，不过清蒸鱼大了不好做哦。上面说的都还好。大一点的饭店吃一般会有一个冷拼，就是卤鸭爪，猪心之类的，一个鸡或着鸭，然后会有一个肉，东坡肘子，扣肉之类，还有好像每次都会有个虾像椒盐或着白灼的，还有就是会有一个贵一点的比如甲鱼啊，海参之类的。好像主菜差不多就是这些了，这是我们这边啊，以正餐的标准，要是家常一些不外乎是鸡鸭之类。剩下就是炒菜和小菜，糕点和主食了。\n\n清蒸鲈鱼，很鲜，小刺很少~~~","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 19:19:58","updateTime":"2021-05-23 19:19:58","isExist":null},{"id":2504,"question":"多宝鱼特点?","simplecontent":null,"content":"很多人应该都吃过多宝鱼。多宝鱼外表长得特别丑，灰头土脸的，身体两侧还有一些凸出来的点，让人看了就不想吃。和其外表相反的是，多宝鱼肉质嫩滑，味道鲜甜，而且没什么骨头，吃起来很方便。很多时候，一家老小到酒楼吃饭，都会点上一条清蒸多宝鱼。大家可能也会发现，同样是海鱼，多宝鱼虽然和东星斑那些没得比，但是比起一般的海鱼，多宝鱼的价格还是挺贵的，就在海鲜批发市场，多宝鱼也能卖30多块钱一斤，到了酒楼里那是更贵了。但是多宝鱼为什么这么贵，大家知道吗？其实是因为多宝鱼养殖起来也很难。\n\n首先养殖多宝鱼，农民第一个头疼的问题就是，如何选择多宝鱼苗种。如今水产市场的鱼种品质参差不齐，农民在买多宝鱼鱼种的时候，通常会选择体长要在5厘米以上的鱼，并且鱼体的色泽要正常，在水里要有活力，这样才能算是看起来无病害。\n\n第二，养殖多宝鱼的水体十分讲究，要求水质无污染，起码是国家的二级水体。而且多宝鱼的养殖池抽取地下海水可以直接使用，如果是用露天环境下的海水是不能直接使用的，必须先进行过滤、杀菌等消毒工作后才能投放到池里。多宝鱼属于喜欢冷水的鱼类，对水温的要求也十分苛刻。多宝鱼生长的水温要求为3~23℃，如果想养殖出来的多宝鱼更加优质，最好就把温度控制在10～20℃这个范围内。\n\n有了合适的水体和水温，一个干净的水生环境对多宝鱼的生存至关重要。因为多宝鱼的饲料多为一些小鱼小虾或一些高蛋白、中脂肪的特制饲料，这些饲料如果投放进鱼池里，会对多宝鱼的养殖池水质造成影响。所以在农民喂过鱼之后，应该把多宝鱼池外的排污立管开关打开，让养殖池底的残存的饲料、多宝鱼排出的粪便流出池外。如果看到有死鱼要及时捞起来清理掉，免得如果是病鱼的话，会传染给其他鱼。\n\n做好上面的工作之后，就是多宝鱼的长期管理问题了。首先，农民必须要做的就是经常观察多宝鱼的活动迹象。比如它的食量、游动和发育情况，这样能观察到它们是否健康，如果出现了问题能及时防治。另外一旦发现病鱼和死鱼，千万不要心疼，要马上把它们捞起来焚烧掉，而不是拿来烧烤吃掉。在焚烧之前，农民要对它们的死因进行一个分析并且记录下来，再出现这种死况的鱼，我们就要考虑是不是得病导致的。\n\n其次，多宝鱼的养殖环境是很需要农民自己亲力亲为调控的，比如温度、比如光照以及水质，这些都是起到多宝鱼养殖成功与否的关键。还有就是，农民对养殖池进行清理时，千万不要使用含有化学元素的药剂，因为多宝","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 19:17:40","updateTime":"2021-05-23 19:17:40","isExist":null},{"id":2503,"question":"桂花鱼功效?","simplecontent":null,"content":"桂鱼含有蛋白质、脂肪、少量维生素、钙、钾、镁、硒等营养元素，肉质细嫩，极易消化，对儿童、老人及体弱、脾胃消化功能不佳的人来说，吃鳜鱼既能补虚，又不必担心消化困难，吃桂鱼有“痨虫”的作用，也就是说有利于肺结核病人的康复。\n\n因为桂鱼的肉质非常细嫩。加上这种鱼还有药用功效，对儿童、老人及体弱、脾胃消化功能不佳的人来说，能补虚，又易消化，它的肉还有利于肺结核病人的康复，此外这种鱼肉的热量也不高。由于现在这种鱼产量日渐稀少，也导致价格越来越贵。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 19:14:15","updateTime":"2021-05-23 19:14:15","isExist":null},{"id":2502,"question":"东星斑为什么那么贵?","simplecontent":null,"content":"葱油或者清蒸才能把鱼的鲜味给更好的发挥出来。新鲜的东星斑，最好清蒸，原汁原味。清蒸东星斑葱香鱼香扑鼻，并且色泽鲜亮，入口有由微焦至极嫩的层次感。鱼肉细嫩鲜美，汤汁香味浓郁。\n\n滋补肝肾、延年益寿深海东星斑多自然生长于100米以下的深海，污染少，生长时期长，在几十年上下，故其肉质相当有咬劲，营养价值更是其他海产品所不能比拟的。同时深海东星斑容易消化，吸收率极高，85%-90%为人体需要的各种需要，有助于人脑及视力的发展。\n\n东星斑是石斑鱼的一种，长在深海，石斑的品种很多，东星斑是有蓝色、白色、褐色及黄色等，身上红色的花点，形似星星，故称为\"星斑\"，因为它产自中国东部的东沙群岛。又名东星斑 代价不菲","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-23 19:12:39","updateTime":"2021-05-23 19:12:39","isExist":null},{"id":2501,"question":"大蒜加热后杀菌效果如何?","simplecontent":null,"content":"大蒜素遇热时会很快失去作用，所以大蒜适宜生食。因此，如果想达到最好的保健效果，食用大蒜最好捣碎成泥，而不是用刀切成蒜末。并且要先放10—15分钟，让蒜氨酸和蒜酶在空气中结合产生大蒜素后再食用。\n\n大蒜虽好，可并不是吃得越多越好。因为大蒜吃多了会影响B族维生素的吸收，大量食用还会对眼睛有刺激作用，严重者有可能会引起眼睑炎、眼结膜炎。另外，大蒜不宜空腹食用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-22 23:29:41","updateTime":"2021-05-22 23:29:41","isExist":null},{"id":2500,"question":"吃多少大蒜可以杀死胃部细菌?","simplecontent":null,"content":"两三个","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-22 23:28:56","updateTime":"2021-05-22 23:28:56","isExist":null},{"id":2499,"question":"孜然的作用?","simplecontent":null,"content":"1、祛腥解腻：孜然气味浓烈，搭配牛羊肉等食用可以起到去腥解腻的功效，增进食欲。\n\n2、杀菌防腐：孜然能抑制某些微生物的生长，起到杀菌防腐的功效。\n\n3、提神醒脑：孜然具醒脑通脉，降火平肝等功效。\n\n4、开胃健食：孜然味道浓烈，常食能起到开胃，增进食欲的功效，适合消化不良人群多食用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-22 23:28:30","updateTime":"2021-05-22 23:28:30","isExist":null},{"id":2498,"question":"深圳最拥挤地铁?","simplecontent":null,"content":"深圳的高新园地铁站，这个曾经被誉为深圳最挤的地铁站，在最高峰的时候，仅仅一个地铁站，当天的客流量就达到了惊人的数几十万万名，而站外的高峰期的排队长度曾经更是达到了五百米之最。\n\n高新园，是一座你来深圳，不得不去的一个地铁站。\n\n如今随着多条地铁陆续开通，还有部分地铁线做了延长，高新园地铁站的流量相比之前小了一些，可是即使是在如今，高新园在整个南山区的交通地位依旧是不可小觑。\n\n在上下班高峰期，错峰进站，还有地铁站外排出去几十米的长龙盛况依旧时有出现，有人说，来到了深圳，就应该去一下“高新园”地铁站，因为这里既是整个深圳南山区最核心的地段。\n\n同时这里也是深圳，最繁华富庶的地方，在高新园地铁站两公里范围内，不仅有有腾讯，大疆，迈瑞，阿里深圳分公司，百度深圳分公司，头条深圳分公司，还有所谓的的TCL，康佳，中兴，创维等硬件互联网巨头。\n\n来一次深圳，去一次高新园，你就会懂得，如今有多少年轻人，既优秀，又很拼命，同时来一次高新园，你也会看到，在这个年轻的城市，又有着多少熟悉和年轻的面孔，为了自己的一个未来，在这座城市不断地拼命。\n\n深圳，是一座年轻的城市，也是一座励志的城市，这个城市，是由全国各地无数的年轻人，共同的汗水和努力铸就而成的，而高新园地铁站，恰恰是这个城市无数年轻人的一个奋斗缩影罢了，你觉得呢？[灵光一闪][灵光一闪][灵光一闪]","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-22 16:52:53","updateTime":"2021-05-22 16:52:53","isExist":null},{"id":2497,"question":"人事招聘?","simplecontent":null,"content":"人事部负责招聘的可以先开了，不懂招聘技巧，可以不招，但拒绝应聘者的时候要规避法律法规，避免法律风险。就好像你只招男士(男士更好，女士也能做的岗位)，你可以说男士优先，但写了限男士那就是招聘歧视。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-22 12:46:23","updateTime":"2021-05-22 12:46:23","isExist":null},{"id":2496,"question":"麒麟瓜和黑美人区别?","simplecontent":null,"content":"每当到了夏季，就是食用西瓜消暑的时候，而且市场上会出现不同品种的西瓜，其中就包括黑美人和麒麟瓜，两种瓜市场需求都比较高，但是哪种更甜呢？它们有哪些区别呢？接下来一起了解下吧！\n\n\n\n一、黑美人瓜和麒麟瓜谁甜？\n\n黑美人是一种瓜皮为黑绿色的西瓜早熟品种，果皮薄而坚韧，肉质鲜嫩多汁，果实形状一般为长椭圆形，比较耐贮运，因为高糖味美，不易空心，开花结果快，很多农民朋友都会种植，主要在我国南方湖北、广东、广西、海南、福建和湖南等地种植，而麒麟瓜是一种西瓜新品种，而且重量不高也不低，一刀切开麒麟瓜就会自然开裂，纹路弯曲，果肉很甜，果皮很脆，是麒麟瓜的显著特点，对于大多数食用西瓜的消费者来说，都会觉得麒麟瓜比黑美人要更好吃一些。\n\n\n\n二、黑美人瓜和麒麟瓜有何区别？\n\n1、黑美人瓜吃起来比较紧凑，一口咬下去非常饱满，而且甜度比较高，只是黑美人的果皮比麒麟瓜要厚，所以人们都愿意选择麒麟瓜。麒麟瓜的果肉吃起来比较松软，没有其他西瓜那样细碎，瓜汁浓。\n\n\n\n2、黑美人西瓜早熟，植株强健，抗性高，丰产性好，不易发生裂果，果皮为深黑绿色，没有明显条纹，外观比较好看，果肉红色肉质鲜嫩多汁，比较耐贮运，而麒麟瓜的含糖量高，糖分积累充足，比黑美人甜味更好，因而消费者选择麒麟瓜的也比较多。\n\n3、黑美人吃了可以治疗黄疸、减少体内胆色素含量，使皮肤变得更好，还可以治疗咽喉和口腔炎症，麒麟瓜吃了能够强健机体，抵抗各种疾病发生，阻止黑色素的产生，营养价值各有千秋，都是很不错的西瓜品种。\n\n以上就是关于黑美人瓜和麒麟瓜区别的全部介绍，如果大家也喜欢吃西瓜的话，可以多到市场上了解不同种类西瓜的价格和口味，现在市场上的麒麟瓜需求是很不错的，甜味十足。\n\n关于黑美人瓜和麒麟瓜区别的精彩图文、热门评论，您可能对惠农网以下推荐的内容感兴趣，欢迎阅读。\n\n你可能对以下农产品感兴趣：全国优质西瓜供应","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 19:46:28","updateTime":"2021-05-20 19:46:28","isExist":null},{"id":2495,"question":"为什么我们只吃甲鱼却不吃乌龟？","simplecontent":null,"content":"中华上下五千年，悠久的历史造就了悠久的饮食文化，中国人的餐桌上总是丰富多样，哪怕是单一的食材，也可以造就出丰富的吃法，煎炸烹煮炖，这是世世代代相传的智慧。汤品，是雷人文明智慧的结晶，汤品的做法更是丰富多样。有一种食材，是炖汤的最佳选择，就是我们常说的王八，又称甲鱼。\n\n甲鱼炖鸡是汤品中上好的滋补佳品，那与甲鱼长相相似，特性相似的乌龟，为什么相对就较少出现在餐桌呢？其实答案很简单。\n\n第一个原因是甲鱼身上的肉含量比乌龟丰富了近百分之三十，甲鱼只有内脏不可食用，其余全身的所有部位，皆可食用，甲鱼和乌龟都有壳，但乌龟壳相对粗糙，甲鱼壳细腻，乌龟肉也相对粗糙，口感没有甲鱼细腻，所以不那么受喜爱。\n\n第二个原因是甲鱼的繁殖能力比乌龟强，相对来说更容易人工养殖，孵化率也高，成本就比乌龟低，价格也比乌龟低，且甲鱼生长周期比乌龟短，相对来说性价比要高得多。\n\n第三个原因是乌龟在中国的意向是长寿，有人担心吃了长寿的生物会折寿，所以接受度比甲鱼低，甲鱼俗称王八，在中国话里是贬义词，所以吃甲鱼人们没有任何的心理负担，且乌龟很多时候都以宠物的身份出现在人们身边。\n\n第四个原因是甲鱼是一道营养非常丰富的滋补佳品，顶尖的厨师能掌握好甲鱼的特质，从而以甲鱼制作出很多不同口味的美食，不论是炖汤还是红烧，都是餐桌上的美食，甲鱼适合身体虚弱的人食用，尤其是生病初愈的人，能帮助他们更好的恢复。\n\n人工养殖的甲鱼不如野生的甲鱼效果好，所以野生的甲鱼更为大众所喜爱，价格也更高。甲鱼的功效、口感、性价比，都比乌龟要好，所以人们为什么吃甲鱼而不吃乌龟，也不是不可理解的事了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 19:14:01","updateTime":"2021-05-20 19:14:01","isExist":null},{"id":2494,"question":"520和521区别?","simplecontent":null,"content":"520是对女生，521是对男生","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 11:20:12","updateTime":"2021-05-20 11:20:12","isExist":null},{"id":2493,"question":"如何制定计划时间?","simplecontent":null,"content":"首先，每周制订学习计划和目标，并落实到每天中去，非常消耗时间和精力，很多学生（主要是第三组的学生）过了一段时间就放弃了做周计划。\n\n其次，很多学生（主要是第三组的学生）一旦没有跟上日程表的进度，就会感到失望，学习动力也没有了。\n\n为什么学生们会跟不上每周（落实到天）的计划呢？这些计划的制订者不是他们本人嘛。原来，每个学生都可能会面临突发事情。比如，今天身体不舒服，可能就没办法完成日程表上的计划；明天下午，学生会或社团要搞一场活动，又没办法完成日程表上的计划。\n\n在实验中，第三组计划每周学习时间是20小时，但后来因为临时突发事件的发生减少到了8小时；第一组每周学习时间约在10至15小时；第二组以月为单位制订计划，每周学习时间为25小时，到了学期末学习时间还略长。\n\n这项研究和案例让我们明白了，制订计划时要把时间放宽松些，留些时间给突发的事情临时性的工作，这样我们才不会因为跟不上日程表而有挫败感，从而伤害到我们工作的积极性。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 10:01:10","updateTime":"2021-05-20 10:01:10","isExist":null},{"id":2492,"question":"分类整理是浪费时间?","simplecontent":null,"content":"1、有时候，时间根本不允许我们把工作做个详细的归类。\n\n2、如果我们专注于做一件事，其实根本就没有分类的必要。\n\n可如果你是个不折不扣的“分类控”呢，非要把事情分个类心情才舒服呢，那该怎么办呢？\n\n所以，对于我们这些上班族来说，请改掉分门别类的强迫症吧。一是，如上文分析的，世界太复杂，强行分类不“人道”；二是，强行分类不仅不会提高工作效率，反而还会降低工作效率。对于这一点，我们继续往下看。\n\n然后，观察他们，如果公司搬迁，谁能在最短的时间内将重要的文件打包带走？\n\n答案令两位专家大为吃惊：混乱的员工在搬迁时，收拾起物品来效率更高。他们不仅用时更短，还更清楚哪些物品是重要的需要带走的，哪些物品是不重要的可以丢弃的。\n\n两位专家进一步分析后得出的结论是：那些喜欢将物品分门别类整理好的员工，对整理有一种偏执，对混乱有一种本能的不安全感和惧怕，他们把任何文件——重要的、不重要的——都一股脑地整理归档。实际上，很多文件在使用过一两次之后，就失去了价值，却还霸占着空间。如此一来，他们很难在短时间内，从一柜子的文件中迅速找出最重要的文件。\n\n他们在处理文件时，还有一种方法：重要的文件才堆放在办公桌上，那些不重要没价值的文件看完之后，会随手丢进垃圾桶。也就是说，他们的办公桌看似堆得乱七八糟，但实际上都是他们用得着的文件。\n\n\n慧科特和IBM研究中心的研究人员联合做了一项调查，在几百位白领的电脑上安装了追踪软件，软件追踪到这些白领累计85000次寻找电子邮件的行为，要么是在（挨个）文件夹里查找，要么是通过其他方式查找（如直接去电子邮箱里查找）。最终发现，查找文件夹每次花费的时间近1分钟，而通过其他方式查找只需17秒。\n\n换句话说，即便把所有电子邮件都保存在同一个文件夹中，也比分门别类建文件夹，在查找的时候更省时间。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 10:00:16","updateTime":"2021-05-20 10:00:16","isExist":null},{"id":2491,"question":"李子太酸如何吃?","simplecontent":null,"content":"首先我们需要先将李子清洗干净，然后加上盐，清水浸泡上几分钟，去除表面的细菌。然后再清洗干净，如果你不想把李子拍开的话，可以用刀一个一个把李子的上下划上几个十字刀，这样也能更快速入味，但是我比较懒，直接用刀把李子拍开了，但是大家要注意不要用力过大，完全拍烂了就不好腌制了。\n\n然后我们将拍好的李子放入到提前准备好的容器当中，容器记得要消毒，然后在里边放上足量的白糖，盐，辣椒粉，辣椒粉一定要选择那种最细的，粗的辣椒粉的话，吃起来味道就差很多了。因为我们放这些调料主要是为了遮盖李子的酸味，所以糖要足量，盐和辣椒的话，根据自己的喜好来放就可以了！只要加上这三种调料腌出来的荔枝味道立马就不一样了！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:42:23","updateTime":"2021-05-20 09:42:23","isExist":null},{"id":2490,"question":"杨梅怎么清洗?","simplecontent":null,"content":"夏天的时候，有很多新鲜的水果，比如西瓜，桃子，杨梅，草莓，李子，梨子之类的。要说到清洗的话，最难清洗的，莫过于杨梅了。因为它和其他水果不太一样，它是没有外皮的，很多人在吃杨梅的时候，都是简单冲洗一下，这样做其实是非常不卫生的。因为杨梅里面很容易留存一些果蝇幼虫，也就是小小的虫子，如果肉眼看到的话是非常令人恶心的。\n\n这种果蝇幼虫，虽然对人体没什么危害，甚至还有丰富的蛋白质，唯一的危害就是容易对咱们的感官造成一定的冲击力了。因为谁也不想在自己吃的东西里面，见到一些让人作呕的小虫子。再加上杨梅本身不太好清洗，而且也没有保护皮，所以在清洗的时候，一定要多加注意，严格清洗不能掉以轻心。小厨这就来给大家分享一下，杨梅的美味做法，喜欢的朋友快来看看吧！\n\n清洗杨梅的做法步骤：\n第一步：\n首先咱们准备好杨梅一部分，一般的杨梅或多或少的都会打一些农药，但是一般都是在很小的时候打，长大之后基本就很少打了，不过咱们也不能粗心，一定要先把杨梅清洗一遍。清洗的时候，把杨梅放在篮子里，然后用流动水冲洗，把叶子以及上面的一些脏东西清理干净，然后再进行下一步。\n\n第二步：\n前面的一步，可以帮咱们把杨梅表面的一些脏东西和农药残留清洗干净，下一步就是来清理杨梅的内部环境了。一般咱们泡杨梅的时候都是用盐水来泡，做法简单，只需要把清洗干净的杨梅放进盆里，加入淡盐水浸泡十多分钟就可以了。咱们还可以用到小苏打来浸泡，也可以起到一个清洁的作用。\n\n第三步：\n在清洗干净之后，咱们还需要用流动水冲洗干净，这一步就是为了防止里面的“荤菜”附着在杨梅的表面上，可以再次进行冲洗，杨梅会更干净一些。如果咱们暂时吃不完的话，就可以把杨梅放进锅里加糖水一起煮，做成杨梅糖水。或者是冰冻起来，还可以用来做成杨梅酒。只要清洗干净了，就可以开发出各种各样的吃法。\n\n以上这道清洗杨梅的做法，大家都学会了吗？欢迎大家关注小厨或收藏本文，有什么想说的可以在评论区留言点赞哦，小厨专注美食教程和技巧，你的支持","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:40:39","updateTime":"2021-05-20 09:40:39","isExist":null},{"id":2489,"question":"杨梅外皮能吃吗?","simplecontent":null,"content":"杨梅酒味儿甜酸对健脾开胃拥有非常好的功效，因而也十分受大伙儿的热烈欢迎。可是在吃杨梅酒的情况下一定要留意，杨梅酒是不能立即服用的。由于杨梅酒的独特边皮造成许多 虫子是在瓜瓤里边的清理表层是没法洗出小虫子的，因此要用食盐水侵泡，让虫子自身出去，那样才可以安心的服用。\n\n一些“梅农”、“梅商”以便使杨梅酒的看上去更新鮮，可能喷撒一些化学品，例如“室内甲醛”类的。大家都了解“室内甲醛”对眼睛视力影响非常大，服用后会造成眼睛视力下降。非常是异地运进的杨梅酒，乃至有非法商人喷撒了“灭虫剂”防烂掉，那样的杨梅酒如果不洗，就更不可以吃完，因此在这儿提示大伙儿，吃杨梅酒一定要清理之后再吃，千万别嫌麻烦，吃坏人体那才算是麻烦事呢。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:40:13","updateTime":"2021-05-20 09:40:13","isExist":null},{"id":2488,"question":"杨梅食用宜忌？","simplecontent":null,"content":"1、肥胖之人常食杨梅有助于减肥防胖;\n\n2、习惯性便秘者食用杨梅可得以改善;\n\n3、癌症患者及放疗、化疗后食用有利于健康;\n\n4、患有口腔咽喉炎的人宜食用杨梅;\n\n5、胃气痛、烦渴、急性胃肠炎及有痢疾的人也宜食用。\n\n6、阴虚血热、火旺或有牙病者忌食;\n\n7、糖尿病人忌食杨梅;\n\n8、杨梅忌与生葱同食。\n\n\n\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:38:05","updateTime":"2021-05-20 09:38:05","isExist":null},{"id":2487,"question":"杨梅怎么吃?","simplecontent":null,"content":"1、普通吃法：将杨梅放在盐水中泡10分钟左右，洗净即可生吃。也可醮蜂蜜吃，混合酸奶或者沙拉、炼乳等一起吃也是可以的。\n\n2、冰镇杨梅。将洗净的杨梅放入保鲜盒中，然后撒一些白糖，将其放入冰箱中冷冻，既能延长杨梅的保质期，又能随吃随取。除了这些吃法外，杨梅还能用来泡酒或者是榨成杨梅汁食用。\n\n另外，杨梅不宜多吃，吃多了容易让牙床发软、舌尖起泡等，还有可能引起“上火”的现象。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:37:34","updateTime":"2021-05-20 09:37:34","isExist":null},{"id":2486,"question":"杨梅对湿热有影响吗？","simplecontent":null,"content":"病情分析：你好，杨梅有，生津止渴，开胃消食等等作用。对于湿热是没有影响的。平时如果有湿热也需要规律生活，避免熬夜，戒辛辣油腻，刺激性食物，忌烟戒酒，多喝水补充体液，清淡饮食调理，根据病情的不同，症状不同，有时间可以在中医生指导下辨证调理中药治疗对症调理。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:36:48","updateTime":"2021-05-20 09:36:48","isExist":null},{"id":2485,"question":"秦岭淮河在哪个城市?","simplecontent":null,"content":"秦岭被誉为中国的龙脉，它的西端在甘肃省境内，东段到河南省西部，主体位于陕西省的南部与四川省交界处，长约1500公里。\n\n淮河发源于河南省南阳市桐柏县西部的桐柏山主峰太白顶西北侧河谷， 干流流经河南、安徽、江苏三省，淮河干流可以分为上游、中游、下游三部分，全长1000公里。\n\n秦岭\n\n分为狭义上的秦岭和广义上的秦岭。\n\n狭义上的秦岭，仅限于陕西省南部、渭河与汉江之间的山地，东以灞河与丹江河谷为界，西止于嘉陵江 。广义上的秦岭，是横贯中国中部的东西走向山脉，西起甘肃省临潭县北部的白石山，向东经天水南部的麦积山进入陕西。\n\n在陕西与河南交界处分为三支，北支为崤山，中支为熊耳山；南支为伏牛山 。长约1600多千米，为黄河支流渭河与长江支流嘉陵江、汉水的分水岭。\n\n淮河\n\n位于中国东部，介于长江与黄河之间，是中国七大河之一。古称淮水，与长江、黄河和济水并称“四渎”，是中国七大江河之一。\n\n洪河口以上为上游，长360公里，地面落差178米，流域面积3.06万平方公里；洪河口以下至洪泽湖出口中渡为中游，长490公里，地面落差16米，中渡以上流域面积15.8万平方公里；中渡以下至三江营为下游入江水道，长150公里，三江营以上流域面积为16.46万平方公里。\n\n淮河流域地跨河南、湖北、安徽、江苏和山东五省，流域面积约为27万平方公里，以废黄河为界，整个流域分成淮河和沂沭泗河两大水系，流域面积分别为19万平方公里和8万平方公里。\n\n\n\n扩展资料\n\n地貌特点\n\n秦岭由东向西逐渐升高，陕西境内岭脊海拔约2000米，高峰都在2000－3000米，如华山主峰海拔为2400米，太白山主峰为3771.2米，高出汉水及渭河河谷超过3000米之多。\n\n秦岭北坡山麓短急，地形陡峭，又多峡谷，南坡山麓缓长，坡势较缓、但是因河流多为横切背斜或向斜，故河流中上游也多峡谷。秦岭山脉入陇南境内后，其走向为西北－东南，主脉海拔均在2000米以上，丛山之间形成一些小的盆地。\n\n淮河流域东临黄海，西、南及东北部分别为伏牛山、桐柏山、大别山和沂蒙山等环绕，山海之间为广阔的平原。山丘区面积约占流域面积的1/3，平原面积约占2/3。淮河流域东西长约700km，南北平均宽约400km，西北部高，东南部低。\n\n海拔在600～1000m之间，豫西石入山最高为2153m。淮河流域上游两岸山丘起伏，水系发育，支流众多；中游地势平缓．多","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:29:41","updateTime":"2021-05-20 09:29:41","isExist":null},{"id":2484,"question":"长江以南是南方,长江以北是北方吗？","simplecontent":null,"content":"不是，应该是秦岭－淮河线。\n\n秦岭－淮河线是中国地理区分北方地区和南方地区的地理分界线。在此线的北面和南面，自然条件、地理风貌、农业生产或是人民生活习俗，均有明显不同。\n\n秦岭—淮河线从名字上看它的画法似乎很简单，沿秦岭、淮河画一条线即可。可是当你面对着一张大比例尺的中国地图时你会发现根本无从下手：秦岭西起甘肃省白石山，秦岭—淮河分南北，只是分了中国东部，中国西部怎样分南北部是很有意思的，西部的确可分两大区域，但却是南北颠倒，冷热倒置。\n\n沿秦岭再向西，大致有两列东西走向的山脉与秦岭相连：一列是祁连山接阿尔金山一路向西；另一列就是西起帕米尔高原，向东绵延2000 多公里的昆仑山及其余脉。如果秦岭向西分南北的话，这两列山系可供考虑。\n\n这里说的南北之分，不是文化的概念，而是指自然地理上的南北之分，确切地说，是亚热带季风气候/区（南方）与暖温带季风气候/区（北方）之分。自然地理的亚热带与暖温带都是有定义、有标准的。\n\n\n\n秦岭－淮河线的意义：\n\n1、中国南方和北方的分界线\n\n2、相当于中国年降水750毫米等降水量线\n\n3、水田和旱地的分界线，即水稻和小麦主产区分界线\n\n4、湿润地区和半湿润地区的分界线\n\n5、相当于中国一月份平均气温0℃的等温线\n\n6、亚热带和暖温带的分界线\n\n7、长江流域和黄河流域的分界线\n\n8、河流无冰期和有冰期的分界线\n\n9、长江中下游平原和黄土高原、华北平原分界线\n\n10、 亚热带常绿阔叶林和温带落叶阔叶林的分界线\n\n以上内容参考 百度百科-秦岭—淮河一线","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:28:10","updateTime":"2021-05-20 09:28:10","isExist":null},{"id":2483,"question":"长江经过哪些省?","simplecontent":null,"content":"青海省、西藏自治区、四川省、云南省、重庆市、湖北省、湖南省、江西省、安徽省、江苏省、上海市。长江发源于“世界屋脊”——青藏高原的唐古拉山脉各拉丹冬峰西南侧，于崇明岛以东注入东海，全长6387公里，在世界大河中长度仅次于非洲的尼罗河和南美洲的亚马逊河，居世界第三位。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:27:00","updateTime":"2021-05-20 09:27:00","isExist":null},{"id":2482,"question":"河南人为什么招黑?","simplecontent":null,"content":"说到河南，大家首先会想到什么？相信大家肯定能想到一些老生常谈的黑点。要说全中国被地域黑黑的最严重的省是哪一个？我觉得河南排在前三应该没啥问题，相信大家也都或多或少地听过黑河南人的段子。比如“十个河南九个骗，总部设在驻马店”、“自从有了火车站站站都有河南蛋”，还有什么偷井盖之类的。而我也相信，每一个听到这些话的河南人，心里肯定也都是非常不爽。那么问题来了，河南为什么会被黑的这么惨？\n\n\n\n\n\n\n河南，古称为豫州，在《尚书禹贡》中将天下分为“九州”，而禹州则位于九州之中央，所以禹州又有“中原”“中州”之称。而现在河南因其大分地区位于黄河以南，故称河南。河南全省面积16.7万平方公里，人口近1.1亿，仅次于广东和山东，是我国的第三大人口大省。同时，河南的平原和盆地面积占了全省总面积的55.7%，再加上河南境内的黄河、淮河等流域水系以及河南的北亚热带向暖温带过渡的大陆性季风气候，这就导致了河南非常适合发展农业。目前，河南是我国最重要粮食主产区之一，连续多年粮食产量1100亿斤以上。2019年，河南粮食总产量是1339.08亿斤，再创历史新高。河南用全国1/16的耕地生产了全国1/10的粮食，不仅解决了本省近1亿人口的吃饭问题，还能每年额外调出400亿斤粮食或粮食加工品送到其他省份。可以说，河南为了保证我国的粮食安全作出了极大的贡献。\n\n\n\n\n\n\n在我国5000年的文明史中，河南同时作为整个国家的政治、经济、文化中心的时间长达3000年，中国的八大古都中，河南就有四个。而河南的历史文化名人更是数不胜数，中国300个大的姓氏，其中源于河南地区的就有171个。而且不仅农业和历史，河南也是我国重要的一个工业生产基地之一，它拥有齐全的40个工业大类，220多种工业产品的产量位居世界第一。其中，大中型客车，盾构机、大型拖拉机、大型矿山设备、特高压设备等都是河南的拳头产品。截止到2017年底，河南的规模以上工业的总收入、总利润均位于全国第四，资产总量全国第五。河南的交通区位优势也很明显，是全国承东西体系连接南北的重要交通枢纽，全国“十纵十横”的综合运输大通道中，有五个通道都经过河南。目前河南已经形成了“米”字形的高铁网，而且由于高铁修得早，还没有遇到现在普遍的降规格修建的情况。所以，河南有着我国最长的350公里时速的高铁线路，长度达到了1728公里，占到整个河南高铁里程的89%。然而，河","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:25:07","updateTime":"2021-05-20 09:25:07","isExist":null},{"id":2481,"question":"河南有什么好吃的?","simplecontent":null,"content":"说起河南，好像是挺招黑的，但是做为一个地地道道河南人，还是要说说河南的美食！\n01\n胡辣汤\n我基本上每次回河南都要喝一次胡辣汤，之前在西安上大学的时候满大街找胡辣汤喝，河南的胡辣汤和西安的胡辣汤有很大的区别。在河南胡辣汤也有很多种，例如：方中山胡辣汤、逍遥镇胡辣汤、方大同胡辣汤，虽然大部分都是清真吧~\n\n胡辣汤里一般是由牛肉、豆制品、木耳、花生以及黄花菜组成。我们早上也都是陪着各种主食一起吃，例如：千层饼、油条、油馍头、水煎包、牛肉盒、大包子、韭菜盒子、油角等等。我本人最喜欢的就是配着小烧饼或者水煎包一起吃了，将这二者泡进胡辣汤的汤里，不一会味道就全融合在一起了。\n\n02\n烩面\n河南烩面，“中国十大面条”之一，有着4000年的历史。\n是一种荤、素、汤、饭聚而有之的传统风味小吃，以味道鲜美，经济实惠，享誉中原，遍及全国。\n烩面是以优质高筋面粉为原料，辅以高汤及多种配菜，一种类似宽面条的面食。汤好面筋，营养高。\n汤用上等嫩羊肉、羊骨（劈开，露出中间的骨髓）一起煮五个小时以上，先用大火猛滚再用小火煲，其中下七八味中药，骨头油都熬出来了，煲出来的汤白白亮亮，犹如牛乳一样，所以又有人叫白汤。辅料以海带丝、豆腐丝、粉条、香菜、鹌鹑蛋、海参、鱿鱼等，上桌时再外带香菜、辣椒油、糖蒜等小碟汤可分为：汤面和捞面两种。\n\n03\n黄河大鲤鱼\n去河南一定要吃的黄河大鲤鱼，这家店应该是比较著名的，阿五在河南还挺有份量，每条鱼都有身份证哈哈，口味偏红烧，略带酸味。焙面或者配米饭吃都很合适。\n\n04\n开封灌汤包\n开封灌汤包是开封的著名食品之一，已有百年历史。其选料讲究，制作精细。采用猪后腿的瘦肉为馅，精粉为皮，爆火蒸制而成\n灌汤包外形美观，小巧玲珑。讲究，“提起象灯笼，放下似菊花”。灌汤包具有皮薄，馅大，肉鲜，味美，鲜香不腻等特点。\n开封人吃灌汤包子有这样一句顺口溜“先开窗，后喝汤，再满口香。”\n\n05\n洛阳涮牛肚\n长这样~和川渝地区的冷串串要相似很多，只不过是热的。因为俺们河南人特别擅长卤料的加工，所以这个牛肚一开始就是被各种大料卤过的，加上调制的辣油以及芝麻酱，简直美味不可阻挡。口感也是非常劲道爽口的。\n\n06\n牛肉汤\n牛肉汤具有鲜醇、清爽、浓香的特色；有咸汤、甜汤之分。咸的牛肉汤肉肥汤鲜，特别是加上葱段后，滋味更鲜。不黑汤，喝多不上火，嗓不干，再配以粉丝和干丝；甜牛肉汤是指没加盐的牛肉汤，或","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 09:23:06","updateTime":"2021-05-20 09:23:06","isExist":null},{"id":2480,"question":"哪些行业有前途?","simplecontent":null,"content":"这9个行业分别是电力、热力、燃气及水生产和供应业11.67万元，同比增长8.3%；\n\n交通运输、仓储和邮政业10.06万元，增长3.7%；\n\n信息传输、软件和信息技术服务业17.75万元，增长10.0%；\n\n金融业13.34万元，增长1.5%；\n\n科学研究和技术服务业13.99万元，增长4.8%；\n\n教育10.65万元，增长9.0%，卫生和社会工作11.54万元，增长6.0%；\n\n文化、体育和娱乐业11.21万元，增长4.1%；\n\n公共管理、社会保障和社会组织10.45万元，增10.7%。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 08:51:13","updateTime":"2021-05-20 08:51:13","isExist":null},{"id":2479,"question":"为什么喜欢美国生孩子?","simplecontent":null,"content":"一出生即拥有美国身份，享受社会和医疗福利，一辈子没回过美国，年老也可领养老金;满月可带回中国抚养，在美可享受公立小学至高中13年免费义务教育;有低门槛进入美国名牌大学、研究所优势，学费为外国学生10%，享受公民专享奖学金、1%低利率助学金等;孩子21岁可为父母申请永久绿卡;在美出生公民可优先担任美国政府、公家单位及大型企业重要领导，官方军务、国防外交、高科技和核心实验室等关键职位严格限于公民;孩子未来享受180多个邦交国免签证待遇，出入境非常便利;美国生产不需结婚证、准生证，婴儿出生纸上父亲一栏可留白，到美生二胎三胎，不违反中国计划生育;美国为募兵制，无兵役问题;他国政局不稳或动荡时，即使航空封锁，美国公民也可在美国政府保护下，享有优先搭机离开的权利;18岁成人，拥有重新选择中美国籍的一次机会。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-20 08:49:34","updateTime":"2021-05-20 08:49:34","isExist":null},{"id":2478,"question":"隆胸一段时间后会如何?","simplecontent":null,"content":"关注\n近日，江苏南京。20多年前王女士接受了“奥美定”注射隆胸术，最近在一家医院做了胸部注射物去除术，医生从其每侧乳房里取出了约2000毫升酱油色液体。据了解，由于“奥美定”对人体有害、并发症高发，已于2016年被明令禁止销售或使用，市民如有注射历史，需尽快就医取出。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 22:38:32","updateTime":"2021-05-19 22:38:32","isExist":null},{"id":2477,"question":"哪些西瓜很薄?","simplecontent":null,"content":"1、黑美人：一般较为早熟，果皮薄而坚韧，肉质鲜嫩多汁。二是花皮西瓜，椭圆形，瓜比较大，瓜皮颜色浅绿和深绿相间，北方较常见，较晚熟，口感脆，含糖量高。\n\n2、特小凤西瓜：改良西瓜品种，原产我国台湾，90年代后引入大陆。特小凤西瓜较一般西瓜小很多，瓜型一般为高球形至微长球形，单果重1.5 kg左右，浅绿条纹，果皮薄，肉色晶黄，肉质细腻脆甜多汁。\n\n3、新红宝西瓜：果皮厚0.9-1.3厘米。果肉深红色，质细脆。种子千粒重42.0克。含糖量在10%以上，座果率高，果形整齐，商品性好，耐储运。 这4种西瓜不仅皮薄，肉厚还甜度高，赶紧吃起来吧！\n\n4、硒砂瓜西瓜：厚度为10—15cm，达到提高地温、蓄水、保墒的作用，同时砂石中含有人体必需的锌、硒等微量元素，为积聚大量天然葡萄糖、维生素、氨基酸和多种微量元素提供了独特的自然条件。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 22:33:07","updateTime":"2021-05-19 22:33:07","isExist":null},{"id":2476,"question":"如何挑选到皮薄味甜的西瓜？","simplecontent":null,"content":"西瓜\n方法/步骤\n1/5分步阅读\n看表皮。留意看西瓜的表皮和纹路。西瓜的表皮鲜亮翠绿，纹路清晰，就越鲜甜。反之如果表皮暗淡，纹路模糊，那就赶紧放下换一个啦。\n\n\n2/5\n看泛黄那部分。瓜皮上颜色泛黄的部分，是由于西瓜贴地接受不到阳光的照射而导致的。这块黄色的地方越大越明显，则说明这个西瓜越成熟越好吃。\n\n3/5\n看瓜蒂。蒂部颜色越绿表明西瓜越新鲜，若瓜蒂干枯说明已经采摘了很久了，肯定是不新鲜的了。同时瓜蒂若是直直的一条就不要买了，尽量挑会卷起来的那种，这样的\n4/5\n看瓜脐。瓜脐是西瓜花脱落后留下的，在西瓜的底部，简单说就是在瓜蒂的对面位置。瓜脐越小则皮越薄，瓜也越甜；瓜脐越大则皮越厚，口感也越差。\n\n\n5/5\n听声音。这是很多人都知道的一种方式。用手指敲弹西瓜表皮，听到比较沉闷的“嘭嘭”声，说明是熟瓜；如果是听到比较清脆的“砰砰”声的，那这种瓜就是还不够成熟的。\n\n\n挑选西瓜\n编辑于2020-06-04，内容仅供参考并受版权保护\n\n 赞踩分享\n凯伦诗（CLORIS）春夏新按摩拖鞋鞋玉石旋转男女通用足底穴位鹅卵石按摩鞋送父母礼物 M码(40-42)\n￥128 元￥258 元\n去购买\n京东广告 \n哪些食物吃了湿气重，身体有湿气，谈谈，如何去湿","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 22:32:31","updateTime":"2021-05-19 22:32:31","isExist":null},{"id":2475,"question":"金鱼品种?","simplecontent":null,"content":"黑和红龙睛，孔雀鱼，草鱼，红白草鱼，红狮","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 21:00:58","updateTime":"2021-05-19 21:00:58","isExist":null},{"id":2474,"question":"湛江雷州什么出名?","simplecontent":null,"content":"10、雷州珍珠\n\n雷州市是全国闻名的“南珠”生产基地，海水养殖珍珠历史悠久。20世纪60年代初，雷州沿海农民从人工海底采珠转向人工养殖，流沙镇人工孵化珍珠贝苗获得成功。现在，全市珍珠养殖遍及西部沿海7个乡镇，养殖场3300多个，养殖面积31000多亩。雷州珍珠产量占全国海水珍珠三分之二，年出口创汇1500多万美元。\n\n9、菠萝罐头\n\n湛江地区地处中国大陆最南端，属热带季风性湿润气候区，气候及土壤等自然资源非常适合菠萝种植，是全国菠萝最大产区，年产菠萝占全国产量的一半。由于菠萝制成罐头后仍能保持原来鲜果的风味，因而使湛江菠萝罐头成为国际市场的畅销产品。\n\n8、雷州青枣\n\n青枣果实营养非常丰富，脆甜可口，含有大量的维生素C、钙、磷、维生素B、胡萝卜素、果糖、膳食纤维等，素有“维生素丸”之称，有“日吃三枣、长生不老”之说。经测定，鲜果中维生素C最高含243mg/100g，是苹果的20倍，堪称“维生素C果”。据有抗氧化，净化血液，促进血液循环，帮助消化，有预防缺铁性贫血，促进伤口愈合，预防过敏，降低胆固醇，养颜美容等作用。\n\n7、雷州狗肉煲\n\n在中国的饮食习惯中，狗肉是属于次类食品，是上不了桌面的。但是在近几年中，菜肴的烹饪越来越多，渐渐地一些传统的菜肴甚至是大众化的小吃也逐渐出现在一些高级饭店和酒家中。\n\n狗肉肉质细嫩，营养丰富，深受食客的喜欢。在《本草纲目》中载有狗肉“能安五脏，轻身，益气，补胃，暖腰，补力气，补五劳七伤，补血脑，实下焦带”。狗肉不但营养价值高，且能防治疾病，尤其在冬季是补身的佳品。\n\n6、鱼肚 \n\n鱼肚自古被列入我国海产八珍，与鱼翅、海参等并列。动物的器官中，肚，一般指的是消化器官，比如猪肚、牛肚，指的是猪、牛的胃。可俗称的商品――“鱼肚”却是鱼的呼吸器官，即鱼鳔，在一些鱼体内（并非所有的鱼类都有鱼鳔）的鱼鳔内充满了气体，可以调节鱼的空气比重，而随意在各水层活动，少数鱼类的鱼鳔在涸水季节还可利用鳔来辅导呼吸。鱼肚为鱼鳔干制而成，主要产于我国南部沿海及南洋群岛等地，因“鱼肚”以富有胶质而著称，所以又被称为“花胶”。鱼鳔之所以贵重：一是因为物稀为贵；二是因为鱼鳔含有丰富的蛋白质，营养价值相当高；根据营养学分析，每500克鱼肚中含有442克蛋白质，250毫克钙，145克磷，13毫克铁，而脂肪仅含1克，三是经加工后的鱼肚味道鲜美嫩滑，十分可口；四是鱼鳔在医学上","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 14:01:50","updateTime":"2021-05-19 14:01:50","isExist":null},{"id":2473,"question":"平安大厦是干什么的?","simplecontent":null,"content":"是个写字楼，以平安保险命名的，里面是平安保险的分部，也对外招租，就是十一经路上的万隆太平洋大厦是一个概念，里面有四层是太平洋保险的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 10:06:02","updateTime":"2021-05-19 10:06:02","isExist":null},{"id":2472,"question":"平安大夏如何防止地震，风力?","simplecontent":null,"content":"A股次新股大复盘！值得关注.....\n广告\n平安金融中心是如何抗击史上最强台风的？\n\n发现辽宁\n2018-09-18\n订阅\n9月16日，热带风暴“山竹”掠过深圳。16日午时，深圳气象局发布信息，山竹“风眼”距离深圳最近时仅为129公里，中心最大风力15级（48米/秒），十级风圈半径100-200公里，十二级风圈半径60-80公里。这是1983年以来影响深圳最强的台风。而就在四日前，另一个名为“百里嘉”的热带风暴刚掠过深圳。\n\n一周迎两场台风，深圳各界各界严阵以待。对于深圳第一高楼，高度600米的平安金融中心（PAFC）而言，防抗台风的工作更为艰巨。\n\n16日中午，网络上流传一个名为“平安大厦掉玻璃”的视频。后经PAFC官方辟谣，在“山竹”台风中，PAFC主体结构及玻璃幕墙完好无损，电力及供水一切正常。PAFC成功经受住了大楼建成后的最大台风考验。\n\n\n\n都说台风是检验建筑质量的好机会，面对35年来，影响深圳最强的台风，究竟耸入云天的PAFC是如何保持安然无恙的？\n\n可以确认，没有一块玻璃掉下。\n\nPAFC运营中心总经理陈津华在巡检台风过后大楼受损情况后告诉记者：“可以确认，平安金融中心没有一块玻璃落下。唯一受到影响的地方是大楼部分窗受风压后产生轻微渗水。这些情况已在17日早间处理妥善。”\n\n相比周围的办公楼，PAFC的体量大概是它们的三倍，因此，在物业管理上，PAFC需面对的问题会更复杂。\n\n\n\n“应对自然灾害，PAFC拥有非常完善的应对方案与流程，包括一年两次全楼人员参与的消防演习等。”陈津华表示。\n\n据了解为应对本次台风，早在一周之前，PAFC就已经开始实施应对台风的方案并排查所有隐患，旨在减低所有可能出现的风险。据了解，PAFC在台风前一周所进行的准备包括：在9月9日-10日期间，已先后完成了对大楼内所有排水沟、雨水井的疏通，并加密检查，确保畅通；在有水淹风险的地库机电设施房及地库停车埸放置合适的吸水装置；在所有位于当风位置的玻璃窗、厨窗及玻璃门加上保护物料或装置；将露天地方容易被强风吹倒的物品绑紧或转移到室内安全地方等。\n\nPAFC物业人员告诉记者，大楼同时做好了应对停水停电的措施，即使台风造成大面积停电，备用电机也可确保大楼在最低限度用电下运转直至电力恢复。\n\n9月15日夜间，随着大楼“台风红色预警信号生效”一排醒目的LED灯亮起，平安金融中心物业服务","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 10:04:31","updateTime":"2021-05-19 10:04:31","isExist":null},{"id":2471,"question":"吃鸡肉会长痘?","simplecontent":null,"content":"你可能吃的是公鸡，公鸡，韭菜这些东西是是发的，如果你正处在激素不稳定时期，会导致发水痘啊什么的，你长痘痘没关系，最近就不要吃鸡了，吃点清淡的，多喝水，吃水果，用清水洗脸，会好很多。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 09:06:06","updateTime":"2021-05-19 09:06:06","isExist":null},{"id":2470,"question":"为什么潮汕离婚率很低?","simplecontent":null,"content":"说什么男人负责的可拉倒吧，潮汕地区宗族观念重，重男轻女，女的分不到家产，离婚后住哪里？娘家不要你，只嫌你是个累赘，丢人，小地方一有点事大家都知道，无所事事的三姑六婆可没有同理心，一出门都对你指指点点的谁受得了\n\n潮汕离婚率低不是因为婚姻美满幸福，是因为这里百分之99的女的都离不起婚。\n\n潮汕的女子，真正是小时住在父母家，大时住在丈夫家，老时住在儿子家，没有自己的家，没有底气也没有退路，生为这个地方的女子，我是不幸的，我曾经真的认为，我的父母把我生下来就很好了，因为这个地方把女胎流掉，把女婴扔掉的事太多太多了，我甚至觉得在潮汕这个地方，女性是不被看做是一个完整的人的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 08:55:25","updateTime":"2021-05-19 08:55:25","isExist":null},{"id":2469,"question":"吃什么快速拉屎?","simplecontent":null,"content":"可以快速排便的食物主要见于如下：\n1、果蔬类，水果类主要见于苹果、梨、香蕉、葡萄以及菠萝；蔬菜类主要是一些绿叶蔬菜，如菠菜、芹菜、油麦、油菜以及白菜等，由于该类食物中含有大量的粗纤维，可促进肠道蠕动、达到通便的作用。\n2、谷薯类，如小米、大米、红薯、土豆、玉米以及山药等，由于该类食物中含有大量的淀粉、糖类等成分，可以吸收肠道内的水分、达到软化大便的作用，从而加快排便。\n3、坚果类，如花生、芝麻、核桃等，由于该类食物中含有大量的脂肪酸，脂肪酸可以达到润肠的作用，可加快排便。\n4、药物中可以快速排便的主要是番泻叶制剂、芦荟制剂等中成药。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-19 00:19:06","updateTime":"2021-05-19 00:19:06","isExist":null},{"id":2468,"question":"吹海风会变黑吗?","simplecontent":null,"content":"不是吹黑，而是过多的接受风吹，会使人的皮肤的水分大量的流失,因此会皮肤发干，黑色素沉积，会显得黑。\n\n在海边，太阳从水里折射的太阳辐射比较厉害，比较容易晒黑。可以多吃一些富含维生素c丰富的食物，可以有助于美白，也可以涂抹防晒霜","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 17:55:21","updateTime":"2021-05-18 17:55:21","isExist":null},{"id":2467,"question":"计划一次去清远的旅行?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 15:54:19","updateTime":"2021-05-18 15:54:19","isExist":null},{"id":2466,"question":"广东好玩的地方?","simplecontent":null,"content":"01\n广州市长隆旅游度假区>>\n02\n深圳华侨城（深圳之窗、深圳欢乐谷）>>\n03\n珠海长隆国际海洋度假区>>\n04\n清远市清新区古龙峡原生态旅游区>>\n05\n深圳市观澜湖休闲旅游区>>\n06\n丹霞山风景名胜区>>\n07\n汕头市南澳岛生态旅游区>>\n08\n深圳市野生动物园>>\n09\n广州市百万葵园主题公园>>\n10\n深圳市东部华侨城旅游度假区>>\n11\n广州市动物园>>\n12\n广州市广州塔景区>>\n13\n广州市中国科学院华南植物园>>\n14\n鼎湖山自然保护区>>\n15\n十里银滩>>","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 15:53:42","updateTime":"2021-05-18 15:53:42","isExist":null},{"id":2465,"question":"西双版纳有啥好玩?","simplecontent":null,"content":"这里已经建成了十三个专题园：热带果树资源园、荫生植物园、棕榈植物园、水生植物园、民族植物园、药用植物区、龙脑香植物区、香料植物区、竹类植物区、珍稀濒危植物迁地保护区、榕树园、树木园、名树名花园。周围散落有傣族、哈尼族和基诺族等多个少数民族的兄弟村寨，是一个以热带雨林为主，集科研、植物种质保存、科普和生态旅游等为一体的中国最大植物园。该园建于1959年，在900公顷的土地上，还建立二十多个专类植物园区，集中了各类热带植物1500余种，使葫芦岛上成为热带雨林中的一颗璀璨的绿宝石。看点：在葫芦岛上，各种热带雨林景观使人流连忘返。顶天立地的“大板根”、残忍的“绞杀植物”、气势磅礴的“独木成林”、五彩缤纷的“空中花园”、奇特的“老茎开花”以及林间飞舞的巨藤所组成的奇观，令游客感到神奇莫测。那些会变颜色的花、让酸水果变甜的神秘果、随音乐节律颤动的跳舞草、按时开花的时钟花，以及树浆剧毒的“见血封喉”等奇花异木，都使游客感到十分神秘，惊叹不已。当地流传着这样一句话：“不到葫芦岛，等于没有到西双版纳”。出了植物园东大门，可与当地漂流公司联系，参加罗梭江漂流。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 15:52:23","updateTime":"2021-05-18 15:52:23","isExist":null},{"id":2464,"question":"南宁在哪里?","simplecontent":null,"content":"广西","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 15:49:47","updateTime":"2021-05-18 15:49:47","isExist":null},{"id":2463,"question":"iqoo7和小米11哪个好?","simplecontent":null,"content":"从骁龙888处理器正式公布到现在， 已经有了两款产品搭载了这款处理器，分别是已经发布的小米11系列，以及刚刚正式发布的iQOO 7系列。\n这两款手机产品诞生之后，在手机市场中掀起了不小的热度，而且价格非常的临近，一个3999元起步，一个3798元起步。\n本以为除了价格的差距之外，两款产品本身的硬件实力差距不会太大，但没想到的是，当我们拿iQOO 7对比小米11之后发现，差距很明显，选择或许都不会纠结。\n外观、手感、屏幕对比\n\n首先来说一下正面的设计，均采用挖孔屏设计，只不过小米11采用的是左上角挖孔曲面屏，iQOO 7采用的是居中挖孔直面屏设计。\n手感方面应该是小米11更好一些，一方面是曲面屏的握持手感更舒适，另一方面就是机身的重量没有达到200g，这也是iQOO 7比较遗憾的地方。\n至于屏幕方面，均支持120Hz屏幕刷新率，但小米11的分辨率达到了2K，iQOO 7这次并没有达到这么高的效果。\n硬件上差距很小\n\n不过说到硬件参数方面，两款手机产品的差距也就很小了，均搭载骁龙888处理器，并且都采用了加强版LPDDR5内存和加强版UFS3.1闪存。\n但是在游戏方面，iQOO 7要更加具有优势，因为主打的方向就是游戏，同时还配合全感触控特性的加持，让游戏上的操作更加出色。\n这也是小米11无法比拟的地方，毕竟小米11不是游戏手机，所以这也是两款产品不同的地方。\n拍照方面的差距\n\n说到拍照方面，iQOO 7直接后置4800万像素主摄（OIS防抖）+1300万像素广角+1300万像素人像三摄系统。\n小米11为1亿像素主摄（OIS防抖）+1300万像素广角+500万像素长焦微距三摄，这个差距并不是特别的明显。\n因为iQOO 7的主摄支持OIS光学防抖，小米11采用的是三星的传感器，实际表现反倒不如索尼IMX586，所以差距并不明显。\n续航方面的差距\n\n说到续航能力，iQOO 7这次有点不够看，内置的电池容量为4000mAh，和小米11内置的4600mAh电池容量相比，有着一定的差距。\n不过iQOO 7配备了120W充电速度，相比于小米11的55W有线充电，也算是追回了一个巨大的优势。\n但是，缺少了无线充电的iQOO 7难免有点令人无奈，同时还不支持反向充电，这点还是会影响到部分用户的选择。\n细节方面的差距\n\n最后说一下细节方面的差距，小米11采用的是哈曼卡顿调教的双扬声器（非","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 00:42:26","updateTime":"2021-05-18 00:42:26","isExist":null},{"id":2462,"question":"iqoo7手机如何?","simplecontent":null,"content":"iQOO手机非常不错的，可以参考以下功能配置：\n该机型搭载全新一代7nm制程工艺的高通骁龙855旗舰处理器，搭载定制设计Kryo485架构内核，CPU主频最高达2.84GHz，配以全新Adreno 640 GPU，为手机带来超乎想象的疾速体验。\n最高配备12GB LPDDR4X高宽带超大运存和256GB的存储空间，速度更是疾如风。\n44W超快闪充采用双BQ半压充电芯片充电方法，大幅提升充满电的速度，配以FFC技术算法，4000mAh的iQOO充满只需45分钟。配备L型胶囊数据线，可以边玩边充，一充疾速回血，告别电量危机！\n在6.41英寸AMOLED屏幕下，巧妙地将摄像头收敛于“水滴”之中，隐藏传感器/听筒等元器件，使屏占比高达91.7%。搭载新一代DSP屏幕指纹加速技术，配合全新酷炫的解锁动效，指尖触点瞬间启动无限精彩世界！\n配备了专业线性马达，智能匹配上百种游戏场景，实现了基于实际事件的智能震感（入枪支、扫射）。配合自研的游戏环绕音，让用户全方位身临其境，大呼过瘾。\niQOO手机侧部装置了两颗隐藏式压感按键，让拥有了掌机般的游戏体验，三指或四指联动，操作更迅速，走位更炫酷。\n后置双核1200万像素主摄+1300万像素广角镜头+200万像素虚化摄像头，使iQOO拥有120度超大视野，画幅可达普通镜头的三倍，壮阔山河、多人合照、高大建筑，凡是所见都能轻松收进镜头。同时支持超级夜景，超级逆光等多种拍照场景。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 00:40:17","updateTime":"2021-05-18 00:40:17","isExist":null},{"id":2461,"question":"iqoo是什么品牌?","simplecontent":null,"content":"vivo","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 00:37:40","updateTime":"2021-05-18 00:37:40","isExist":null},{"id":2460,"question":"广东省有机场的城市？","simplecontent":null,"content":"1、广州，广州白云机场。\n\n2、深圳，深圳宝安国际机场。\n\n3、珠海，珠海金湾国际机场。\n\n4、揭阳，揭阳潮汕国际机场。\n\n5、惠州，惠州机场。\n\n6、佛山，佛山沙堤机场。\n\n7、韶关，韶关国际机场 。\n\n8、湛江，湛江机场。\n\n1、广州，广州白云机场。国内三大机场之一，于2004年正式启用，位于广州市白云区新华街道和花东镇交界处。\n\n2、深圳，深圳宝安国际机场。以前称为深圳黄田国际机场，在1991年正式通航，是一座具有海、陆、空联运的现代化航空港。\n\n3、珠海，珠海金湾国际机场。原名为珠海三灶机场，是国际一级民用机场，和香港、澳门相连接。\n\n4、揭阳，揭阳潮汕国际机场。是中国南方航空的基地机场，\n\n5、惠州，惠州机场。俗称“惠州机场”、“平潭机场”。\n\n6、佛山，佛山沙堤机场。俗称“佛山机场”、“沙堤机场”，是中国联合航空广东基地机场。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 00:35:57","updateTime":"2021-05-18 00:35:57","isExist":null},{"id":2459,"question":"家中养了这5种植物，旺财又旺人，既美观寓意又好？","simplecontent":null,"content":"金钱树\n一听这个名字应该都会觉得简单又明了吧，它的寓意又是能招财进宝，享受荣华富贵，一般人家里都会养一盆这个，金钱树的别名又称金币树、金松等等，一般能与钱挂上钩的想必不会有人不在意，而且金钱树也比较好养，它适合在不同的光照下生长，耐阴性也是极强的，所以养在家里的话也是个不错的选择。\n\n富贵竹\n富贵竹别名又称开运竹、富贵塔，象征着花开富贵，大吉大利，养一盆这样的绿植在家中的话，不仅有很好的观赏价值，而且它的寓意也是会让人很想养它，富贵竹比较喜欢阴湿的环境，而且在给它选择土壤的时候最好要是土质疏松一点的，营养物质含量要比较高，它的抗寒能力也比较强，但是不要让它长期处于曝晒的情况，不然叶子容易发黄。\n\n发财树\n发财树一向是老板们都比较喜欢养的，不管是在办公的地方还是在家里，都会养上一盆，而它的寓意也显而易见，主要就是发财嘛，发财树比较喜欢温暖湿润的环境，在夏季的时候它能够很快的生长，而且通风一定要好，对于土壤的要求也是排水性要好，这样才能很好的生长。\n\n福禄桐\n福禄桐是比较喜欢高温湿润一点的环境，抗寒性不强，但是耐阴性还不错，在浇水的时候不宜过量浇水，不然也会容易导致烂根，它需要比较明亮的光照，但是也不能长期曝晒，不然叶子容易枯萎，土壤要选择比较松的而且要肥沃，排水性也要好，福禄桐也是有非常好的寓意那就是福禄双喜。\n\n八角金盘\n八角金盘的寓意是八方来财，带有聚集四方的财气，使你能够更上一层楼，八角金盘主要是作为一种观赏植物，喜欢阴湿温暖的气候，但是它不抗寒也不抗旱，它的耐阴性也是比较好的，要把它种植在透气性较好和湿润的沙质土壤中。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 00:32:18","updateTime":"2021-05-18 00:32:18","isExist":null},{"id":2458,"question":"家里不宜摆放的植物？","simplecontent":null,"content":"1、水仙\n\n水仙花美丽雅洁，但其头(麟茎)内含拉可丁，是有毒物质,水仙的花、枝、叶都有毒,中毒后会发生呕吐、腹痛,水仙袭人的香气，也会令人神经系统产生不适，时间一长，特别是要睡眠时吸入其香气，人会头昏,水仙花虽美，但是不代表健康，家里养它要慎重。\n\n2、含羞草\n\n含羞草含有微量的毒性，它体内的含羞草碱是一种有毒物质，这种毒素，接触过多，会引起眉毛稀疏、头发变黄甚至脱落；含羞草碱，还会损伤人的皮肤，因此注意不要用手指去拨弄含羞草。\n\n3、夹竹桃\n\n夹竹桃的花香能使人昏睡、智力降低,夹竹桃全株有毒，含有多种强心甙，是剧毒物质，对人的呼吸系统、消化系统危害极大，接触其分泌的乳液，也容易中毒，中毒后恶心呕吐、腹泻，可致命；所以，家里不宜摆放夹竹桃。\n\n4、郁金香\n\n虽然郁金香花容端庄，外形典雅，颜色艳丽丰富，异彩纷呈,但是它的花朵中含一种毒碱，人和动物在这种花丛中待上2~3小时，就会头昏脑胀，出现中毒症状，严重者还会毛发脱落,所以最好不要养在家里，如果是成束的鲜花，要注意保持室内通风。\n\n5、曼陀罗花\n\n曼陀罗花就像个隐形杀手，千万别把它养在家里，它全身有毒，以果实特别是种子毒性最大，嫩叶次之,干叶的毒性比鲜叶小,花具有麻醉性，故吞食可产生兴奋作用，并可能出现幻觉，过量可致神经中枢过度兴奋而突然逆转为抑制作用，使机体功能骤降，严重的可导致死亡。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-18 00:29:31","updateTime":"2021-05-18 00:29:31","isExist":null},{"id":2457,"question":"江苏经济发展好原因?","simplecontent":null,"content":"首先，江苏历史上就是我国发达的省份，地理位置比较好，气候适宜，在农耕时代就已经非常繁荣，江苏平原面积7万多平方公里，占江苏省面积的70%以上，比例居中国各省首位。江苏的地理位置优势突出，拥有漫长的海岸线，沿海地带自古就是活跃的经济地带，水陆交通发达，有深厚的人文历史底蕴，人才辈出，人才优势突出，为江苏的经济发展做出贡献，有突出的自然环境，气候好，适合发展农业，有“鱼米之乡”之称，近代民国首都南京留下的文化遗产和政治领导力等等。\n\nGDP前三为广东、江苏、山东，其中江苏前三季度实现GDP7.22万亿，仅次于广东省，并且和第三的山东拉开了明显的差距，以浙江为第四的之后省份，GDP差距就更加明显了。\n江苏经济为什么那么好？有3座城市进入了万亿俱乐部，第一座城市就是江苏省，也就是南京、苏州、无锡等城市，他们GDP总量发生了很大的变化，说明了这些城市的发展很好。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:51:24","updateTime":"2021-05-17 20:51:24","isExist":null},{"id":2456,"question":"广州塔有多少层?","simplecontent":null,"content":"广州塔一共112层，112层是顶层，可玩摩天轮，108层、107层是E区观光层，9电梯到107层，可走到108层）E区106层是璇玑地中海旋转餐厅（世界最高旋转餐厅）， “云霄488”户外摄影观景平台是游客登塔观光所能达到的最高点，位于广州塔天线桅杆位置的488米处（世界最高的世界户外观景平台）。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:46:42","updateTime":"2021-05-17 20:46:42","isExist":null},{"id":2455,"question":"深圳平安大厦多少层?","simplecontent":null,"content":"深圳平安大厦（平安金融中心）共118层。\n\n118层、高达600米的深圳新的第一高楼平安金融中心实现主体结构封顶，刷新深圳新高度。\n\n平安金融中心位于福田区，塔楼层数为118层、总建筑面积约46万平方米。大厦自2009年开工建设，至今已创下国内房建类最大的8米超大直径工程桩等多个国际国内纪录。\n\n\n\n扩展资料：\n\n深圳平安金融中心刷新了“国内第一立焊”“国内第一仰焊”“国内第一厚焊”等施工技术新纪录。\n\n新纪录的背后有很多不为人知的难题。平安大厦在建设中使用4台大型动臂式塔吊，须附着在井筒的外壁上，并逐步爬升到600米高空，这一做法当时在世界上还没有先例。\n\n为了确保这4个庞然大物安全地附着，同时又稳又快地“攀岩”，中建钢构团队研发“悬挂式外爬塔吊支承系统及其周转使用方法”。\n\n4台塔吊不仅稳稳地附着在井筒的外壁上，而且每次爬升都比传统方式快3至4天，25次爬升为项目节省工期多达96天。这项技术在国内其他超高层项目中得到推广应用，获得日内瓦国际发明展特别金奖。\n\n参考资料：百度百科——平安大厦\n\n参考资料：人民网——地标“建”证深圳成长\n\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:45:54","updateTime":"2021-05-17 20:45:54","isExist":null},{"id":2454,"question":"中国高楼排行榜?","simplecontent":null,"content":"上海中心大厦、广州塔（600米）、天津117大厦（596.5米）、深圳平安国际金融中心（592米）、广州东塔（530米）、周大福天津滨海中心（530米）、中国尊、台北101大厦（508米）、苏州中南中心（在建499米）、上海环球金融中心（492米）等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:45:10","updateTime":"2021-05-17 20:45:10","isExist":null},{"id":2453,"question":"深圳高楼排行榜?","simplecontent":null,"content":"深圳，在改革开放四十多年的飞速发展历程中，从一个小渔村起步，以一个县的地盘，不断追赶超越国内各级城市，最终成为全国四个一线城市之一，但深圳的超越之路还没有停止，2017年超越岭南千年中心城市广州，2018年又超越了曾经让大陆城市仰望的香港，到2019年深圳前面还只剩下了上海、北京两座城市。\n深圳经济还能继续超越吗？这个问题我们可以交给未来，但深圳的高楼建筑已经成为了中国的头牌。雄厚的经济实力，紧张的建设用地，让深圳的摩天大楼像雨后春笋一样快速成长。全球摩天大楼看中国，中国摩天大楼看深圳。这座年轻的城市，其摩天大楼300米以上的高楼数量超过了中国的经济中心上海市，成为300+大楼最多的城市。下面让我们欣赏下深圳的300+高楼。\nNO.1 深圳平安金融中心 592.5米\n\n深圳平安金融中心是中国平安人寿保险股份有限公司（平安集团旗下成员）2007年11月6日竞得深圳福田中心区一商务地块，平安国际金融中心项目建筑主体高度592.5米 。其中，规划商业建筑面积4.7—5.9万平方米，而办公、酒店建筑面积为25.59万平方米、31.96万平方米。总建筑面积达46.07万平方米。2009年8月29日奠基开始施工，2017年竣工完成。\nNO.2 京基100大厦 441.8米\n\n京基100（KK100），原名京基金融中心（KingKey Financial Center），楼高441.8米，共100层，是目前深圳第二高楼，位于深圳市罗湖区深南东路，由来自英国的两大国际著名建筑设计公司——TFP和ARUP联合设计，中国建筑第四工程局有限公司承建。京基100城市综合体项目总用地面积42353.96 m2，其中建设用地35990.16m2，总建筑面积602401.75 m2，由京基100大厦及7栋回迁安置楼构成。\nNO.3华润总部大厦 392.5米\n\n华润集团总部大厦位于深圳后海中心区核心位置,科苑大道东侧,海德三道南侧,设计方案采用独特的圆筒形,直径逐层变化,变尖变细成一个尖点,延伸向天空。整体外形宛若一只秀丽挺拔的“春笋”,而被称为春笋大厦。塔楼共有71层,其中地上66层,地下5层。竣工后,“春笋”除了作为华润集团内地总部的办公场所,也将成为华润置地在商务办公领域的旗舰产品。\n华润大厦综合了华润总部、六星级的酒店、高端的综合体、万象会馆、新科技馆、创新大厦等时尚综合型场所，总投资超过200亿人民币。这将是超越了华润万象城之后的又一个集合体育、家用、商业、办公和文化的又一处综合性贸易大厦！\n2012年10月24日上午，以华润集团总部大厦为核心的华润深圳湾综合发展项目奠基开工典礼隆重举行，其规划高度为525米，是深圳正式开工的第二栋高度超过500米的超高层建筑。由于限高问题，“春笋”高度被一再压低，直到规划部门最终给出392.5米的最终高度，主体结构高度为331.5米。\nNO.4 深业上城办公楼高塔 388米\n\n深业上城 UpperHills，是集产业研发、公寓、酒店、商业于一体大型城市综合体，建成后将成为深圳CBD北区地标性建筑群。项目位于深圳市福田中心区，北眺塘朗山景，南临笋岗西路和中心公园，东临皇岗路和笔架山公园，西临彩田路和莲花山公园。两座大型生态连接绿道，如纽带般将莲花山、笔架山和项目相连接，使业主步行十分钟即可到达公园。深业上城项目占地12.1371万平米，总建筑面积约120万平米，其中产业研发大厦约33.27万平米，LOFT约10万平米，豪华酒店约5万平米，公寓约17万平米，商业约16.7万平米，公寓建筑高度约224.5米，两座办公楼，低塔约300米，高塔约388米。\nNO.5 地王大厦 383.95米\n\n深圳地王大厦，位于深圳市罗湖区，又称信兴广场深圳地王商业大厦，是一座集办公、商业于一体的超高层综合性建筑组群，是中国20世纪90年代初的重点工程。大厦于1996年3月竣工，“地王”之名，来源于其得天独厚的地理位置：该地段处于深圳深南东路、宝安南路与解放中路交汇的黄金三角地带，被地产界誉为投资的地中之王 。1992年，深圳市政府向国内外企业公开拍卖，香港一家公司以1.4亿多美元的高价一举中标，创下了当时深圳的地价之王 ，地王商业大厦由此而得名。 深圳地王大厦高69层，总高度383.95米，建筑高度324.8米。\nNO.6 深圳中心大百汇广场 375.5米 封顶\n\n深圳中心总建筑面积超过140万㎡，业态涵盖高端商业、5500套豪宅+公寓、4栋超甲级写字楼，配有7500多个停车位。其中，福田区第二高写字楼——大百汇广场已盛大封顶，不久后即将入市。总建筑规模约158390平方米，占地面积4133平方米，地下四层，地上77层（包括屋面层），高度375.5米，是一栋集商务中心、公寓住宅及其配套为一体的超高层建筑。\nNO.7 深湾汇云中心 357米 结构封顶\n\n深湾汇云中心项目是深圳湾超级总部基地第一个综合体开发项目,也是地铁万科第一个深度合作项目,同时为中国第一个毗邻三条地铁线的项目,基坑边线距地铁最近处仅3m。总建筑面积约为60平方米,用途为集合商务办公、商业、酒店、公寓于一体的大规模地铁上盖城市综合体。其中,主塔楼79层，建筑高度347.2米，总高度357米,为目前地铁上盖第一高度。\nNO.8 赛格广场 355.8米\n\n赛格广场(SEG Plaza)，由深圳市赛格集团有限公司直接投资兴建，大厦高72层，总高度355.8米，建筑高度292米，大楼于1997年动工兴建，1999年9月完工，2000年全面落成。\nNO.9 汉京金融中心 350米\n\n汉京金融中心建筑高度约350米，位于深圳市南山高新科技园区，工程用地面积11000多平方米，总建筑面积达160000多平方米，主塔楼地下5层，地上61层，附设4层商业裙房，建成后将集高端商业、商务办公于一体，建成后成为汉京集团总部大厦。本项目是世界高建钢用量最多的超高层建筑，其钢结构复杂，蝶形节点达347个，属世界首例。\nNO.10 深圳湾1号T7楼 342米\n\n深圳湾1号位于后海中心区东滨路与科苑大道交汇处西北侧，紧邻深圳湾内湖的一线海景地块，也是从南侧深圳湾口岸所看到的第一个项目。是集办公、居住、酒店、商业于一体的高端城市综合体，将建成后海地区标志性建筑群，总建筑面积358000㎡，最高建筑为T7栋，总高度342米。\n深圳市其它超300米的建筑\nNO.11 中国储能大厦 333米\nNO.12汉国城市商业中心 329.4米\nNO.13 宝能大厦 327米\nNO.14 东海国际公寓 A座 308米\nNO.15中洲控股中心A栋 302米\nNO.16 华侨城总部大楼 301米\nNO.17 滨河城市广场写字楼 300米\nNO.17 深圳前海世茂项目写字楼 封顶 300米","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:42:10","updateTime":"2021-05-17 20:42:10","isExist":null},{"id":2452,"question":"地王大夏和京基100大夏在哪里?","simplecontent":null,"content":"都在大剧院地铁站","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:37:14","updateTime":"2021-05-17 20:37:14","isExist":null},{"id":2451,"question":"京基100大夏有什么好玩的?","simplecontent":null,"content":"深圳京基100大厦，高441米，共有100层，2011年耗资50亿人民币建造完工。面向社会征名，最终京基100胜出，100寓意圆满、完美。京基100目前是深圳第二、中国第九高楼。也是深圳地标建筑。\n\n那里附近没什么玩的，逛街万象城KKMALL就够了，地王，深圳的地标建筑可以看看，但现京基100比它更高，或许坐地铁或打个车起步价去金光华，那里有不少酒巴，去购物公园也行，东门商业街也很近，但人太多太杂，如果真的只能就近，那就逛逛对面的荔枝公园，大剧院门口广场坐坐看看深南大道和邓小平像，深南大道晚上的景色还是不错的哈。\n--转自玛娜米米","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:36:31","updateTime":"2021-05-17 20:36:31","isExist":null},{"id":2450,"question":"地王大夏有什么好玩的?","simplecontent":null,"content":"地王大厦是A级写字间,主要是办公场所,并不是一个旅游设计来的\n主要的观光项目是顶楼电梯观光,80元一个人吧.天气晴朗的时候,上去看看深圳和香港市容,还是非常不错的,很震撼.\n其他的就是地下1楼到4楼,是商业区,有一些高档品牌购物和餐饮.\n地王附近还有一个大型高档购物商城:万象城可以去看看,经常有些展览,很有创意.\n还有一个小平画像,在荔枝公园旁边,也是深圳著名景点.\n希望对您有帮助\n\n地王大厦是一个写字楼，底下几层有些商业但都不是很好，对面的万象城属于高端商场\n唯一的娱乐是顶层观光，其实是早期给去不了香港的人看香港用的，现在也没什么太大意义了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:32:16","updateTime":"2021-05-17 20:32:16","isExist":null},{"id":2449,"question":"填鸭和湖鸭的区别?","simplecontent":null,"content":"填鸭是指强制人工填喂催肥的饲鸭方法，而不是鸭的品种，两者不能进行区别。湖鸭是体型中等，喙豆呈黑色，皮肤呈白色，胫、蹼呈橘红色，爪黑色的一种鸭，一般公鸭喙呈橘黄色，母鸭喙呈黄绿色或黄褐色。\n\n\n作为烹饪原料，鸭子给人的感觉是很肥的，有些人甚至不敢食用鸭类菜肴。但是，湖鸭成菜以后，肥腻的口感就不那么明显了。和填鸭相比，湖鸭是在运动中长大的，虽有脂肪，但不肥厚，其瘦肉更为坚实，属肌肉性质，再经过较长时间的烧制，在火候的作用下，完全成熟的鸭子几乎无肥腻的口感。因为在汤汁的烧煮下，脂肪已有相当部分融化，呈油状而溢于汤中，完全腻人的脂肪得到了软化(业内多称熬化了），而余下的就是鸭瘦肉的醇香味了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:28:41","updateTime":"2021-05-17 20:28:41","isExist":null},{"id":2448,"question":"日本好玩的?","simplecontent":null,"content":"稀饭旅行小编为你总结：\n1.富士山：富士山是日本第一高峰，也是日本民族的象征，被日本人民誉为“圣岳”．富士山位于本州中南部，东距东京80千米，面积90.76平方千米，海拔3776米，山峰高耸入云，山巅白雪皑皑．山体呈圆锥状，似一把悬空倒挂的扇子，日本诗人曾写下＂玉扇倒挂东海天＂，＂富士白雪映朝阳＂等诗句来赞美它．自日本有文字记载以来，富士山共喷发过18次，最后一次是在1707年，此后它就变成了休眠火山。\n2.东京塔：东京塔是日本最高的一座铁塔，位于东京市内，于1958年建成． 它是仿造法国巴黎的埃菲尔铁塔建造而成的，高333米，是东京的最高点．塔身为棱锥体，有黄，白两种颜色，鲜艳夺目．塔内有水族馆，餐厅，商店，咖啡厅等设施，塔上还有两个高达150米和250米的?望台．站在这里，东京市的景致尽收眼底.\n3.金阁寺：原为大臣西园寺恭经的别墅，修建于14世纪，后归幕府将军足利义满所有，并进行了大规模的翻修和扩建。它高达三层，第二和第三层的外墙用金箔贴成，远远望去，金光闪闪，所以叫做“金阁寺”．在它的塔顶尾部装饰着一只金铜合铸的凤凰，更为这座建筑平添了几分美丽．寺前是以镜湖池为中心的庭园，身影华丽的金阁倒映在镜湖池中，宁静优雅，别有一番景致，堪称京都的代表性景观。\n4.银阁寺：银阁寺位于京都东山山麓，1482年由足利义满的孙子足利义政按金阁寺的造型修建．银阁寺以清净幽雅的独特风格和金阁寺的光彩夺目形成了鲜明的对比．它修建于1482年，是一座精致的两层阁楼．第一层被称为心空殿，是出家人念佛修道的地方；第二层被称为潮音阁，是禅宗佛堂．银阁寺既是寺庙，也可以居住，这里环境优美，风景宜人。\n5.白山历史乡村：是将日本传统完整保存的范例。村庄靠种植桑树，发展养蚕业而得以在漫长的历史进程中几乎被人类遗忘的山地中延续下来。为了减轻寒冷冬季的积雪压力，居民们把屋顶倾斜度加大，建成独特的双层茅草陡坡顶木住宅。这种木屋一般长18米，宽10米，内有3-4层楼面，一般居住一大家族人。由于屋顶的形状很像日本人拜神时双手合掌的样子，故称“合掌屋”也称“三角屋”。这些村庄除了在经济繁荣上的意义外，更向世人展示了古代劳动者适应环境，发展经济的勤劳品质和智慧。\n6.阿苏火山：东大寺、严岛神社、平安神宫（祭奉桓武天皇和孝明天皇，京都必游景点之一。）、那智瀑布、清水寺、东寻坊、樱岛、姬路城。\n7.台场（或称御台","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:23:45","updateTime":"2021-05-17 20:23:45","isExist":null},{"id":2447,"question":"泰国靠海吗?","simplecontent":null,"content":"泰国南部临着泰国湾，属于太平洋。\n\n泰国位于位于亚洲中南半岛中南部，与柬埔寨、老挝、缅甸、马来西亚接壤，东南临泰国湾（太平洋），西南濒安达曼海（印度洋），西和西北与缅甸接壤，东北与老挝交界，东南与柬埔寨为邻，疆域沿克拉地峡向南延伸至马来半岛，与马来西亚相接，其狭窄部分居印度洋与太平洋之间。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:22:34","updateTime":"2021-05-17 20:22:34","isExist":null},{"id":2446,"question":"泰国有什么好玩的?","simplecontent":null,"content":"泰国旅游景点有：曼谷泰国大王宫、玉佛寺、普吉岛、皮皮岛、兰达岛等。泰国位于东南亚的君主立宪制国家。泰国位于中南半岛中部，其西部与北部和缅甸、安达曼海接壤，东北边是老挝，东南是柬埔寨，南边狭长的半岛与马来西亚相连。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:20:14","updateTime":"2021-05-17 20:20:14","isExist":null},{"id":2445,"question":"荔枝和龙眼什么时候成熟?","simplecontent":null,"content":"荔枝成熟季节一般在6-7月，新鲜的荔枝每年五开始上市，七至八月是最适当的时节。早熟荔枝三月成熟，圆枝荔枝五月成熟，黑叶荔枝六月成熟，挂绿荔枝七月成熟。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:07:49","updateTime":"2021-05-17 20:07:49","isExist":null},{"id":2444,"question":"邢台在哪里?","simplecontent":null,"content":"河北","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:02:45","updateTime":"2021-05-17 20:02:45","isExist":null},{"id":2443,"question":"石家庄在哪里?","simplecontent":null,"content":"河北","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:02:39","updateTime":"2021-05-17 20:02:39","isExist":null},{"id":2442,"question":"以色列为什么那么强大?","simplecontent":null,"content":"说起以色列，可以称之为中东小霸王了，把周边的阿拉伯国家摁地上打的死去活来的。\n\n犹太人组成，经济发达了比拟硅谷，美国帮助，全民街兵，教育体系","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 20:01:32","updateTime":"2021-05-17 20:01:32","isExist":null},{"id":2441,"question":"喝龙井的多还是铁观音的多？","simplecontent":null,"content":"您好 ，这边接触的喝龙井的多，因为龙井属于绿茶类，铁观音属于红茶类，相比之下喝绿茶的比喝红茶的多些\n\n龙井和铁观音比较，春天喝铁观音会比较好。因为龙井是绿茶，绿茶偏寒，铁观音是处于红茶跟绿茶之间的半发酵茶，在春天喝正好。初春不宜喝绿茶，绿茶虽然有防辐射的功能，适合长期用电脑的人群，但是绿茶性寒，不适合在春天喝，特别是对那些体质偏寒的人来说更不适宜在春天饮用绿茶，绿茶适合体质偏热、精力充沛的人喝。\n每个人都有不同的体质，有阳性之人、也有阴性之人，应该根据自己的体质对症选择，红茶偏暖、绿茶偏寒、黄茶乌龙比较中庸、白茶比较轻，如果自己体质偏阳就喝点绿茶、黄茶、白茶，如果体质较冷，则适合喝红茶、花茶。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:56:03","updateTime":"2021-05-17 19:56:03","isExist":null},{"id":2440,"question":"铁观音茶叶作用?","simplecontent":null,"content":"铁观音茶是能够起到提神益思的，主要的功效就是在于茶叶中的咖啡碱，咖啡碱是具有兴奋中枢神经，增进思维，提高效率的功效。\n\n铁观音茶还可以杀菌、止泻，因为茶叶中含有茶多酚，由于茶多酚进入肠道内，能使肠道的紧张功能松弛，缓和肠道的运动，同时又能使肠道蛋白质凝固。\n\n因为细菌本身是由蛋白质构成的，所以茶多酚与细菌蛋白质相遇以后，细菌就会自然的死亡了，起到了保护肠黏膜的作用，所以能够治疗肠炎。\n\n铁观音茶还具有减肥的功效，不仅可以提高脂肪分解，还可以促进组织中的脂肪酶的代谢。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:54:08","updateTime":"2021-05-17 19:54:08","isExist":null},{"id":2439,"question":"龙井茶叶作用?","simplecontent":null,"content":"病情分析：龙井茶中含有丰富的儿茶素，对于抗癌细胞有非常好的作用，对于女性来说经常喝龙井茶也能够起到抗氧化防衰老的作用，龙井茶里面含有的特殊营养成分具有抗氧化防衰老的作用。这点对于女性朋友来说是最好的福利了。因为没有哪个女性不想拥有年轻的。而且西湖龙井中的茶多酚能够快速消除人体内多余的自由基因。从而抵抗脂肪酸的过度氧化。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:53:36","updateTime":"2021-05-17 19:53:36","isExist":null},{"id":2438,"question":"龙井茶的功效与作用有哪些?","simplecontent":null,"content":"龙井茶具有生津止渴，提神益思，消食化腻，消炎解毒的功能，以及能抗氧化、抗肿瘤、抑制血压的上升、防止血小板的凝集、抗菌、抗产物过敏的作用。龙井茶是中国著名的绿茶，产生浙江一带，龙井茶色泽翠绿、香气浓郁、甘醇爽口、形如雀舌、有“色绿、香郁、味甘、形美”四绝的特点。具有生津止渴、提神益思、消食化腻、消炎解毒的功能、以及能抗氧化、抗肿瘤、降低血液中胆固醇及低密度胆固醇的含量、抑制血压的上升、防止血小板的凝集、抗菌、抗产物过敏的作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:52:47","updateTime":"2021-05-17 19:52:47","isExist":null},{"id":2437,"question":"面是用什么做的?","simplecontent":null,"content":"小麦","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:52:02","updateTime":"2021-05-17 19:52:02","isExist":null},{"id":2436,"question":"陕西的小吃?","simplecontent":null,"content":"肉夹馍、臊子面、水盆羊肉、豆腐脑、擀面皮、糍粑……在今天（12月2日）举办的“2019陕西名优产品展销活动”上，这些老陕们喜爱的美食在深圳市现做现展现卖，让当地市民就近就能一饱口福。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:51:15","updateTime":"2021-05-17 19:51:15","isExist":null},{"id":2435,"question":"岳飞满江红诗?","simplecontent":null,"content":"怒发冲冠⑵，凭阑处⑶、潇潇雨歇⑷。抬望眼，仰天长啸⑸，壮怀激烈⑹。三十功名尘与土⑺，八千里路云和月⑻。莫等闲⑼、白了少年头，空悲切⑽。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:49:38","updateTime":"2021-05-17 19:49:38","isExist":null},{"id":2434,"question":"岳飞坟前跪着的人是谁?","simplecontent":null,"content":"　　岳飞墓前跪着的铁人跪像分别是秦桧、王氏、万俟卨，张俊和王俊。这五个人都是当初主谋或者参与了陷害岳飞的千古罪人，其中秦桧是害死岳飞的罪魁祸首，他被后人唾骂，遗臭百年，哪怕是跪在岳飞墓前，也难以洗清他的罪孽。\n\n岳飞墓前的五个铁人是谁\n　　在杭州的岳飞墓前只有四个铁人跪像，不过在 江西的岳母目前又增加了第五位奸臣的跪像，他就是当初参与作伪证，诬告岳飞谋反的王俊。\n\n　　这五人跪像都是害死了忠臣岳飞的千古罪人。秦桧因为嫉恨岳飞的功劳，于是主谋，设计以谋反之罪诬告岳飞，害得岳飞惨死。而素来跟岳飞有嫌隙的万俟卨，张俊，也在审判岳飞的时候对岳飞严刑拷打，甚至伪造了口供，打算致岳飞于死地。\n\n　　秦桧的老婆王氏，更是心肠歹毒，在民众为岳飞伸冤的时候，王氏担心情况有变，竟然怂恿秦桧让他斩草除根，将岳飞处死于狱中。好在后来岳飞之死真相得以沉冤昭雪，而害死他的五个人，也将永远以这样罪人的姿态，在岳飞墓前赎罪。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:48:36","updateTime":"2021-05-17 19:48:36","isExist":null},{"id":2433,"question":"岳飞历史?","simplecontent":null,"content":"岳飞:北宋人（1103~1142）字:鹏举，汉族。相州汤阴县永和乡孝悌里（今河南省安阳市汤阴县菜园镇程岗村）\n岳飞:中国历史上著名战略家、军事家、民族英雄、抗金名将。岳飞在军事方面的才能则被誉为宋、辽、金、西夏时期最为杰出的军事统帅、连结河朔之谋的缔造者。同时又是两宋以来最年轻的建节封侯者。南宋中兴四将（岳飞、韩世忠、张俊、刘光世）之首。\n简介： 岳氏山东聊城世系图崇宁二年，一岁。岳飞出生。\n政和四年，十二岁。从陈广学击技，一县无敌（注：由于《说岳》的影响，很多人认为岳飞的枪法是由周侗教的，其据《鄂王行实编年》（《金佗粹编》卷第四）是“尝学射于乡豪周同”，而枪法，据《金佗续编》卷二十八从事郎永州军事判官孙逌编《鄂王事》云：“宣和四年，令枪手陈广以技击教之，一县无敌” ）。\n靖康元年，二十四岁。枢密院官刘浩在相州募敢死义士，岳飞应募。 建炎四年，二十八岁。四月，诏令收复建康。败金人于建康东南三十里的清水亭。又败金人于新亭。\n绍兴四年，三十二岁。五月，襄阳陷落，岳飞出师。岳飞复郢州，李成弃襄阳去，岳飞遂复襄阳府。复败李成于新野市。六月，岳飞挥师北伐，收复襄阳六郡。八月，岳飞为清远军节度使。（岳飞为两宋最年轻的建节者。）九月，金、伪齐合兵南侵淮西。飞奉诏出师，败金人于庐州，金人退师。\n绍兴五年，三十三岁。 抗金地图二月，受镇宁崇信军节度使，封武昌郡开国侯。六月，平定杨幺之乱。 绍兴六年，三十四岁。三月，徙镇武胜定国军节度使。八月，北伐收复商州、虢州。十一月，伪齐进犯江汉，岳飞破伪齐加兵宛、叶之间。\n绍兴七年，三十五岁。二月，拜太尉，升宣抚使。\n绍兴十年，三十八岁。五月，金人背盟南侵。六月，岳飞出师北伐，复颍昌府、河南府等十余州郡。先后取得郾城、颍昌、朱仙镇等大捷。但因班师回朝，所得州郡又陷于金国。\n绍兴十一年，三十九岁。一月，金国再犯淮西，岳飞领八千骑兵驰援淮西。还朝，罢宣抚使，授枢密副使。十月，下狱大理寺。十二月，诏岳飞赐死于大理寺。\n绍兴三十二年，追复岳飞原官，以礼改葬。淳熙五年，赐岳飞谥曰武穆。嘉定四年，追封鄂王。宝庆元年，改岳飞武穆谥号为忠武、又赐太师。\n岳飞百度百科：http://baike.baidu.com/view/2545.htm 这里资料很全面","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:47:12","updateTime":"2021-05-17 19:47:12","isExist":null},{"id":2432,"question":"艾草针灸作用?","simplecontent":null,"content":"病情分析：通过艾叶针灸能够清除体内的毒素，能疏通血管，清除体内的寒气，使女性月经正常、减轻体重、消除斑点，对便秘的症状也会有很大的帮助。平时我们可以经常的用艾叶来针灸，能够起到保健和养生的作用，同时养成良好的生活规律。艾叶实际上是一种中药，而且具有着非常大的作用，能够宣理气血、除湿开郁。艾叶针灸的方法是通过安火的温热刺激，达到治疗的作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:45:55","updateTime":"2021-05-17 19:45:55","isExist":null},{"id":2431,"question":"艾草作用?","simplecontent":null,"content":"促进睡眠、抑制细菌、温中祛寒、调经安胎。艾草具有一定的香味，可以做成枕头，从而促进睡眠。艾草还可以熬汁，然后兑到沐浴的水中，洗澡可以去除身上的小红疙瘩，它还有一定的抑制细菌的作用。艾草的叶又叫艾叶，它有温中祛寒、温暖子宫、调经安胎的功能，可以治疗腹中冷痛，小腹寒痛，子宫寒冷，而久不受孕，虚寒性的痛经。\n\n艾草还可以炒制成炭，叫做艾炭，它可以止血。对于下元虚寒而导致的月经过多，子宫出血，以及孕妇受寒腹中疼痛，胎动不安，有良好的疗效。另外艾草还可以把它捣碎成绒的状态，做成艾绒，卷成卷可以做成艾柱，作为针灸的一种原料使用。注意阴虚有血热的人不适合使用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:45:01","updateTime":"2021-05-17 19:45:01","isExist":null},{"id":2430,"question":"甲状腺结节需要切除吗?","simplecontent":null,"content":"甲状腺结节是否需要手术主要看甲状腺结节的性质，和甲状腺结节的大小并没有明确的关系。比如恶性的甲状腺癌，就算直径再小也需要早期的手术切除。\n\n甲状腺结节是临床常见疾病，很多人无意中检查才发现有甲状腺结节，我们发现以后不要过于慌张，首先需要明确甲状腺结节的良恶性。如果是良性的甲状腺结节，当然是不需要手术的，定期随访观察甲状腺超声和甲状腺功能的变化。如果考虑恶性的甲状腺癌，就需要早期的发现，早期的手术治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 19:44:54","updateTime":"2021-05-17 19:44:54","isExist":null},{"id":2429,"question":"紫苏作用?","simplecontent":null,"content":"性味归经：味辛，性温，归脾、肺经。\n\n功能主治：紫苏叶、紫苏梗均有辛温发散、理气宽胸的作用，但紫苏叶偏于解表散寒、行气和胃；紫苏梗则长于理气宽胸、止痛安胎。卷着苏叶吃烤肉会更香，因为烤肉吃多了不易消化，而苏叶具有暖胃理气助消化的功能，所以用它来卷着吃就可以避免出现那些不舒服的症状。紫苏茶对睡眠具有一定的辅助调整的功效，很多日本人都有一个习惯：睡前喝一杯紫苏茶。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 16:19:06","updateTime":"2021-05-17 16:19:06","isExist":null},{"id":2428,"question":"阿胶作用?","simplecontent":null,"content":"阿胶\n\n味甘，性平，有补血止血、滋阴润肺的作用。\n\n手术(外伤)大出血后，甚至月经后，吃点阿胶就能马上给你补血了。另外，阿胶对各种出血，尤其是妇女月经过多、崩漏等有良好的止血作用。阿胶性黏腻，脾胃虚弱的人服用后，可能会有消化不良的感觉。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 16:16:40","updateTime":"2021-05-17 16:16:40","isExist":null},{"id":2427,"question":"家里常用的药材?","simplecontent":null,"content":"说到中药材，可能大家就会立马联想到中药房还有那令人难以下咽的中药汤剂，其实中药材的用途广泛，绝不是只有在生病的时候才会用它，在日常生活保健中，这些小小的药材也发挥着很大的作用，今天老刘就给大家讲讲家庭常用保健中药！\n\n\n1、人参：强身补气，延缓衰老。可以切成薄片，含服或煎汤服用，一天不超过3克。体内有虚火的人，可改用花旗参，即西洋参。\n\n2、黄芪：增加抵抗力，提高人体免疫功能，调整血压，有性激素作用，可用来抗衰老。用100克炖整鸡，喝汤即可。\n\n\n3、茯苓：增强人体免疫功能，养神宁心，利尿退肿，抗癌抑瘤。可服用清宫茯苓饼，也可磨粉后每天煮15克喝。\n\n4、山药：健脾补肺，固精降糖，可消肾炎。每天60克，煮食。\n\n\n5、薏米：补肺利尿，抗癌解毒。每天60克，煮食。\n\n6、生地：强心利尿，黑发降糖，养血生精。取500克煎水，兑适量蜂蜜熬膏，每天服两汤匙。\n\n\n7、首乌：养精血，强筋骨，涩精液，乌头发，强心降脂，软化血管。磨粉，每天30~60克，用蜂蜜水冲服。\n\n8、桂圆：养血安神，健脑益智。每天15克，加红枣10克，大米60克，煮粥。\n\n\n9、阿胶：止血、生血、补血之品，每天炖服6克。\n\n10、枸杞子：滋肾补肺，平肝明目，防治脂肪肝，促进肝细胞再生。每天吃30克。\n\n\n11、黄精：降压消脂，健脾补气，滋阴润肺。鲜品煎汤，每日30克。\n\n12、桑葚：滋阴降压，黑发明目。取500克煎水，兑适量蜂蜜熬膏，每天服两汤匙。\n\n\n13、菟丝子：壮阳滋阴，温而不燥，补而不滞，调肾佳品。取250克泡适量白酒，每日25毫升。\n\n14、肉苁蓉：补肾壮阳，强心降压，通便。可取适量同羊肉一起煮食。\n\n15、生杜仲：调肾降压，强筋壮骨。每天15克，煎水代茶饮。\n\n以上就是15种家庭常用中药材介绍，用好这些药材日常保健养生效果很好的！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 16:15:45","updateTime":"2021-05-17 16:15:45","isExist":null},{"id":2426,"question":"男女比例?","simplecontent":null,"content":"对于中国男比女多3490万人，国家统计局新闻发言人付凌晖17日在新闻发布会上表示，这3000多万人分布在不同的年龄，其中，20-40岁适婚年龄男性比女性多1752万人，性别比是108.9。青年当中，男多女少问题是面临的一个现实问题，但是婚恋关系的确立，受年龄、生活地域、个人品德、教育水平、价值观念、家庭背景等诸多因素的影响，年龄只是其中一个方面。随着全面两孩生育政策实施，生育观念的转变，出生人口性别比也在下降。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 16:13:59","updateTime":"2021-05-17 16:13:59","isExist":null},{"id":2425,"question":"走路会近视吗?","simplecontent":null,"content":"现在越来越多的人出现近视眼，并且出现近视眼的年龄段也越来越低，相信很多人在大街上都能看到几岁小孩子已经戴眼镜。很多人虽然知道近视眼，但并不知道近视眼是由什么原因引起，在不明原因情况下就无法进行针对性预防。\n\n那么，视力下降原因有哪些？\n\n1、过度用眼\n\n有些人玩游戏或是玩手机，一玩就是几个小时，中间没有让眼睛休息，眼睛长时间负荷，给眼睛带来很大负担，眼部肌肉长期处于紧张状态，会让眼部出现疲劳感，时间一久也容易出现近视眼。因此，平时无论是看书还是玩手机，时间需要控制好，需要让眼睛得到充足休息，以防发生近视眼。\n\n2、长期睡眠不足\n\n都提倡每天早睡早起的习惯，一些人因为工作或是压力过大，夜间经常熬夜得不到充足休息，长期睡眠不足，会让身体出现疲劳感，在大脑没有得到充足休息情况下，也会给眼部带来负担，促使近视眼发生。建议人们要养成好的作息规律，每天保证充足的睡眠。\n\n3、用眼距离过近\n\n一些孩子从小看书或是看手机都很近，长时间用眼距离过近也容易引发近视眼，由于近距离用眼会发生剂量梯度效应，所以预防近视眼用眼时需要保持一定的距离，并定期让眼部得到休息。\n\n4、光线太强或者太弱\n\n无论是在弱光或是强光下用眼都容易出现近视眼，在强光下用眼出现的强烈反射，当照射到眼睛会给眼睛带来刺激，而在弱光下用眼会让眼睛看不清，经常眯着眼睛看物体，会让眼睛产生疲劳感，也容易出现近视。\n\n5、走路的时候玩手机\n\n手机成为人们必备品，任何时候都离不开手机，手机离身会让人们产生恐慌感，部分人还养成边走路边看手机的习惯，其实这样很不利于眼部健康。行走的时候身体会出现摇动，眼睛跟手机距离无法固定，容易出现近视眼。\n\n引起人们视力降低原因有很多，生活中要针对原因针对性预防。其实近视眼出现会严重维护到人们眼部健康，需要对这种疾病引起重视，生活中远离不利于眼部的因素，做好预防近视眼发生。建议人们让眼部得到足够休息时间，坚持做眼保健操，多吃一些有利于肠道眼部恢复食物，也对眼睛带来好处。\n\n（责编：陈志鹏 ）\n\n展开剩余内容","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 16:01:00","updateTime":"2021-05-17 16:01:00","isExist":null},{"id":2424,"question":"哪些习惯导致近视?","simplecontent":null,"content":"会导致近视的不良习惯有用眼时间过长、用眼不当、读书写字的光线不好、营养不良。\n\n1、长时间的学习、看书、看手机，会让眼睛会觉得非常累，如果不及时的休息，那么就会发展成假性近视。\n\n2、歪着身子或躺着看书、玩手机，又或者在开动的汽车上看手机，这些都是容易导致眼睛疲劳的，时间长了就会造成眼睛伤害，形成近视。\n\n3、在光线较弱的地方长时间地看一个东西，眼外肌、睫状肌就会处于紧张状态，不利于眼球屈光系统的调节。\n\n4、青少年时期眼睛的发育要通过钙和铬等多种微量元素参与完成，如果钙和铬缺乏，也可能形成近视。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 16:00:00","updateTime":"2021-05-17 16:00:00","isExist":null},{"id":2423,"question":"近视的原因?","simplecontent":null,"content":"近视的发病原因分为先天遗传和后天环境这两大因素。\n先天遗传因素：多会导致病理性的近视，这是一种常染色体隐性遗传病，其遗传遵循遗传规律。这种情况导致的近视往往度数较高，可以达到600度，有的甚至能达到1000度以上，病理性的近视即便在患者成年后，近视度数也会进一步的加深。\n后天环境因素：绝大部分的近视患者是这种情况导致的，患者常常因为过度用眼、用眼姿势不当、环境光线不佳等原因，造成眼睛的假性近视，加之不积极调整、治疗，从而发展成真性近视。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 15:58:57","updateTime":"2021-05-17 15:58:57","isExist":null},{"id":2422,"question":"吃什么东西补脑提高记忆力呢?","simplecontent":null,"content":"一、花生米\n\n花生米中含有丰富的卵磷脂和脑磷脂,是神经所需的重要物质,可以延缓大脑的衰退,抑制血小板的凝集,预防脑血栓的形成。结果表明,常食花生能促进血液循环,增强记忆,延缓腐朽,是名符其实的“长果”。\n\n二、牛奶\n\n奶是一种接近完美的营养物质。含有丰富的蛋白质,钙,和大脑必需的氨基酸。奶中的钙最容易被人体吸收,是大脑代谢所必需的重要物质。另外,它还含有维生素B1等对神经细胞非常有益的成分。假设用脑过度而失眠的话,睡前喝杯热牛奶有助于睡眠。\n\n三、鱼\n\n他们能为大脑提供高质量的蛋白质和钙,而淡水鱼中的脂肪酸多为不饱和脂肪酸,不会造成血管硬化,对脑动脉血管也没有伤害,相反,它还能保护脑血管,促进脑细胞的流动。\n\n四、蛋类\n\n脑容量的功能、记忆能力的强弱与脑中乙酰胆碱的含量密切相关。试验证明,吃鸡蛋的好处是:蛋黄中含有丰富的卵磷脂,在酶的作用下分解,可以产生丰富的乙酰胆碱,再进入血液,迅速到达脑组织,从而增强记忆。外国研究证明,每天吃1~2个鸡蛋就能提供足够的胆碱给机体,对保护大脑,提高记忆力大有好处。\n\n五、小米\n\n其中维生素B1、B2含量分别比大米高出1.5倍和1倍,而色氨酸和蛋氨酸含量较高。\n\n通过临床观察发现,食用小米具有防腐朽作用。如果平常经常吃一点小米粥,小米,就会对大脑有益健康。\n\n六味精谷氨酸钠是味精的主要成分,在胃酸的作用下,它可以转变成谷氨酸。谷氨酸系唯一参与人脑代谢的氨基酸,可促进智力发展,保持和改善大脑功能。经常摄取一些味精,可以改善智力低下和记忆力衰退的症状。由于味精可使脑内乙酰胆碱增多,故对神经衰弱症亦有一定疗效。\n\n七、菠菜\n\n凤梨,虽然便宜而不贵,却是一种健脑的蔬菜。由于菠菜富含丰富的维他命A,C,B1和B2,是脑细胞代谢的“最佳供给者”之一。另外,它还含有丰富的叶绿素,还具有健脑益智的功效。\n\n上述这些都是具有健脑补脑、增强记忆力的食品,平时饮食上不妨多搭配一些,另外也要提醒各位家长,不要给孩子过大的压力,以免产生反作用,给孩子补脑的同时,也要合理的安排孩子的作息时间,","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 15:51:39","updateTime":"2021-05-17 15:51:39","isExist":null},{"id":2421,"question":"什么食物最补脑增强记忆力?","simplecontent":null,"content":"对于补脑增强记忆的食物主要包括以下方面:\n\n第一、多吃鱼，鱼脑含有丰富的卵磷脂，可以促进脑细胞代谢，延缓脑细胞衰老，增强记忆力。鱼肉含有丰富的脂肪酸，有助于健脑。\n\n第二、多吃鸡蛋，鸡蛋含有人体所必须的丰富氨基酸，卵磷脂以及钙，磷，铁等微量元素，以及维生素A、D，适合于用脑的人改善和提高记忆力。\n\n第三、常喝牛奶，牛奶属于优质蛋白，富含有核黄素，钾，钙，磷，维生素B12，维生素D，可以为大脑提供所需要的营养成分和元素，从而促进大脑的记忆。\n\n第四、此外，小米，黑芝麻，核桃等杂粮等食材也有补脑益智的功用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 15:50:33","updateTime":"2021-05-17 15:50:33","isExist":null},{"id":2420,"question":"穿山甲功效?","simplecontent":null,"content":"穿山甲是鲮鲤科动物穿山甲的鳞甲，自古便是名贵的中药材原料。据中国药典中记载，穿山甲具有活血消症，通经下乳，消肿排脓，搜风通络的功效。用于闭经症瘕，乳汁不通，痈肿疮毒，风湿痹痛，中风瘫痪，麻木拘挛。\n\n其实，像“闭经症瘕，乳汁不通，痈肿疮毒”这类需要“通”的疾病，很可能是古人发现穿山甲擅长打洞，然后脑补出来的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 15:49:49","updateTime":"2021-05-17 15:49:49","isExist":null},{"id":2419,"question":"投诉的客户是忠实的客户?","simplecontent":null,"content":"调查表明，投诉的客户只占全部客户的5%还不到，95%的不满意客户是不会投诉的，他们只会停止购买，或是转向其他竞争品牌，与企业的竞争对手交易，而且还会散布对企业不利的信息，这些客户根本不给企业解决问题的机会。\n\n由此可见，企业应该感谢这些前来投诉的客户，因为他们把不满告诉了企业，而不是告诉他们的亲朋好友——他们才是企业真正的朋友。\n\n有期望才会有投诉，客户肯花时间来投诉，说几句怨言，发几句牢骚，表明他们对本企业抱有“恨铁不成钢”的心态，表明他们对企业仍然有信心，他们期待“浪子回头金不换”。因此，可以说那些肯投诉的客户才是我们的忠实客户。\n客户投诉的成功处理可以带来回头客业务。美国TRAP公司研究表明，不投诉的客户只有9%会再上门，投诉的客户有15%会再上门，投诉得到解决的客户则有54%会再上门，如果投诉得以迅速解决，则有82%的客户会再上门。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 14:52:08","updateTime":"2021-05-17 14:52:09","isExist":null},{"id":2418,"question":"客户投诉原因?","simplecontent":null,"content":"投诉产生的原因\n\n1、 产品质量问题\n\n2、 工作人员态度问题\n\n3、 产品页面介绍不清楚导致客户理解偏差\n\n4、 客户心里预期与实际形成落差问题\n\n5、 同行产品对比落差问题\n\n6、 商家未经客户同意私自修改订单\n\n7、 突发事件未及时告知客户\n\n8、 工作人员业务不专业\n\n9、 促销承诺、未兑现\n\n10、\n公司政策问题","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 14:40:21","updateTime":"2021-05-17 14:40:21","isExist":null},{"id":2417,"question":"肝火太旺如何解决?","simplecontent":null,"content":"病情分析：肝火旺盛通常由于喜好辛辣刺激、油腻饮食所导致。所以在治疗时，我们建议以清淡饮食为主，多吃清热降火的食物，如绿豆水、银耳莲子粥等；还应多吃绿色蔬菜水果，如生菜、花菜、西瓜、雪梨、柚子等；也可以选用菊花、决明子、龙胆草等泡水饮用。\n\n\n\n肝火旺需忌食一些辛辣、肥腻的食物，多食一些清凉去火的食物，如银耳、莲子、绿豆。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 11:49:02","updateTime":"2021-05-17 11:49:02","isExist":null},{"id":2416,"question":"太阳穴长痘原因?","simplecontent":null,"content":"太阳穴长痘痘，一般都是肝火较旺。太阳穴属于少阳经所主，在两边肝胆火旺，容易出现口苦，咽干，烦躁，易怒，容易潮热多汗，甚至夜间容易焦虑，睡觉差或者多梦，手足心喜欢放在被子外面，这都是肝胆炽盛所造成的，同时可能还会出现大便黏腻的状态。对于太阳穴长痘痘，同时伴有以上所述症状，考虑是肝胆经有热，如果症状较轻，可以选择逍遥丸或者丹栀逍遥丸进行治疗，疏肝健脾，理气解郁。如果症状较重，特别肝胆经湿热的症状比较明显，比如舌苔黄腻、大便干黏，可以用","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-17 11:47:47","updateTime":"2021-05-17 11:47:47","isExist":null},{"id":2415,"question":"5w1是什么?","simplecontent":null,"content":"when,where,who,why,what,how\n\n是什么，为什么，如何做，谁做，什么时候，什么地点","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-16 13:23:37","updateTime":"2021-05-16 13:23:38","isExist":null},{"id":2414,"question":"为什么香港演员到内陆不火?","simplecontent":null,"content":"大部分是语言因素，恐怕这是导致香港娱乐业不及台湾娱乐业的最大劣势，众所周知，香港以粤语为主，大多数香港人说广东话，由于历史原因，香港与祖国大陆相隔一个世纪以上，在二十一世纪，回归仅数年，因此香港人基本上不会说普通话，相反，台湾艺术家在这方面具有固有的优势，每个人都能说流利的普通话，这也要归功于之前的战争，国民党打败大陆后，国民党从大陆派遣了大量优秀人才到台湾，在台湾夺取政权后，大力推广“北京话”，因此台湾人从小学到中学到大学都在使用它。\n\n\n\n首先，TVB培训出来的很多演员，演技都是很厉害。现在很多知名的演帝都是从TVB出来的，例如周润发，周星驰，梁朝伟，古天乐等等。老一辈的演员都特别的刻苦卖力，在演戏方面不马虎。而现在的TVB年轻人，大多数都是通过选举大会出生的，演技方面都没有太多的专业培训等，而且经验不足，导致现在很多TVB的电视剧都是靠老一辈人去支撑。\n\n\n\nTVB的电视剧在内地的收视率没有港澳地区，两广地区，新加坡马拉西亚等地方高。熟悉他们的基本都是这片区域的人。内地观众比较钟爱内地自己拍的一些偶像剧，仙侠剧，战争片等。所以没有一定的收视率，观众也不会了解到演员，不会特别的喜爱，追捧。导致TVB一些有实力的新一代演员，在内地并不会很火，甚至不懂这个人是谁。\n\n\n\n而且听说在TVB的工作是比较繁忙，演员们也基本是活跃在电视剧上。而在内地的演员，现在很多都是影视兼顾，甚至一些是歌影视三栖的实力派。无论是实力还是曝光率等，都会比TVB的演员更高。\n\n\n\n现在一个演员红不红，因素太多。TVB的演员实力是有，但是可能因为公司条约的问题等，有种像古代封建社会的时候，闭门皇帝，固步自封的感觉。活跃范围不大，参加的活动也不多，曝光率低了自然也少人知道，红不起来。大陆内地的演员，除了拍戏，还会参加综艺，让一个人爆红，综艺也是一个，很多参加综艺后都会爆红。这就是现代网络社会，年轻人的追捧。虽然TVB的演员在大陆内地知名度不及内地演员高，但是他们在两广地区，东亚地区的知名度还是非常的高。有点像地域文化差异导致的原因。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-16 12:32:42","updateTime":"2021-05-16 12:32:42","isExist":null},{"id":2413,"question":"深圳的代表美食?","simplecontent":null,"content":"生蚝","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 21:15:15","updateTime":"2021-05-15 21:15:15","isExist":null},{"id":2412,"question":"海鱼次淡水鱼安全?","simplecontent":null,"content":"首先海样的环境，海水流动性大且盐分高，不利于寄生虫生存，海鱼的寄生虫相比淡水鱼要少很多。\n其次海鱼的寄生虫往往不能适应人体环境，所以有些寄生虫，即使被人吃了也不会有什么不良反应；比如鲑生粘孢虫，它就不能在温血动物体内生存，而人的体温有三十几度，足够杀死它了。相反淡水鱼的许多寄生虫，在人体中却如鱼得水，能很好的寄生。像血吸虫、肝吸虫等，不仅寄生的好而且危险度极高，动辄一命呜呼！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 21:13:34","updateTime":"2021-05-15 21:13:34","isExist":null},{"id":2411,"question":"什么鱼生会有寄生虫?","simplecontent":null,"content":"主要这是淡水鱼.日本的都是深海鱼.很多还经过超低温冷藏.寄生虫在这阶段就会挂掉了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 21:12:25","updateTime":"2021-05-15 21:12:25","isExist":null},{"id":2410,"question":"小麦为什么不煮来吃?","simplecontent":null,"content":"众所周知，南方人爱吃大米，北方人爱吃面食。南方人吃大米一般都是去掉外皮，直接蒸煮即可食用，而北方人吃的面食大多都来源于小麦。小麦磨成粉之后变成各种面食。很多南方人就不能理解了，大米可以直接煮着吃，为什么小麦非要磨成面食才能食用，直接煮着吃不行吗？\n\n小麦能直接煮食吗？\n最开始，中原的小麦和大米一样，可以直接煮食的，那个时候被称之为粒食。但是这种吃法在当时很快被弃用了。现在的人们也时常做小麦稀粥。但是小麦的主流吃法还是将其作成面粉后再食用。\n\n小麦极其耐火，如果像大米一样蒸煮，可能个把小时都煮不烂。即使放在明火上炙烤，小麦也能经受一段时间。所以如果直接煮着吃不仅浪费柴火，而且煮出来的“麦饭”也不好吃。\n\n小麦做成面粉是最好的选择\n正因为小麦它比较“顽固”，于是人们想到将小麦碾压成粉，作成各种面食。小麦磨成面粉后，那施展的空间就大了。一般北方人吃面食，除了想不到，就没有做不到的。后来的饺子、混沌、各式面条、馓子、面饼都是面粉的衍生食品。毫不夸张的说，没有了面粉，那北方的美食至少减少一半以上。\n\n面粉作成的食物，大体分为三类。一是不放酵母的冷水面，可以做成面条、馄饨、饺子、大饼等，第二是直接开水烫面粉，让面粉在制作之前，就基本熟了吗，这种烫面一般都是黑面加一点地瓜面，制造的面食。最后一种是加了酵母制作的温水面，比如包子、馒头、面包等。\n\n北方人之所以不直接煮食小麦还是因为不好吃，所以才“被迫”创造出种类繁多的面食。不知道大家吃过直接煮的小麦吗？","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 13:50:24","updateTime":"2021-05-15 13:50:24","isExist":null},{"id":2409,"question":"花旗银行功效?","simplecontent":null,"content":"花期参身本身具有补血养气，滋阴补肾，健脾养胃，延缓衰老，养颜等功效，所以临床上可以广泛的治疗抗疲劳，抗休克，抗衰老等。\n\n花旗参本身来说很普通，但可以将其切片泡水喝，也可以用来和其它的食材炖煮，从而起到比较好的保健养生的作用。因为它所含的微量元素以及营养成分非常多，所以治疗效果也比较好。\n\n但是对于有一些脾肾阳虚的人来说，则不太适用。因此，花旗参最好还是能在医生的指导下进行食用，从而取得比较好的效果。","filterContent":null,"type":"辩论","status":0,"createTime":"2021-05-15 13:45:13","updateTime":"2021-05-15 13:45:13","isExist":null},{"id":2408,"question":"引用别人的话?","simplecontent":null,"content":"2.在一个车间，有四个在上班时间玩扑克的员工被当场抓住了，尽管他们及时地把扑克牌藏起来了，但还是逃不过一顿“审问”。\n车间主任：“你们刚才是不是在玩扑克？”\n员工甲：“我没有，我刚才在跟小丙讨论新工艺。”\n员工乙：“我也没有，我在喝水。”\n员工丁：“甲在讨论工艺，乙在喝水，我一个人跟谁玩呢？所以我也没有。”","filterContent":null,"type":"辩论","status":0,"createTime":"2021-05-15 13:20:37","updateTime":"2021-05-15 13:20:37","isExist":null},{"id":2407,"question":"吃鸭头危害?","simplecontent":null,"content":"病情分析：吃鸭头的危害是：1.鸭头的上面有非常多的毒素，在吃了之后，会积聚在身体里面难以排除。2.鸭头里面还有非常多的重金属。平时鸭头可以吃，但是尽量不要长时间的吃，不要吃的太多，可以选择吃一些鸭肉，平时的饮食一定要合理的搭配，保证营养的均衡和全面，尽量不要吃的过于单一。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 12:35:08","updateTime":"2021-05-15 12:35:08","isExist":null},{"id":2406,"question":"养鸟会有什么疾病?","simplecontent":null,"content":"虎皮鹦鹉可能传播哪些疾病?\n当然有危险了，有很多养鸟爱好者深受其害,\n\n鸟粪中带有鹦鹉病毒、岛型结核杆菌及寄螨，鸟粪被踏碎以后，病毒与病菌便飞扬在空气中，若人长时间吸入，会诱发呼吸道黏膜充血、咳嗽、痰多、发烧等症状，严重者还会出现肺炎与休克，我说的只是冰山一角，如果家里有老人和正在发育期间的孩子，这种情况更为严重，而且鸟还会传播给人类很多的疾病，我就不逐个举例说明了\n\n所以你家的鸟以后不要再放出来了，而且，虎皮鹦鹉很喜欢在笼子里面乱扑棱翅膀，所以弄得灰尘，粪便碎末到处都是，所以千万不要把鸟放在卧室里面饲养\n\n而且要勤清理鸟笼里面的粪便，这样才能把鸟的危害降到最低。\n\n有很多人看了我以上的话，会说我夸大其词，会说中国很多的养鸟人为什么没看到他们出事？\n\n一个简单的例子：很多人都喜欢吸烟，当你奉劝他：吸烟有害健康，而且可以导致肺癌，他们会若无其事的说：没事的!\n\n如果你在医院里面观察一下，哪一个因为吸烟导致肺癌的人，得到自己生命即将结束这个噩耗，不会为自己曾经放弃了善意的劝说而感到非常后悔呢？\n\n能够传播疾病的动物有哪些\n果子狸，蝙蝠不是说传播非典嘛！\n\n蚊子传播什么热！\n\n家禽传播禽流感！\n\n狗、猫和鼠能够通过咬人或舔人的伤口传播各种病菌。\n\n啮齿类动物特别是老鼠和松鼠能传播黑死病，也就是鼠疫。\n\n金丝雀和鹦鹉等鸟类的羽毛中的角蛋白能引发过敏和气喘。这些宠物鸟有时还会导致严重的感染，其中包括肺部衣原体感染。\n\n一些被当作宠物喂养的鱼类也能引起感染。一些观赏鱼身上带有与结核菌类似的致病菌，人在清洁鱼缸时如果皮肤上有伤口，很容易造成感染。\n\n哪些动物会传播疾病\n有100多种人类疾病与养宠物有关，其中20种较为常见。据估算，人们用来治疗由宠物引起的疾病所消耗的医疗资源，与治疗性传播疾病所消耗的资源相当。那么，有哪些宠物会传染疾病？它们会传染哪些疾病呢？\n\n人类在距今1万到1．5万年前驯养了狗，在古埃及时代驯养了猫，在中世纪驯养了兔子，但直到19世纪，人们才知道被狗咬伤会染上狂犬病。今天，刺猬、仓鼠甚至蜘蛛都开始成为发达国家中流行的宠物。狗、猫和鼠能够通过咬人或舔人的伤口传播各种病菌。人的手部皮肤特别容易受到宠物所带病菌的侵袭。免疫力低下或做过***切除的病人被宠物咬伤的后果尤为严重。狗、猫和鼠等动物会传播导致扁桃体炎的链球菌，还会引起百日咳博尔德氏杆菌和红球菌感染，对人的脑","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 12:32:18","updateTime":"2021-05-15 12:32:18","isExist":null},{"id":2405,"question":"养鸟疾病?","simplecontent":null,"content":"病情分析：养鸟一定要尤为小心，注意清洁干净，不然会带来安全隐患。在鸟巢、鸟粪中还有一种隐球菌，在人的抵抗力下降时，可以使人感染，患隐球菌肺炎，严重者可发生隐球菌性脑膜炎，对人危害很大。预防养鸟人得肺炎的方法是人鸟不要同居一室，保持鸟巢、鸟笼清洁，打扫鸟巢时戴口罩。肺部真菌感染","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 12:08:48","updateTime":"2021-05-15 12:08:48","isExist":null},{"id":2404,"question":"养鸟会有什么疾病?","simplecontent":null,"content":"鸟体是某些致病菌和病毒生长繁殖的温床,如鹦鹉的粪便中含有的一些微生物,若污染空气被人吸入后就会引起“鹦鹉热”或肺炎.鸟脱落的羽毛,绒毛则可能使某些人发生过敏反应,发生过敏性哮喘病,过敏性皮炎等.此外,有的鸟类携带有鸟型结核杆菌,可能使人患上肺结核病.鸽子的呼吸道及唾液中常常含有细菌病毒,这些细菌病毒如果进入人体呼吸道,就可能引起肺炎,肺脓肿或气管炎,甚至中枢神经系统的病变.如何预防养鸟可能导致的“养鸟病”,首先,鸟笼要挂在室外通风良好的地方,并保持鸟笼的清洁卫生,鸟粪要及时清除.每次赏鸟玩鸟的时间不宜太长,以15至30分钟为宜.患病者暂时不要玩鸟和喂鸟.到医院看病时在向医生讲述病史时要介绍自己有养鸟的爱好,以供医生分析病情时参考.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 12:08:19","updateTime":"2021-05-15 12:08:19","isExist":null},{"id":2403,"question":"深圳动物园动物?","simplecontent":null,"content":"有川金丝猴、黔金丝猴、白颊长臂猿、小熊猫、黑猩猩、山魈、赤猴、绿猴、浣熊、松鼠猴、卷尾猴、蜘蛛猴、青猴、小熊猫、鸸鹋、阿拉伯狒狒、非洲狮、节尾狐猴、鸵鸟、白狮、美洲豹、美洲狮、亚洲象、蓝孔雀、白孔雀、赤大袋鼠、东澳灰袋鼠、白袋鼠、八哥、画眉、红嘴相思鸟、太平鸟、黑领椋鸟、白颊噪鹛、黑脸噪鹛、黑喉噪鹛、黑尾蜡嘴雀、黑头蜡嘴雀、礼宾鸽、白鹇、白冠长尾雉、虎皮鹦鹉、牡丹鹦鹉、玉带海雕、苍鹰、白鹳、冠鹤、小天鹅、黑天鹅、大天鹅、鹈鹕、鸳鸯、鸿雁、豆雁、白额雁、绿头鸭、针尾鸭、棕头潜鸭、褐马鸡、红腹锦鸡、白腹锦鸡、原鸡、环颈雉、白雉、丹顶鹤、蓑羽鹤、红绿金刚鹦鹉、琉璃金刚鹦鹉、葵花凤头鹦鹉、白凤头鹦鹉、橙翅亚马逊鹦鹉、折衷鹦鹉、灰鹦鹉、大绯胸鹦鹉、火烈鸟、小火烈鸟、噪犀鸟、白鹮、红鹮、黄嘴鹮鹳、白鹭、白琵鹭、双峰驼、绿尾虹雉、棕尾虹雉、白尾梢虹雉、红腹角雉、黄腹角雉、博士猴、白鼻长尾猴、懒猴、粗尾冱、白耳狨、雕鸮、北极狐、金岛狐、北美赤狐、兰狐、荒漠猫、印度狐蝠、臭鼬、猪獾、貉、蟒、黄金蟒、王锦蛇、水龙、绿鬣蜥、鬃狮蜥、黑熊、棕熊、三色犬、梅花鹿、岩羊、黇鹿、长颈鹿、剑羚、角马、大羚羊、白脸牛羚、跳羚、大弯角羚、黑斑羚、斑马、麋鹿、马鹿、驯鹿、东北虎、非洲狮、狼、野猪、猕猴、豪猪、海狸鼠、矮马、小羊驼、食火鸡、松鼠、巴西龟、鸽子、孔雀鸽、礼宾鸽等等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 11:49:28","updateTime":"2021-05-15 11:49:28","isExist":null},{"id":2402,"question":"深圳动物园动物?","simplecontent":null,"content":"深圳野生动物园有300多个品种、近万头野生动物，包括大熊猫、金丝猴、耳廓狐、蓝孔雀、华南虎、东北虎、麦哲伦企鹅等。\n\n　　深圳野生动物园有哪些动物?\n\n　　野生动物园放养着300多个品种、近万头野生动物\n\n　　这些动物除来自全国各地外，还来自世界各洲，它们当中有不少属于世界珍禽名兽和我国一、二级保护动物。\n\n　　包括：华南虎、东北虎、麦哲伦企鹅、长颈鹿、斑马、亚洲象、丹顶鹤、犀牛...\n\n　　还有大熊猫、金丝猴、耳廓狐、蓝孔雀、火烈鸟等28种来自世界各地的国宝动物强势坐镇深圳动物园!群英荟萃，各国动物风采各异，各种才艺秀不停，精彩纷呈，令人目不暇接~\n\n\n　　图源：酷吧\n\n　　园区游玩路线推荐：\n\n　　湿地园 ->长臂猿群岛 ->雉鸡鸟类一条街->孔雀园 ->袋鼠园 ->非洲猴园 ->牦牛园 ->羊驼园 ->鸵鸟园 ->非洲之角 ->野象谷 -> 天鹅湖 -> 企鹅岛\n\n　　->鳄鱼湾 -> 鸟类表演馆 ->两栖爬行动物馆 -> 猿猴村 ->马戏小镇表演馆 ->熊猫庄园 -> 杂食馆/熊猫馆 -> 海洋天地 -> 珍稀鸟街\n\n　　-> 百兽盛会 -> 中型猛兽馆 ->猛兽谷 ->虎跳峡 ->游乐场 ->亲水乐园 -> 动物学科普馆 -> 宝宝乐园 ->湿地园 -> 出口\n\n　　小编提示：微信搜索公众号【深圳生活宝典(ID：szlybdb)】，关注后，在对话框发送【动物园】即可购买深圳野生动物园全天票、夜场票、下午场优惠票，也可以查看开放情况、游玩攻略、入场须知等相关信息！\n\n\n分享本文到：\n\n\nQQ空间\n\n新浪微博\n\n深圳动物园过年开放吗","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 11:48:00","updateTime":"2021-05-15 11:48:00","isExist":null},{"id":2401,"question":"深圳什么大夏很出名?","simplecontent":null,"content":"平安大夏，腾讯大夏，地王大夏，京基100大夏","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 11:35:15","updateTime":"2021-05-15 11:35:15","isExist":null},{"id":2400,"question":"缅甸北部为啥那么多诈骗?","simplecontent":null,"content":"跨境赌博、电信网络诈骗\n\n据调查资料显示，目前藏身于缅甸北部的诈骗者数量将近有10万人，是什么让缅甸北部成为了诈骗者的天堂？\n\n据调查得知，缅甸北部默许诈骗者不断涌入的原因离不开当地的诈骗集团不断的向缅甸北部缴纳高额的管理费用以及租金等，在利益的诱导下，缅甸北部不仅不打击诈骗集团甚至已经“同流合污”，缅甸北部的地方武装为诈骗团伙提供掩护，帮助诈骗集团逃离中国以及其他国家的追捕。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 11:03:59","updateTime":"2021-05-15 11:03:59","isExist":null},{"id":2399,"question":"缅甸在中国什么位置?","simplecontent":null,"content":"中国云南。\n\n地理位置介绍：\n\n缅甸位于亚洲东南部、中南半岛西部，其北部和东北部同中国西藏和云南接界，中缅国境线长约2185公里，其中滇缅段为1997公里；东部与老挝和泰国毗邻，缅泰、缅老国境线长分别为1799公里和238公里\n\n缅甸西部与印度、孟加拉国接壤。缅甸南临安达曼海，西南濒孟加拉湾，海岸线总长2655公里  ，缅甸的形状就像一块钻石，从南到北长约2090公里，东西最宽处约925公里。\n\n缅甸南端的维多利亚角处于北纬10度，北端葡萄以北的缅中边界线居于北纬28度，缅甸大部分地区都在北回归线以南，属热带。缅甸最西部的孟都处于东经92度线附近。\n\n\n\n扩展资料\n\n中国与缅甸边界问题解决的历史：\n\n第一，中缅边界中的“麦克马洪线”问题的解决，首先是因为中缅双方对这一问题采取了正确的态度。中国政府并不承认“麦克马洪线”，但又注意到了以下事实：“麦克马洪线”以南的未定界地区自清末以来已不归中国管辖；\n\n而缅甸则在独立后从英国继承了这个地区，当地景颇族建立的克钦邦加入了缅甸联邦，因而这片土地变更就会影响到缅甸的联邦制度；缅甸作为中国的邻邦和新独立的民族主义国家，在国际上执行和平中立和对华友好的政策，这与中国政府奉行的和平外交政策是一致的，中国政府对缅甸自然不能不予以重视。\n\n到上述种种因素，中国政府对这一问题采取了既要考虑历史背景又要考虑实际情况的态度：\n\n一是不承认“麦克马洪线”的合法地位；\n\n二是从实际管辖情况出发，将“麦克马洪线”视为“习惯线”的一部分；三是把“麦克马洪线”问题和边界中的其他问题“作为一个整体联系起来加以考虑”；四是在实际划界时，在全面解决中缅边界问题的基础上，把“麦克马洪线”作为“习惯线”的一部分而予以接受。\n\n缅甸虽然在独立后从英国继承了“麦克马洪线”以南地区，并说“麦克马洪线”“并非强加于西藏”，但事实上仍采取了友好合作的态度：\n\n一是愿意通过谈判解决问题，（虽然仅仅是进行谈判的问题，印度的态度却完全不同。早在1952年，印度政府就认定：“麦克马洪线南边的领土是我们（印度）的，因而也就没有什么可以讨论的。”[澳）内维尔—马克斯韦尔：《印度对华战事》，三联书店1971年版，第75页。）从一开始就与中国达成了维持现状的默契；\n\n二是最终放弃了根据分水岭对“麦克马洪线”进行修改的主张，承认包括“麦克马洪线”在内的中缅边界北段都是未定界，否认了该线的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 10:59:50","updateTime":"2021-05-15 10:59:50","isExist":null},{"id":2398,"question":"给实物下定义?","simplecontent":null,"content":"1.为阐述的概念定一个范围。最常见的范式是“×××是什么”、“×××属于×××”或者“×××是×××的一种”。比如给“火龙果”下定义，你需要先给它限定一个范围，“火龙果是一种热带植物”。\n\n2.找出概念与众不同的属性，让对方一听就明白是A而不是B。在说话前应该先考虑清楚，怎样才能将所讲的事物重点突出，使人一听就明白你讲的不同在哪里。然后，使用连接词将两者连接起来即可。","filterContent":null,"type":"辩论","status":0,"createTime":"2021-05-15 10:42:48","updateTime":"2021-05-15 10:42:48","isExist":null},{"id":2397,"question":"铁三角?","simplecontent":null,"content":"三、学会总结，构建“逻辑铁三角”\n\n避免“模棱两可逻辑错误”的第三招是要学会总结，让自己的语言像一个牢固铁三角让别人没有空子可钻。\n\n大亮所在的公司要求全部员工都给公司提意见。于是大亮这样写道：“办公室的厕所总是没人打扫，在上班时常常闻到一股臭味，同事对此都有意见，另外，里面的垃圾桶也没有人清理，饮水机离办公区太远了，想喝水还得跑很远，非常耽误时间。还有厕所里的卫生纸总是空的，时而空时而有。窗户上面也太脏了，外面郁郁葱葱的树能够调节心情，可是就是因为窗户不干净，让人心情不好。”\n\n是不是没有条理性，东一句，西一句，从厕所一下子跑到了饮水机，又从饮水机跑回了厕所。要是这样说呢？“办公室的厕所总是没人打扫，垃圾桶也没有人清理，还有里面的纸也经常是空的。饮水机的距离有些远，喝水非常不方便。窗户外面的树都郁郁葱葱的，但是因为玻璃脏了，影响大家的心情。我的意见是，首先应该有人负责打扫厕所、倒垃圾和更换卫生纸，然后把饮水机的位置调整一下，最好离办公室近一些，最后就是可以组织大家擦擦破璃。”\n\n后面这段话和前面那段话意思其实一样，但是仔细看，后面的话加上了总结的话语，也分出了条理性，所以更容易让人接受。在日常生活中，我们要成为语言逻辑高手，就应该善于总结话语，让自己说话像是一个铁三角。在平时说话过程中，要注意把零散的词句总结得有条理性、有逻辑推导的过程，有中心思想，也有总结的结论，像一个铁三角那样牢固。这样才能在很大程度上规避模棱两可的逻辑错误。","filterContent":null,"type":"辩论","status":0,"createTime":"2021-05-15 10:37:14","updateTime":"2021-05-15 10:37:14","isExist":null},{"id":2396,"question":"偷吃巧克力?","simplecontent":null,"content":"有一次，三年级的老师在班里举行画画比赛，并宣布这次画得好的同学可以得到巧克力作为奖励。同学们高兴极了，都用心地画着，到了午休时间，大家都到学校的食堂吃饭，老师也忘记把抽屉里面的巧克力带走。\n\n等下午上课的时候，老师发现巧克力袋已经被人拆开，有些巧克力已经不见了。而袋子的旁边，恰好放着李磊的铅笔。\n\n老师生气地把李磊叫起来，斥责道：“太调皮了，李磊你怎么能够偷吃巧克力呢？”\n\n李磊不慌不忙地回答说：“老师，假如袋子旁边放着谁的铅笔就说明谁偷吃了巧克力的话，那么要是放了老师的铅笔，是不是说明老师就是偷吃的那个人呢？”\n\n老师愣了，觉得李磊说得好像也没有错。\n\n李磊继续说道：“袋子旁边放着铅笔，说明是有人留在那里的，可能是铅笔的主人，也可能是其他人。”\n\n老师觉得李磊说得在理，扫视了一下教室，说：“在这么短的时间内偷吃巧克力，肯定来不及到比较远的厕所洗手，大家把手伸出来，只要检查手，就可以知道是谁偷吃巧克力了。”\n\n老师的话刚刚说完，坐在角落的小强赶紧把手放在了背后，眼尖的李磊立刻指着小强说：“偷吃巧克力的人就是他。”\n\n最后，小强不得不承认的确是自己偷吃的。","filterContent":null,"type":"辩论","status":0,"createTime":"2021-05-15 10:33:27","updateTime":"2021-05-15 10:33:27","isExist":null},{"id":2395,"question":"如何回复别人刁难的问题?","simplecontent":null,"content":"方法一：先微笑对之。\n\n在遇到别人提出的刁难问题之后，首先你可能会觉得非常生气，但是如果你就很气愤地回应对方的话，那么你就中了他的圈套，他就是想这样惹你的，让你更加难堪，所以需要做的是以微笑来面对他，这样才不会失了你的高素质，之后再对于他的问题来回答。\n\n如何机智回答别人的刁难提问\n方法二：拒绝回答。\n\n不想回答的话，那么就要拒绝，但是拒绝也是要有技巧的，不要直接的拒绝，反而要委婉的拒绝，比如别人问你上那么好的大学，怎么出来工资有多少呢？对于个人隐私的问题，你可以选择不回答，当然最好是说和大家一样，刚开始先学经验再赚钱，还得好好学习等等，委婉拒绝回答是很重要的。\n\n如何机智回答别人的刁难提问\n方法三：顺着他的问题反问。\n\n对于那样的问题，很多人都觉得非常不想回答又不能避免回答，所以这时候就可以顺着他问的问题稍微回答一下接着反问一下他同一个问题，看他是如何反应的。也可以回答的时候绕到别的问题上去，这样就不会很难堪了。\n\n如何机智回答别人的刁难提问\n方法四：表现得大度。\n\n当听到很刁难的问题的时候就说明对方是有敌意的针对你，那么你先别跟他较真，要表现得大度一点，或者直接开玩笑地说，啊，真是不好意思，这个问题太难了，我回答不上来等等推脱的词语来应对，同样夸对方问得太深了，可能自己还没想过这个问题然后跳过。\n\n如何机智回答别人的刁难提问\n方法五：含糊回答。\n\n不想回答就含糊一点说自己已经忘了或者没有想过，当然最好的方式是将问题转移到自己懂得的方面去，这样才能让对方被自己的回答所迷惑住，如果一而再，再而三地刁难，那么你可以借机走开，这样你就会觉得比较不尴尬了。\n\n如何机智回答别人的刁难提问\n方法六：慢慢转移问题。\n\n转移一个你不喜欢的话题是可以的，不过不要太直接转移，可以在你回答他问题的时候慢慢来转移一下话题，这样你就可以不用回答那个刁难的问题了，同样问你刁难的问题的人对你也不会怎么好，所以这样的人少和他交谈是最好的。\n\n如何机智回答别人的刁难提问","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 00:55:58","updateTime":"2021-05-15 00:55:58","isExist":null},{"id":2394,"question":"辩论中反驳的技巧?","simplecontent":null,"content":"技巧一、巧用仿拟\n\n　　一天，一名水手准备出海，他的朋友正巧来他家做客。朋友问他：“你的祖父死在哪里?”水手答道：“死在海里。”朋友又问：“那你的父亲呢?”水手答：“也死在海里。”朋友大声说：“天哪!那你为什么还要当水手去远航呢?”\n\n　　水手笑着反问道：“那么，你祖父死在哪里?”朋友回答：“死在床上。”水手又问：“那你的父亲呢?”朋友答：“也死在床上。”水手笑了，说：“朋友，那你为什么晚上还要睡在床上呢?”顿时，那位朋友便无言以对了。\n\n　　反驳说：“你的祖父和父亲死在海里，是被海水淹没的;而我的祖父和父亲虽死在床上，却是因为疾病而死，两者怎可同日而语?我只是想提醒你当水手是很危险的。”\n\n　　这位水手在这里故意混淆了概念。“死在海里”的确切含义是，因为的大海的危险，而在海里丧生;而“死在床上”的含义仅仅是，死的时候，躺在床上。这二者之间的含义有着本质的区别，而水手却故意混淆，看似有理，事实上却不堪一击。对于这样的诡辩者，我们只要厘清概念的内涵和外延，便能令对方哑口无言。\n\n　　技巧二：类比\n\n　　西汉时，有一天汉文帝刘恒向丞相陈平查问政事：“全国一年判决多少狱案?征收钱谷多少?”陈平答道：“这些事各有主事的官吏：陛下查问判狱的事，可以去问管司法的廷尉;要查问征收钱谷的数量，可以去问管理粮赋的内史。”汉文帝说：“你回答不出来，还让朕去问下面的官员，这不是严重失职吗?”陈平坦然辩解：“陛下，我不但没失职，反而是称职。总领文武百官使他们各尽其职，这才是丞相的职责啊。”汉文帝觉得陈平辩得有理，便不再责备他了。\n\n　　如果我是汉文帝，会反驳陈平道：“如果你想买一些米面粮油，向你的管家问价格，你的管家却说：‘米的价格你要去问米商，面的价格要去问面商!’你是会乖乖地自己上街去问呢，还是会责怪这个管家不称职呢?”\n\n　　皇帝查问政事，作为宰相的陈平不但自己回答不上来，反而要皇帝亲自去问更下一级的官吏，这种态度明显是有问题的。作为丞相，督促百官各尽其职自然是其重要职责之一;然而及时收集整理重要的情报向皇帝汇报，辅佐皇帝做出正确的决策难道就不是丞相的职责了吗?陈平的诡辩之处在于他只强调了问题的一方面，而刻意忽略了另一方面。我们只需拿出生活中同类的事情与之进行类比，便可将其驳倒。\n\n　　技巧三：挖坑设陷\n\n　　在美国一次总统竞选中，民主党总统候选人杜卡斯基在一场电视辩论中，呼吁废除死刑，说得很有道理，现场的观众纷纷交头接耳，赞同他的观点。这时，主持人萧伯纳示意大家收声，忍不住问道：“那么，请问杜卡斯基先生：如果你的妻子被人奸杀，你是否还会主张对死刑犯宽容?”杜卡斯基无力反驳，尴尬不已。\n\n　　如果我是杜卡斯基，我会说：“假如您有一位前途远大的儿子，仅因为一时激愤而犯下了无可弥补的错误，您是希望立马把他处死，还是希望再给他一次机会?我们每个人都有可能成为被害人，但也有可能因为法律过于严苛而受到伤害。我们不能只是站在某一群体或个人情感的角度来思考问题，尤其是立法这样事关全社会的重大问题，那样会失去了最起码的公正。”\n\n　　我们且不讨论是否应该废除死刑，单从辩论的角度来看问题。这场论辩中，主持人将杜卡斯基代入到了一个虚拟的情境中，企图以此使他无言以对。但你所虚拟的情境，只是一个个案，是一种特殊情况，如果以此来得出最终的结论，往往会以偏概全。我们大可以虚拟另外一种相反的情境，以彼之道还施彼身。\n\n　　技巧四：用事实反驳\n\n　　古代有一位智者，经常向国王讲“一切都是幻觉”。一次，王宫里一头大象受惊，乱跑一气，智者吓得东躲西藏，狼狈不堪。国王见状，嘲笑他说：“你既然说一切都是幻觉，那么你是被幻觉吓跑的吗?”谁料，智者非常镇定地回答：“国王陛下，您看到我逃跑只是一种幻觉。”\n\n　　如果我是那位国王，便会淡定地说道：“原来一切都是幻觉啊，那就把你和大象关在一个房间里吧。大象是幻觉，你不必惊慌!”相信智者一定会被吓得脸都青了。\n\n　　“事实胜于雄辩”，智者的嘴皮子再好使，也改变不了他如果和大象关在一起会被大象踩死这个事实。诡辩之所以是诡辩，很多时候便是因为他们罔顾客观事实，只想通过所谓的辩论技巧或者逻辑陷阱来达到驳倒对手的目的。这些诡辩者的逻辑，如果套到现实中来，往往是漏洞百出。我们如果从逻辑上很难将其驳倒，不妨在事实上下功夫，用事实驳倒“雄辩”。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-15 00:48:39","updateTime":"2021-05-15 00:48:39","isExist":null},{"id":2393,"question":"红米和紫米区别?","simplecontent":null,"content":"1、红米，是一种接近于野生稻的禾本科稻属（Oryza）杂草稻，分类上属籼型，与粳稻伴生，因种皮棕红色，被称为红米稻，无芒或短芒，谷壳颜色黄色或褐色。\n\n2、紫米是水稻的一个品种，属于糯米类，仅湖南、四川、贵州、云南、陕西、湖北恩施等有少量栽培，是较珍贵的水稻品种，分紫粳、紫糯两种。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 20:22:14","updateTime":"2021-05-14 20:22:14","isExist":null},{"id":2392,"question":"风油精作用?","simplecontent":null,"content":"风油精主要成分是樟脑，薄荷脑以及丁香酚和水杨酸甲酯类成分，它主要是起到清凉、止痒，消毒的作用，主要用于防蚊虫叮咬，止痒或者伤风感冒，晕车眩晕的患者。\n\n而生姜属于热性食物，属于辛辣刺激食品，两者相互使用，应该属于相克的。所以一般在日常生活中两者很少同时使用，建议还是不要把风油精和生姜放在一起使用。如果两者一起使用，有可能会降低风油精的药效成分，降低风油精治疗效果等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 19:51:06","updateTime":"2021-05-14 19:51:06","isExist":null},{"id":2391,"question":"生姜滴风油精作用?","simplecontent":null,"content":"将风油精滴在生姜中，首先有比较好的驱蚊效果，将这些放置在窗口能够达到有效的驱蚊作用，另外的话在泡水洗脚中，可以在洗脚水中适量的加一些风油精滴过的生姜，有一定治疗脚气的作用。\n\n除了这些以外，还可以在生姜上滴一些风油精的话，对于女性来说，能够有效的缓解头痛，疲劳等相关症状，所以适当的用一下，对于人体具有保健治疗的作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 19:50:38","updateTime":"2021-05-14 19:50:38","isExist":null},{"id":2390,"question":"猝死原因?","simplecontent":null,"content":"我国每年约有54.4万人猝死，而猝死的主要原因之一就是心脏骤停。心脏骤停4分钟后，脑组织将发生不可逆的损坏，所以这四分钟也被称为“黄金四分钟”，而心肺复苏是抢救心脏骤停的最有效方法，该学生也正是因为错失了这四分钟的黄金抢救时间而不久后离世。那学校该为错失这四分钟而承担责任吗？\n\n首先，该学生是在课后自己选择进行运动，并不是课内时间，因此球场周围没有配备急救医疗救援人员属于正常。且篮球类运动本身就有一定的安全风险，学生在自己选择这类运动时已经默认愿意承担该风险，因此事故的发生与该场地管理人员实际上并无太大的因果关系。\n\n其次，心源性猝死本身不是遗传病，且早期症状往往容易被忽视而导致无法提前被发现。而该学生选择了高风险高运动量的篮球运动，也可以看出他本人也并未发现自己的病症，更何况学校。而根据《学生伤害事故处理办法》第十二条第三款：学生有特异体质、特定疾病或者异常心理状态，学校不知道或难于知道的，学校已履行了相应职责、行为并无不当的，无法律责任。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 18:31:51","updateTime":"2021-05-14 18:31:51","isExist":null},{"id":2389,"question":"象棋八大残局?","simplecontent":null,"content":"象棋八大残局是：大征西、七星聚会、野马操田、带子入朝、大九连环、小征东、火烧连营、炮炸两狼关。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 18:29:05","updateTime":"2021-05-14 18:29:05","isExist":null},{"id":2388,"question":"提问题和建议?","simplecontent":null,"content":"这种类型，状态全部塞在一个类里，看的很难受，搞成一个个美句多好啊，点进去就能知道这个有几种，还能看中文描述\n\n后期压力太大很容易出乱子\n\n他们加班是由我发邮件还是他们自己发","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 17:47:09","updateTime":"2021-05-14 17:47:09","isExist":null},{"id":2387,"question":"前端页面性能要求?","simplecontent":null,"content":"关键页面需要秒开","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 17:12:47","updateTime":"2021-05-14 17:12:47","isExist":null},{"id":2386,"question":"病能治好吗?","simplecontent":null,"content":"不是所有的病都能治好，也不是说每个人都能治好 。也不是说每个人都能治得起 。认命吧 ！黄泉路上不分老少 。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 16:11:56","updateTime":"2021-05-14 16:11:56","isExist":null},{"id":2384,"question":"你是站在你的角度看工作的?","simplecontent":null,"content":"我这边也按照原来方式弄不了，或者发邮件开确认下\n\n你也从我的角度看下问题","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-14 16:11:45","updateTime":"2021-05-14 16:11:45","isExist":null},{"id":2385,"question":"别人要求我做事情，自己搞不定的东西?","simplecontent":null,"content":"@人 马哥，高保真什么时候给\n\n导航你来配置下，？或者提供个文档出来我们前端自己配\n\n整机工艺专家和生产工艺专家用什么组件","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 15:16:39","updateTime":"2021-05-14 15:16:39","isExist":null},{"id":2383,"question":"测试和开发撕逼?","simplecontent":null,"content":"测试人员需要能够重现Bug的案发现场，并基于对需求（软件研发过程中的法律依据）的深入理解，从需求上找出让开发无可辩驳的证据，证明这确实是个Bug。还不够，测试人员证明这是Bug了，还要基于对Bug生命周期管理流程上的熟悉，对Bug的状态进行跟进，若开发没有正当理由，超过流程中规定的相应时间不处理，测试向PM，BA等（软件研发过程中的法官）申诉，申诉成功即可强制开发（败诉当事人）执行判决结果。\n\n作者：Kiron\n链接：https://www.zhihu.com/question/53317525/answer/134449582\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 09:45:22","updateTime":"2021-05-14 09:45:22","isExist":null},{"id":2382,"question":"花呗逾期不还利息多高?","simplecontent":null,"content":"大概是0.05%每天","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-14 09:29:04","updateTime":"2021-05-14 09:29:04","isExist":null},{"id":2237,"question":"小马哥常说的话?","simplecontent":null,"content":"你是说……\n\n应该是……吧，不是……吧\n\n好，我知道了\n\n\n大家有什么不懂要提出来\n\n\n有点乱，我想一下\n\n我们统一一下吧\n\n所以说感觉……\n\n想想……\n\n华文在吗\n\n华为给些意见\n\n业务性能不达标\n\n我们不可以点击页面再加载吗\n\n大家还有什么疑问\n\n能不能交付看你们了，压力很大，这个基本都是前端的\n\n熊英还有没有问题，怎么会没有问题\n\n没有问题的话就后面要开发了\n\n表到改动那么大，下来我梳理下\n\n关键关系不用记，记那个流行了\n\n要记些东西，不然后面撤单恢复太麻烦了\n\n这个其实不做也行，原因……，但是要去查可能就找不到了\n\n那李萌再改一下洛\n\n东西很多，我担心大家不懂\n\n你现在在连接开始了，还是咩有\n\n希望你下周一就出来\n\n下周你要投入到……模块需求上去，好不好\n\n这块搞完后，这个东西搞完后，给他吧\n\n需要重新定义下这个vo，看下怎么比较方便\n\n让他投入到那一块，把对应的资料材料发一份\n\n这块很浪费时间，不建议他做了\n这个最晚也要6月底开发完\n\n\n其它测试不相关的先下吧，你拉青平确认下还有什么需要改的，还有什么遗留的问题\n\n青平你看下还有什么问题，用户会这样操作吗\n\n太忙了\n\n这个下来的在沟通下\n\n这个你拉下我讲下\n\n总体对完一遍，跳过一些坑","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-14 09:27:49","updateTime":"2021-05-14 09:27:49","isExist":null},{"id":2381,"question":"大神?","simplecontent":null,"content":"@路过的：一般成神成圣的都已经死了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-13 21:44:47","updateTime":"2021-05-13 21:44:47","isExist":null},{"id":2380,"question":"下棋?","simplecontent":null,"content":"@A羊子木，：高手下棋一般都能看到三四步，水平越高看的步数越多，想当年，我去路边找老大爷下棋，我只把兵前进了一格，老大爷思考了1个多小时，然后告诉我，他输了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-13 21:31:56","updateTime":"2021-05-13 21:31:56","isExist":null},{"id":2379,"question":"开会的总结?","simplecontent":null,"content":"上线事宜的确认\n流程的拆解\n方便整理\n需要青平的确认\n整机流程细节优化\n参加af需求评审会\n在ipd上编写文档，为dds评审会做准备","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-13 09:22:57","updateTime":"2021-05-13 09:22:57","isExist":null},{"id":2365,"question":"学生们上课回答问题不积极，注意力不集中，怎么办？","simplecontent":null,"content":"第一，找部分同学调查了解情况。\n第二，反思自身，是否存在教学方法不新颖、教学内容枯燥的问题。\n第三，向其他同事请教学习，整改提高。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 09:19:35","updateTime":"2021-05-13 09:19:35","isExist":null},{"id":2366,"question":"上课有个学生总是坐不住，严重影响了课堂秩序，你怎么办？","simplecontent":null,"content":"第一，先简单制止，正常完成课程。\n第二，课后询问，了解情况，进行思想教育。\n第三，注意观察后续表现。发现有小进步要及时表扬。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 09:19:29","updateTime":"2021-05-13 09:19:29","isExist":null},{"id":2378,"question":"对接突发情况如何说?","simplecontent":null,"content":"","filterContent":null,"type":"面试","status":0,"createTime":"2021-05-13 08:42:25","updateTime":"2021-05-13 08:42:25","isExist":null},{"id":2377,"question":"领导安排的任务，我去了解后和他说的不一致，如何说他?","simplecontent":null,"content":"","filterContent":null,"type":"面试","status":0,"createTime":"2021-05-13 08:40:38","updateTime":"2021-05-13 08:40:38","isExist":null},{"id":2376,"question":"领导说错了如何说他?","simplecontent":null,"content":"","filterContent":null,"type":"面试","status":0,"createTime":"2021-05-13 08:39:31","updateTime":"2021-05-13 08:39:31","isExist":null},{"id":2375,"question":"问的问题不会，如何让他换一个问题问?","simplecontent":null,"content":"","filterContent":null,"type":"面试","status":0,"createTime":"2021-05-13 08:39:04","updateTime":"2021-05-13 08:39:04","isExist":null},{"id":2374,"question":"你是值班老师，课间走廊拥堵，怎么办？","simplecontent":null,"content":"第一，安排其他值班老师和值日生维持秩序，避免造成事故。\n第二，告知各班班干部，传达楼道拥堵现状，让其他学生做到心中有数，减少外出。\n第三，事后报告领导，通过错峰下课、规定各班出行方向等方式维持好秩序。同时建议\n各班召开班会，强调安全纪律。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:47:41","updateTime":"2021-05-13 00:47:41","isExist":null},{"id":2373,"question":"课间操上下楼梯太乱，有学生受伤，怎么办？","simplecontent":null,"content":"第一，安排其他值班老师和值日生维持秩序，避免造成二次伤害。\n第二，把受伤学生送到医护室，通知校领导和家长。\n第三，调整上下课时间，错峰出行，设立安全员值班，保障学生人身安全。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:47:26","updateTime":"2021-05-13 00:47:26","isExist":null},{"id":2372,"question":"上课的时候，窗户的玻璃被石块给砸碎了，怎么办？","simplecontent":null,"content":"第一，先检查判断是否有学生受伤，让课代表把受伤的学生送到校医院救护。\n第二，简单处理，让值日生清扫现场，继续正常上课。\n第三，课下报告领导、通知家长、找学校后勤人员修补窗户。请学校保卫处根据监控录像查\n找肇事者。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:47:14","updateTime":"2021-05-13 00:47:14","isExist":null},{"id":2371,"question":"有学生很努力，但是成绩不理想，情绪很低落，老师怎么办？","simplecontent":null,"content":"第一，及时安慰学生，和他共同分析原因。同时进行思想动员，让学生明白求知的道路是曲\n折的，总会遇到各种困难，要有勇气面对。\n第二，帮助学生找到知识上的漏洞和思维上的短板，有针对性地查漏补缺。\n第三，协同各科老师和班干部，平时多帮助该学生。后续注意观察进步的情况，及时表扬。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:46:55","updateTime":"2021-05-13 00:46:55","isExist":null},{"id":2370,"question":"学生因为家里拆迁一夜暴富，不好好念书，你怎么办？","simplecontent":null,"content":"第一，我会找到这名学生，促膝长谈，了解他不好好念书的根源，并对他说明读书有用的事\n例。\n第二，我会与学生家长沟通，让家长在家多对孩子进行正面引导。\n第三，我会与各科老师沟通，课堂上，多关注该生，从他擅长的入手，长善救失，增强他学\n习乐趣。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:46:44","updateTime":"2021-05-13 00:46:44","isExist":null},{"id":2369,"question":"有一个知识点，你讲了很多遍，好生都听烦了，但是后进生还不\n理解，你怎么办？","simplecontent":null,"content":"第一，对少量不明白的学生，安排到课后单独辅导，不要占上课时间。\n第二，反思自身，要注意利用合适机会增进后进生知识量，要统筹全班，先进生、中等生、\n后进生都需要考虑他们的需求。要了解后进生，讲了很多遍还不懂的原因，提升教学技能。\n第三，利用好生，成立班级帮扶小组，让他们去给后进生讲这些知识点，一举两得。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:46:27","updateTime":"2021-05-13 00:46:27","isExist":null},{"id":2368,"question":"学生父母都外出打工，成绩也不好，作为班主任应该怎么办？","simplecontent":null,"content":"第一，找到该学生，了解并分析他成绩的现状。留守儿童爸妈在外打工，孩子跟着老人在家\n学习生活，这样的孩子往往渴望得到关爱和关注，内心缺乏安全感。多关爱该生，针对知识\n薄弱环节，开小灶，多给他补补课。\n第二，平时多设计一些精彩有趣温暖的集体活动，让这些孩子积极参与其中感知班集体的温\n暖。协同各科老师共同关注这些孩子的学习成绩，有知识漏洞及时补上。由成绩优秀的班干\n部和课代表组成帮扶小组，帮助他们改正学习上的坏习惯，陪同他们课后及时完成作业。\n第三，与这些孩子的家长沟通。告知家校共育的作用，尽量多回家陪陪孩子，尽最大努力让\n他们常回家看看孩子，毕竟父母的温暖才是孩子真正渴求的。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:46:10","updateTime":"2021-05-13 00:46:10","isExist":null},{"id":2367,"question":"小明是单亲家庭，经常说谎，你怎么办？","simplecontent":null,"content":"第一，找小明谈心，了解他的思想情况。\n第二，找小明家长，说明情况，家校共育找到说谎根源。\n第三，我平时多关心小明，安排班委多关注小明，让孩子融入班集体。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:45:58","updateTime":"2021-05-13 00:45:58","isExist":null},{"id":2364,"question":"打压下面的人?","simplecontent":null,"content":"是不是弄错了\n这个东西有点奇怪\n你的理解错了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-13 00:45:03","updateTime":"2021-05-13 00:45:03","isExist":null},{"id":2363,"question":"谈谈你对“四有”好老师的看法？","simplecontent":null,"content":"第一、四有好老师是指有理想信念、有道德情操、有扎实学识、有仁爱之心。\n第二，有理想信念，自觉做中国特色社会主义的坚定信仰者和忠实实践者，忠诚于党和人民的\n教育事业。有道德情操，好教师要不断提高道德修养，提升人格品质，把正确道德观传授给学\n生。要有扎实学识，扎实知识功底，过硬的教学能力，科学的教学方法是老师基本素质。知识\n是根本，好老师应该是智慧的好老师。要有仁爱之心，爱是教育的灵魂，没有爱就没有教育，\n教师要把温暖和情感倾注到每个学生，让每位学生健康成长享受成功的喜悦。\n第三，作为未来的幼儿教师，我还在不断的努力学习。我认为每一位教师都应该从这几个方面\n要求自己，争取成为一名“四有”好老师。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:44:25","updateTime":"2021-05-13 00:44:25","isExist":null},{"id":2362,"question":"你们班上有个小朋友跟其他小朋友玩不到一块，你\n怎么办？","simplecontent":null,"content":"第一，找幼儿主动沟通分析具体原因。向其他幼儿及询问当事幼儿的情况，\n做出具体分析及解决方案。\n第二, 班级中倡导幼儿团结互助，共同游戏。组织该幼儿感兴趣的活动让幼\n儿积极参与其中。\n第三, 与家长沟通幼儿在园表现，和家长共同制定解决方案实现家园共育。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:44:16","updateTime":"2021-05-13 00:44:16","isExist":null},{"id":2361,"question":"幼儿家长在朋友圈说幼儿园的事真多，怎么办？","simplecontent":null,"content":"第一、我会及时的和家长进行沟通，询问家长原因。如果沟通顺畅可以建议\n家长将朋友圈删除。\n第二、将家长的行为及时反馈给园长，及时妥善处理此事。\n第三、作为未来的幼儿教师，我会做好家长与幼儿园的沟通工作。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:44:04","updateTime":"2021-05-13 00:44:04","isExist":null},{"id":2360,"question":"如果小明犯错了，你作为班主任打电话告诉他的家\n长，他的家长说这是小事，你该怎么办？","simplecontent":null,"content":"第一，耐心与家长沟通，让家长意识到犯错误对幼儿的影响是及其重要的。让\n家长积极配合教师的工作，帮助幼儿更好的发展。\n第二，如果家长很忙，及时通过电话等方式和家长沟通，让家长了解学生的整\n体发展情况。在放学接孩子的过程中再次和家长沟通，让其了解事情的重要性。\n第三，通过开家长会等方式，提升家长的教育观念，家园共育，促进幼儿全面\n发展。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:43:49","updateTime":"2021-05-13 00:43:49","isExist":null},{"id":2359,"question":"发现磊磊自己一个人坐在位置上碎碎念老师坏，你怎\n么办？","simplecontent":null,"content":"第一、我会与幼儿进行沟通，询问幼儿原因，并进行积极的引导。\n第二、在今后活动中多关注磊磊，让磊磊融入到集体活动中让他逐渐信任我。\n第三、与家长沟通，同时关注到幼儿的情绪，有问题及时的解决。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:43:41","updateTime":"2021-05-13 00:43:41","isExist":null},{"id":2358,"question":"王老师认为幼儿活动就是游戏，你怎么看？","simplecontent":null,"content":"第一，游戏的过程即孩子自我发展的过程，其中隐藏着重要的教育动因，内含着教育方法的契机，\n因而有着不可忽视的教育价值。要鼓励幼儿游戏、提倡教师在教学中运用游戏。\n第二，游戏和教育有着内在的联系。教育的目的就是将儿童身心发展的各个方面纳入一个有计划\n的影响过程，通过体、智、德、美各育促进儿童身心全面发展。只不过游戏是一个自然发展的过\n程，教育是一个有目的、有意识的培养过程，两者在终点上达到一致，即游戏和教育的结果都是\n儿童的发展。\n第三，游戏内容与教育内容具有一致性，游戏服务于教育。教育领域的游戏形式更多体现造型想\n象的结构游戏（与美育有关），更多体现大肌肉动作技能的运动性游戏（与体育有关），更多体\n现人际交往能力的社会性装扮游戏（与德育有关），更多体现手脑并用和解题能力的智力游戏\n（与智育有关）。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:43:31","updateTime":"2021-05-13 00:43:31","isExist":null},{"id":2357,"question":"幼儿玩搭建游戏失败玩具都扔了，你怎么办？","simplecontent":null,"content":"第一，安抚小朋友的情绪，告诉他要耐心。\n第二，积极的引导，可以与他一同搭积木。\n第三，我会在后续持续关注该幼儿，有进步及时的表扬。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:42:55","updateTime":"2021-05-13 00:42:55","isExist":null},{"id":2356,"question":"小明在课间游戏时被其他小朋友抓伤了，家长很\n生气，直接到幼儿园投诉你，说你没尽好责任。假如\n你是这位老师，你会怎么办?","simplecontent":null,"content":"第一，与家长真诚地沟通。家长的这种行为是爱子心切的表现，是正常的。我会向家长说明\n小明的受伤经过及处理方案，再向家长当面真诚的道歉承认自己的不足之处。并保证在以后\n的工作中，我一定会尽力保障孩子的安全，也希望家长予以监督。\n第二，解决小明和其他小朋友之间的问题。我会询问原因并让抓伤小明的幼儿道歉。让他知\n道自己的行为是错误的。希望他以后能够控制自己的情绪有事情找老师，不伤害其他的小朋\n友。\n第三，自我反思。意识到此次问题的严重性。对幼儿之间的冲突行为要加强教育引导。在今\n后的教学活动逐渐加入礼貌待人接物的态度和方法，引导幼儿互助互爱，不以自我为中心。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:42:45","updateTime":"2021-05-13 00:42:45","isExist":null},{"id":2355,"question":"如果你班学生把衣服扔地上你怎么办？","simplecontent":null,"content":"第一、先让学生把衣服捡起来，放到平时放置幼儿衣服的地方。\n第二、与学生进行沟通，告诉他这样的行为是错误的。\n第三、我会在日后持续关注这名学生的表现，有进步及时的表扬。同家长沟\n通此事，共同关注学生的行为，帮助他养成良好的行为习惯。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:42:20","updateTime":"2021-05-13 00:42:20","isExist":null},{"id":2354,"question":"明明不小心推到了东东，东东很生气，使劲把明明推翻\n在地，你怎么处理这个事？","simplecontent":null,"content":"第一、将发生矛盾的两人及时分开，避免小朋友之间因冲突而产生的伤害。\n第二、分别询问事情发生的原因调查事情经过，如果有目击此事的幼儿可以沟\n通取证。清楚事情原因后向两名幼儿讲道理，让他们懂得礼貌的重要性，相互\n道歉。\n第三，组织班级活动，情景表演的形式让幼儿明白讲文明懂礼貌的重要性。\n第四、放学后分别与两位家长沟通幼儿行为，家园共育培养孩子良好行为品质。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:42:05","updateTime":"2021-05-13 00:42:05","isExist":null},{"id":2353,"question":"某某小朋友在盥洗室往镜子上吐口水，作为老师你\n怎么办？","simplecontent":null,"content":"第一，我会先制止小朋友的行为，告诉他这样做是错误的。\n第二，我会开展活动，规范小朋友的日常行为。\n第三，我会在日后持续关注这位小朋友，有进步及时的表扬。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:41:45","updateTime":"2021-05-13 00:41:45","isExist":null},{"id":2352,"question":"主班带一部分幼儿排舞蹈,让配班的你带另一部分幼儿\n在教室看动画片,你怎么办?","simplecontent":null,"content":"第一,同事之间要相互协作。当主班提出需求时会积极配合。如果我会排舞蹈会\n带领另一部分幼儿练习，避免幼儿交流时，心理产生落差感。\n第二,如果我不会排舞蹈，我会和主班商量带这些幼儿进行教学活动或户外活动\n等更有意义的活动。\n第三,后期我会努力学习这个舞蹈,帮助主班共同带幼儿练习。教师就是要一直\n不断的学习，永远在学习的路上才会让自己更优秀。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:41:36","updateTime":"2021-05-13 00:41:36","isExist":null},{"id":2351,"question":"一个小朋友搭积木搭了好几次一直都搭不好，然后就\n发脾气全推倒了，你怎么办？","simplecontent":null,"content":"第一，安抚推翻积木的小朋友的情绪，告诉他要耐心。\n第二，积极的引导，可以与他一同搭积木。\n第三，我会在后续持续关注该幼儿，有进步及时的表扬。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:40:55","updateTime":"2021-05-13 00:40:55","isExist":null},{"id":2350,"question":"都说幼教辛苦，工资低，你怎么看？","simplecontent":null,"content":"第一、在我眼里，我觉得幼教工作是一份甜蜜的“苦差事”，作为我个人来说\n很喜欢孩子热爱一份工作就不会觉得辛苦。幼儿园是充满欢乐和神奇的地方，\n我想通过自己的努力让每一个孩子都拥有美好的记忆。\n第二、幼教工资确实低，但我不追求物质享受。现阶段是我学习和积累经验的\n过程，几年后经过个人的努力，相信会有更好的职业发展和收入的。\n第三、我的家人特别支持我成为幼儿园老师。我也相信自己能成为一名优秀的\n幼儿教师并为之而努力。教师是太阳底下最光辉的职业，人类灵魂的工程师。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:40:41","updateTime":"2021-05-13 00:40:41","isExist":null},{"id":2349,"question":"午睡时间两个小朋友说话，你应该怎么办？","simplecontent":null,"content":"第一、我会小声的制止两个小朋友，与幼儿进行沟通。\n第二、协调助教安抚小朋友，让他们尽快的入睡。\n第三、后续时刻关注两位小朋友的行为。与家长及时沟通实现家园合作共同\n培养幼儿午睡习惯。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:40:20","updateTime":"2021-05-13 00:40:20","isExist":null},{"id":2348,"question":"老师冤枉了一个平时捣蛋调皮的学生打破玻璃，后面发现自己错\n了但是觉得反正学生就那样，觉得没有必要道歉，这个问题怎么看。?","simplecontent":null,"content":"【参考答案】做法错误，应该立刻向学生道歉。\n第一，作为老师，要就事论事，针对误解学生的事情应立刻道歉。避免造成学生\n的心理创伤。引导学生树立正确的人生观。\n第二，开班会，树立学生集体意识。当同学犯错误时及时指正。老师出现错误时\n也鼓励学生及时提出疑问。\n第三，自我反思，在今后的工作中处理问题时，会事先调查清楚原因再处理问题。\n避免因自己的行为过错，对学生造成终生的影响违背自己的教育初衷。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:40:06","updateTime":"2021-05-13 00:40:06","isExist":null},{"id":2347,"question":"小班幼儿午睡起来老是穿错鞋子，你怎么办？","simplecontent":null,"content":"第一，及时和幼儿沟通了解幼儿的想法，分析幼儿穿错鞋子的原因，指导幼儿\n正确穿好鞋子。\n第二，组织班级活动幼儿正确穿鞋子的方法。（先将左右脚鞋靠拢摆好，接着\n单手同时握住两鞋的内侧，提起翻过来看看鞋底，如果鞋底的形成“()”状，\n是正确的）。\n第三，与家长沟通，同家长一起引导幼儿。家长在家可通过游戏的形式指导幼\n儿练习正确穿鞋子的方法，实现家园合作。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:39:37","updateTime":"2021-05-13 00:39:37","isExist":null},{"id":2346,"question":"种豌豆，小朋友想要种兔子，那你怎么办？","simplecontent":null,"content":"第一，告诉幼儿我们完成种豌豆的任务后，我们一起讨论种兔子的问题。\n完成现阶段任务又不打击幼儿的积极性。\n第二，通过讲故事（看视频）的方式让幼儿明白动物的繁殖方式和植物是\n不同的。幼儿还不能很好的区分动物和植物的区别，在之后的教学过程中\n引导学习，让幼儿了解知识解除疑惑。\n第三，设计游戏活动让幼儿初步区别植物和动物，引导幼儿正确的认知。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:39:23","updateTime":"2021-05-13 00:39:23","isExist":null},{"id":2345,"question":"凯凯小朋友暴力，老是欺负其他小朋友。你怎\n么办？","simplecontent":null,"content":"【参考答案】我会及时处理，积极引导。\n第一、和凯凯进行谈话，询问他欺负小朋友的原因。告诉他这样的行为是\n错误的，并及时向小朋友道歉。\n第二、培养小朋友移情的能力，教会小朋友恰当的宣泄不良的情绪的方式。\n及时和家长沟通，共同帮助小朋友消除暴力行为。\n第三、组织集体活动时，教师示范正确的行为让凯凯学习，并安排凯凯做\n组长监督其他小朋友，培养他团队意识和责任心，从而减少暴力行为。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:38:39","updateTime":"2021-05-13 00:38:39","isExist":null},{"id":2344,"question":"有个名字叫小天的小朋友，他只要一发脾气就喜欢在\n地上不停地打滚。你越去劝他，就越厉害。你怎么办？","simplecontent":null,"content":"【参考答案】保持耐心，积极引导。\n第一，我不会阻止他的行为，孩子在情绪不好的时候需要有个发泄的出口。我\n此时会把旁边危险物品移开避免孩子发生危险，让他自由翻滚宣泄情绪。\n第二，等到他累了停下的时候，耐心的和他沟通询问原因，安抚孩子的情绪将\n他的注意力转移到他感兴趣的活动或游戏中。\n第三，观察孩子在园表现，放学后和家长沟通情况，时刻关注孩子的身心发展。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:38:07","updateTime":"2021-05-13 00:38:07","isExist":null},{"id":2343,"question":"有人说，现在的孩子越来越难管，作为教师你对此怎么看？","simplecontent":null,"content":"【答】我认为题中所述的这种观点，有一定的客观现实性。而之所以产生这种说法，也是有着一定的客观\n原因。\n一方面，现在家庭中的独生子女越来越多，很多孩子在家有求必应，家长对其溺爱有加。长此以往，\n造成孩子固执己见、任性的性格。不听从公正、正确的意见和建议，在幼儿园也不听从老师的教育指导。\n另一方面，部分家长对子女的教育常常偏向于过分溺爱，生怕孩子受一点委屈、吃一点苦，对孩子的需求\n有求必应，甚至容忍、迁就孩子的错误。这就很容易造成学生与老师的矛盾，从而引起幼儿园教育与家庭\n教育的矛盾。\n因此，针对这样的情况，需要教师和父母共同做出努力，更好地教育和引导孩子健康的成长。\n第一，家庭教育是基础，家长要做好榜样，对于孩子的长处要多加奖励和表扬，而对一些错误要及时指出\n其危害，并帮助引导孩子及时改正，为幼儿园教育打下基础。\n第二，幼儿园教育在于教书育人，应该尽可能地为学生营造良好的教学氛围和学习氛围， 教师应该与\n孩子进行心与心的沟通，切勿用极端的做法，而应该通过科学的方式引导孩子正确地认识自己、不断改正\n自己的错误、完善自己。\n第三，教师还需要将幼儿园教育与家庭教育结合起来。这就需要教师在平时加强与学生父母之间的沟\n通，引导家长采取正确的教育方法，促进孩子健康成长和健康发展；而作为家长，也应该多和幼儿园老师\n沟通，了解孩子在幼儿园的状态，和老师一起引导孩子健康成长。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:37:37","updateTime":"2021-05-13 00:37:37","isExist":null},{"id":2342,"question":"近年来，在各地由于幼儿教师的疏忽，导致幼儿安全事故时有发生。对于这种现象， 你怎么看?","simplecontent":null,"content":"第一，《幼儿园教育纲要(试行)》中明确提出幼儿园必须把保护幼儿的生命和促进幼儿的健康放在工作的\n首位。保障幼儿的安全是非常重要的。\n第二，幼儿丿园应当严格执行国家和地方幼儿园安全管理的相关规定，建立健全安全防护和检查制度，\n建立安全责任制和应急预案。\n第三，幼儿教师应随时具备安全意识，将安全融入一日生活，并加强幼儿的安全意识。总之，幼儿的安全\n是重中之重，一定要得到相关人员的重视。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:37:16","updateTime":"2021-05-13 00:37:16","isExist":null},{"id":2341,"question":"幼儿进去幼儿园以后，大部分时间都和老师在一起，所以老师的作用比家长的作用重要，你怎么看？","simplecontent":null,"content":"在生活中， 教师和家长都承担着保证幼儿健康， 照顾幼儿生活的责任， 只是场所不同罢了， 都要耐\n心并细心。在教育上， 教师和家长负有同样重要的责任， 促进幼儿德智体美全面发展， 做好幼儿成长\n的引导者、支持者和陪伴者。家长和教师要相互配合形成教育合力而不是相互推脱责任。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:37:08","updateTime":"2021-05-13 00:37:08","isExist":null},{"id":2340,"question":"爱的教育，对漂亮孩子要爱，对不漂亮孩子更要爱，谈谈看法？","simplecontent":null,"content":"第一，教师应该一视同仁。作为教师，一般容易喜欢学习好的、聪明伶俐的学生，对差生易产生厌烦、歧\n视等情绪，这是一种非常有害的做法。教师应一视同仁，公平对待每个学生。第二，一视同仁的对策。多\n给学生创造机会，尽量使他们多动口、多动手、多动脑，以培养他们的参与意识，巧妙地激发他们的学习\n兴趣，训练他们的思维。捕捉学差生的闪光点，培养他们的学习兴趣。对待差生要有耐心和爱心。教师一\n个宽容的微笑、一句体贴的话语、一个会意的眼神、一个轻微的触摸都会使学生产生巨大的学习动力。因\n此教师在任何时候都要注意控制自己的情绪，不迁怒、不急躁，切忌训斥，不要使用侮辱人格和伤害自\n尊心的语言。\n第二，如果教师能以一视同仁、平等相待的态度对待所有学生的话，班级的气氛也会更加融洽，更有利于\n学生之间的团结。也能更有效地提高教师的工作效率，增添教师从事教育教学工作的信心，更有热情地投\n入教学工作中，更好地建立和培养师生的感情。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:36:59","updateTime":"2021-05-13 00:36:59","isExist":null},{"id":2339,"question":"有人说，幼儿教师的工作没有技术含量，谁都能干。你认同这一说法吗?","simplecontent":null,"content":"第一，我不认同这一说法，这种认识是对幼儿教师职业的一种片面理解。要想成为一名合格的幼儿教\n师，需要具备专业的知识和技能。所以，我认为幼儿教师这份职业是有技术含量，\n是集多种技能于一身的。\n第二，幼儿教师并不是简单地扮演哄孩子吃饭睡觉的角色，而是需要在照顾幼儿生活的同时， 发掘幼\n儿的兴趣和开发幼儿的潜能，那么这就需要教师具备琴、画、唱、跳和手工等技能。\n同时，幼儿时期是孩子形成规则意识、纪律意识以及培养阅读习惯、学习能力的关键时期， 幼儿教师\n只有在这个过程中做好科学合理的教育和引导工作，才能帮助幼儿健康地成长。\n第三，作幼儿教师应摆正心态，正确认识这一职业。一方面，不断提升个人的职业素养。教师对待幼儿要\n用心、耐心和关心，真诚地对待每一个幼儿，不因工作的琐碎而烦躁，以积极的态度面对工作。另一方面，不断提升个人的专业能力。教师需要积极利用研讨会、培训会等途径来提高\n自己解决幼儿问题的能力，使每个幼儿都能茁壮成长。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:36:48","updateTime":"2021-05-13 00:36:48","isExist":null},{"id":2338,"question":"对于幼儿保教并重，你是怎么理解的？","simplecontent":null,"content":"第一，教师应从幼儿身心发展特点出发，在全面、有效地对幼儿进行教育的同时，重视对幼儿生活的照顾\n和保护，保教合一，确保幼儿真正能健康、全面地发展。\n第二，把握保教并重原则应明确：保育和教育是幼儿园两大方面的工作，保育和教育工作互相联系，互相\n渗透，保育和教育是在同一过程中实现的。\n第三，作为幼儿教师，我要充分认识和利用一日生活中各种活动的教育价值，通过合理组织、科学安\n排，让一日活动发挥一致的、连贯的、整体的教育功能，寓教育于一日活动之中。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:36:32","updateTime":"2021-05-13 00:36:32","isExist":null},{"id":2337,"question":"怎样理解以幼儿为主？","simplecontent":null,"content":"第一，目前，我国幼儿主体性缺失的现象仍较为严重。他们在思考或解决问题时，都是按父母或教师教过\n的一般性、常态性的思路展开，难以跳出思维的框框，刻板而且缺乏创造性； 在游戏活动中，常常只会等\n待教师给予角色分配，而不会主动地融入到游戏中去；在生活活动中，表现出消极被动状态，连饮水、小\n便等活动都要成人允许或提醒，交往能力和适应环境能力较差， 缺乏独立性等等。《幼儿园活动新课程》明确指出“以幼儿为主体，教师为主导，促进幼儿学习的主动性”，新教育主张以个人为本位，使每位幼\n儿成为一个独立的个体， 从而发挥主体性，使他们全面、和谐发展。\n第二，作为引导者要明白主导的作用，体现主导的价值，充分调动幼儿自觉的能动性。引导幼儿自己动脑，\n学会独立思考。给予幼儿正确的价值观理念，使他们明白广义上的对与错。现实生活中要真正做到以幼儿为主体，必须明确幼儿教育的目的，不能对孩子抓得太紧，一味用成人的眼光去要求孩子，更不能用自己的判断标准检验孩子的做法，评价孩子做法的对与错。这样会给孩子造成无形的压力，压迫孩子提前成人化，违背幼儿的成长规律。\n第三，要懂得适度放手，相信孩子、摒弃包办代劳，让他们在一定空间内自由发展。但对幼儿一切事物的放手都是在掌握好“度”的前提下，并不是百分百放手。因为他们毕竟是孩子，\n没有成熟的大脑去思考问题，判断对与错，他们的成长和发展在自主的情况下需要成人的适当引导。\n作为幼儿的引导者，我们可以给他们创造良好的成长环境，提供发挥潜在本能的舞台，让他们大胆表现、充分展示人之初的本性，以他们的童真童趣展现幼儿的本质，真正体现幼儿的主体性。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:36:17","updateTime":"2021-05-13 00:36:17","isExist":null},{"id":2336,"question":"爱是教育的奠基，你怎么认为？和关爱学生有关的题。","simplecontent":null,"content":"第一， 用真诚、善良的心去关爱孩子，在教育中投入感情、投入爱心。最好的教育，是爱的教育。能否在\n教育的过程中投入爱，是教育成功的关键。而教育的目的，也是要培养出积极、阳光、心中有爱的学\n生。\n第二，只要教育工作者有园丁般的精心和爱心，有雕塑家般的耐心和细心，用高尚的情怀去影响学生，\n用渊博的知识和严谨治学的精神去引导学生，用优秀的传统文化和主流价值观去教育学生， 就会培养\n出有品位的现代公民。\n第三，我要热爱幼儿，成为优秀教师。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:35:42","updateTime":"2021-05-13 00:35:42","isExist":null},{"id":2335,"question":"结合19 大的核心，谈谈为什么选择当老师？初心和使命是什么？","simplecontent":null,"content":"第一，共产党人的初心和使命——“为中国人民谋幸福，为中华民族谋复兴”。高举中国特色社会主义伟大\n旗帜， 决胜全面建成小康社会， 夺取新时代中国特色社会主义伟大胜利， 为实现中华民族伟大复兴的中\n国梦不懈奋斗。我认为无论是小康社会还是社会主义现代化国家，教育必然是其中重要的一环，而教育的\n重任主要集中在老师肩上，我想为国家做贡献，这是我选择当幼师的第一条原因。\n第二，教师这一职业符合我的人生规划。而且我的知识储备符合做一名老师的要求。在四年的大学生\n涯中我积累了很多教育理论知识和学科专业知识，这些都为我成为一名教师打下了坚实的理论基础。\n第三，我的性格也很适合做老师。我很喜欢和孩子们相处，做事有耐心、有毅力，这些也都符合教师\n的职业特点。通过对自我的深度剖析，我认为我是适合做幼师的，所以我来参加此次考试，希望能够\n有幸走上讲台。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:35:34","updateTime":"2021-05-13 00:35:34","isExist":null},{"id":2334,"question":"如果幼儿园领导安排给你负责幼儿安全的职务。对此，你会怎么办?","simplecontent":null,"content":"【答】《幼儿园教育指导纲要》指出，幼儿园必须把保护幼儿的生命和促进幼儿的健康放在工作首位。\n所以，当幼儿园将这么重要的工作安排给我时，我一定会认真负责，保护好每\n一个幼儿。\n第一，在每天上学、放学、吃饭等时间段，做好对幼儿的基本保障工作。例如，我会定期检查幼儿的\n体温，认真查看幼儿午睡是否安全等。同时，在每次的区域活动时，提前检查好活动区的设施是否安全。\n\n第二，提高幼儿的安全意识。我会通过做游戏这种寓教于乐的方式，将安全教育内容融入到游戏中，使幼儿在轻松、愉快的氛围中树立安全意识，增强幼儿处理紧急情况的能力，提高其自我保护意识和能力。比如通过角色扮演，让幼儿知道家长不在身边时，不能要陌生人的食物等。同时，将这些知识编成儿歌，便于幼儿记忆。\n\n第三，与家长形成家园合力，共同教育。我会通过家长会、家园开放日等活动，向家长们讲述一些生活中保护孩子的安全知识，希望家长将这些安全知识讲给孩子，以培养幼儿的安全意识，避免安全事故的发生。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:35:20","updateTime":"2021-05-13 00:35:20","isExist":null},{"id":2333,"question":"教师如何处理与同事之间的关系？","simplecontent":null,"content":"】第一，要互相尊重、互相信任。既要对自己有正确的评价，也要对他人有全面、客观的评价。\n要注意克服自傲、嫉妒的心态。当发生冲突时，要宽容大度，虚怀若谷。\n第二，相互合作与交流。幼儿园工作是一个整体，必须靠全体教职工同心协力，互相配合和支持。每个\n教师都有其自身的优势，教师之间的交往应充分挖掘互补功能，在互相交往中实现思想上的互助、信\n息的互换、情感上的融洽和知识上的整合，以提高整个队伍的专业化水平。\n第三，情感互动。通过互动，促进交往的动态平衡发展，达到每个人价值的最大实现，从而在群体中，\n形成互相欣赏、互相促进、互相竞争的交往机制。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:34:37","updateTime":"2021-05-13 00:34:37","isExist":null},{"id":2332,"question":"中班小朋友家长质问你，为什么中班了，十以内加减法还不会？","simplecontent":null,"content":"【答】我会耐心和家长沟通。\n第一，反对学前教育“小学化”。其主要表现是不注重幼儿综合素质的培养，不是组织幼儿在游戏中学习，\n不顾幼儿的年龄特点，教育活动过于强调向幼儿“灌输”知识，缺少教具演示，缺少图案色彩，缺少生动\n的教具演示，有的甚至从小班就要求孩子会写字，学习拼音， 做算术，给孩子留作业，幼儿园做不完，\n回家还要做，这种“小学化”的教育方式，偏离了正确的办园方向，对幼儿健康成长带来了很大危害。\n第二，家长被误导，需要认真沟通，让大家认识到小学化的危害。第三，相信通过耐心细致的沟通，家长\n会支持幼儿园的工作。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:34:24","updateTime":"2021-05-13 00:34:24","isExist":null},{"id":2331,"question":"小明的妈妈找到你说：“我们家的孩子太调皮了，请老师好好的管教管教他，我们就把他托付给老师您了”,\n你应该怎么做?","simplecontent":null,"content":"第一，与家长沟通了解孩子的具体情况及家长的教育方式。让家长举例说明当孩子调皮时家长的处理方式\n和结果。帮助家长分析利弊，给予更好的解决方案。与家长沟通告知其家庭教育的重要性，家园合作的重\n要性。教师和家长需共同努力才能让孩子不断进步。作为家庭的教育顾问我们要帮助家长树立家园共建的\n教育理念。\n第二，与孩子沟通了解情况。不论孩子是因为家庭内部原因而引|起的问题还是其他原因，\n我都会给予孩子更多的关爱和正确的引导。\n第三，作为一名未来的幼儿教师，我会时刻关注孩子的日常表现，发现问题及时与家长沟通， 家园合作，\n共同促进孩子的身心健康发展。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:33:42","updateTime":"2021-05-13 00:33:42","isExist":null},{"id":2330,"question":"小明在课间游戏时被其他小朋友抓伤了，家长很生气，直接到幼儿园投诉你，说你没尽好责任。假\n如你是这位老师，你会怎么办?","simplecontent":null,"content":"【答】幼儿在园期间出现问题，作为幼儿老师，确实有着不可推卸的责任。因此，我不会对家长的投\n诉行为有抵触情绪， 而是会妥善处理此事。\n第一，与家长真诚沟通。我会先关心小明的受伤情况，并向家长当面道歉，承认自己的不足之处，保\n证在以后的工作中会尽力保障孩子的安全，也希望家长予以监督。\n第二，解决小明和其他小朋友之间的问题。我会了解情况，对抓伤小明的幼儿进行引导教育， 告诉他不\n可以伤害其他小朋友，使其认识到问题的严重性。\n第三，对幼儿之间的冲突行为加强教育引导。比如，通过游戏的方式告诉幼儿如何和\n睦相处，让幼儿扮演“串串门”活动，使他们在串门的过程中逐渐学会待人接物的态度和方法，引导\n他们互助互爱，不以自我为中心。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:33:21","updateTime":"2021-05-13 00:33:21","isExist":null},{"id":2329,"question":"在教师节时，东东的妈妈送礼物给你。对此，你怎么办?","simplecontent":null,"content":"【答】家长借送礼物向老师表达感谢之意是对老师的付出和能力的一种认可。如果有家长借节日之机送礼\n物给我，我会感到开心，但我不会接受。\n第一，我会与东东的妈妈进行沟通，感谢东东妈妈的认可，同时向其表达不能收礼是幼儿园的要求，是\n做老师的原则，希望她可以理解。\n第二，我会请东东的妈妈放心，我会继续关心东东，并认真照顾好每个幼儿。\n第三，向其他家长明确表达自己的意思，希望其他家长不要再有送礼的行为。将班级的工作做好总结，让\n每位家长都能对自己孩子在园的表现有所掌握，使家长们看到我对每个幼儿的关注。\n第四，定期和每一位幼儿家长保持联系，及时反馈孩子的表现， 使家长放心。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:32:44","updateTime":"2021-05-13 00:32:44","isExist":null},{"id":2328,"question":"很多家长为了不让幼儿输在起跑线上，给孩子报了大量的兴趣班。对此，请谈谈你的看法。?","simplecontent":null,"content":"【答】很多家长都有望子成龙、望女成凤的心态，给孩子报了大量的兴趣班。这虽然可以理解，但我\n并不支持。\n第一，有很多弊端。（分析这种行为的不当之处）在幼儿阶段，家长和教师都应尊重幼儿身心发展的规\n律，以游戏为基本活动，促进每个幼儿的个性发展。家长的这种行为这不符合幼儿的身心发展规律，\n是一种“急功近利”的做法，容易使幼儿产生厌学、畏惧等不良情绪， 不利于幼儿的长久发展。\n第二， 要帮助家长提高认识。（ 提出建议） 幼儿教师应该帮助家长改变传统的教育观念， 帮助家长树立\n新的教育观， 使家长意识到培养幼儿良好的习惯和各项精神品质更加重要， 引导他们尊重幼儿的发展\n规律。\n第三，作为未来的幼儿园教师，我要坚持原则，正确教育幼儿。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:32:17","updateTime":"2021-05-13 00:32:17","isExist":null},{"id":2327,"question":"如果领导让你组织一次幼儿郊游，你会怎么组织？","simplecontent":null,"content":"【答】组织幼儿郊游有利于丰富幼儿的生活，有助于幼儿的人际沟通与交流，有利于促进幼儿的身心健康\n发展。\n活动前，我会充分和相关人员进行沟通，向家长说明情况，跟其他老师和相关人员进行充分交流，汇\n总各种情况，并向幼儿说明规则和注意事项。确定郊游时间、地点、参与人员，准备好必须物品，并\n预测可能发生的事情，提前做好准备和安全防护工作。在活动过程中，我会协调各方主体，将责任落实到\n人。组织司机准时接送，组织带队老师带领幼儿参加活动， 组织后勤人员等做好保障工作，并组织专\n门人员拍照、摄影等。\n活动结束后，我会分享郊游体验，并做好反思工作，吸取经验教训，注意下次组织扬长避短。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:31:39","updateTime":"2021-05-13 00:31:39","isExist":null},{"id":2326,"question":"家长会前需要做的准备有哪些?","simplecontent":null,"content":"【答】成功的家长会有助于在家庭和幼儿园之间建立一种“理解、信任、目标一致”的合作关系。应\n该借家长会激起儿童今后学习新事物的动力，让家长今后协助自己的工作。开家长会前做好充分的准备工\n作，才能在家长会上游刃有余。准备家长会是一件十分细致的工作，我会做以下的准备工作：\n第一，要做好欢迎家长的准备工作，通知家长开会时间。我可以在学年初就与学生家长建立联系，比如\n可以先送一份备忘录或计划书，让家长大致了解学生将要学习的内容，让他们感受到我很高兴能在该\n学期中见到他们，并留下自己具体的联系方法。\n第二，布置好教室，营造一个宽松友好的环境。要保证黑板报或公告栏的内容是最新的， 展示孩子的\n作品或作业；在黑板上写上欢迎的话语；还可以让孩子在课桌上留下图片给自己的家长，请家长坐在他们\n孩子的课桌旁；为每位家长准备一个胸片并让他们戴上，自己也要戴上。\n第三，我要充分做好发言准备。开篇要先致欢迎辞，然后介绍幼儿园日常生活的概貌， 包括管理方案、课\n外作业、一年的学习计划等。感谢家长的参与，并让他们知道，他们可以就任何一个与孩子教育有关\n的问题与我取得联系，提醒他们一有问题就及早联系，避免它发展成大问题；最后以积极、关切的语气强调家园是一个“团队”，双方的合作是非常重要的。还要征询家长的意见，并乐于回答他们的问题，充\n分激发家长在家园合作中的主动性。\n第四，我要注意体态仪表与谈话技巧，语言要亲切、幽默、有趣、有活力且富于变化。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:31:19","updateTime":"2021-05-13 00:31:19","isExist":null},{"id":2325,"question":"在班级活动中，小朋友都没有兴趣，你会怎么办?","simplecontent":null,"content":"【答】激发小朋友的兴趣，使教育活动收到良好的效果。\n第一，在活动中，当发现小朋友没有兴趣时，我会倾听幼儿的感受，并据此改变活动的形式来满足他\n们的心理需要。\n第二，我会设计一些有悬念的问题来激发幼儿的好奇心。比如，在给小朋友讲教育类的故事\n《聪明的乌龟》时，我会拿出乌龟的玩具，并设计“这是谁呀?故事中的狐狸吃了青蛙吗? 等问题，以此来\n吸引他们的注意力。\n第三，我会注重将趣味性、真实性与挑战性相结合，使幼儿“身临其境”，在活动气氛中产生兴趣。比\n如，在以“勇敢”为主题的教育活动中，我会让他们开展“寻宝”探险活动，让幼儿像一位探险家那样，\n爬过“山地”，越过“小河”，克服重重困难，一步一步解开图中之迷，最后寻得“宝物”。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:30:55","updateTime":"2021-05-13 00:30:55","isExist":null},{"id":2324,"question":"玩具买的好，还是用废旧物品自制的好？","simplecontent":null,"content":"第一，分析不同情况，如果是日常玩耍的，可以使用废旧物品自制。如果是电子设备，买正规厂家生\n产的。\n第二，幼儿教师要时刻把孩子的健康放在首位。\n第三，我未来作为幼儿园教师，要想方设法充分利用资金，也锻炼孩子动手能力。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:30:28","updateTime":"2021-05-13 00:30:28","isExist":null},{"id":2323,"question":"如何做好幼儿园的班级管理工作?","simplecontent":null,"content":"【答】班级管理工作，首先是“以人为本”的情感管理，这是管理工作的基石和成功的法宝。“管理\n人者先自管”，作为班级工作的领头羊，班主任还要起到一个良好的榜样作用，以工作赢得老师们的尊重。\n每个班级都是由责任教师和保育员组成的群体。班主任的工作态度， 很大程度上决定着其他教师的工\n作态度。\n第一，班主任要以身作则、身先士卒，要求班上老师做到的，自己首先要做到；\n第二，肯定班级工作的任何成绩是全体老师的功劳而不是班主任个人的能力，发现老师的闪光点， 大\n力扶持，不隐藏、不雪藏；\n第三，坦诚相待，有问题互相交流，当面指出，不在背后说老师是非。让老师放心，尽情施展自己的才华，\n使班级工作更出色；也给老师们监督班主任工作的机会，并由此而做到上行下效。\n教育是一种服务，更是为学生和家长服务。良好的班级氛围为我们营造了一个愉快轻松的工作环境，督促\n我们要认真负责、脚踏实地地做好班级各项工作，使班级工作有成效。我们要为幼儿提供全方位的服务。\n从生活到学习，从身体到心灵，从保育到教育，都要我们细致入微的照顾和关怀。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:30:10","updateTime":"2021-05-13 00:30:10","isExist":null},{"id":2322,"question":"美工课上，大家发现有喜欢的轻粘土和绘画工具东西，大家都去玩。乱成一团，你怎么办？","simplecontent":null,"content":"第一，保持冷静，灵活应对。立刻将幼儿集中坐好并讲解规则后再操作。遇到这种情况一定不能过分斥责\n幼儿，要充分理解并加以引导。\n第二，如果美工课有具体的教育任务，老师可以利用捏好的样品来吸引幼儿注意力，引发他们的好奇心和\n探索欲让幼儿冷静下来。把他们从混乱的玩耍中抽离出来，带着好奇心和兴趣跟随老师继续活动。\n第三，活动结束之后，教师将活动开始发生的情况和幼儿讲道理。告诉幼儿任何活动都要学会听从老师的\n安排，这样我们才会更好的开展活动，收获乐趣。避免今后教学过程中类似事件的发生。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:29:42","updateTime":"2021-05-13 00:29:42","isExist":null},{"id":2321,"question":"孩子教室里找不到，但是没出幼儿园，怎么办？","simplecontent":null,"content":"第一，和班级其他幼儿进行询问是否有了解情况的幼儿，以便做出快速反应寻找幼儿。\n第二，保持冷静。可联系老师工作群，把走丢幼儿的照片和特征发到群里进行共同寻找。同时向校领导汇\n报及时恰当处理此事。\n第三，会在平时教学中加强幼儿安全意识，不要独自离开老师视线以免发生危险。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:29:04","updateTime":"2021-05-13 00:29:04","isExist":null},{"id":2320,"question":"一个小朋友经常乱扔玩具，你怎么做？","simplecontent":null,"content":"第一，小朋友的性格和习惯还处在发展阶段，我会先做好示范，让他先看看再学习。\n第二，我会在教学中设置一些小组游戏，帮助小朋友放好玩具，养成好习惯。\n第三，结合小朋友的发展特点，认真研究，科学的引导，帮助养成良好的生活习惯，为后期学习打下\n基础。\n17","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:28:50","updateTime":"2021-05-13 00:28:50","isExist":null},{"id":2319,"question":"老师给学生物质奖励，时间久了不给物质奖励学生就不好好学习，怎么看待这个问题？","simplecontent":null,"content":"第一，单一方式的刺激不能长久使用。\n第二，物质奖励和精神鼓励要根据情况，恰当使用。\n第三，可以调整活动方式，让小朋友们从活动本身获得成功的乐趣。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:28:36","updateTime":"2021-05-13 00:28:36","isExist":null},{"id":2318,"question":"小朋友平时奶奶接，今天陌生人接，怎么办？","simplecontent":null,"content":"第一，我会询问孩子是否认识陌生人，以及陌生人与孩子的关系。\n第二，我会与孩子家长取得联系，看是否确定今天由陌生人接。\n第三，孩子安全大于天，所以作为幼师，应该抓细节，处处不放松。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:28:21","updateTime":"2021-05-13 00:28:21","isExist":null},{"id":2317,"question":"小勇总是犯错误却总是不承认，即使你已经看到就是他的错也不承认，此时作为老师， 你应该怎么做？","simplecontent":null,"content":"第一，老师应该理性看待。幼儿身心发展水平低，认知能力不完善，又时常存在以自我为中心的心理\n特点。因此小勇存在不承认错误的现象属于幼儿常见的现象，不能因此就认为他是故意捣乱。\n第二，尊重小勇的自尊心， 弯下身来平等单独的与他沟通。耐心的引导， 采用换位思考法、情感体验法、\n行为榜样法等， 帮助小勇意识到自己的错误。和小勇一起商量找到解决问题、弥补错误的办法，避免下次\n再犯相同的错误。也会找小勇的家长沟通了解情况，制定相关解决方案。\n第三，我会开展关于正确认识错误的主题班会，帮助更多的孩子更好的成长。事后反思在自己的教育\n工作中是否存在不足，加强家园合作，及时的了解幼儿的成长新情况。\n14.小朋友平时奶奶接，今天陌生人接，怎么办？\n【答】妥善处理\n第一，我会询问孩子是否认识陌生人，以及陌生人与孩子的关系。\n第二，我会与孩子家长取得联系，看是否确定今天由陌生人接。\n第三","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:28:06","updateTime":"2021-05-13 00:28:06","isExist":null},{"id":2316,"question":"小朋友来幼儿园发现有淤伤，你怎么办？","simplecontent":null,"content":"第一，调查情况。向孩子详细了解情况，认真记录具体细节。\n第二，联系家长。向家长确认受伤细节，避免孩子受到家庭暴力。第三，后期关注。加强对该幼儿的观\n察和询问，发现异常及时处理。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:27:44","updateTime":"2021-05-13 00:27:44","isExist":null},{"id":2315,"question":"洋洋平时很活泼，突然之间沉默寡言，你怎么办？","simplecontent":null,"content":"第一，和洋洋沟通这样表现的原因。根据具体原因具体分析开导幼儿，尽量疏导幼儿情绪。\n第二，组织游戏让洋洋参与或让其他幼儿同他游戏，分散注意力。\n第三， 和家长沟通幼儿情况，及时解决幼儿发生的问题，实现家园共育。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:27:31","updateTime":"2021-05-13 00:27:31","isExist":null},{"id":2314,"question":"幼儿园来了一个身材魁梧高大的男老师，小朋友害怕，怎么办？","simplecontent":null,"content":"第一，先看看小朋友中有没有不太害怕的，先让他们到男老师这里，做一些简单的接触，了解之后就不会\n害怕了。\n第二，还有害怕的学生，让学生喜欢的老师和这位男老师搭班上几次课，通过原来老师的引导，慢慢接受\n男老师。\n第三，每个老师在接触学生初期，都会有磨合期，我们要找到恰当的方式，以小朋友为主， 适当引导，做\n一个小朋友喜欢的老师。\n\n第一，跟男老师进行沟通，安慰和鼓励他。让他理解小朋友这样表现的原因，希望他不要因此感到受\n挫，要调动起更好的状态来工作。\n第二，我会让男老师参与到游戏中来，跟小朋友们共同玩耍或者多给小朋友讲有趣的可爱的故事，培养\n他们之间的感情。\n第三，在日后教学中多留心，一方面观察这名老师教学方面是否有不妥之处，及时提醒。另一方面观察孩\n子是否能够适应老师，及时帮助调整。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:27:09","updateTime":"2021-05-13 00:27:10","isExist":null},{"id":2313,"question":"小朋友参加消防演练之后，在午睡的时候，睡不着，怕着火。你怎么办？","simplecontent":null,"content":"第一，幼儿情绪可控性差，及时做好安抚，通过儿歌讲故事等方式帮助睡眠。\n第二，下午上课，及时做好情绪疏导，播放相关视频，舒缓情绪。\n第三，放学时和家长沟通，共同缓解幼儿的紧张情绪。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:26:33","updateTime":"2021-05-13 00:26:33","isExist":null},{"id":2312,"question":"有一只昆虫飞入教室，小朋友的注意力都被吸引了，你会怎么去处理?","simplecontent":null,"content":"第一，我会暂停讲课，告诉小朋友们不要去抓虫子，小心受到伤害。\n第二，请配班老师立即将窗户敞开，集中轰撵，让昆虫飞出去，然后，马上关闭所有的门窗， 防止昆虫\n再次飞入。或先将幼儿带离教师配班处理后再回教室。\n第三，事后继续完成课程，并在课堂上讲解注意事项培养幼儿安全意识。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:26:15","updateTime":"2021-05-13 00:26:15","isExist":null},{"id":2311,"question":"孩子嫌饭菜不好吃，不吃饭，你该怎么办？","simplecontent":null,"content":"第一，跟他讲解蔬菜的营养对身体的好处，结合他喜欢的动画人物引导幼儿吃饭。\n第二，可以采取集中注意的形式（看**吃饭很棒很干净，我们要向他学习）引起幼儿自觉意识主动吃饭。\n第三，及时和家长沟通，让幼儿养成良好的饮食习惯。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:25:59","updateTime":"2021-05-13 00:25:59","isExist":null},{"id":2310,"question":"你班里的一个小朋友自理能力很差，请问你怎么办?","simplecontent":null,"content":"【答】利用各种手段进行幼儿自理能力的培养\n第一，激发幼儿生活自理的兴趣。用唱儿歌、做游戏等形式让幼儿对自己的事情自己生成兴趣。\n第二，鼓励有自理行为的孩子。对那些能自己吃饭喝水穿衣的孩子给出公开的表扬和奖励，号召这个小朋\n友向他们学习。\n第三，联系家长，建议家长在家庭中有意识培养孩子自立自理。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:25:38","updateTime":"2021-05-13 00:25:38","isExist":null},{"id":2309,"question":"每天离园时，有个别幼儿经常把幼儿园的玩具带回家，作为一名幼儿老师，你会怎么办?","simplecontent":null,"content":"【答】让孩子认识到问题，引导孩子养成良好的习惯\n第一，我会耐心地告诉幼儿，幼儿园的东西是给所有小朋友一起玩的，它的“家”应该在幼儿园，如果私\n自带回家，其他小朋友就不能玩了，引导幼儿主动把玩具带回幼儿园。我还会告诉幼儿，如果特别喜欢某\n个玩具，需要经过老师的同意后才能拿回家玩，并要定时归还。\n第二，我会逐渐让幼儿懂得，任何东西都是有“ 所有权”的，想要他人的东西，必须经过别人的同意。比如，在游戏时，告诉幼儿需要借用某个东西时，可以说：“某某， 你好，用一下你的蓝色蜡笔，行吗?”\n第三，我会与幼儿家长多沟通，建议家长帮助孩子克服这个问题，让家长适当对孩子知错就改的行为进行\n鼓励。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:25:25","updateTime":"2021-05-13 00:25:25","isExist":null},{"id":2308,"question":"在上课时，你发现有个幼儿尿裤子了。作为一名幼儿老师，你怎么办?","simplecontent":null,"content":"第一，我会通过眼神、手势等肢体动作暗示保育员或者配班老师，将尿裤子的幼儿单独带到休息室或者卫\n生间，帮他换好备用的干净衣裤后，再送回教室继续上课。\n第二，在这期间，我会通过提问、集体游戏等方式，吸引其他幼儿的注意力，继续进行课程内容的讲授。\n第三，课后我会单独和该幼儿谈心，让他不要过分自责或者觉得难为情，充分保护他\n的自尊心消除幼儿的心理负担。并叮嘱幼儿以后想小便时，要告诉老师或是自己主动到卫生间上厕所。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:24:52","updateTime":"2021-05-13 00:24:52","isExist":null},{"id":2307,"question":"你们班有个孩子经常欺负其他小朋友，导致小朋友们都很怕他。作为幼儿教师，你该怎么办?","simplecontent":null,"content":"【答】及时妥善处理\n第一，对幼儿进行引导和教育。我会对幼儿进行移情教育，让其学会体验他人的情感。例如，通过一些故\n事或者情景角色表演，让幼儿体验到与小伙伴合作分享的快乐，并引导其在活动中学会“商量”而不能霸\n道，否则会失去很多小伙伴。同时，对他礼让友好的表现，及时进行表扬和肯定，使其明白什么行为是好\n的。\n第二，和家长进行深入沟通。我会与这名幼儿家长进行充分沟通，了解孩子产生不良行为的原因， 并就解\n决方案达成一致，建议家长做好对孩子性格和行为养成方面的引导。\n第三，通过组织集体活动来消除其他小朋友的对该幼儿的害怕情绪，促使该幼儿与其他小朋友和睦相处。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:24:26","updateTime":"2021-05-13 00:24:26","isExist":null},{"id":2306,"question":"小豪调皮，经常撞到小朋友，怎么办？\n【","simplecontent":null,"content":"【答】及时解决，耐心引导。\n第一，在小豪撞到小朋友时对其进行批评教育，让他同小朋友道歉。意识到自己行为的错误。引导如何正\n确和小朋友相处。\n第二，设计班级活动，让小朋友互换角色，让小豪体验被小朋友撞到后的感受，知道自己行为莽撞的后果。\n树立幼儿正确的行为观。\n第三，与家长沟通，制定解决方案。家园共育帮助小朋友全面身心健康发展。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:23:52","updateTime":"2021-05-13 00:23:52","isExist":null},{"id":2305,"question":"幼儿园的孩子总是问一些稀奇古怪的问题，你会怎么办?","simplecontent":null,"content":"【答】耐心引导\n幼儿总是问稀奇古怪的问题，说明幼儿的好奇心比较强，这是幼儿理智感发展的表现。\n第一，正确对待幼儿的提问。幼儿提问题时，我会给予足够的耐心，明确这是他们爱动脑筋的表现，给\n予他们表扬，鼓励他们多问问题，而不是批评和打击。\n第二，当幼儿问问题时，我会采用引导为主的原则，引导幼儿积极思考，通过启发幼儿积极思考，得出\n问题答案。\n第三，当幼儿提出的问题，如果我也不能给出答案时，我会询问其他老师或者网上查资料，将知识内化，\n转化成自己的言语，再传授给幼儿。\n最后，加强自身的专业素养。为了满足幼儿探索世界的需求，我会养成不断学习的习惯，通过提升自身\n的综合素养，满足孩子的好奇心，促进幼儿的成长发展。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-13 00:23:20","updateTime":"2021-05-13 00:23:20","isExist":null},{"id":2304,"question":"养猫的病?","simplecontent":null,"content":"我小时候也被家里的猫传染过猫癣，手上、胳膊上，腿上都有，一个个跟硬币大小，很痒很硬，抹药膏也不起作用，实在痒的不行，我偶然拿打火机烤了一下不痒了，过几天猫癣竟然好了，还没留疤[捂脸]。\n\n\n\n养过猫的都知道，猫癣很好治，不过是真菌感染，用药就行","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 19:29:19","updateTime":"2021-05-12 19:29:19","isExist":null},{"id":2303,"question":"新冠状病毒病毒为什么缺氧?","simplecontent":null,"content":"对于新型冠状病毒感染者，轻型和普通型的患者一般血氧饱和度较平时并没有明显的变化，正常人的血氧饱和度在98%-100%。既往有慢性阻塞性肺疾病或者肺纤维化等肺功能障碍的人血氧饱和度可能会有所降低，新型冠状病毒的重型患者可能会出现呼吸窘迫，呼吸频率会≥30次/分，在平静状态下测量血氧饱和度会出现低氧血症，其≤93%，动脉血氧分压和吸氧的度会≤300mmHg，新型冠状病毒肺炎患危重型的患者会出现难以纠正的呼吸衰竭、血氧饱和度进行性下降，这时需要用气管插管和呼吸机维持呼吸。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 19:20:53","updateTime":"2021-05-12 19:20:53","isExist":null},{"id":2302,"question":"汕尾属于潮汕吗?","simplecontent":null,"content":"不要因为有个汕头，就觉得汕尾和汕头是两兄弟。汕尾的语言是客家话，潮汕是潮汕话，沟通不了的，只能用普通话沟通。\n\n语言不通，习俗不同，不属于潮汕。\n\n  潮汕是指潮州、汕头、揭阳，以前汕头是从潮州分出去的，潮汕是平原地带，靠海。而汕尾是大部分是丘陵地带，说的话是福佬话，也称学佬话。政治上，以前的汕尾没建市之前是属于惠州地区的，后海陆丰又分给汕头地区管。\n  但因为习俗和语言与潮汕地区有所区别，后向国务院申请建市，获得批准，彻底从潮汕地区分出，但平时人们会把汕尾同潮汕归在一起，一来，汕尾人有潮汕人的团结，所谓“海陆丰不分家”，二来，汕尾人经商精明，在广州、特别是深圳特区，很多汕尾人经商，三，汕尾话（学佬话）大概可以与汕头话交流。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 13:19:33","updateTime":"2021-05-12 13:19:33","isExist":null},{"id":2301,"question":"广东省的地级市?","simplecontent":null,"content":"广东省下辖21个地级市，划分为珠三角、粤东、粤西和粤北四个区域，其中珠三角：广州、深圳、佛山、东莞、中山、珠海、江门、肇庆、惠州；粤东：汕头、潮州、揭阳、汕尾；粤西：湛江、茂名、阳江、云浮；粤北：韶关、清远、梅州、河源。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 13:16:38","updateTime":"2021-05-12 13:16:38","isExist":null},{"id":2300,"question":"5·12汶川地震?","simplecontent":null,"content":"中华人民共和国四川省阿坝藏族羌族自治州汶川县映秀镇\n\n2008的5月12日","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 09:11:11","updateTime":"2021-05-12 09:11:11","isExist":null},{"id":2299,"question":"男女比例最小?","simplecontent":null,"content":"吉林、辽宁是全国唯二的两个女多男少的省份，黑龙江的男女比例也接近1:1。而广东，则是性别比例中男性占比最高的省份","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 09:04:32","updateTime":"2021-05-12 09:04:32","isExist":null},{"id":2298,"question":"试用期辞职公司不让走怎么办?","simplecontent":null,"content":"试用期辞职公司不让走的，员工首先可以与公司进行协商。如果协商不成的，员工可以向劳动行政部门举报，由劳动行政部门责令公司改正。如果因公司的行为给员工造成损失的，员工可以要求赔偿。\n法律依据：\n《中华人民共和国劳动合同法》第五十条\n用人单位应当在解除或者终止劳动合同时出具解除或者终止劳动合同的证明，并在十五日内为劳动者办理档案和社会保险关系转移手续。劳动者应当按照双方约定，办理工作交接。用人单位依照本法有关规定应当向劳动者支付经济补偿的，在办结工作交接时支付。用人单位对已经解除或者终止的劳动合同的文本，至少保存二年备查。\n第八十九条\n用人单位违反本法规定未向劳动者出具解除或者终止劳动合同的书面证明，由劳动行政部门责令改正；给劳动者造成损害的，应当承担赔偿责任。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-12 08:52:16","updateTime":"2021-05-12 08:52:16","isExist":null},{"id":2297,"question":"上公开课，小明说这个内容已经听说很多次了，不想听了，你怎么办？","simplecontent":null,"content":"第一，应对学生提出的问题，再提醒学生注意题目的不同点，在他再回答一次，做认真评价。在公开课后做恰当变通，防止学生觉得乏味，加入更深层次的知识，活跃课堂气氛。\n\n第二，课后反思，不应该把公开课当成表演课，不应该进行排练。\n\n第三，公开课是为了更好提高教学水平，认真教研，提升授课内容，更好的教育学生。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:51:22","updateTime":"2021-05-12 08:51:22","isExist":null},{"id":2296,"question":"几个男生留长发。教师带到操场强制执行，让同学围观。你怎么看？","simplecontent":null,"content":"第一，这种强制剪发的行为，侵犯了学生的身体权，是违法的。\n\n第二，对于学生不合校规的行为，要说服教育，不能简单粗暴的强制。可以联合家长共同说服学生主动自家剪发。事后要对这种行为提出表扬，鼓励学生遵守纪律。\n\n第三，平时注意加强审美教育，树立学生正确的审美观。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:51:07","updateTime":"2021-05-12 08:51:07","isExist":null},{"id":2295,"question":"学校规定八点到校，教师要求提前十分钟到校，否则不让进教师，你怎么看？","simplecontent":null,"content":"第一，要求提前到可以培养好习惯。提前十分钟到校可以干很多准备工作，这样等八点上课的时候，就做好各种准备了。\n\n第二，迟到要批评，但不能禁止上课。俗话说无规矩不成方圆，学会晚了十分钟可以批评教育，但是不让学生进教室，不但侵犯了学生的受教育权，而且不符合常理。\n\n第三，教室可以开家长会的时候，郑重强调相关规章制度，说明提前十分钟到达的原因，提升各位学生家长的思想观念，可以从根源上杜绝学生迟到现象。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:50:50","updateTime":"2021-05-12 08:50:50","isExist":null},{"id":2294,"question":"学生课间吸烟，看见老师来了，若无其事的走了，你怎么办？","simplecontent":null,"content":"第一，我会把学生请到办公室，了解他们吸烟的原因和吸烟历史，并对他们进行说服教育。\n\n第二，与学生家长联系，告知学生在校表现，争取家校共育。\n\n第三，事后观察，确定改正吸烟行为。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:50:27","updateTime":"2021-05-12 08:50:27","isExist":null},{"id":2293,"question":"在活动课上，老师组织学生参加比赛，输的那一组做俯卧撑，一名男生拒绝并且指出说这是体罚，你该怎么办？","simplecontent":null,"content":"第一，及时组织其他同学继续活动，这个拒绝的男生可以先不参加活动，课后再谈话。\n\n第二，课后和这个男生谈话，让他认识活动课的目的是加强锻炼，组织比赛设置奖励和惩罚 ，是正常教学环节。让该男生改变自己对于体罚的错误认知。\n\n第三，事后反思，以后在设置此环节时，要注意数量上的安排，不能带到体罚的程度。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:50:09","updateTime":"2021-05-12 08:50:09","isExist":null},{"id":2292,"question":"有学生不愿意广播体操锻炼，怎么办？","simplecontent":null,"content":"第一，了解该同学不愿意广播锻炼的原因\n\n第二，对该同学进行思想教育，告知进行广播体操锻炼也是为了提升身体素质，为了学习。\n\n第三，召开“我锻炼，我健康”的主体班会，让全班学生认识到，身体是革命的本钱，只有广播锻炼，才可以让身体更健康，才能保证学习更高","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:49:52","updateTime":"2021-05-12 08:49:52","isExist":null},{"id":2291,"question":"学生父母都外出打工，成绩也不好，作为班主任应该怎么办？","simplecontent":null,"content":"第一，找到学生，了解并分析他成绩的现状。留守儿童爸妈在外打工，孩子跟着老人在家学习生活，这样的孩子往往是渴望得到关爱和关注，内心缺乏安全感。多关爱该生，针对知识薄弱环节，开小灶，多给他补补课。\n\n第二，平时多设计一些精彩有趣的集体活动，让孩子积极参与其中感知班集体的温暖，协同各科老师共同关注这些孩子的成绩，有知识漏洞及时补上，有成绩优秀的班干部和课代表组成学习小组，帮助他们改正学习上的坏习惯，陪同他们课后及时完成作业。\n\n第三，与这些孩子的家长沟通。告知家校共育的作用，尽量多回家陪陪孩子，尽量答努力让他们常回家看看孩子，毕竟父母的温暖才是孩子真正渴求的。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:49:23","updateTime":"2021-05-12 08:49:23","isExist":null},{"id":2290,"question":"小明是单亲家庭，经常说谎，你怎么办？","simplecontent":null,"content":"第一，找小明谈心，了解他的思想情况，\n\n第二，找小明家长，说明情况，家校共育找到说谎的根源。\n\n第三，我平时多关心小明，安排班委多关注小明，让孩子融入班集体。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:49:05","updateTime":"2021-05-12 08:49:05","isExist":null},{"id":2289,"question":"上课有个学生总是坐不住，严重影响了课堂秩序，你怎么办？","simplecontent":null,"content":"冷静处理。\n\n第一，先简单制止，正常完成课堂。\n\n第二，课后询问，了解情况，进行思想教育。\n\n第三，注意观察后续情况，发现有小进步要及时表扬。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:48:47","updateTime":"2021-05-12 08:48:47","isExist":null},{"id":2288,"question":"有用学和老师说“我成绩差，未来没有希望。”老师说：“你绘画不是很好嘛？”，对于这件事你怎么看？","simplecontent":null,"content":"我非常赞赏这个该老师的语导，\n\n第一，该学生语言暴露出其习得性无助感，但是老师及时给予了学生的肯定和鼓励。老师从绘画角度，告知孩子擅长的地方，增强学生的自信心，起到超强的鼓舞作用。\n\n第二，教师在教育学生方面，应该做到长善教失的教学原则，一分为二的看待学生，尤其是对于后进生，更应该利用他的优点克服他的缺点，禁止一味地打压学生。\n\n第三，作为未来的中小教失，我也应该向这位老师学习，多鼓励学生，关爱学生。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:48:31","updateTime":"2021-05-12 08:48:31","isExist":null},{"id":2287,"question":"李老师上课用幽默的声音并拖长语调，有学生说肉麻，如果你是这个老师怎么办？\n\n你在上课的时候讲课的时候说了一句笑话，同学说“你”肉麻，你该怎么办？\n\n教师上课为了活跃气氛讲了一些与课堂无关的笑话，逗得同学哄堂大笑，你怎么办？","simplecontent":null,"content":"我会及时接受学生得意见。\n\n第一，课后及时找几个学生谈话，从侧面调查了解大多数学生的意见，\n\n第二，征求有经验的同事的意见，确定后在及时改正。\n\n第三，不断提高自身的水平，真正展示出和内容紧密相关的高水平幽默。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:48:13","updateTime":"2021-05-12 08:48:13","isExist":null},{"id":2286,"question":"你在用ppt讲课时，学生反应记不上笔记，怎么办？","simplecontent":null,"content":"我会及时接受学生的意见\n\n第一，我会及时口述，以板书的方法让学生把重点内容记录下。\n\n第二，课后反思，找到PPT看不清的原因（字好小还是翻页速度太快）设置核实的显示方式，同时注意配合黑板板书以保证最佳的授课效果。\n\n第三，以后上课注重节奏，以学生为主安排课堂教学，防止此类再次发生。","filterContent":null,"type":"教师结构化","status":0,"createTime":"2021-05-12 08:47:50","updateTime":"2021-05-12 08:47:50","isExist":null},{"id":2285,"question":"产品经理资料?","simplecontent":null,"content":"*************************\n您好！您的订单：210510-445799537480028\n\n链接: https://pan.baidu.com/s/16HQyKnlqSAM-nFgYRQBdAw 提取码: jzxt \n八戒网盘\n\n赠品链接：https://pan.baidu.com/s/1Ntg5yjgaA0Lhb9chE34TRA \n提取码：6xrv\n\n*************************\n\n************************* \n您好！您的订单：210510-119644549960028 \n\n\n因为文件较多，下载教学都放在文档里面了。打开下面链接查看文档内容\n\n链接：https://pan.baidu.com/s/1ToIqdqKx793WxRcTiCzKAw \n提取码：7syu\n\n *************************\n\n【1】如果您在本店拍了多个订单请务必回复数字“1”\n不然无法为您补发后面的订单。\n\n【2】不会使用网盘请回复666\n\n【3】如果打不开或者失效请联系客服换新哦。\n *************************\n\n==\n\n老大！\n关于您购买的订单号：1787159415752325802 请接收\n\n链接: https://pan.baidu.com/s/1mnSbqoxn5-qSTsMWWKdp4A  密码: rcms\n天天素材资料馆祝您学有所成！\n\n==\n\n链接：https://pan.baidu.com/s/1UjMCc7MkHjNKjbX5KyD7JQ \n提取码：t2ug \n复制这段内容后打开百度网盘手机App，操作更方便哦--来自百度网盘超级会员V3的分享","filterContent":null,"type":"百度网盘","status":0,"createTime":"2021-05-11 20:05:53","updateTime":"2021-05-11 20:05:53","isExist":null},{"id":2284,"question":"世界最高的山?","simplecontent":null,"content":"珠穆朗玛峰、乔戈里峰、干城章嘉峰、洛子峰、马卡鲁峰。\n\n1、珠穆朗玛峰\n\n珠穆朗玛峰（Qomolangma）简称珠峰，又意译作圣母峰，尼泊尔称为萨加马塔峰，藏语的“珠穆朗玛”意为“第三女神”。该峰位于中华人民共和国和尼泊尔交界的喜马拉雅山脉之上，终年积雪。常年低温。\n\n珠穆朗玛峰海拔8844.43米，同时每年增长1.2厘米，是世界第一高峰，是一条近似东西向的弧形山系，位于喜马拉雅山中端、中尼边界上和西藏日喀则地区定日县正南方。山体呈巨型金字塔状，有巨大冰川，最长达26公里。山下有世界上最高的寺院绒布寺。\n\n\n\n2、乔戈里峰\n\n乔戈里峰，为巴基斯坦的最高峰，也是中国和世界的第二高峰，海拔8611米，仅次于珠穆朗玛峰。\n\n乔戈里峰位于中国新疆塔什库尔干塔吉克自治县与巴基斯坦吉尔吉特-巴尔蒂斯坦交界处。属于喀喇昆仑山脉，坐标是35°53′N，76°31′E。\n\n\n\n3、干城章嘉峰\n\n干城章嘉峰海拔高度(米)8586，位于喜玛拉雅山脉中段尼泊尔和印度边界处，东经88°09′01″，北纬27°42′09″，被称作“五座巨大的白雪宝藏”。\n\n这从它有五个峰顶而得来的，并且其中四个峰顶高逾8450米。1955年5月25日，英国登山队的G·班德、N·哈迪、J·布朗和T·斯特里塞尔四人首次登上顶峰。\n\n\n\n4、洛子峰\n\n洛子峰，英文名Lhotse，海拔8516米,为世界第四高峰。位于东经86.9°,北纬27.9°,地处珠穆朗玛峰以南3公里处,其东侧在中国西藏自治区境内,西侧属尼泊尔王国。\n\n洛子峰意为“南面的山峰”，就因为它地处珠穆朗玛峰以南3公里处，两峰之间隔着一条山坳，即通常所说的“南坳”。洛子峰藏语称之为“丁结协桑玛”，意思是“青色美貌的仙女”。\n\n\n\n5、马卡鲁峰\n\n马卡鲁峰海拔8463米，位于喜马拉雅山脉中段，东经87°06′，北纬27°54′，北方向距珠穆朗玛峰24公里，沿西北—东南山脊为界，北侧在中国西藏境内，南侧在尼泊尔境内。\n\n峰体上终年覆盖着厚厚的冰雪，坡谷中分布着巨大的冰川，冰川上有许多深渊般的巨大冰裂缝，冰崩雪崩都十分频繁。1955年法国登山队的9名队员首次登上峰顶。\n\n\n\n 1","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 16:24:17","updateTime":"2021-05-11 16:24:17","isExist":null},{"id":2283,"question":"世界面积最大国家?","simplecontent":null,"content":"俄罗斯1707万平方公里\n加拿大997 \n中国960\n美国937\n巴西854\n澳大利亚769 \n这样看俄罗斯的国土面积最大.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 16:22:26","updateTime":"2021-05-11 16:22:26","isExist":null},{"id":2282,"question":"世界人口大国?","simplecontent":null,"content":"一、中国\n中国总人口的数量能够达到1,405,372,834，在整个世界上占人口比例能够达到18.82%。可以说在世界上也是一个强国，也是一个大国，现在中国已经非常的强大，并且祖国繁荣昌盛。\n\n二、印度\n印度算不上一个大国，但是人口数量却非常的多，能够达到1,304,200,000，在世界上占人口比例能够达到17.86%。\n\n三、美国\n美国在世界上人口数量排位达到了第三，说实话人数也不是很少。总体人数能够达到322,760,000，并且在整个世界上占人口比例能够达到4.42%。\n\n四、印尼\n印尼的排位在第四，虽然印尼的占地面积不是很大，但是人口数量却不少，能够达到257,740,000，在全世界上来讲占人口比例，能够达到3.53%。\n\n五、巴西\n巴西的人口总数量排位在世界的第五，总数量能够达到205,290,000，在全世界人口比例能够达到2.8%一。\n\n六、巴基斯坦\n\n巴基斯坦也不算是一个很大的国家，但是人口数量比较多，总人口数量能够达到192.400.000，在全世界占人口比例能够达到2.64%。\n\n七、尼日利亚\n尼日利亚的总人口数能够达到182,310,000，排在第七位，占全世界人口比例的总数能够达到2.50%。\n\n八、孟加拉国\n孟加拉国的人口数比较少，总人口数能够达到164,620,000，占全世界人口比例总数达到了2.25%。\n\n九、俄罗斯\n俄罗斯的地域比较宽广，但是人数却不是很多，总人口数能够达到146,350,000，在全世界占人口比例总数达到了2%。\n\n十、日本\n日本本身就是一个小的岛屿，在那里人口数量非常的少，总数量应该有126,820,000，在全世界占人口总数的比例能够达到1.73%。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 16:21:37","updateTime":"2021-05-11 16:21:37","isExist":null},{"id":2281,"question":"全国人口普查?","simplecontent":null,"content":"今天，国务院新闻办公室举行新闻发布会。国务院第七次全国人口普查领导小组、国家统计局等相关负责人介绍第七次人口普查结果。普查结果呈现6个特点：\n\n①人口总量：增速放缓但仍保持平稳增长。\n\n②人口质量：人口受教育水平明显提高，素质不断提升。\n\n③性别构成：总人口性别比为105.1，性别结构得到改善。\n\n④年龄构成：少儿人口数量增加，比重上升。\n\n⑤人口迁徙流动情况：人口流动依然活跃，人口集聚效应进一步显现。\n\n⑥城乡结构：城镇常住人口持续增加，城镇化率进一步提高。\n\n来源 @央视新闻\n\n编辑 胡德成\n\n流程编辑 刘伟利","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:40:06","updateTime":"2021-05-11 14:40:06","isExist":null},{"id":2280,"question":"乙肝可以治愈吗?","simplecontent":null,"content":"HBV是由HBV感染引起的，目前我们可以通过服药来抑制HBV的复制，但是无法治愈HBV。乙型肝炎是我国较常见的一种慢性肝病，主要由HBV感染引起。现在，我们可以通过服药来抑制乙肝病毒的复制，但不能治愈乙肝，它不同于丙肝。目前，控制HBV复制的药物有核苷类药物、干扰素等，临床上使用较多。比较常用的核苷类药物有拉米夫定、恩替卡韦、阿德福韦酯等，它们能有效地抑制乙型肝炎病毒的复制。患者应定期检查肝功能及HBV拷贝数，以避免感染。干扰素类药物还能有效抑制病毒复制，但乙肝病毒可有效控制病毒复制，目前还无法完全治愈。\n\n病情分析：乙肝目前还没有方法可以完全治愈，但可以控制病情发展，并且可以消除乙肝病毒的传染性。另外，乙肝也不是一定要治疗的。若是肝功能没有收到影响，甚至可以不治疗，定期入院检查。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:31:32","updateTime":"2021-05-11 14:31:32","isExist":null},{"id":2279,"question":"入职要查乙肝吗?","simplecontent":null,"content":"入职不查乙肝的，也不允许查乙肝。但会常规的检查肝功能，如果肝功能是不正常的，是需要进一步检查明确肝功能病因的。对于目前乙肝分为乙肝携带者和乙肝患者。\n\n乙肝携带者的肝功能是正常的，一般不做特殊的治疗。对于乙肝患者是需要治疗的，需要进行抗病毒治疗案，根据肝功能损害的轻重，适当的使用一些保肝降酶的药物。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:27:34","updateTime":"2021-05-11 14:27:34","isExist":null},{"id":2278,"question":"乙肝传染途径?","simplecontent":null,"content":"乙肝的传播途径主要是血液传播，有三个途径：\n\n1、妈妈生孩子的时候，在围产期，孩子出生的时候血液由破损的皮肤传播；\n\n2、输血传播。现在输血传播乙肝很少，因为目前对输血血液的检测很严格；\n\n3、性行为传播，配偶之间或其他方面也有可能传播。\n\n乙肝的传播主要是以上三个方面。值得提醒的是，跟乙肝患者坐在一起吃饭是没问题的，吃饭是不会传染乙肝的，所以没必要分开碗筷餐具进食，可坐在一起幸福地享受美餐。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:27:02","updateTime":"2021-05-11 14:27:02","isExist":null},{"id":2277,"question":"乙肝危害?","simplecontent":null,"content":"乙肝有什么危害？乙肝会给患者带来严重的心理负担，它有强烈的传染性，与乙肝患者密切接触就可能会患病。它会严重损伤的肝功能，出现肝硬化、肝癌等恶性疾病，还会诱发肝炎性糖尿病等其他疾病，病情严重时会有致命的危险。乙肝是因为感染了乙肝病毒引起的一种肝脏病变，它具有很强的传染性，一般会通过血液、性生活、母婴等方式传播。乙肝患者通过积极的治疗，可以控制病情，但是很难治愈，如果不积极治疗，对身体健康的危害会更大。那么乙肝有什么危害呢？\n\n1、心理负担重有些患者总担心自己的乙肝疾病，会发展成肝硬化、肝癌，所以心理负担特别重，还有些人因为患有乙肝后，需要长期应用药物治疗，经济负担比较重，这也会导致心理压力大。社会上有些人对乙肝歧视，影响乙肝患者的交际，同样也会导致乙肝患者心理压力增大。\n\n2、强烈的传染性，这种疾病有很强的传染性，如果没有接种乙肝疫苗的人和乙肝患者密切接触，就可能会被传染。\n\n3、严重损伤肝功能，乙肝病毒对肝脏的损伤特别大，如果不注意控制疾病，会导致肝细胞出现碎屑化的坏死，严重影响肝功能。肝功能出现问题时，身体解毒能力变差，会诱发更多的疾病出现。\n\n4、具有恶变性，如果乙肝患者不能正确的运用抗病毒的药物治疗，在日常生活中还经常熬夜、吃辛辣刺激食物、抽烟喝酒等，会导致病情发展快速，出现肝硬化、肝癌的可能性很大，会大大的缩短患者的生存期。\n\n5、诱发其他疾病，乙肝患者肝功损伤严重，会影响肝脏的解毒，身体中毒素堆积太多时，也会诱发其他的疾病，比如肝炎性糖尿病、脂肪肝、高胆红素血症等。\n\n6、有致命危险，就目前医疗水平来说，规范的治疗也只能控制乙肝病情，并不能达到彻底根治的目的。如果治疗不规范，很可能会出现肝硬化、肝癌、消化道大出血等，这会有致命的危险。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:26:16","updateTime":"2021-05-11 14:26:16","isExist":null},{"id":2276,"question":"乙肝感染率?","simplecontent":null,"content":"病情分析：乙肝被传染的概率比较大，因为乙肝是一种人群普遍易感的传染性疾病。乙肝可以通过母婴传播，即患有乙肝的母亲在分娩时，婴儿破损的皮肤若接触到母亲的血液、羊水、阴道分泌液能就有可能被传染。性生活中若一方为乙肝患者或携带者则可通过阴道分泌液和精液传染给伴侣。乙肝还可以通过输血及血制品传播，与乙肝患者共用牙刷及剃须刀、不洁拔牙纹身等都有可能被感染。目前预防乙肝感染的唯一途径就是注射乙肝疫苗使机体产生保护性抗体，避免被传染。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:25:41","updateTime":"2021-05-11 14:25:41","isExist":null},{"id":2275,"question":"男女寿命?","simplecontent":null,"content":"哈哈哈，我傻啊，女人的寿命80岁，男人的寿命六十五岁，六十五到八十的女性咋算？","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:16:42","updateTime":"2021-05-11 14:16:42","isExist":null},{"id":2274,"question":"男女比例均衡?","simplecontent":null,"content":"从最新的人口普查情况看，性别比最均衡的就是东北三省","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:10:40","updateTime":"2021-05-11 14:10:40","isExist":null},{"id":2273,"question":"男女比例?","simplecontent":null,"content":"看这个没用！女人寿命明显比男人寿命长，老年女性多而已！拉出未成年男女比例试试","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-11 14:09:50","updateTime":"2021-05-11 14:09:50","isExist":null},{"id":2272,"question":"我的观点是左右，清晰很多，对方反驳我是下下更好?","simplecontent":null,"content":"显示信息不用那么多，没必要展示，有个字段复用了没必要","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 13:06:04","updateTime":"2021-05-11 13:06:04","isExist":null},{"id":2271,"question":"界面排版是左右还是上下?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 13:04:36","updateTime":"2021-05-11 13:04:36","isExist":null},{"id":2270,"question":"打分制如何?","simplecontent":null,"content":"感谢分享。对于几点有疑问。打分是否比较主观，缺乏科学性，建议增添加权因子是否更合理。2.报告一般以结论导出，文章结论不太清晰。3.貌似缺乏了定量的分析，比如各类app在应用市场的下载量、评分，从第三方平台观察日活跃量。这样报告应该更全面科学些吧\n\n缺乏数据支撑，打分主观性太强，结果没有太大的引导性。这样的竞品分析很难具有参考价值吧","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 09:05:58","updateTime":"2021-05-11 09:05:58","isExist":null},{"id":2269,"question":"竞品分析文档的撰写?","simplecontent":null,"content":"如果你要写一个产品的竞品分析文档，请从下面这些维度，结合上面的理解进行撰写：\n\n1、维度：\n行业现状及趋势分析\n\n竞品分析目标确定（确定分析汇报对象、确定分析目标、确定竞品）\n\n竞品定位对比分析（产品定位、目标用户对比）\n\n竞品功能对比分析（核心功能、用户体验）\n\n竞品策略对比分析（产品策略、运营策略）\n\n结论(总结及建议)\n\n给出参考文档\n\n2、要求：\n结构清晰，提供目录，区分章节，规范段落\n\n排版清晰，段距、行距始终如一，字体大小有层次感\n\n图文并茂，多用图标，不容易描述的地方要加截图\n\n语义表达，避免过于主观的描述和表达\n\n给出结论","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:58:05","updateTime":"2021-05-11 08:58:05","isExist":null},{"id":2268,"question":"竞品分析的四大模块?","simplecontent":null,"content":"1、竞争格局对比\n市场规模\n\n根据数据分析出整个市场有多少规模，各个竞品又占据多少市场规模，对比两个竞品之间的市场规模可以看出他们的公司规模大小，发展历史，竞争力大小等一系列定性的对比。上篇如何进行市场分析中我们细讲过市场规模http://www.woshipm.com/pmd/1437633.html，在这里我就不细讲了。\n\n各竞品占有率\n\n分析每个竞品（核心和部分重要竞品）的市场占有率，这个市场一共多大，每个产品有多少用户，占比多少，这个数据可以充分反映出竞品的竞争阶段和市场竞争力。如果没有确切的数据，其实现在根据一个日常认知也基本可以判断出来，比如音乐行业，常听音乐的小伙伴肯定知道qq音乐，网易云，酷狗，虾米这些常见的音乐类型，但是像一听，音悦台，可能很少的人会知道他们的存在。\n\n竞争阶段\n\n能够分析出处于哪个竞争阶段就可以了，比如从开始到结束，先是蓝海，行业没有几家竞品，需求旺盛却没人竞争；之后自由竞争，百家争鸣大家开始刮分市场；然后红海，满是人的竞争，市场被划分完全，一片厮杀；之后寡头，由几家独大，占领着九成的市场；最后是垄断，一家或几家称霸，垄断全部市场。像现在的无人驾驶，人工智能行业就是一片蓝海，那我们的传统制造业就是红海，移动支付领域算是寡头，由支付宝和微信带领，像电信领域，便是由三大运营商造成的垄断。\n\n商业模式\n\n产品的商业模式在我总结起来有商品服务、流量变现、长尾用户三个方向，每一种也有很多的维度可以去分析，同样请看上篇如何进行市场分析，然后对比出各种产品的商业模式异同，其实大多数都是相通的。\n\n机会在哪里\n\n在这些竞争格局下，刚好在这个行业下，你发现竞争者不是那么多，而且又发现这个市场很大，需求旺盛，那么这就是一个好的机会，通过上面的分析，自然而然的就会得出这样的结论。就比如拿keep来说，准确的抓住了 机会，在悦动圈布局男性热爱运动的年轻群体时，keep将市场打向女性，主打室内健身塑性与社交分享，完完全全抓住了女性的需求，同时又打开了一个未被发掘的市场，成为这个市场细分领域的大哥，现在风生水起。\n\n2、定位对比\n目标市场（用户）定位\n\n分析自身产品的目标用户，用户的基数、用户的口碑，还有些用户的行为；进行用户画像，将目标用户的类别划分，什么是核心用户，什么是主流用户，什么是普通用户，他们之间的用户构成占比是多少；还有用户的使用场景，在什么时","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:57:01","updateTime":"2021-05-11 08:57:01","isExist":null},{"id":2267,"question":"竞品选择?","simplecontent":null,"content":"有核心竞品，重要竞品，一般竞品，核心竞品是最能威胁自身产品的，并驾齐驱，处于同一地位的产品，比如支付宝支付的核心竞品肯定就是微信支付，那么稍次一点的就是重要竞品，像iPhonepay，比如美团也在做支付，那么一般竞品就是在市场内的细分领域的产品，可能并不出名，一般情况下，密切关注核心竞品且挑选一到二个重要竞品即可，其他不用考虑。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:52:25","updateTime":"2021-05-11 08:52:25","isExist":null},{"id":2266,"question":"竞品分析的四大维度?","simplecontent":null,"content":"在我产品生涯中，通过工作和项目让我总结出了四个大维度，分别是从格局、定位、功能、策略这四个分析维度进行分析。格局是代表的他的一些宏观上的市场规模层面，竞争态势层面，商业模式层面等进行的一个大致的剖析，定位是比较的产品之间的发展方向和未来走势，而功能很好理解，就是产品现有的各种异同功能，迭代策略可以看出这一个产品未来的走向。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:51:29","updateTime":"2021-05-11 08:51:29","isExist":null},{"id":2265,"question":"竞品分析的意义?","simplecontent":null,"content":"战略选择上，奠定产品基调，确定产品方向，这个层面一般是boss或总监的竞品分析，用来简历产品核心竞争力，进行合理化资源分配，并且制定好合理目标\n\n产品优化上，在产品一个个小的优化点上，进行竞品分析可以理清思路，获得新需求的灵感，同时在竞争产品压力下，产品可以更好的优化，变得越来越强\n\n个人成长上，竞品分析可以锻炼逻辑思维，对行业的理解力，对用户导向概念的深化（以用户为本），还可以增强自己书面表达的能力","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:51:00","updateTime":"2021-05-11 08:51:00","isExist":null},{"id":2264,"question":"如何进行竞品分析?","simplecontent":null,"content":"换句话说，如何进行竞品分析就是，如何使产品的利益更大化，我认为有两点，第一点是挑的市场好，你挑的市场处于上升空间，踩在风口上猪都会飞，另外一点就是产品定位好，你很明确自己的产品定位，都是哪些用户在使用，他们有什么特点，产品针对这些主要受众进行了哪些改进优化。做好了这两点，就可以使产品的利益越来越大。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:50:35","updateTime":"2021-05-11 08:50:35","isExist":null},{"id":2263,"question":"竞品分析的作用?","simplecontent":null,"content":"市场分析的目的就是这个产品他赚不赚钱，而竞品分析嘛，那他的目的是什么，就是如何使利益得到最大化。在通过一系列的产品异同对比之后，然后对每一个异同点深挖，探究出最后的原因，最后得出结论，并就这个结论作出未来的改进，超越竞品挤压竞品市场，将竞品慢慢从这个市场挤出，或者另辟蹊径，找到新的产品定位，成为垂直领域的老大哥，称霸这个领域。这两种方式的目的只有一个，即使利益达到最大化。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:50:14","updateTime":"2021-05-11 08:50:14","isExist":null},{"id":2262,"question":"什么是竞品分析?","simplecontent":null,"content":"在两个或者多个竞争产品之间，他们有什么样的商业模式，有什么样的定位，对各自产品的发展朝向哪个方向，还有他们之间的功能点的异同，进行一个对比异同，相同点，为什么相同，有多少相同，不同点，为什么不同，不同在哪里，什么因素导致了他们的不同，这些都是做为一个产品经理应该去分析和判断的事情，这就是竞品分析。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:47:28","updateTime":"2021-05-11 08:47:28","isExist":null},{"id":2261,"question":"是否需求竞品分析?","simplecontent":null,"content":"初级产品经理的竞品分析，基本上没有用。我劝大家少把时间花在竞品分析上。\n\n多把时间放在解决需求，解决问题上，才是重点。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:46:12","updateTime":"2021-05-11 08:46:12","isExist":null},{"id":2260,"question":"产品经理竞品分析渠道?","simplecontent":null,"content":"第一售前，在公司最能直接深入了解竞品的人群是售前工程师，有机会听竞争对手的产品宣讲看竞争对手的PPT甚至产品演示，产品人应该要把这群人当做“大爷”供起来实时给你提供所见所闻切信息内容准确性极高为重要渠道。\n\n第二客户，客户一开始都是小白，需要招标所有厂商都会卖力的宣讲自己的产品优势，久而久之小白被洗成专家，抓住一切可以和客户沟通交流的机会，也可以获取其他公司信息情况。\n\n第三互联网，知乎、百度、头条、TODAY、INFOQ、Mindstore、HC3I、HIT、36氪……主要看你的精力与投入，在此不在过多说明。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 08:45:31","updateTime":"2021-05-11 08:45:31","isExist":null},{"id":2247,"question":"需求不清晰?","simplecontent":null,"content":"为什么我的方案漏掉了这么多的细节？\n为什么有些需求细节我就是想不到？\n为什么有的人对需求细节非常敏感？\n\n拆解微信朋友圈的点赞功能：\n从内容展示维度：点赞按钮的位置、取消点赞按钮的位置、已点赞好友的信息显示位置、点赞好友信息取值规则、多个点赞好友的排序规则、多个点赞好友如何分隔、数据权限如何控制；\n从操作流程维度：如何操作一次点赞、如何取消点赞、如何查看点赞好友名片、点赞后如何通知用户；\n从交互设计维度：点击点赞icon后有什么动效设计、取消点赞后有什么动效设计；\n从异常处理维度：点赞好友数过多如何显示、点赞时内容已被删除如何处理、点赞时网络异常如何处理等等。\n拆解后，逐个体验主流产品处理这些需求细节的方式，即便条件不满足，也要想办法创造条件去满足。\n\n通过细致的体验，我得到以下结果：\n点赞和取消点赞的按钮都放置在气泡中；\n在内容发布时间下方显示点赞好友信息；\n若好友有备注名，则显示备注名；若无备注名，显示昵称；\n当有多个好友点赞时，按最后一次点赞的时间正序排列；\n多个点赞好友之间，用逗号分隔；\n仅当点赞人也是你的好友时，才显示好友信息；\n点赞时，需先点击右下方的icon，再点击气泡中的【赞】；\n取消点赞时，同样需先点击右下方的icon，再点击气泡中的【取消】；\n点击点赞记录中的好友信息，会跳转到好友名片页面；\n点赞后，通过朋友圈通知功能通知用户；\n其他好友对这条内容点赞后，通过朋友圈通知功能通知用户；\n点击【赞】和【取消】icon时，icon会放大；\n点赞数过多，是否会完全显示，暂无法验证；\n点赞内容被删除时，会toast提示内容已删除；\n点赞时，若网络异常，本地显示点赞成功，待网络恢复后再上传到服务器；\n……\n看起来，已经是非常完整了，但对需求细节敏感的你，一定还可以找到更多的需求细节。\n3. 循环往复，大量分析\n学习研究完一个产品，再去研究另一个产品的类似功能。最终，我们就能敏感地知道这个功能所有的需求细节。\n通过日复一日的训练，我们逐渐能够举一反三。即使是一个我们没有研究过的功能，也会比大多数人更敏感、做出更完整的方案。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:20:29","updateTime":"2021-05-11 01:20:30","isExist":null},{"id":2259,"question":"测试同事提出这样用跟不爽?","simplecontent":null,"content":"我曾经为销售部门策划了一个营销工具，用来为每个客户制作专属的产品方案，希望在分享出去后能引起客户的兴趣，从而促成交易。\n\n这个工具有一个功能，运营部门先在后台配置一套推荐规则，销售同事可以按照这套规则自动生成方案，生成后再根据客户的具体情况进行微调。\n\n问题在于，如果后台的规则变了，之前已经做好的方案如果要修改，要怎么办？\n\n旧规则已经被覆盖掉了。\n\n但是，如果要按照新规则来，那就没法进行部分修改，只能将整个方案按照新规则覆盖掉。其实就相当于重新做一个方案。\n\n这样也不好。\n\n想象真实的业务场景，可以推导出2点：\n\n后台配置的规则，代表了公司的整体方针，所以一般不会频繁变动。\n方案是一次性的，当它被客户打开浏览时，就已经完成其“吸引客户”的使命了，并不需要长期维护更新。\n基于此，我就规定，如果后台规则变了，那之前的方案，就统一不能编辑了。如果有需要，再新增一个即可。\n\n当然，这样的处理，还是有些简单粗暴了。\n\n但是，时间紧，任务重。\n\n这只是一个非常细微的极端情况。还有很多更重要、更影响体验的模块需要考虑。不可能每个地方都投入精力去深挖优化。\n\n这个规定，给测试带来了一些麻烦。因为测试同事需要频繁地修改规则，以测试各种情况。\n\n负责的测试同事，在听完我上面的解释后，依然不能认同。他甚至完全不理会“测试场景”和“销售实际工作场景”有巨大区别的事实，说出了这样的话：\n\n“我现在就是用户，然后我用得不爽，体验很差，所以说明你这个是有问题的。“","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:08:40","updateTime":"2021-05-11 01:08:40","isExist":null},{"id":2258,"question":"无法说服别人时?","simplecontent":null,"content":"当你和别人意见相左的时候，如果你无法说服对方，或者懒得说服对方，那你可以念出下面这句咒语：“这样做用户体验更好！”","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:07:39","updateTime":"2021-05-11 01:07:39","isExist":null},{"id":2257,"question":"一个是，打开页面要加载半天。\n一个是，有个“牛皮癣”一样的浮层，始终关不掉。\n你觉得，哪个体验好一点？","simplecontent":null,"content":"只能是第二个吧，至少页面还能加载出来。所以，很多时候，“简单”可能才是最好的。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:07:18","updateTime":"2021-05-11 01:07:18","isExist":null},{"id":2256,"question":"产品设计建议?","simplecontent":null,"content":"1. 尽量复用原有的东西\n复用，既是出于成本考量，其实也有利于用户体验。\n\n产品经理，是对“产品有多烂”最心知肚明的人。\n\n所以，每次接手新项目，都有一种强烈的冲动，想要抛掉旧包袱，重新搞一套。\n\n但是，同样的团队，同样的工作机制，我们又凭什么相信，这次能比上次做得更好呢？\n\n反之，已经在线上运行一段时间的模块，虽然也有很多问题，但是，它是多次修改完善过的。哪怕有问题，至少目前看来，是可控可接受的。\n\n所以，很无奈，选择复用原有的东西，结果来看，可能是用户体验更好的方案。\n\n2. 尽量参考大厂的产品方案\n大厂的产品方案，往往是用户比较熟悉的成熟方案。\n\n哪怕是新的东西，在大厂的教育下，用户也能很快熟悉掌握。\n\n因此，参考大厂的方案，不标新立异，往往是最不给用户添堵的做法。\n\n同时，大厂的方案，技术团队也比较容易理解。\n\n这样可以很大地降低沟通成本。最终交付的产品，也不容易出现太大的偏差。这也间接地保障了用户体验。\n\n3. 能怎么简单，就怎么简单来\n假如我们现在要在产品详情页加一个底部通栏的预约浮层。\n\n一种方案是，如果用户关闭浮层，或者提交了预约，那当天就不再显示这个浮层了。\n另一种方案是，默认一直显示这个浮层。用户关闭后，刷新页面，浮层还是会重新显示","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:06:32","updateTime":"2021-05-11 01:06:32","isExist":null},{"id":2255,"question":"技术如何让产品妥协?","simplecontent":null,"content":"萌新：我觉得这个东西应该……\n\n大佬：哦，这个啊，我们之前就注意到了，但不是很重要，所以一直没排上日程。\n\n萌新：我觉得这个东西应该……\n\n大佬：哦，这个啊，我们提过了，不过技术上有些困难，所以暂时只能这样。\n\n萌新：我觉得这个东西应该……\n\n大佬：哦，这个啊，因为它和其他模块互相关联，为了迁就其他模块，只能这么搞。\n\n萌新：我觉得这个东西应该……\n\n大佬：哦？是吗？这个我们之前内部讨论过，我们觉得这样处理挺好的呀。\n\n萌新：卒。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:05:24","updateTime":"2021-05-11 01:05:24","isExist":null},{"id":2249,"question":"这个从用户角度体验不好?","simplecontent":null,"content":"一方面，这个设计精简了操作，消除小红点只需一步操作，提高了操作效率。\n\n另一方面，“小红点被拉扯变形、爆炸消失”，这些微动效，为这个“标为已读”的寻常操作，额外增添了一些趣味。\n\n但吊诡的是，每个提出意见的人，都声称自己所说的，就是“用户的体验”，自己是客观地站在用户的角度，为用户代言的。\n\n一个加载动效，可以缓解用户焦虑，能提供良好的用户体验。\n提高页面的载入速度，减少等待时间，是个好的用户体验设计。\n使用显眼的大按钮，能有效吸引用户的注意，是为了用户体验。\n改成幽灵按钮，使之不破坏整个页面的平衡，不干扰用户进行其他操作，也是为了用户体验。\n繁琐严苛的活动规则，是为了避免羊毛党薅羊毛，从而保障正常用户能有良好的体验。\n敏感信息脱敏，敏感操作拦截，表面上看，似乎给用户制造麻烦，但却是在保障用户的账号安全，安全感也是一种重要的体验。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:03:27","updateTime":"2021-05-11 01:03:28","isExist":null},{"id":2254,"question":"什么人会接受妥协?","simplecontent":null,"content":"往往是，职位低的那方会妥协，和项目关系小的那方会妥协，时间弹性小的那方会妥协。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 01:02:51","updateTime":"2021-05-11 01:02:51","isExist":null},{"id":2224,"question":"产品经理的工作流程是什么？","simplecontent":null,"content":"1）需求收集，具体收集方法如题4所示；\n\n2）需求池管理，收集来的需求需要放到需求池中统一管理\n\n3）需求优先级，需要根据优先级进行需求迭代，具体方法如题5所示\n\n4）需求确定，找自己的直属领导确认每一个迭代的需求\n\n5）产品设计，使用竞品分析、脑图、流程图、原型图、PRD等方法详细的梳理产品逻辑\n\n6）项目管理，使用项目排期表等方式推动项目按时并且保质保量的上线\n\n7）数据分析，产品上线之后通过数据分析等方法验证功能/产品是否达到预期效果，如果没有需要如何优化，然后开启另一个版本的迭代。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 00:57:19","updateTime":"2021-05-11 00:57:19","isExist":null},{"id":2251,"question":"你这个设计性能不好?","simplecontent":null,"content":"1. 数据量过大\n这个很好理解。比如说我是餐厅老板，我查今天的营业收入明细和查一年的，查出来的数据量是不一样的。反映到系统上就是数据量越多，查询时间就会越长。当数据量大到一定程度的时候，页面就一直处于加载中，卡死了。\n\n2. 接口数过多\n我们表面上看一个页面，这个页面上面的字段是固定的，在一起的。但实际上开发实现的时候，会分开来存储字段信息。当这个页面加载出来时，他会有很多的接口去不同的数据库表里请求数据。所以当一个页面上的字段越多，涉及的模块越多的时候，加载就可能越慢，甚至可能奔溃。\n\n\n02 三个小方法\n1. 分批处理\n当一次请求获取的数据量很大的时候，我们可以采用分批的方式，表现在页面上就是这2种。\n\n（1）范围设定\n\n在业务总列表，特别是统计报表，这些数据量比较大的页面，建议把筛选的默认选项加上，比如说状态值，时间范围。这样一下子缩小了查询范围，过滤条件越多，速度就越快。\n\n如何设定这些默认值？当然是根据业务来定的。比如说商家订单列表，首先查最近7天待发货的，因为这是商家需要首要处理的。在收费日报处，时间筛选默认今日；业绩提成报表处，时间筛选默认当月，因为工资一般是月结的。\n\n\n\n总的来说，以时间为过滤条件是用的最多的，那就产生了另一个问题：时间跨度最长是多少呢？我能一次性查用户使用系统以来的全部数据，还是不超过1年的，或者不超过3个月的？这个需要产品经理来预估数据量。\n\n特别是新产品，用户用的时间比较短，数据量还不多，一次性查出所有数据也没有出现过问题，产品经理往往会忽视这个问题。但过了1年，2年，甚至更长的时间时，当初这个坑可能就要后来人填了。所以还是建议，不管是什么系统，这个范围一定要定义好，避免哪一天突然出现奔溃。\n\n前端的组件有很多种，这种左侧带快速时间选择的控件就很适合。虽然用户更喜欢直接点叉号清空筛选项，但这个用户使用起来也还算方便。\n\n\n\n（2）分页加载\n\n分页这个词，产品经理也是非常熟悉的，几乎每个列表都会用到。\n\n关于每页应该加载几条数据，常常会引起争议——如果一页上面数据太少，那用户可能会翻上好几页才能找到想要的那条；如果数据太多，又会导致页面过长，上下滑动查看不方便。\n\n一般来说，会以数据1-2屏左右为界限来划分，可能是10条，可能是15或者20条。\n\n更加人性化的是这种可选每页条数的分页控件。12条是1屏，也就是说1-3屏，用户可以根据自己的习惯来选择。\n\n我比较推荐这种，虽然这个比一刀切的分页法实现复杂一点，但更加符合用户的需求，能提升很多用户体验。\n\n\n\nC端比较常见的分页方式是瀑布流式，向上滑动时自动加载下一屏的内容，这种在B端产品中比较少见，B端产品通常采用的是点击触发式，因为数据量大很多。最常采用的是上面那种分页器，也有一些会采用下面的这种按钮形式。\n\n\n\n2. 信息量控制\n我们上面说到引起性能问题的第二个原因：一个页面上接口数量过多。那我们可以做的就是，控制一页上的信息量，即字段数量，以及与主业务相关联的辅业务数量。用语文老师教我们的写作思路来说，就是：每一段要有核心思想，善于分段讲述。\n\n比如这是一张儿童的生长发育评测表，分成了2级，一级从4大方面来评测，在每个方面，又会再进行下一步的细分。比如基本看护里面还会分饮食内容评估，睡眠评估等。\n\n\n\n从开发的角度来说，这样的分类是很好的。每个页面上的信息量越少，他们的接口压力就越小。\n\n从产品经理的角度来说，这样分类能使得信息层级更加的清晰，但分得过细也会导致用户填写信息时需要不停的切换tab，降低效率。我们可以在不影响用户体验的情况下，适当的把信息进行归类和拆分。\n\n另一方面，开发在看到我们产品文档上的信息时，在开发时会对一些数据进行预处理，比如说工作台上面的数据汇总。今日预约，今日到访的数量总计都是先在统计中心汇总的，不是实时去业务模块拉取数据，然后加总。\n\n3. 分步处理\n这一个方法用到的地方不是很多，目前我们就在统计报表导出这块用到。\n\n平常我们在网页上点击下载按钮，会在底部看到这样的下载条。\n\n\n\n这背后其实有2步，开发先把要导出的数据汇总，生成在一个Excel表里面，然后下载下来。如果数据量很大，那2步同时进行的数据流就会很大，可能引起性能问题。\n\n我们的做法是，把这2步进行拆分，先生成Excel表，然后让用户手动下载。开发也会把这个分步操作称为”长链路解耦“。链路越短，查询速度就越快。\n\n长链路解耦可能会引起用户体验的不好，因为中间需要手动触发进行下一个链路，但在导出数据这种非高频场景下，是个性价比很高的方式。\n\n","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-11 00:45:56","updateTime":"2021-05-11 00:45:56","isExist":null},{"id":2253,"question":"这个字段没什么含义就不要填上这里，需要再加上?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:23:44","updateTime":"2021-05-10 19:23:44","isExist":null},{"id":2252,"question":"缺少了状态字段?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:23:25","updateTime":"2021-05-10 19:23:25","isExist":null},{"id":2250,"question":"这个如果先后顺序不同会产生不同结果怎么办?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:17:49","updateTime":"2021-05-10 19:17:49","isExist":null},{"id":2248,"question":"你再写详细点?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:16:44","updateTime":"2021-05-10 19:16:44","isExist":null},{"id":2246,"question":"不够时间做?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:16:23","updateTime":"2021-05-10 19:16:23","isExist":null},{"id":2245,"question":"交互：这项功能做起来太麻烦了，交互工作量很大……?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:16:07","updateTime":"2021-05-10 19:16:07","isExist":null},{"id":2244,"question":"UI/视觉：这不是我的风格，其它产品也是这么设计的……?","simplecontent":null,"content":"","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:15:55","updateTime":"2021-05-10 19:15:55","isExist":null},{"id":2243,"question":"程序员碰到有趣的事情?","simplecontent":null,"content":"身为一名全栈程序员\n\n居然要我修电脑，修打印机。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:14:30","updateTime":"2021-05-10 19:14:30","isExist":null},{"id":2242,"question":"改动这个这个出现问题怎么办?","simplecontent":null,"content":"不会出现什么问题，以后还会有同样的需求，\n不通过这样的方式没办法弄，因为我这才能太多人员了，没办法一一改动，只能你那边来改动","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:14:13","updateTime":"2021-05-10 19:14:13","isExist":null},{"id":2240,"question":"青平常说的?","simplecontent":null,"content":"这个放到上面就行了\n\n其实只有一个地方是这样的\n\n那你要记啊\n\n补充一点\n\n上周找过你啊，就是说这个问题啊\n\n没听懂\n\n\n这个我没留意\n\n那就统一一下吧\n\n因为是这样的，为什么不会呢……\n\n这样也是可以的\n\n一定要等到五……才可以提交\n\n小马哥这个地方看一下\n\n我想一下\n\n这个有另外一个问题\n\n应该不会太复杂，你需要别人教你怎么用这个东西\n\n没有意义了，ViewStub最大的优点是当你需要时才会加载，使用他并不会影响UI初始化时的性能。\n\n\n删除控件中无用的属性。\n\n","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 19:02:08","updateTime":"2021-05-10 19:02:09","isExist":null},{"id":2238,"question":"会议提出问题?","simplecontent":null,"content":"三个节点的状态，周期一样吗\n\n排版不好看吧，内容这么多\n\n是所有都收缩，还是只有那一个\n\n等下把文档发出来\n\n还有没有疑问的\n\n雄英，你那边还有咩有疑问，怎么会没有呢\n\n这个是怎么做的，中文和英文怎么对应了，改了会不会找不到\n\n现在饿了，想吃饭了","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 18:19:57","updateTime":"2021-05-10 18:19:57","isExist":null},{"id":2241,"question":"家里种什么植物好?","simplecontent":null,"content":"绿萝,富贵竹,金琥,吊兰,虎皮兰,滴水观音。这个个株型大小好买,耐阴,比较好看大气,管理简单,很适合.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 18:16:26","updateTime":"2021-05-10 18:16:26","isExist":null},{"id":2236,"question":"自漫常说的话?","simplecontent":null,"content":"这个没有什么影响\n\n这个没有疑问的\n\n\n差异点是什么，其它没有看到\n\n\n这个需要小马哥查看下代码了\n\n这个验证不了，需要你验证一下\n\n不一样的点事……\n\n我讲的都是咱们得差异点\n\n内容这么多确实不好看，可以收缩起来\n\n我感觉这个放下面就可以了\n\n这个可以收缩，放在下面容易忽略自己的\n\n这个我用颜色标出来，大家看的时候比较容易","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 17:47:26","updateTime":"2021-05-10 17:47:27","isExist":null},{"id":2239,"question":"牙齿有骨头怎么办?","simplecontent":null,"content":"病情分析：用做活的针头取出来，你试一下，大头针也可以，主要是细。\n\n病情分析：牙齿里塞骨头可以用牙签，如果牙缝太大，形成方形孔，那么可以用牙签去除食物，当然，这种方式是不推荐的。或者用牙线，这是一种更常见的去除食物的方法。还可以用冲牙器，大多数患者口腔中的水丝，这是国外最理想的使用方法，而水丝是一种相对清洁、快速、有效的方法。如果患者牙周围不好，牙缝过大，那么每次进食后都需要清除食物，建议患者购买一个牙冲剂进行日常护理，这样有助于清洁牙齿，也有利于牙周病的治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 17:33:21","updateTime":"2021-05-10 17:33:21","isExist":null},{"id":2235,"question":"要不要做这个需求?","simplecontent":null,"content":"有没有这样业务场景\n\n你回去想一下，有的话可以做，没有的话就先不做，这里先不做\n\n你记下这个问题","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 17:11:22","updateTime":"2021-05-10 17:11:23","isExist":null},{"id":2234,"question":"是否所有细节都要写?","simplecontent":null,"content":"我是不到2个月的产品新人，关于PRD那个我很困惑。我在写PRD的时候最初也是写的很详细，包括icon点击前后的变化、不同状态（点击、获取焦点后等）下字体的颜色等属性的变化，但是被leader否定了，他认为这会限制设计和前端的发挥，让我在PRD里都尽量别写交互了。我真的很困惑orz","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 16:16:44","updateTime":"2021-05-10 16:16:44","isExist":null},{"id":2233,"question":"是否每个需求都要做?","simplecontent":null,"content":"假如你的leader提出一个需求，你很顺从的把它添加进功能里，如果这一需求存在疑问，那么产品评审会、交互设计、UI设计、前后端开发，每一个过程中都有可能会对这个功能提出质疑。如果你没有说服自己，又怎么能面对别人的质疑。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 16:16:00","updateTime":"2021-05-10 16:16:00","isExist":null},{"id":2232,"question":"项目上线很多问题?","simplecontent":null,"content":"案例三\n最近新上线的项目，由于某些原因存在很多问题。这个项目上线前已经忙了两个多月，大家为了它停了手里的不少工作，原以为上线后可以松一口气，可是谁想到是这个样子，每个人心头都憋着火。\n在某一次修复问题的讨论中，矛盾爆发了，项目组内的成员发生了激烈的争吵。争吵的内容毫无意外是责任归属，双方都认为是对方在系统对接时没有交代清楚才导致的问题。虽然争论双方都是RD，这次的问题也和PM没有关系，但是我还是介入其中希望能通过自己的努力来解决问题。\n解决方法\n先让同事停止争吵，然后告知项目组的每一个人现在讨论的目标不是为了追责，而是要让大家集思广益，尽快解决问题。目前还没到追责这一步，如果真到了这一步，我作为PM也会站出来承担责任。\n最后让每个人明白，项目做了这么久很辛苦，上线后出现问题大家心里都不舒服，这个可以理解。但是有问题必须要解决，所以希望每个人在遇到问题时把注意力放在问题上，尽快把问题解决完，这样一个项目才算做的有始有终。\n由于本项目中出现的不少问题都是沟通不到位导致的，因为我表示在解决问题的过程中，有需要我去沟通、协调、确认的，可以随时找我。然后大家又讨论了处理方案及分工，就各自归位去执行了。\n案例总结\n通过这个案例想要告诉读者，尽管有的问题并非PM的责任，但是PM在出现问题后不要想着置身事外，而是要主动参与其中调动团队成员去解决问题。\n上述案例中，项目上线后出现问题，人心浮动时，PM要及时给项目组的成员鼓劲，告诉大家出现问题不可怕，只要按部就班解决问题就好。当团队成员出现矛盾、分歧时，PM要能站出来搞清楚问题的所在，帮助大家解决问题并时刻提醒大家牢记项目的最终目标。\n总之，PM可以说既是项目的指明灯，同时也是项目的粘合剂。\n受篇幅和案例所限，还有一些沟通方法和沟通时需要了解的注意事项，就不一一列出了。本文的目的是抛砖引玉，希望对读者能有启发，也希望读者能留言说说自己的沟通方法，不论是站在PM的角度还是站在RD的角度。\n本文由 @打酱油的熊 原创发布于人人都是产品经理。未经许可，禁止转载。\n题图来自 Unsplash，基于CC0协议\n\n相关阅读打开百度APP查看更多内容\n精彩视频打开百度APP查看更多视频\n热门推荐打开百度APP查看更多内容\n搞笑趣图打开百度APP查看更多内容\n精彩评论打开百度APP查看更多评论\n页面到底了\n\n黄圣依独家语音\n\n为你读新鲜资讯\n\n继续浏","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 15:24:41","updateTime":"2021-05-10 15:24:41","isExist":null},{"id":2231,"question":"漏字段?","simplecontent":null,"content":"案例二\n笔者至今仍记得，第一次和RD争吵时的情景。这位RD平时不喜欢看文档，更不喜欢按照文档写的做，因此总出现问题。一般来说只要不影响用户使用，我就睁一只眼闭一只眼了（那时候刚去公司，存量需求十几个，涉及三个系统，忙不过来）。\n某次需要修复数据（也是因为没有按照文档开发造成的），我便给他发邮件说明需求修复的字段和内容。因为怕他遗漏，所以我特意在邮件中将需要修复的字段标红加粗，结果还是漏了一个字段。想到他之前几次不按照文档开发产生的问题，一股无名火从我心头冒出，气势汹汹前去理论。\n谁知这位振振有词，表示漏的那个字段是因为我没有当面和他说，他怕改错了担责任，所以没有改。借此机会，我问他为什么平时总不能按照需求文档开发，是评审时我没讲明白，还是我对开发进度不够关注。答案让我啼笑皆非，没按文档做不是开发的问题，是测试时没有测出来。\n虽然听了很生气，但是看到他的态度，我明白除非把这件事闹大，否则不可能解决。依照案例一中说的，沟通时要时刻记得最终目标，我的目标有两个：一是让RD知道我对于不按照文档开发的态度，二是解决修复数据的问题。既然目标已经达到，就没有必要再争论下去。\n解决方法\n1. 不把本次争论的重点放在事情的对错上，而是关注如何尽快解决数据修复的问题。在之后的需求评审中重点关照下这位同事，多问问他对需求的理解，听听他的意见和反馈。\n2. 和QA沟通，告知他之前测试过的项目有问题，今后需要再仔细些。同时在进行验收时，我也会更加认真，尽量把每一个点都验收到。\n3. 幸运的是当时来了个新的QA，负责我这个系统。我给他讲了不少业务、系统相关内容，他遇到的问题我也会及时帮忙解决，一段时间下来配合得很默契。再加上他做事认真有章法，不论是写测试用例还是提bug都很规范（之前的QA这些都没有），对于RD不按文档做的问题坚决指出，一段时间内居然没再出现问题。\n案例总结\n1. 解决问题的方式有很多，不一定要直面问题\n如案例二所述，与RD沟通不能解决问题，就需要从QA着手，加强QA对工作的重视，从而倒逼RD按照文档来做。这种做法看起来好像是在为难RD，但是从全局出发，是为了避免出现因为功能问题而回滚或者需要修复的情况。\n其实，这件事还有其他的解决方法，例如把问题反馈给开发团队的leader，或者等到项目出现问题引起领导层的重视后再解决，又或者放下手中的工作掰扯清楚责任的归属等。总之，不同的人","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 15:23:27","updateTime":"2021-05-10 15:23:27","isExist":null},{"id":2230,"question":"修改bug?","simplecontent":null,"content":"案例一\n曾经在某个项目中，测试人员（下文简称“QA”）发现系统的某项功能不符合需求文档的要求。虽然不影响业务流程，但是影响用户体验，因此告知RD修改。RD回复说需要改代码，只要涉及到改代码的，都必须发邮件告知，否则不处理。眼看争吵渐起，我作为PM必须要站出来处理。\n为了不过多占据篇幅，在此不详细描述当时的问题，简单来讲就是系统需要调第三方接口返回指令，但是指令返回有延迟，这会影响到用户登录后看到的页面状态，所以需要在调用接口查状态时延时2秒。\n需求文档中只写了用户操作后的系统状态和页面展示，没有写需要延迟2秒查状态，因此RD认为这相当于提了个新需求，而不是原来代码的bug，所以需要发邮件走流程。\n我们和他说，需求文档在评审时已经讲过，里面的要求是用户在操作后看到的状态必须是准确的。需求始终没有变化，至于如何实现是技术上的问题，作为PM要保证的是设计方案没有超出技术边界，而不是对每一个技术方案的实现都去深入了解。\n解决方法\n虽然我自认为言之有理，但是最后并未说服对方，甚至还让他产生了抗拒情绪。考虑到项目上线时间紧急，如果坚持争执，只会耽误项目进度，造成双输的结果。\n因此我和他说可以发邮件，甚至在邮件中说明是需求变动了，但是项目必须要按时完成，不能因此耽误进度。在得到我的保证后，大家继续讨论了方案，然后各自按照讨论的结果去执行了。\n案例总结\n1. 沟通时不要忘记最终目标\n上述案例中，表面上要解决的是用户体验问题，但最终目标是保证需求按时上线且功能满足要求。坚持争论到最后或许能有结果，但是会耽误更多的时间，并对项目中成员的情绪造成不良影响，可能会产生更大的风险。\n因此，PM在和RD沟通时要着眼全局来思考，把项目的进度放在首位，不要过于在意一时得失和责任归属。就算一时争吵赢了，从长远的角度来讲，也是双输的局面。毕竟PM是设计方案的人，RD才是实现设计方案的人。\n2. PM要明白自己与RD关注点的区别\n对大多数RD来讲，看到的是眼前自己负责的系统，想到的是如何实现功能、要多久才能实现、性能如何等。\n而对于PM，从需求的角度来讲，要考虑用户的使用场景、用户的痛点、用户的使用习惯、使用后的反馈等。从项","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 15:07:44","updateTime":"2021-05-10 15:07:44","isExist":null},{"id":2229,"question":"需求优先级?","simplecontent":null,"content":"在对用户调研、挖掘用户需求后，就是要将用户需求转为产品功能并判断优先级。下面细分如何确立需求优先级（模糊并列了产品功能优先级）。一、为什么要确定产品需求优先级？（1）时间紧。对于互联网企业来说，时间紧迫，加上互联网瞬息万变，很多公司都在加快步伐，快速占领市场。在对用户需求进行调研和挖掘后，会梳理出很多需求，那这些需求做还是不做，什么时候做（优先级），就需要产品经理想清楚、定下来。（2）资源有限。对互联网企业来说，资源总是有限的。在有限的资源下，只能是开发有限的产品功能。如果产品功能过多，必然会导致项目复杂，资源消耗过大，使得项目变得不可控。集中资源，专注某几个点，是互联网企业的必然选择。所以，大部分互联网企业都是以“小步快跑，快速迭代”的产品开发方式，在产品发展的每个阶段，只选择最重要的产品需求进行开发，力争以最快的速度完成产品更新并投入市场。通过这种方式，利用市场来检验产品需求，不断的优化完善产品。为了确保企业能在产品的每个阶段只开发最重要的产品需求，就需要产品经理对产品需求进行优先级排序，来进行过滤取舍。二、产品功能类别在对需求排序之前，还先要了解需求有哪些分类，哪些是重点？（1）分类：基础功能（必不可少的功能）、期望功能（用户表述出来的需求）、亮点功能（带给用户惊喜的功能）、无差别功能（做不做对用户没有差别）、反向功能（功能引起用户讨厌）。（2）分别对待：基本功能必做、期望功能按性价比排序、实现个别低成本的亮点（大公司做法不同，可展开）、无差别功能别做（无差别功能的低成本判断方法，可展开）、反向功能权衡利弊（往往是多目标的冲突处理，可展开）。三、如何确定产品需求优先级排序？确定产品需求优先级排序，主要从这几个方面去考虑：1、需求的投入产出比2、需求的紧急程度、重要程度3、需求的复杂性\n1、需求的投入产出比\n一般情况下，判断产品需求优先级的主要依据是需求的投入产出比（ROI），即产品需求的投入成本与产出价值之间的比例。投入产出比越低，说明产品的效益越大，产品需求就越值得我们开发。反之，则放弃开发。投入产出比 = 投入成本 / 产出价值* 100%\n（1）价值\n产品需求的价值包括用户价值、公司价值和商业价值三个方面。作为企业，最终看中的还是商业价值。一般产品的用户价值越高，它的商业价值也越高。①用户价值。是指这个需求能够影响多少用户数，能让多少用户更多使用产品。如","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:52:53","updateTime":"2021-05-10 14:52:53","isExist":null},{"id":2228,"question":"如何说服用哪个?","simplecontent":null,"content":"看你们团队有没有能力做AB测试，通过数据来得出用户对这两套设计的反馈了。\n\n审美这种，很难通过语言说服调整，数字可以","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:31:45","updateTime":"2021-05-10 14:31:45","isExist":null},{"id":2227,"question":"在需求正式开发之前，介绍清楚需求背景?","simplecontent":null,"content":"在项目开始之初，一般会定义好商业需求文档，说清楚为什么要做这个产品，能给公司带来什么价值，有什么战略意义，可能有什么风险，这些主要是给领导回汇报争取资源用，我的建议是将这些同样给研发团队讲一遍，让团队所有成员清楚自己所做的东西的价值，有了共同的目标，也更有助于凝结团队力量，共同完成目标。\n\n作者：耗子吴\n链接：https://www.jianshu.com/p/9d69621db192\n來源：简书\n简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 14:29:37","updateTime":"2021-05-10 14:29:37","isExist":null},{"id":2226,"question":"修改排序功能沟通?","simplecontent":null,"content":"我负责的一个项目中，涉及到一个列表排序的细节，原有设计是根据条目被创建的时间倒序排序，新创建的排在前面，而工程师希望能提高效率，希望这个列表像输入法一样，最近操作过的条目自动排在前面，所以额外增加了这个功能，PM 几个回合都没有说服他。\n\n为了解决这个问题，我们拉这位工程师花半天的时间作为普通用户完成一系列常规任务，实际操作他发现这样的排序经常找不到前几个操作过的条目，自己都快受不了，然后在当天就把这个功能改掉了。\n\n如果数据一多，分页，然后用户修改了68页的某条数据，更新完后，列表一刷新，那条数据跑到第一页去了，不知情的用户根本找不到","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:23:44","updateTime":"2021-05-10 14:23:44","isExist":null},{"id":2225,"question":"受到质疑时如何应对?","simplecontent":null,"content":"有的工程师会关心产品设计，询问 PM 产品设计的原由，并指出他认为的不合理的地方。你花大力气做用户研究、竞品研究，设计好一个炫酷的功能，也终于说服同事、上司采纳这个方案，马上要开始开发了，这时主力工程师老张告诉你，他认为这样设计不合理，会大大增加编码的复杂度和工作量，换一种方式可以更快实现，你知道老张推荐的方案违背常人直觉，尝试用各种理由说服他，无奈老张非常固执，不仅听不进去你的解释，还以开发时间威逼利诱采用他所说的方案。\n\n当你的观点受到质疑时，不要慌张，重新思考一下这个问题，确认是不是真的是自己犯的错，如果你也拿不定主意，找你的同事或者上司做做参谋，主动听取一下别人的意见，如果不是你自己的问题，大胆的反驳对方，千万要注意方式方法：\n\n引导对方从用户的角度看问题\n用数据说话\n让他作为用户实际地使用自己做的东西","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:15:54","updateTime":"2021-05-10 14:15:54","isExist":null},{"id":2223,"question":"一般来说产品上线之后需要关注的指标有：?","simplecontent":null,"content":"1）注册用户数：已注册用户的总和\n\n2）次日留存/7日留存\n\n3）ARPU：总收入/总用户数，即每个用户的平均收入\n\n4）日活跃用户数/月活跃用户数\n\n5）新用户增长率\n\n6）新用户占比：新用户占今日活跃用户数的比例\n\n7）用户流失率\n\n8）渠道转化率","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:13:09","updateTime":"2021-05-10 14:13:09","isExist":null},{"id":2222,"question":"完整的产品分析一般包含哪些维度?","simplecontent":null,"content":"1、定位分析，产品的目标用户是谁？解决了他们什么问题\n\n2、需求分析，就是目标用户需求的频繁程度和强度如何？是不是刚需高频？产生需求的场景有哪些？\n\n3、市场分析，就是市场规模什么样的，市场现状是什么样的？市场发展方向是什么样的呀？\n\n4、竞品分析，就是有哪些竞品，市场份额分别占到占多少，各个竞品切入点的差异等等\n\n5、视觉分析，整体色调如何？各图标设计的好坏\n\n6、交互设计分析，导航路径是否清晰？主要功能的触达率如何？\n\n7、功能分析，这个产品有哪些关键功能，用哪些关键功能满足了用户的核心需求？满足的好不好？有什么优化空间等等。功能分析一定要作为一个重点去进行分析，因为毕竟是一场产品经理的面试。\n\n8、运营分析，做了哪些运营活动？效果质量如何啊？\n\n在真实的面试场景中，根据产品的特质，要进行有条理、有细节的分析，往往就可以得到面试官的好评。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:12:39","updateTime":"2021-05-10 14:12:39","isExist":null},{"id":2221,"question":"需求评审时研发说需求实现不了怎么办？","simplecontent":null,"content":"1）站在技术的角度，了解无法实现的原因\n\n2）看有哪些可以替代的方案\n\n3）评估替代方案对项目本身的影响，如延迟，如若在可接受范围内，适当的妥协","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:10:54","updateTime":"2021-05-10 14:10:54","isExist":null},{"id":2220,"question":"需求评审时，研发说实现不了怎么办？","simplecontent":null,"content":"是什么原因实现不了\n\n- 是现有的产品架构不支持？\n\n- 是实现的开发工作量太大？\n\n- 是所需的相关技术还没有成熟的解决方案？\n\n- 是设计上存在缺陷？\n\n- 还是需求讲解的不清晰，技术同学理解的点和你想的点不在一个频道上？\n\n1、找出对照产品，直接打脸。这无异于说技术能力不行，很容易闹僵关系\n\n2、情怀：咱们做技术的都是有追求不是？咱总不能光做容易的啊？攻攻关，挑战一把，看能不能实现\n\n3、找其上级探寻可解决办法。说不定人家可以解决呢，这个同1、容易闹僵关系\n\n备注：产品经理最终是要解决问题的嘛，不是来请客吃饭，上述三点，还是有些手段可以降低额外杀伤力。\n\n\n\n最终结果：\n\n1、技术找到解决办法实现\n\n2、在产品层面规避，绕过\n\n可以试试这些应对策略？\n✔技术准则策略:我们技术的使命是不让技术成为解决客户问题的瓶颈。\n✔用户价值策略:这个需求不可能砍，是确定性，有商业价值，有用户场景\n✔技术一把手评估策略:这个需求在开评审会之前已经和技术负责人碰过，技术负责人评估过技术可实现。\n✔延缓策略:你现在不用急着当场给我答案，可以回去技术内部探讨后给出方案或结论。\n✔对手策略:客户反馈xxx竞品有此问题的解决方案，我们可以研究竞品怎么实现。\n\n划重点，需求评审中，意思就是你和开发，和测试，和其他的产品在评审一个需求的时候，突然不知道哪个人提了一个在你的知识盲区的问题或者是需求，你不知道该怎么办了。下策就是争！你要据理力争，如果对方否决你或者是不赞同你的需求，你一定要争一下，千万不可以怂，一定要争一下，如果你不争的话，你就在你的开发测试面前失去一点高大的形象，哪怕是你意识到自己的需求确实有问题，也要争一下！另外每一个产品经理都是杠精，你不杠一下的话，你对得起你这个岗位嘛？中策，其实就是怂，但是你也不要直接就怂，你就说，奥奥对对是这样，我下来改一下，或者我下来再确定一下。适当的认怂一下没什么的，但是不能经常怂。上策就是拖，拖个时间，你说你想一下，然后你再从不同的角度去说一下，大家一起发散这个问题，提出了一个更好的方案。比如一个开发给你提了一个知识盲区，不在你的射程范围内，那你就可以快速的想一下，再把他提的一个方案优化一下。诶，这样的话，大家发散了思维，他提的方案不咋地，你的方案也不咋地，但是你们优化出了一个比较好的方案，在大家看来，都会享受这个发散思维的过程，而不会产生相互贬低的想法了。\n\n作者：酒事\n链接：https://www.zhihu.com/question/398826847/answer/1258899085\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-10 14:09:55","updateTime":"2021-05-10 14:09:55","isExist":null},{"id":2219,"question":"裤子拉链老来开?","simplecontent":null,"content":"一、可以到街口修鞋师傅那换个拉链头或他们用专用工具来修理;\n二、修裤边的地方换根拉链等,问题都会得到轻松解决。\n是拉链头有问题，一般大家都没注意，正规厂家的拉链头都有一个自锁功能，就是在拉手小铁片下有一个金属小尖头，当你拉好拉链，把拉链头压平，小尖头就会卡在拉链上，不会开。\n你的问题，换个有自锁功能的拉链头就可以了。\n牛仔裤子用的拉链头通常是半自动锁针的那种，如果锁针弹力不好时则易产生不自锁情况。同上建议换拉链头。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:55:05","updateTime":"2021-05-10 11:55:05","isExist":null},{"id":416,"question":"谈恋爱外貌重要吗?","simplecontent":"","content":"恋爱的时候相貌很重要，但等到结婚之后发现：最不重要的就是相貌了。\n因为时间久了，看习惯了，再好看的容貌也不觉得多好看了，再丑的容貌也不觉得丑了。总之就是皮囊不重要了，重要的是灵魂：人品、三观和有趣、宽容。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:51:33","updateTime":"2021-05-10 11:51:34","isExist":null},{"id":102,"question":"还没结婚买房子需要和女朋友商量吗，婚前的房子","simplecontent":"","content":"我是个非常喜欢做主的人，当时我男友买婚房也不经过我考虑，不过我男友也是没有什么话语权的，他父母给他买的，地段我很不喜欢，户型我也不喜欢，反正心里就有疙瘩。不过反正也不写我名字，心里有疙瘩的结果就是我打死也不住那边，拿自己家做婚房，那套房子拿去出租，他父母也别想来我家里住，也别想让我三从四德。\n\n作者：浅浅\n链接：https://www.zhihu.com/question/290377520/answer/470977801\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:50:57","updateTime":"2021-05-10 11:50:57","isExist":null},{"id":584,"question":"节目组找的什么人 穷成这样自己都养不活 能养孩子么?","simplecontent":"","content":" 情商还这么低 婚姻本就是责任 需要一定物质基础的 自己都活不了 吃软饭么要\n婚姻不是扶贫\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:26:42","updateTime":"2021-05-10 11:26:43","isExist":null},{"id":626,"question":"为啥男生很难结婚?","simplecontent":"","content":"大多数本科毕业的都已经23岁左右了，很快就到了适婚年龄，男生就要考虑买车买房娶媳妇的彩礼钱了，这些压力摆在面前，家庭条件一般的男生根本没有时间再去考研了，耽误不起了。只能尽早结束学业，步入社会打拼，储备基金，为以后娶媳妇养家做准备。所以现实压力根本不允许很多家庭条件一般的男生继续在校园象牙塔里待下去。而女生没有那么大的养家压力，读研更有助于找优质对象，进体制内有一份稳定的工作\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:26:18","updateTime":"2021-05-10 11:26:18","isExist":null},{"id":748,"question":"婚检是免费的吗","simplecontent":"","content":"目前我们国家的婚检是免费的，只要一方的户口在本地，夫妻双方都可以去当地的医院做免费的婚检。婚检的内容包括了血常规、白带常规、妇科、乙肝两对半的化验检查，并且需要了解外生殖器发育和内生殖器发育是否有异常。婚检的目的主要是了解是否有不适宜结婚的疾病，但是婚检并不能查出女性或者男性是否患有不孕症的情况，这一点要给予区别。建议最好是月经干净三天到七天内做婚检。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:23:32","updateTime":"2021-05-10 11:23:32","isExist":null},{"id":749,"question":"婚检有哪些内容","simplecontent":"","content":"婚前体检内容主要有男女生殖器官的检查，还有就是进行乙肝五项和肝功能检查，明确是否有传染病。还会明确是否有家族遗传病，必要时可进行遗传病菌的检测。\n\n婚检检查内容\n\n一、询问项目\n\n1．了解双方是否有共同的血缘关系，双方出示单位“婚姻状况证明”。\n\n2．了解双方现在和过去的病史和服药史。如有无性病、麻风病、精神病、各种传染病、遗传病、重要脏器、泌尿生殖系统疾病和智力发育情况等。\n\n3．了解双方个人生活史，询问近期工作和居住生活情况、烟酒嗜好等。\n\n4．女方月经史和男方遗精情况。\n\n5．了解双方家族有无先天重度残疾，重点询问与遗传有关的病史。\n\n6．再婚者，应询问以往婚育史。\n\n\n\n二、体格检查，包括内科检查、生殖器检查和实验室检查。\n\n1．内科检查，就是全身体格检查。\n\n2．生殖器检查，在于发现影响婚育的生殖器疾病。女性作腹部肛门双合诊，注意有无处女膜闭锁、阴道缺如或闭锁、子宫缺如或发育不良、子宫肌瘤、子宫内膜异位症等；查男性生殖器时，注意有无包茎、阴茎硬结、阴茎短小、尿道下裂、隐睾、睾丸过小、精索静脉曲张和鞘膜积液等。\n\n3．实验室检查，除了血常规、尿常规、胸透、肝功能和血型外，女性作阴道分泌物找滴虫、霉菌，必要时作淋菌涂片检查；男性作精液常规化验。必要时，还要作智商测定。\n\n病情分析：婚前体检都检查以下内容，内科检查，听诊心肺，触诊肝脾，询问家族遗传史，有无遗传性疾病。外科检查甲状腺，乳腺，四肢，关节。身高，体重，体重指数，血压，血糖，血脂，肝功能，肾功能，血常规，尿常规，心电图，胸部正侧位片，肝、胆、胰、脾、肾彩超，膀胱、前列腺彩超，子宫、卵巢彩超。乙肝五项的检查，排除慢性乙型肝炎。\n\n\n\n\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:22:48","updateTime":"2021-05-10 11:22:48","isExist":null},{"id":1708,"question":"现在很多人不想结婚，很多事理由比结婚还多?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-10 11:21:05","updateTime":"2021-05-10 11:21:06","isExist":null},{"id":1732,"question":"什么时候想结婚?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-10 11:21:05","updateTime":"2021-05-10 11:21:05","isExist":null},{"id":1793,"question":"结婚前需要考虑什么事情?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-10 11:21:04","updateTime":"2021-05-10 11:21:04","isExist":null},{"id":1794,"question":"结婚男生放多少天假?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-10 11:21:03","updateTime":"2021-05-10 11:21:04","isExist":null},{"id":2218,"question":"结婚证多少钱?","simplecontent":null,"content":"从2017年起，全国各地各省市区陆续停止收取婚姻登记证书工本费。在各婚姻登记处依法办理结婚登记和离婚登记的当事人(包括补领婚姻登记证)均为免费对象。这就意味着原先9元的结婚证将正式步入0元时代。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:20:33","updateTime":"2021-05-10 11:20:33","isExist":null},{"id":2217,"question":"低保条件?","simplecontent":null,"content":"低保的条件：\n1、凡具有本市正式农业户口，家庭年人均收入低于户籍所在区县当年农村低保标准的农村居民均属保障范围。\n2、夫妻一方持有本市农业户口，其配偶及子女为外省市或本市其他区县农业户口，在现居住地定居一年以上，家庭年人均收入低于所在区县当年农村低保标准的人员。\n3、其他符合享受农村低保待遇的人员。\n4、具有正常劳动能力，无正当理由拒绝劳动而造成生活困难的人员以及采取规避法律(法规)行为造成无经济来源、生活困难的人员不属于农村低保范围。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:20:04","updateTime":"2021-05-10 11:20:04","isExist":null},{"id":2216,"question":"牙套效果是如何的?","simplecontent":null,"content":"有没有用要看患者配不配合，隔三差五的忘记戴也是个问题。矫正是一个漫长的过程，如果是比较懒散的建议做金属自锁矫正。\n\n牙齿的矫正器当然是有用的。矫正器是通过外力的作用，对牙齿进行相应的排齐，或者是移动，从而达到正常的六项颌标准。所以牙齿矫正器是有用的，它是矫正牙齿的牙列不齐、矫正牙缝、矫正牙齿的深覆合、或者是深覆盖、或者是反颌的有效的治疗方法。\n\n所以，如果小朋友有牙齿的拥挤不齐，有龅牙或者是有地包天或者是有其他的错颌畸形，那么是可以通过牙齿的矫治器进行矫正的，能够达到比较好的效果。而且年龄越小，矫正的速度越快，矫正的效果更好。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:19:01","updateTime":"2021-05-10 11:19:01","isExist":null},{"id":2215,"question":"带牙套影响吃东西吗?","simplecontent":null,"content":"带牙套一般不会影响牙齿的发育，牙齿矫正的力量都是很轻的不用担心弄松牙齿，对吃东西是有影响的，不能吃大块的硬的东西，吃完东西就要刷牙","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:16:58","updateTime":"2021-05-10 11:16:58","isExist":null},{"id":2214,"question":"牙套带多久?","simplecontent":null,"content":"病情分析：牙套要戴多久并没有一个统一的时间。一般未成年人需要佩戴一年左右的时间，而成年人则需要两年以上的时间。除了年龄，牙齿的排列情况也直接影响矫正的时间。如果牙齿比较整齐，那么戴牙套的时间就略短，相反戴牙套时间就要更长。另外所选择牙套的材质不同，需要佩戴时间也是不同的。综上所述，带牙套的时间是因人而异的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:15:57","updateTime":"2021-05-10 11:15:57","isExist":null},{"id":2213,"question":"为啥使用牙套?","simplecontent":null,"content":"语音内容\n临床上一些患者由于牙齿排列不整齐、牙齿拥挤、咬合关系不良，有错(牙合)畸形的情况，需要戴牙套进行矫正。牙套就是用牙套固定牙齿，进行矫正治疗，使牙齿排列更整齐。戴牙套可以减少牙齿磨损，使牙齿美观度更高，还能防止牙齿脱落。\n\n临床上用来矫正牙齿的牙套种类有很多，有金属矫正器、陶瓷矫正器、隐形矫正器，不同种类的使用人群也不同。金属矫正器使用人群较多，一般患者需要使用两年时间，即可改善牙齿畸形症状。使用隐形矫正器进行矫正治疗效果更好，与组织的相容性较好，并且牙齿更容易清洁，患者不良反应较少，还可以节省矫正时间。建议患者可以选择适合自己的矫正方法进行治疗，可以改善自身存在的牙齿畸形情况。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:14:50","updateTime":"2021-05-10 11:14:50","isExist":null},{"id":1687,"question":"110.耳朵长痘原因?","simplecontent":null,"content":"耳垂里有硬疙瘩：是由于皮肤的皮脂腺孔被堵塞,皮脂腺分泌物不能被排出而逐渐膨大所形成的.这是最为多见的一种皮肤良性肿瘤,即粉瘤。很多人都曾有过长粉瘤的经历,尤其是处于生长发育旺盛期的青年人.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 11:13:58","updateTime":"2021-05-10 11:13:58","isExist":null},{"id":2211,"question":"米和寸换算?","simplecontent":null,"content":"1米等于3寸，一寸等于0.0333米\n\n一米等于三尺,一尺等于十寸,相当于3.3厘米,注意寸和英寸的区别,一英寸等于2.54厘米","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:38:58","updateTime":"2021-05-10 10:38:58","isExist":null},{"id":2212,"question":"寸和ban区别?","simplecontent":null,"content":"只是说法不同。一般蛋糕店里更常用磅来定义蛋糕，因为蛋糕是欧美那边原产的，因此也延续了国外的说法，而寸的说法主要用于我们自己做烘焙的时候的模具大小，6寸、8寸等，一磅约等于454克，相当于6寸蛋糕模具烤出来的蛋糕，2磅则相当于8寸，3磅相当于14寸。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:37:20","updateTime":"2021-05-10 10:37:20","isExist":null},{"id":2210,"question":"黄金多少钱一克?","simplecontent":null,"content":"380元","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:34:55","updateTime":"2021-05-10 10:34:55","isExist":null},{"id":2209,"question":"北京同仁堂如何?","simplecontent":null,"content":"北京同仁堂是全国中药行业著名的老字号。创建于1669年（清康熙 同仁堂\n八年），自1723年开始供奉御药，历经八代皇帝188年。在300多年的风雨历程中，历代同仁堂人始终恪守\"炮制虽繁必不敢省人工，品味虽贵必不敢减物力\"的古训，树立\"修合无人见，存心有天知\"的自律意识，造就了制药过程中兢兢小心、精益求精的严细精神，其产品以\"配方独特、选 北京同仁堂\n料上乘、工艺精湛、疗效显著\"而享誉海内外，产品行销40多个国家和地区。 同仁堂作为中国第一个驰名商标，品牌优势得天独厚。参加了马德里协约国和巴黎公约国的注册，受到国际组织的保护。在世界50多个国家和地区办理了注册登记手续，是第一个在台湾注册的大陆商标。 同仁堂集团被国家工业经济联合会和名牌战略推进委员会，推荐为最具冲击世界名牌的 16家企业之一，被中宣部命名为全国文明单位和精神文明建设先进单位，集团领导班子被中组部和国务院国资委授予“四好领导班子”； 同仁堂被国家商业部授予“老字号”品牌，荣获“2005CCTV我最喜爱的中国品牌”、“2004年度中国最具影响力行业十佳品牌”、“影响北京百姓生活的十大品牌”，“中国出口名牌企业”。2004年被中宣部、国务院国资委确定为十户国有重点企业典型经验之一。 2008年同仁堂入选世界品牌价值实验室编制的《中国购买者满意度第一品牌》，排名第八。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:27:53","updateTime":"2021-05-10 10:27:53","isExist":null},{"id":2208,"question":"同仁堂如何?","simplecontent":null,"content":"同仁堂就是封建迷信的余孽，卖的都是一些未经双盲实验的，以讲故事为主的中草药，“治”的都是本来就可以自愈的小病假病慢性病，而且还是边“治”病边致病，富含马兜铃酸的毒草不知卖了几百年，动不动还发布个抗雾霾的济世良方愚弄大众刷存在感，简直就是现世的义和团。最为可悲的是，这种开历史倒车的存在居然还是由国家站台并大力扶持的。同仁堂首先是文化其次才是医药，对于提升虚无的民族自信大有裨益。这种企业的存在和欧美的基督教会别无二致，最多能起到个慰藉心灵的作用，身体不适就归结为邪魔附体，需要圣水的洗礼，动不动再卖点赎罪卷赚赚智商税。而且作为商家，第一要务就是利益最大化，依仗着自己的高知名度和政府的背书，漫天要价也是它最理性明智的选择。\n\n作者：moodyblues\n链接：https://www.zhihu.com/question/299409631/answer/518465268\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:26:51","updateTime":"2021-05-10 10:26:51","isExist":null},{"id":2207,"question":"南京同仁堂祛痘产品如何?","simplecontent":null,"content":"之前用过一款南京同仁堂的祛斑霜，100多块钱买的，当时是经常熬夜和对着电脑长了很多小的黄褐斑，坚持用了一个月左右吧，斑点确实变淡了些，不过不知道是不是祛斑霜的效果，应该还是有点效果的，我后面就改了晚上熬夜的习惯，上班看电脑也是擦了隔离防晒，话说防晒和隔离真的很重要，能够很好的保护皮肤，所以说护肤品还是需要用一下，自己试一下就知道了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:25:37","updateTime":"2021-05-10 10:25:37","isExist":null},{"id":2206,"question":"什么时间睡觉好?","simplecontent":null,"content":"22:00 ~ 6:00 和 2:00 ~ 10:00，同样是8小时，但睡眠质量不一样。决定人睡眠质量的不是时间长短，而是周期。\n\n根据脑电波成分的不同把睡眠周期分为5个阶段，分别是：入睡期、浅睡期、熟睡期、深睡期、快速眼动期，从浅入深交替出现，完成一个睡眠周期的时间通常约为90-110分钟。\n\n近年来，人们睡前使用电子设备的时间大幅增加，特别是青少年，他们的睡眠生物钟大多是延迟型，常常直到深夜还是精神振奋，到中午才能睡醒。\n\n如果你经常晚睡，一定要在凌晨2～3点之前入睡，因为这是深睡眠期分布最多的时间段，在此之前入睡基本都能保证比较充足的深度睡眠，有助于恢复体力。\n\n如果经常在凌晨3点之后才入睡，快速眼动期睡眠会占绝大多数，主要表现为心跳加快，呼吸不稳多梦，无论之后睡多长时间，深睡眠时间都是不足，第二天常常身心疲惫。\n\n那么，具体怎么做，才更有利于获得高质量的睡眠呢？\n\n首先，要校准睡眠生物钟，保持一个健康的作息表，不随便打破。保持自身的睡眠时间与设定的生物时钟同步，当睡眠达到一定时间，大脑即发送指令，就会自然醒来。\n\n偶尔熬夜了，尽量不要打乱平时起床的时间点，多喝水和食用新鲜水果补充维生素，白天适当补充睡眠，午休不要超过2小时。\n\n保持规律的饮食习惯，合理搭配营养，控制碳水化合物的摄取，避免傍晚饮用含咖啡因的神经刺激性饮料，比如奶茶、可乐、茶水、咖啡等。坚持参加体育锻炼，特别是有氧运动，养成定期锻炼的习惯。\n\n最后，如果实在睡不着，睡不好，还是要自我评估睡眠状况，认真对待可能存在的睡眠问题，发现相关疾病需要请专业医生评估和积极治疗。\n\n祝您睡个好觉。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 10:23:32","updateTime":"2021-05-10 10:23:32","isExist":null},{"id":2205,"question":"java什么场景用groovy?","simplecontent":null,"content":"groovy 在我的理解是可以很好的和java结合 由于它是自己的一套编译机制 (当然也可以用jvm) 可以实现项目的\"热部署\"不知道怎么说你能不能理解.\n\n比如在resis存储groovy,把groovy展示成页面，做一些检验，只要修改内容就可以了","filterContent":null,"type":"java","status":0,"createTime":"2021-05-10 10:08:47","updateTime":"2021-05-10 10:08:48","isExist":null},{"id":2204,"question":"java程序员为什么使用Groovy？","simplecontent":null,"content":"是的，你可以用java语法来编写groovy,最后还可以生成class文件，直接用java调用。你会说，这有什么好的，不就是改了个后缀名么？呕，也许吧…但是它的亮点当然不是这个，它的亮点是你可以在Groovy里面直接用java语法混搭写，当然不是很推荐这样做的。\n\n不需要java的反射，不需要冗长的代码，不需要各种try catch 异常，你就可以实现各种神奇的事情。Groovy的class可以这样新增一个方法，或者调用它。\n\njava是一把基础工具，等你需要的时候，你需要到处去找jar包，来填充自己的程序，而且你需要看API去弄懂各种使用。此外，java的编写实在是太冗长了，为了打印一个HelloWorld，你需要编写class, 写一个main函数。对于Groovy来说：print “hello world!”.这一句就足够了，这只是开始…","filterContent":null,"type":"java","status":0,"createTime":"2021-05-10 10:02:33","updateTime":"2021-05-10 10:02:33","isExist":null},{"id":2203,"question":"为什么叫石锅鱼?","simplecontent":null,"content":"作为湘菜中的一道名菜，其制作方法很是独特，用一块大的花岗岩岩石凿成有双耳的石锅， 将鱼放在石锅内烹煎，然后，再加上以辣椒为主的各式佐料，又再加上一些滋补药材，这样，经过一番复杂的烹调工序的操作流程之后，一锅“石锅鱼”诞生了。当用石锅烹制的“石锅鱼”端上桌来时，一定会令你垂涎三尺。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:19:05","updateTime":"2021-05-10 01:19:05","isExist":null},{"id":2202,"question":"为什么用巴沙鱼烤鱼?","simplecontent":null,"content":"淡水养殖的鱼类，它的好处是产量多，生长周期短，而且肉质细嫩，没有腥味和怪味。\n\n最后巴沙鱼的肉质比较厚实，久煮不烂，可以切出花样，这也弥补了草鱼的缺点，因此越来越多的店都选用巴沙鱼来做酸菜鱼。\n\n因为巴沙鱼的肉质比较鲜嫩。其实成本也不是特别高。\n\n因为巴沙鱼成本低，口感好 就这样而已哦没有啥","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:17:48","updateTime":"2021-05-10 01:17:48","isExist":null},{"id":2201,"question":"烤鱼比较好吃?","simplecontent":null,"content":"石锅鱼，纸片鱼，酸菜鱼，酱香烤鱼，紫苏烤鱼，香辣烤鱼","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:16:44","updateTime":"2021-05-10 01:16:44","isExist":null},{"id":2200,"question":"烤鱼有哪些鱼?","simplecontent":null,"content":"家常烤鱼比较常见的有：鲤鱼、草鱼、黑鱼、鲶鱼、鲈鱼、武昌鱼等等。草鱼:做烤鱼最常用的品种，肉质细嫩弹牙。适合制作麻辣、香辣、豆豉、孜然等烤鱼口味，要注意把鱼鳞清理刮干净。鲤鱼:肉质细嫩绵软，蛋白质极其丰富。适合制作泡椒、香辣、豆豉、麻辣等口味，制作的时候注意把鱼鳞刮干净，注意鲤鱼胆有毒并且有难以去除的苦味，切勿污染鱼肉。鲶鱼:肉质软嫩肥美，富含蛋白质和脂肪因此做出来的烤鱼比较香。适合制作酸菜、蒜香、泡椒、山椒等口味，注意在做烤鱼之前先喂养两天以去除泥腥味，同时要注意的是鲶鱼卵有毒不可食用。清江鱼:肉质细嫩软滑，是肉质最好，无公害，无污染，无激素，富含多种营养，公认淡水鱼之王的品种。制作的时候要注意把血放干净，适合制作鲜辣、葱香、香辣、蒜香等口味的烤鱼。长吻鮠:肉质细嫩鲜美，营养丰富，长期作为人们的滋补水产品。适合制作香辣、酸菜、泡椒、咖喱等口味的烤鱼，制作的时候要注意把血放干净。花鲈:口感软嫩Q弹。适合制作香辣、孜然、麻辣、黑椒等口味的烤鱼，制作的时候注意把鱼鳞刮干净。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:14:21","updateTime":"2021-05-10 01:14:21","isExist":null},{"id":2199,"question":"添姿的生日?","simplecontent":null,"content":"11月19号","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:11:48","updateTime":"2021-05-10 01:11:48","isExist":null},{"id":789,"question":"海底捞火锅服务有哪些?","simplecontent":"","content":"1.为老年人孕妇提供舒服的靠椅 2.为小孩提供宝宝椅，宝宝床，还有专门提供给小孩的鸡蛋羹，八宝粥…… 3.顾客在等坐的时候既可以打扑克，也可以下象棋（大人小孩全部都有）；最让顾客感兴趣的是可以折星星、叠千纸鹤等活动可以换毛肚。 4.免费为顾客存放物品，包括充电等 5.员工集体为顾客过生日，唱生日歌 6.如果下雨，为顾客准备一次性雨披 7.去洗手间有专门服务员为你递纸巾，洗手间还有护手霜，卫生纸（巾）\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:11:31","updateTime":"2021-05-10 01:11:32","isExist":null},{"id":2198,"question":"罗永浩历史?","simplecontent":null,"content":"人物评价\n人物经历\n学习生涯\n精选片单 从新东方老师到卖艺还债，回顾段子手罗永浩的创业经历！\n01:43\n+ 关注\n2020年罗永浩要拍“真还传”：罗永浩在一档节目中表示，自己六亿的债务已经还清四亿。\n19.3万次播放 | 5个视频\n1985年，罗永浩就读延吉市第六中学。\n1989年，高中二年级从吉林省延边第二中学退学。[20]\n罗永浩：高考没教我的，人生全教了\n\n视觉志\n赞304\n阅读1.9万\n就业经历\n2000年12月，给北京新东方学校校长俞敏洪写了一封求职信，在两次试讲失败后，俞敏洪给了他第三次试讲的机会，2001年成为北京新东方学校的任课教师。[20]\n共13张\n罗永浩生活照\n2001年至2006年在北京新东方学校任教，由于教学风格幽默诙谐并且具有高度理想主义气质的感染力，所以极受学生欢迎。很多学生盗录其讲课内容在大学的校内网站上传播分享，这些音质奇差的盗录内容在2003年左右流传到了互联网上，旋即以“老罗语录”的名义风靡大江南北，成为一个奇特的文化现象。\n2006年6月，罗永浩从新东方辞职。[21]\n创业经历\n2006年7月31日，罗永浩发起创办的牛博网正式开张。与其它流行博客提供商不同，虽然牛博网也是免费注册并提供空间，但申请开通博客主要通过自我推荐的方式递交给管理员，通过审查后方可开通。\n2008年4月19日，牛博网日PV首次突破百万。\n2008年6月，罗永浩创办“老罗和他的朋友们教育科技（北京）有限公司”，即北京市海淀区至圣嘉德培训学校。\n2008年7月，罗永浩英语培训学校在北京开始营业。[21]\n2009年1月9日下午，牛博网国内服务器被关闭，牛博国际也无法访问。[21]\n2012年5月，罗永浩创办锤子科技。[22]\n2013年3月27日，罗永浩Smartisan OS发布会正式举行。\n2014年5月20日，锤子手机正式发布，命名为Smartisan T1。[23]\n2015年1月，老罗正式关闭了罗永浩英语(课程)培训学校。[24]\n2015年8月25日，锤子科技发布了一款面向年轻人的坚果手机。[25]\n2015年12月29日，锤子科技今天在北京举行发布会，发布会上罗永浩发布了锤子科技的新一代旗舰锤子手机T2。[26]\n2016年10月18日上海，锤子科技举行了2016年的首场发布会。罗永浩首次在发布会后接受了采访，他围绕产品、公司、资本和这一年来","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:10:16","updateTime":"2021-05-10 01:10:16","isExist":null},{"id":2197,"question":"罗永浩是做什么的?","simplecontent":null,"content":"罗永浩，男，1972年出生于吉林省延边朝鲜族自治州和龙县（今和龙市），现为交个朋友直播间首席好物推荐官[1]，企业家，演说家[2]。曾先后创办过老罗英语培训学校、牛博网、锤子科技[3][4]，并著有《我的奋斗》、《生命不息，折腾不止》[5]、《创业在路上》[6]等书。[7]\n\n2020年3月26日，罗永浩正式宣布抖音成为其独家直播带货平台[8]，并于4月1日晚完成了直播带货首秀。数据显示，首次直播支付交易总额超1.1亿元，累计观看人数超4800万人[9]。罗永浩从开始直播带货以来半年时间里，先后助力湖北秭归脐橙[10]、吉林荞麦冷面[11]、甘肃平凉苹果[12]、江西南丰蜜桔[13]、陕西延安小米[14]、陕西富平柿饼[15]等一系列农产品的公益助农直播[16]。\n\n2021年3月29日晚，罗永浩发文称，出差期间，发现无法预订回京机票，收到“被采取限制消费措施”提示[77]。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:09:28","updateTime":"2021-05-10 01:09:28","isExist":null},{"id":2196,"question":"车厘子和樱桃大致区别?","simplecontent":null,"content":"1/6分步阅读\n车厘子是樱桃的一个品种，车厘子是欧洲甜樱桃。\n\n2/6\n但在生活中欧洲甜樱桃为进口水果，为了与国内樱桃进行区分称其为车厘子。\n\n下载快手_车厘子和樱桃的区别的做法_营养又美味\n广告\n3/6\n车厘子的个头比樱桃大，颜色为暗红，樱桃颜色多为浅红。\n\n深圳 合同养鸭 补贴20W 不要定金 包回购成鸭\n广告\n4/6\n车厘子的果肉比较厚，入口饱满，比较甜，樱桃薄一点，多少有酸甜的口味。\n\n5/6\n车厘子价格比樱桃高，樱桃大概5月份上市，期限一个多月。\n\n6/6\n车厘子大约6月份上市，期限两个多月。\n\n编辑于2019-04-09，内容仅供参考并受版权保护","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:08:15","updateTime":"2021-05-10 01:08:15","isExist":null},{"id":2195,"question":"车厘子和樱桃区别?","simplecontent":null,"content":"1、外观口味不同\n\n虽然从本质上来说是同一种水果，但还是很好分辨他们的，车厘子外表为暗红色，而樱桃多为红色或浅红色为主。车厘子果实较为厚实，弹性十足，口感细腻，汁多味美，味极甜；而樱桃较薄，果肉较小，味甜带酸。\n\n2、生长地域\n\n车厘子原产美国，在每年6月中旬成熟出产，可持续到8月中旬，时间长，是真正意义上的季节性水果。我国樱桃喜温暖湿润环境，抗寒力较弱，在每年5月成熟出产，只有一月时间，时间较短。\n\n3、营养价值\n\n车厘子车厘子有补气祛湿、益气止泻等功效，由于口味甘甜，还有很好的止渴能力科幻剧风湿、腰腿疼痛以及关节炎症等症状。而樱桃有止痛美颜、祛风透疹等功效，我们中国喜欢“以形补形”，说它补血效果极好，其实不然，它的含铁量极低，除此之外也没发现其他补血物质。\n\n总的来说车厘子价格高的原因是多方面因素所造成，作为昂贵的水果品种，大家可以适量购","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:07:12","updateTime":"2021-05-10 01:07:12","isExist":null},{"id":2194,"question":"车厘子为什么贵?","simplecontent":null,"content":"车厘子价格高是因为其含有丰富的营养价值，铁元素含量位于水果之首；还有非常高昂的运输成本，我们吃的车厘子多是国外空运，需要支付一定数额的关税和运输费用；对于种植条件要求较高，加重了种植成本，消费者购买到的车厘子价格也就会随之上涨。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:06:30","updateTime":"2021-05-10 01:06:30","isExist":null},{"id":2193,"question":"拼多多百亿补贴是真的吗?","simplecontent":null,"content":"在拼多多最新财报里，有一个特别值得我们关注的数字，就是这个第三季度的补贴和推广费用，如果这个数字是真实的，那基本上可以说明拼多多的百亿补贴是真金白银补贴出去的，并没有弄虚作假。\n如果你还是怀疑他的补贴是真补贴还是假补贴，很简单，多找几款商品，看它补贴完之后的到手价是不是真的比淘宝、京东便宜，但是要注意的是，因为不排除有些商家表面上挂着一个超低价，但实际上一直处在断货的状态，所以光是价格上的便宜还不算，最终你还要看是不是真的能买到手，如果它的价格确实是全网最低，并且能顺利收到货，那就能说明他没有糊弄我们消费者。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:01:19","updateTime":"2021-05-10 01:01:19","isExist":null},{"id":2192,"question":"拼多多的百亿补贴是正品吗?","simplecontent":null,"content":"真要是买到假货，你应该高兴才对，拼多多给所有参加百亿补贴的产品都上了中国人保财险的正品险，百分百保证正品且支持鉴定，假一赔十，仅需 4 个步骤，就可以获得单次最高 25 w元的赔偿，累计赔偿限额 200 w元。这已经不是羊毛，而是烤全羊了；就凭这个赔偿力度，买到假货的概率可能比中彩票还低，就我个人的经历来说，我在拼多多买过两台手机，收到的货没有翻车。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:00:57","updateTime":"2021-05-10 01:00:57","isExist":null},{"id":2191,"question":"拼多多百亿补贴是哪些产品?","simplecontent":null,"content":"如果说过去一年里，什么东西成为电商平台的标配，“百亿补贴”无疑是其中之一，“百亿补贴”的商品大都来自大牌，或者至少是叫得出名字的知名品牌；这些知名品牌在拼多多上都是以全网最低的价格售出，并不是这些品牌和拼多多玩的比较好，一上架到拼多多平台就降价出售，对于这中间的差价完完全全是由拼多多官方补给商家的，让消费者真正买到便宜的品牌正品，拉动内需，巩固用户。\n大家都知道，拼多多的低价早已经占领了绝大多数人的心智，这一点在下沉市场利大于弊毫无疑问。但是在一二线市场利弊得失就不好说了，因为在很多城市消费者心中从下沉市场崛起，主打低价的拼多多早已经成了假冒伪劣和便宜low的代名词；低端的品牌形象认知使得它很难真正渗透进城市的主流市场，特别是一二线城市的中高端消费水平人群；所以拼多多想要获得更多的中高端消费水平用户，就必须摆脱低价便宜的品牌形象，转型向高大上的方向发展；","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 01:00:11","updateTime":"2021-05-10 01:00:11","isExist":null},{"id":2190,"question":"饮水机质量差的?","simplecontent":null,"content":"第一招：看接水部件\n饮水机接水部件是关键，主要包括聪明座、三通接水管和冷热罐三部分。聪明座即露在外面托住水桶的部分，根据卫生部颁布的《生活饮用水卫生规范》规定，与纯净水接触部分，从塑料、不锈钢管到硅胶管，必须用“食用级”材料。部分杂牌小厂家为降低成本，使用的是劣质塑料，而劣质塑料本身含有很多细菌、病毒，同时与水接触可能向水中释放重金属等有害物，直接损害消费者的身体健康。\n普通消费者如何分辨是否采用“食用级”材料呢？专家指出：一看认证，看所选购的饮水机是否贴有“抗菌认证”；二看聪明座的光亮度，劣质塑料的透明度要比“食用级”塑料光亮度暗，透明性差，而且还可能含有杂质，俗称“黑机”；三看聪明座的硬度，使用或添加回收废旧塑料为原料制成的聪明座，其硬度差，用手挤压易变形；四听声音，好塑料制造出来的饮水机，拍打时发出清脆的“咚咚”声，而废旧塑料制成的饮水机，拍打时声音低沉，无质感。\n第二招：比钢板厚度\n近年钢材等原材料价格飞涨，直接导致饮水机成本上升。市面上很多杂牌饮水机为节约成本，偷工减料，钢板厚度只有约0.4毫米，而品牌饮水机采用优质钢板，厚度为0.8毫米，足足相差两倍。饮水机钢板主要起到抗压、延长使用寿命的作用。，桶装水的重量一般为10公斤左右，在如此重压下，钢板薄太薄的话，很容易变形断裂，产生漏电危险。\n第三招：要认清品牌\n目前国内涉足饮水机生产的企业有近2000家，但产能规模达到百万台的寥寥无几，80%以上的企业为非专业小厂或螺丝刀工厂，规模和研发能力很弱，主要靠零件组装、冒牌、贴牌生产，通过低价迷惑消费者，从中渔利。其实，饮水机的技术含量并不比冰箱、洗衣机等大家电低，由于饮水机是直接与饮用水接触的，对部件与部件间的密封性和材料的抗菌性要求十分严格。消费者如果一味贪图便宜，购买低价产品，其实得不偿失，因为即便是健康的桶装水，配上不健康的饮水机，结果流出来的水也肯定不健康。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:48:40","updateTime":"2021-05-10 00:48:40","isExist":null},{"id":2189,"question":"饮水机买什么牌子好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:47:10","updateTime":"2021-05-10 00:47:10","isExist":null},{"id":2188,"question":"情人节时间?","simplecontent":null,"content":"西方情人节2月14，国内的七夕情人节。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:46:09","updateTime":"2021-05-10 00:46:09","isExist":null},{"id":2187,"question":"送什么礼物给母亲?","simplecontent":null,"content":"TOP1枕头  \n\n现在送枕头也已成为一种潮流与时尚了。因为关心老人身体健康比送再多再好的礼物都显得更为重要。都说女儿是妈妈的贴身小棉袄，对于平时由于工作忙总是不能好好照顾父母的上班一族来说，计划送爸妈一个舒服的枕头，也算“小棉袄”的一份心意。特别是老年人颈椎大多数都处于亚健康状态，送个护颈枕应该是父母最开心的礼物了!\n\nTOP2鲁冰花  \n\n鲁冰花是给送客家母亲的主流花,花语和象征代表意义：母爱、刻苦耐劳、奉献。\n\nTOP3保健食品  \n\n很多朋友的妈妈都不捨得买名贵的保健品，宁愿把钱省下来或者是买了保健品都留给子女。尽管她总是珍惜每一分毫，却总是不惜代价把最好的留给我们。反过来为她的健康给予照料。\n\nTOP4做一天家务  \n\n母亲每天除了工作，还需照顾家里的日常起居。洗衣做饭、家务等等。一年一度的母亲节不彷让她休息一天，亲自下厨一顿丰盛晚餐以表孝心。\n\nTOP5一起做SPA  \n\n试想下做一次面部护理，配合能纾缓压力放鬆肌肉及排毒的身体护理，还有柠檬皮萃取全身磨砂，由头到脚焕然一新的妈妈又怎会不高兴?\n\nTOP5保健枕/按摩椅  \n\n随着我们子女的长大,父母的身躯不再像当初那么挺拔了。有时候经常在电话中听到父母说没睡好,脖子酸,肩膀酸。那会心里是不是挺不是滋味的?\n\nT0P6康乃馨  \n\n大部分代表了爱，魅力和尊敬之情，红色代表了爱和关怀。粉红康乃馨象征了不朽的母爱，与玫瑰所不同的是康乃馨代表的爱表现为比较清淡和温馨，适于形容亲情之爱，献给自己的双亲。\n\nTOP7美容护肤品  \n\n随着年岁的增加，母亲的肤质会变得敏感，角质很薄，选择温和性的对抗暗黄，美肤美白，祛斑除皱的产品会较适合妈妈使用。我们无力让时间却步不前，但是我们有能力令岁月减少对妈妈的脸留下印记。\n\nTOP8陪伴  \n\n母亲节大过天，预留一整天陪着母亲，已是最佳的母亲节大礼。\n\nTOP9老年机  \n\n现在50岁左右的妈妈可都还是很年轻,很潮的哦。老年机的话,还是送给年纪再大一些的妈妈吧。当然,年轻妈妈的话,也可以送手机的,送个漂亮实用的就行,一般性能方面倒没有特别大的需求。\n\nTOP10养生健康杯  \n\n水杯什么的最实用了,有木有!妈妈平时喝水的时候能感觉到你满满的爱啊!\n\nTOP11萱草  \n\n桔红或桔黄色的花，十分艳丽，非常适合供人观赏，它的花蕾叫金针，所以也叫金针蕾。在母亲节，子女为母亲送上一株","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:45:26","updateTime":"2021-05-10 00:45:26","isExist":null},{"id":2186,"question":"父亲节时间?","simplecontent":null,"content":"父亲节（Father's Day），顾名思义是感恩父亲的节日。约始于二十世纪初，起源于美国，现已广泛流传于世界各地，节日日期因地域而存在差异。\n\n最广泛的日期在每年6月的第三个星期日，世界上有52个国家和地区是在这一天过父亲节。节日里有各种的庆祝方式，大部分都与赠送礼物、家族聚餐或活动有关。\n\n中国官方没有设立正式的父亲节。但大陆民众习惯上使用6月第三个星期日当做父亲节；台湾地区定于每年8月8日，又称为“八八节”","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:43:44","updateTime":"2021-05-10 00:43:44","isExist":null},{"id":2185,"question":"母亲节时间?","simplecontent":null,"content":"母亲节每年都有，但节日日期并不是固定的，不过它有一个固定的点。想要知道每年母亲节是什么时间，只要记住这个点就可以了。那么，每年几月几号是母亲节呢?一起来记下它吧。\n母亲节\n一、母亲节是什么时间 每年几月几号是母亲节\n母亲节为每年5月的第二个周日，2017年的母亲节时间5月14日。\n母亲节","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:43:00","updateTime":"2021-05-10 00:43:00","isExist":null},{"id":2184,"question":"母亲节时间?","simplecontent":null,"content":"2021年是5月9号\n母亲节（Mother's Day），是一个感谢母亲的节日。母亲们在这一天通常会收到礼物，康乃馨被视为献给母亲的花，而中国的母亲花是萱草花，又叫忘忧草。[1]\n节日时间  5月的第二个星期日（美国）\n母亲花  萱草花、康乃馨\n目的  感谢母亲的节日","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:42:27","updateTime":"2021-05-10 00:42:27","isExist":null},{"id":2183,"question":"广西和贵州哪个发达?","simplecontent":null,"content":"2020年广西省GDP比贵州省排名靠前，2020年广西省经济比贵州省经济好。\n\n2020年，广西的GDP总量为2.22万亿元，贵州为1.78万亿元，因此广西领先于贵州。贵州的主要支柱产业酒、煤、电、烟以及旅游业，不过信息技术产业、高端制造产业、医药产业、航天航空也在快速的发展。而广西的主要产业是食品加工、石油化工、冶金、汽车制造以及机械。总体而言，贵州的产业方向是“新经济”和服务业，但是基础薄弱，是从零开始打造。广西的产业主要是重工业为主，有雄厚的基础。\n\n\n\n扩展资料：\n\n广西位置比贵州好：\n\n广西位于中国岭南地区，因为拥有北部湾的天然港湾，使得广西成为中国西南最近的出海口。广西也是中国和东南亚国家进行贸易的桥头堡。另外，从西南地区到达珠三角的交通线路也必经广西。水运方面，发源于云贵的西江干流流经广西，汇入了柳江、桂江、郁江等可以通航的河流。根据统计，广西的内河航运里程是位居全国第一的。在铁路方面，黔桂线、贵广高铁等西南出海通道都从广西经过。可以说，广西的地理位置是得天独厚。\n\n参考资料：大众网-31省份2020年GDP出炉 20省份GDP增速跑赢\n\n 3","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-10 00:00:10","updateTime":"2021-05-10 00:00:10","isExist":null},{"id":2182,"question":"贵州景点?","simplecontent":null,"content":"1.平塘天眼景区（中国天眼）\n平塘天眼景区（中国天眼）\n　　•世界最大的单口径球面射电望远镜，中国综合国力的完美体现。中国-——FAST（FivehundredmetersApertureSphericalTelescope，简称FAST），于2016年9月25日落成并投入使用，位于黔南布依族苗族自治州平塘……\n2.黄果树大瀑布 AAAAA\n黄果树大瀑布\n　　景点地址贵州省安顺市镇宁布依族苗族自治县。开放时间8:00—18:00。黄果树大瀑布位于贵州安顺镇宁布依族苗族自治县境内白水河上，连环密布的瀑布群而闻名于海内外，享有“中华第一瀑”之盛誉，也是世界上最阔大壮观的瀑布之一。奔腾的白水河在这里从悬崖绝壁上直泻而下，……\n3.百里杜鹃风景区 AAAAA\n百里杜鹃风景区\n　　门票:门票150人民币景点位置:贵州省毕节市百里杜鹃风景名胜区普底乡百里杜鹃风景名胜区，位于大方、黔西两县交界处，距省会贵阳155公里，是迄今为止中国已查明的面积最大的原生杜鹃林，总面积达125.8平方公里，百里杜鹃以此得名。在长约50公里，宽1.2至5.3公……\n\n4.青岩古镇 AAAAA\n青岩古镇\n　　位于贵阳市南郊，距市区约29公里。它是贵州四大古镇之一，一座建于600年前的军事古镇。古镇内设计精巧、工艺精湛的明清古建筑交错密布，寺庙、楼阁画栋雕梁、飞角重檐相间。悠悠古韵，被誉为中国最具魅力小镇之一。小镇，名青岩，位于贵阳花溪南12公里处，城门上大书“定广……\n5.镇远古城 AAAAA\n镇远古城\n　　镇远古城是贵州省黔东南苗族侗族自治州镇远县名镇，位于舞阳河畔，四周皆山。河水蜿蜒，以“S”形穿城而过，北岸为旧府城，南岸为旧卫城，远观颇似太极图。两城池皆为明代所建，现尚存部分城墙和城门。城内外古建筑、传统民居、历史码头数量颇多。镇远古镇交通方便区位优越，湘黔……\n6.梵净山（江口·印江）旅游区 AAAAA\n梵净山（江口·印江）旅游区\n　　梵净山位于贵州省的江口、印江、松桃、三县交界处，面积41900公顷，1978年建立省级自然保护区，1986年晋升为国家级，同年加--合国教科文组织国际“人与生物圈”保护区网，主要保护对象为亚热带森林生态系统及黔金丝猴、珙桐等珍稀动植物。梵净山是武陵山脉的主峰，……\n\n7.赤水丹霞旅游区 AAAAA\n赤水丹霞旅游区\n　　贵州赤水丹霞国家地质公园位于贵州省赤水市，地","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:58:51","updateTime":"2021-05-09 23:58:51","isExist":null},{"id":2181,"question":"广西景点?","simplecontent":null,"content":"　　说起广西，很多人心里第一个想到的都是“桂林山水甲天下”，这也使得广西的其他美景像被私藏起来一样，不被众人知晓，今天排行榜123就给大家带来了广西十大必去旅游景点，告诉您广西最值得去的旅游景点是哪里?广西有什么好玩的地方\n\n广西十大旅游景点\n　　1.桂林漓江风景区\n\n　　“桂林山水甲天下”中的精华就在漓江风景区，是广西广西十大旅游景点之首。这里是世界上规模最大、风景最美的岩溶山水游览区，有清、奇、巧、变四个特点，堪称百里画卷。乘船游览之间四周绿水萦回，清澈见底，山间石崖光怪陆离，形象万千，四周景象移步换景，令人时刻不在惊叹。\n\n　　门票：旺季(4月~11月)：210.00元 淡季(12月~3月)：190.00元\n\n　　开放时间：全天\n\n　　电话：0773-2825502,0773-2826484\n\n　　官方网站：https://www.liriver.com.cn/\n\n广西十佳旅游景区 广西最受欢迎的旅游景点有哪些?\n\n　　2.象山景区\n\n　　景点的主体景观象鼻山形状酷似一头大象，是桂林最著名的标志性景观之一，也是桂林市市徽标志。游览景区最重要的就是观赏象鼻山的全貌的壮观，可以坐船到爱情岛，这里环境优美，树木茂密，是观看象鼻山全景的最佳地点，也是新人拍摄婚纱照、婚庆的绝佳外景地。夜晚游览景区还能看到灯光秀，可以使象鼻山更加迷人。\n\n　　门票：75元\n\n　　开放时间：淡季(11月-次年3月)：7:00-18:30，旺季(4月-10月)：6:30-19:00。\n\n　　电话：0773-2215218,0773-2206800\n\n　　官方网站：https://www.glxbs.com/\n\n广西十佳旅游景区 广西最受欢迎的旅游景点有哪些?\n\n　　3.涠洲岛\n\n　　涠洲岛是火山喷发堆凝而成的岛屿，有“蓬莱仙岛”之称，这里有著名的“海枯石烂”，是情侣必去的景点之一。涠洲岛四面环海，每一处沙滩却有自己独特的风情，在这里你可以观赏海边日出、体验水上运动还可以品尝海鲜美味，适合停留几天慢慢享受。\n\n　　门票：115元\n\n　　开放时间：售票时间：8:00-20:00;岛内景点开放时间：旺季(5月-10月)8:00-18:00，淡季(11月-次年4月)：8:00-17:30。\n\n　　电话：0779-6016003\n\n　　官方网站：https://www.weizhouisland.co","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:57:41","updateTime":"2021-05-09 23:57:41","isExist":null},{"id":2180,"question":"广西好玩的景点?","simplecontent":null,"content":"广西好玩的旅游景点相当多，介绍起来各有千秋。\n\n1、桂林漓江景区\n\n中国山水景观的代表，世界罕见的山水画廊。中国旅游的黄金水道，广西龙头旅游景区，2004年接待游客达185万人次。国家级风景名胜区、4A景区。\n\n桂林漓江风景区位于广西壮族自治区北部，以喀斯特峰丛、河流、洞穴为主要景观，号称“水绕青山山绕水，山浮绿水水浮山”。 桂林漓江是第一批中国国家重点风景名胜区。 桂林山水于1985年被《中国旅游报》评为中国十大风景名胜之一。 1982年桂林市被评为首批国家历史文化名城。桂林漓江主要景点有象鼻山、九马画山、伏波山、叠彩山、芦笛岩、七星岩等。漓江发源于桂林市资源县，向南流经桂林、阳朔等地，过荔浦后称桂江，然后在梧州与西江汇合，全长426公里。漓江从桂林至阳朔一段两岸峰丛密布，自古就有“桂林山水甲天下，阳朔山水甲桂林”一说。\n\n\n\n2、钦州三娘湾旅游景区\n\n以来，共接待游客130多万人次，是广西继北海银滩之后又一处特色鲜明、环境优美的滨海休闲度假胜地。\n\n三娘湾景区自开业来，它的吉朴与纯美以及中华白海豚骄人的魅力已吸引国内外无数的游客。经过休渔期的精心策划，景区决定开拓一条全新的“海上之旅”行程，让游客“当一天渔民享一天乐”，登上观光旅游渔船，出海观景、钓鱼、品海鲜、沐海风、觅海豚，尽享蓝天碧水、人欢鱼跃的情趣。\n\n三娘湾海域有难得一见的世界奇观——三娘湾“七彩海豚”。\n\n3、北海银滩国家旅游度假区\n\n北海银滩面积超过大连、烟台、青岛、厦门和北戴河海滨浴场沙滩的总和，而平均坡度仅为0.05。\n\n沙滩均由高品位的石英砂堆积而成，在阳光的照射下，洁白、细腻的沙滩会泛出银光，故称银滩，北海银滩以其“滩长平、沙细白、水温净、浪柔软、无鲨鱼”等特点，而被称为“中国第一滩”。\n\n\n\n4、大新德天瀑布旅游区\n\n大新县德天瀑布位于广西南宁地区边陲大新县，在中越边境交界处，归春河上游，瀑布宽100米，高40米，气势磅礴、银瀑飞泻、三级跌落，蔚为壮观。若与紧邻的越南板约瀑布相连，堪称为世界第二大跨国瀑布。\n\n5、百色乐业大石围天坑群旅游景区\n\n乐业天坑群在方圆不到20平方公里的崇山峻岭里，分布着24个天坑，是世界上最大的天坑群，目前已开发的有大石围天坑、白洞天坑、穿洞天坑等，其中大石围天坑为乐业天坑群中的代表，也是乐业人民的骄傲。 大石围天坑群位于乐业县同乐镇刷把村百岩脚屯，形成于大约6","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:56:59","updateTime":"2021-05-09 23:56:59","isExist":null},{"id":2179,"question":"店铺装修费真的很贵吗?","simplecontent":null,"content":"店面装修价格：\n\n店铺装修价格没有一个标准，要根据当地的材料价格和人工费用来定，一般简单装修的话价格在450-500元/平方左右，简单精装价格在900-1000元/平方左右，高档装修的价格在1300-1400元/平方左右，如果投资费用多，那可以装修好点，投资费用少的话就简单装修了。\n\n店面装修费用包含内容:\n\n1.店面设计费，主要是包括项目测量费，方案设计费，施工图纸设计费。大概占据到整个装修费用的3%~5%。\n\n2.材料费，包含主材和辅材。主材是指在装修设计施工中成品和半成品的材料费，比如瓷砖，木地板，门等；辅材是指装饰装修施工中所消耗的难以明确计算的材料。涵盖有天花工程，墙面工程，水电工程，其他工程。整体费用大概占据到整个装修费用的70%~85%。\n\n3.人工费，是指整个店面项目装修设计工程中所耗的工人工资。\n\n4.管理费，主要是装修公司在装修过程中管理所产生的费用，包含利润，如企业业务人员的工资，行政管理人员的工资企业办公费用，企业房租，水电通信费，交通费等，是属于间接费用，都会分摊到装修工程的费用中，管理费一般为直接费用的5%~10%。\n\n店面装修注意事项:\n\n店铺装修要注意灯光设计，因为不同的灯光效果可以带给顾客不同的感受。要选用不同色泽的灯光和不同照明强度的灯光进行搭配使用，这样可以为顾客酿造一个舒适的购物环境，还可以激起顾客的消费欲望。店铺的新产品要用特殊处理的灯光照射，这样可以让产品提升一个档次。但是有一点需要注意就是灯光不能太杂乱无章，这样会影响消费者情绪。灯光照射强度要适中，太强的灯光会让消费者眼睛不适。\n\n一个设计新颖的招牌能够吸引广大消费者，可以给人留下深刻的印象。招牌设计得好坏决定了消费者对店铺商品的档次，大部分消费者会觉得一个时尚创新的招牌设计，其内的商品也应该是高档的，其品质也是优异的。如果一个店铺的招牌很普通，那给人的感觉就是其店内的商品也就一般般。所以，想要给消费者留下一个深刻的印象，店铺招牌一定要简洁，新颖，颜色足够醒目，字迹足够清晰。\n\n体现产品特色，要将产品特色和装修风格融为一体，这样是对产品的一种宣传，顾客会感觉产品有吸引力，从而提高销售量。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:56:16","updateTime":"2021-05-09 23:56:16","isExist":null},{"id":2178,"question":"理发店为啥这么贵?","simplecontent":null,"content":"这个是很正常的呀，因为理发店的话理发本来就很贵，要教人工店面还有其他的费用。\n\n现在可能所有的理发店都通气了吧，都是一个价\n\n这个主要是看人的技术啊，技术好的话，当然贵了。\n\n你好，理发店普遍很贵的原因：\n第一，店面成本比较高。一般理发店都是在一楼，而且是人流量比较多的商场附近甚至商场内部。\n第二，理发店的装修普遍是较好的，装修的成本高。\n除去这两者的话，相对偏远一点或者装修坏境没那么好的理发店费用就不会收很高了。\n所以，价格是跟成本挂钩的。如果单纯的是只想剪个头发，可以选择相对人流量不那么高的郊区，费用就会下降，但技术一般都是差不多的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:54:24","updateTime":"2021-05-09 23:54:24","isExist":null},{"id":2177,"question":"耗油低的车?","simplecontent":null,"content":"特斯拉，丰田，比亚迪","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:52:25","updateTime":"2021-05-09 23:52:25","isExist":null},{"id":2176,"question":"比较省油的车有哪些?","simplecontent":null,"content":"\n1、丰田雷凌、卡罗拉：丰田雷凌不仅是史上最帅气紧凑型轿车之一，更在空间、油耗、操控、安全和品质方面全面领先。而卡罗拉整车表现出前所未有的“宽而低”的态势，又营造出宽敞的车内空间。这两款车都是搭载了丰田非常成熟的不插电混动技术，油耗上相差无几，并且在低速时使用电力驱动，比汽油车更平顺、舒适，高级感十足，百公里油耗仅为5L，时最为省油的轿车。\n\n2、荣威E550：作为上汽新能源战略的重要一步，不仅是中国首款量产的三核插电式混合动力轿车，而且在电池安全、车身安全等方面更是通过了国内外各项严苛的检测。配置上，荣威e550有独特的米其林博悦LC系列轮胎，加上Green-motion高效能三核混动引擎，使荣威550插电式混合动力轿车百公里油耗仅1.6L，同时更可输出147千瓦的峰值功率及587牛米的峰值扭矩。\n\n3、高尔夫1.2T：高尔夫在国内有很多拥趸，而且一直以不错的操控性和年轻动感的外形著称，而1.2T车型以国内流行的小排量涡轮增压和双离合变速器为动力系统，在纯汽油车中油耗表现十分出众，百公里油耗6.73L。\n\n4、英朗：老款车型的油耗给人印象确实是比较大的，但新款车型出来后，油耗也大幅降低。根据统计，搭载1.4T发动机和7档双离合变速箱的英朗18T双离合豪华型，真实车主平均油耗为7.61L/100km，对于一辆别克的紧凑车来说，这低油耗表现已经是很难得了。\n\n5、启悦：这款车型在合资紧凑车型当中并不算太出彩，主要原因是品牌影响力不足，但该车在产品力表现上面还是不错的，外观好看，内饰做工也比较好，空间方面不也有不错的表现，而且配置比较高，性价比高。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:51:41","updateTime":"2021-05-09 23:51:41","isExist":null},{"id":2175,"question":"中型车—轿车、SUV?","simplecontent":null,"content":"不论是轿车还是SUV，中型车的尺寸已经能够很好地满足家用的需求，部分的SUV更是有7座的设计。当然，也有少数像宝马3系这类主打运动性的中级车。从主流的情况来看，中型车主要为家用兼顾商务的用途，在家用的时候能够提供充分的空间（尤其7座车），在商用的时候，大气的外观又能够稍稍彰显车主的高级感。对于人口较大的家庭或者个体经营户，中型车是一个不错的选择。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:50:17","updateTime":"2021-05-09 23:50:17","isExist":null},{"id":2174,"question":"紧凑型车—轿车、SUV?","simplecontent":null,"content":"适用人群： 城市家庭用户、经常长途驾驶的用户\n\n紧凑型车一直是汽车市场的主流车型，其拥有着比小型车更充足的操控感或是舒适性。因此，我们可以将其视作小型车的升级版。由于车身尺寸更理想，紧凑型车能够使用诸如双叉臂、多连杆等体积更大的底盘部件，操控感以及乘坐的舒适感相对小型车有了质的提升。如果想更好享受驾驶乐趣以及顾及到家用，那紧凑车型则是一个最为合适的选择。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:49:53","updateTime":"2021-05-09 23:49:53","isExist":null},{"id":2173,"question":"微型车—轿车好处?","simplecontent":null,"content":"适用人群：单身、情侣、纯代步用户、拥有多辆汽车的用户\n\n这一类的车型售价往往十分实惠，5万元的价格便能够买到一辆配置相对不错的车，极为适合纯代步且首次购车的消费者。较小的车身尺寸在拥堵的城市出行相当的便利，而由于车身较小，发动机的排量能够尽可能缩小，油耗的表现极为理想（城市路况平均水平4毛/一公里）。出于尺寸以及成本的原因，微型车的驾驶感受并不出色，往往行驶质感颠簸、隔音感人。。。但仅用于城市代步还是很适宜的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:49:03","updateTime":"2021-05-09 23:49:03","isExist":null},{"id":2172,"question":"国产哪些电车好?","simplecontent":null,"content":"在内燃机时代中国已经落后于西方国家，不过随着新能源技术的发展咱们的汽车工业想实现弯道超车似乎是可以实现的事。这几年车企都推出了不少非常优秀的纯电车，国产纯电动汽车排名前十名谁能进榜？下面的新能源车榜单不得不看。\n\n1、 汉\n官方指导价 ： 23.00-28.00万\n\n级别 ： 中大型轿车\n\n比亚迪汉定位为品牌旗舰轿车，分别有纯电动ev和混合动力DM版本，两者在外观造型上有一定的差异，EV版本采用全封闭格栅，更符合纯电动汽车设计，线条凌厉，而DM版本则采用家族龙脸面谱。动力必定也是比亚迪汉的最大亮点，混合动力DM版本由2.0T涡轮增压发动机与电动机组成，百公里综合油耗可达1.4L，官方百公里加速仅需2.9秒，性能十分强劲。\n\n\n\n2、 蔚来ES8\n官方指导价 ： 44.80-62.40万\n\n级别 ： 中大型SUV\n\n蔚来ES8是一款中大型纯电家用SUV，580公里的NEDC续航里程在这么多电动车里算是很高了，而且性能也非常强悍，百公里加速只要4.4秒。作为家用车，蔚来ES8主打豪华感和舒适性，与传统豪华车相比有过之而无不及。不过有一个不容忽视的缺点，就是ES8的体积太大吨位太重，所以能耗偏高，所以有时候纯电车也不一定就是节能的。\n\n\n\n3、 小鹏汽车P7\n官方指导价 ： 22.99-40.99万\n\n级别 ： 中型轿车\n\n定位中型纯电动汽车的小鹏p7整体外观设计比较前卫，前脸采用封闭式中网设计，和很多新能源车型一样，保持简约的设计风格。小鹏p7的内饰依旧和外观一样简洁，整体营造出更具家、更前卫的座舱氛围。最长续航里程达到706km，国内目前的顶尖水准，车主反馈实测可以达到600多公里。\n\n\n\n4、 唐新能源\n官方指导价 ： 19.78-35.99万\n\n级别 ： 中型SUV\n\n30万内加速最快、最强豪华感SUV这些标签对于新款比亚迪唐新能源来说一点都不夸张，对于新款唐新能源来说，什么悬架质感、转向手感都是次要的，只要你上了车，充好电，它就是一台无情的加速机器，只管加速就好。\n\n\n\n5、 蔚来ES6\n官方指导价 ： 35.80-54.80万\n\n级别 ： 中型SUV\n\n蔚来ES6是一款中型纯电SUV，相比ES8来说它的价格更加容易让人接受。感官方面，ES6的外观内饰都很有档次感，空间的表现也很不错。驾驶方面，蔚来ES6的感受会比较模糊，介于运动和舒适之间，这一方面仍需改善。续","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:47:37","updateTime":"2021-05-09 23:47:37","isExist":null},{"id":2171,"question":"国产买哪些车比较好?","simplecontent":null,"content":"五菱，哈佛，吉利帝豪，长安，比亚迪","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:46:11","updateTime":"2021-05-09 23:46:11","isExist":null},{"id":2170,"question":"国产小车有名的?","simplecontent":null,"content":"这些年，国产汽车取得的成绩有目共睹，无论是销量，还是造车水平，都有了突飞猛进的跨越式进步。以下是小编为大家整理的国产汽车十大品牌：\n1、长安汽车，长安汽车是中国知名汽车制造企业,中国品牌汽车领导者,是第一家中国品牌汽车产销累计突破1000万辆的车企,连续10年实现中国品牌汽车销量第一；拥有CS系列、睿骋、逸动、悦翔、奔奔等知名汽车品牌。\n\n2、一汽汽车，中国第一汽车集团有限公司（原第一汽车制造厂）简称“中国一汽”或“一汽”，英文品牌标志为FAW，FAW就是第一汽车制造厂的英文缩写。是中央直属国有特大型汽车生产企业，一汽总部位于长春市，前身是第一汽车制造厂，毛泽东主席题写厂名。一汽1953年奠基兴建，1956年建成并投产，制造出新中国第一辆解放牌卡车。1958年制造出新中国第一辆东风牌小轿车和第一辆红旗牌高级轿车。一汽的建成开创了中国汽车工业新的历史。经过六十多年的发展，一汽已经成为国内最大的汽车企业集团之一。2013年营业额高达4500亿，曾经连续8年蝉联世界500强榜单。1956年7月13日，在长春第一汽车制造厂崭新的总装线上，被毛主席命名为“解放”牌的第一辆汽车试制成功。在欢声笑语和雷鸣般的掌声中，首批12辆解放牌汽车缓缓驶下装配线。这标志着第一汽车制造厂的三年建厂目标如期达到，也结束了中国不能批量制造汽车的历史。2013年营业额高达4500亿，曾经连续8年蝉联世界500强榜单。\n\n3、比亚迪汽车，比亚迪是一家中国汽车品牌，创立于1995年，主要生产商务轿车和家用轿车。由20多人的规模起步，2003年成长为全球第二大充电电池生产商，同年组建比亚迪汽车。比亚迪汽车遵循自主研发、自主生产、自主品牌的发展路线，矢志打造真正物美价廉的国民用车，产品的设计既汲取国际潮流的先进理念，又符合中国文化的审美观念。\n\n4、奇瑞汽车，致力于满足用户轻松拥有一台好车的理想，与用户共同分享“智造”的乐趣。奇瑞汽车股份有限公司，是一家从事汽车生产的国有控股企业，1997年1月8日注册成立，总部位于安徽省芜湖市。公司产品覆盖乘用车、商用车、微型车等领域，奇瑞汽车9年蝉联中国自主品牌销量冠军，成为中国自主品牌中的代表。 [1] 2016年8月，奇瑞在\"2016中国企业500强\"中排名第450位。\n\n5、吉利汽车，浙江吉利控股集团始建于1986年，1997年进入汽车领域，多年来专注实业，专注技","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:44:32","updateTime":"2021-05-09 23:44:32","isExist":null},{"id":2169,"question":"西瓜吃多了?","simplecontent":null,"content":"西瓜是生冷性寒的食物，一次吃得过多容易伤脾胃，西瓜中含有大量水分，可冲淡胃液，从而引起消化不良，使胃肠道抗病能力下降。西瓜吃多了，出现胃不舒服的表现，最好是先禁食几个小时。等胃排空以后，可以选择再喝小米粥、核桃粥或者南瓜粥等补脾胃的粥类，也可以在喝粥后两个小时逐渐的增加吃一点鸡蛋糕，让不舒服的胃肠逐渐适应。如果有恶心、呕吐或拉肚子的状况，可以去医院找医生用一些药物。总之，饮食要有规律，多吃清淡的食物，多吃碳水化合物、蛋白质和维生素要合理搭配。某一样东西自己喜欢吃，但是也要适量，不然吃撑了以后对胃伤害特别大，脾胃是先天之本，要养护好胃，才能保持健康。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:43:08","updateTime":"2021-05-09 23:43:08","isExist":null},{"id":2168,"question":"西瓜吃多了?","simplecontent":null,"content":"病情分析：西瓜是一种寒凉性的食物，吃多了会直接刺激肠胃功能，尤其是对于小孩来说，脾胃功能本身虚弱，若吃多了西瓜会直接导致胃肠受寒，出现拉肚子，泄泻的状况。可以让孩子多喝一些温开水，同时采用热毛巾敷于腹部或者按摩肚脐眼周围的部位，减缓疾病的症状。如果吃多后，拉肚子特别严重，则建议及时到医院就诊，在医生的指导下，积极使用一些调理胃肠功能的药物。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:42:43","updateTime":"2021-05-09 23:42:43","isExist":null},{"id":2167,"question":"犹太人名人?","simplecontent":null,"content":"犹太民族的伟人：\n\n\n\n商业奇才：洛克菲勒、摩根、斯隆、普利策\n\n政界要人：所罗门王、托洛茨基、基辛格、古里安、奥尔布赖特\n\n思想家：马克思、弗洛伊德\n\n艺术家：毕加索、斯皮尔伯格\n\n科学家：\n\n大预言家《诸世纪》作者-------诺查丹玛斯\n\n现代物理学之父-------爱因斯坦\n\n匈牙利籍著名空气动力学、物理学家------冯.卡门-----钱学森的老师\n\n学者风范,女性楷模------诺德\n\n非凡的,卓越的数学家------柯朗特\n\n控制论之父-------维纳\n\n二十世纪的数学巨人-------冯?诺伊曼\n\n核科学女杰--------梅特娜\n\n植物学家-------阿洛阿洛索思\n\n医生及教育家-------詹努斯.克尔察克\n\n1914年诺贝尔生理学及医学奖得主-----巴拉尼\n\n确立量子化原 子的大物理学家------弗朗克\n\n奠定新自然观基础的物理学家-------玻恩\n\n原子物理学及量子力学创始人 ------尼尔斯.玻尔\n\n核 和平之路的开路先锋-------西拉德\n\n原子弹之父------奥本海默\n\n氢弹之父、原子弹装配者------特勒\n\n理论物理学奇才-------费曼\n\n免疫学奠基人-------埃尔利西\n\n发现叶绿素的人-------威尔施泰特\n\n现代分子生物学的奠基者-------卢里亚\n\n氮肥之父--------哈伯\n\n生命之神--------莱西斯坦\n\n观察蚂蚁的孩子，大生化学家---------布洛赫\n\n有机硼化合物的开拓者-------布朗\n\n发现脱氧核糖核酸的生物学家--阿瑟·科恩伯格\n\n诺贝尔医学奖得主-------勒苇\n\n发现合成氨的诺贝尔奖获得者------弗哈伯\n\n繁茂的哥根廷花园的缔造者------弗兰克\n\n吞噬细胞的权威-------梅契尼科夫\n\n解剖学和病理学大师-------亨勒\n\n皮肤病学专家--------卡波希\n\n皮肤病学家,乌纳瘤命名者-----乌纳\n\n医学家,夏姆伯格病命名者-----夏姆伯格\n\n皮肤病专家,拉沙药膏创始人------拉沙\n\n青霉素的发现者之一--------弗莱明\n\n青霉素的发现者之一--------弗洛里\n\n青霉素的发现者之一--------钱恩\n\n链霉素的发现者-------瓦克斯曼\n\n发现呼吸酶活动方式的科学家------海因里希\n\n有机化学创始人------冯.拜尔\n\n世界知名的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:42:15","updateTime":"2021-05-09 23:42:15","isExist":null},{"id":2166,"question":"犹太人思维?","simplecontent":null,"content":"一提到犹太人，有钱、富有、财富、富豪之类的词语便首先会出现在我们脑海中。但是，究竟是什么让这个曾经岌岌可危的民族，一跃成为富人代言人？以下就从犹太人独特的思维方式入手，为大家分享犹太人的五大富人思维！一旦悟透，财富路上，让你少走十年弯路。\n\n一、财富思维：金钱是世俗的上帝\n钱不是罪恶，也不是诅咒，它在祝福着人们。——犹太智慧箴言\n在犹太人看来，金钱是比信仰上的上帝更为实在的“世俗的上帝”。犹太人在历史上饱受磨难，是金钱让他们无数次度过难关，并顽强地生存下来。在犹太人看来，只有在“世俗的上帝”得到保证后，自己才能膜拜精神上帝，追求高贵的精神生活，这与我们在哲学上所学的“经济基础决定上层建筑”其实讲的是一样的道理。\n金钱居于生死之间，处于生活的中心地位，这让犹太人能够以乐观的心态把苦难当作一次挑战，在苦难中，艰难地寻找赚钱商机，匆匆奔波，或买或卖，将经商做生意当作生存的一种重要手段，而在这种无数次的买与卖中，犹太人获得了“世界第一商人”的美誉，成为富人的最佳代言人。\n二、赚钱思维：职业不分贵贱，金钱不分出处\n金钱无姓氏，更无履历表。——犹太智慧箴言\n犹太人认为，金钱没有好坏善恶之分，这些其实都是人们主观强加给金钱的，只会误导人们的观念，束缚人们的思想。因为犹太人对金钱不分善恶、不问出处，这就保证了他们在赚钱时，内心是没有任何负担的，思想也是完全自由的，绝对不会受世俗观念的束缚，只要是合理合法的钱，那就都可以赚，而犹太人的赚钱手段也是不存在一点感情色彩的，只要有利可图，且不违法，那就可以采用。在这种思维模式的主导下，犹太人赚起钱来自然就是事半功倍。\n\n三、人脉思维：再穷也要站在富人堆里\n穷，也要站在富人圈里。——犹太智慧箴言\n犹太人并不鄙视穷人，也乐意帮助穷人，但他们认为，一个人，假如只喜欢和身边的穷人打交道，那么，在大多数情况下，他依然是一个穷人，这就像在乞丐中要饭最成功的，最终也只一个乞丐头头，难以突破阶级壁垒；而在富人堆里，哪怕只能当富人的陪衬，也容易变为富人，因为在和富人打交道的过程中，你会潜移默化地学到富人的思维模式，为自己成为富人奠定坚实基础。所以，在具体经商过程中，犹太人不仅主张先赚有钱人的钱，还想方设法地向富人借力。\n四、理财思维：将钱存入银行是最愚蠢的做法\n存款求利划不来。——犹太智慧箴言\n在漫长的历史上，犹太民族备受掠夺和驱逐，随时都有可能被抢、被杀。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 23:40:57","updateTime":"2021-05-09 23:40:57","isExist":null},{"id":2165,"question":"保险套路?","simplecontent":null,"content":"套路一：百万医疗险续保需审核\n给大家举个真实的例子：\n王女士给自己的女儿买了某寿如E康悦医疗保险。后来女儿不幸罹患了白血病，这个保险还不错，履行了约定的义务。19年女儿大部分的治疗费都顺利在报销了。\n可到了第二年交保费时保险公司直接拒绝王女士继续购买了，理由是王女士的儿子身体条件不符合投保要求\n要知道，现在很多百万医疗险是不会因为被保人身体健康变化拒绝续保的\n像这种，没事收钱有事就拒保的百万医疗险大家一定不要选择以防出现这种情况。\n\n套路二：越贵保的越多\n一般来说，大保险公司产品价格比较高，而且销售员会告诉你，保险贵自然有贵的道理。我并不反对说一个大公司比小公司的产品贵不对。但是，有些同样保障的产品，价格高一倍以上，就过分了。\n保险与其他商品不一样，是没有实物的。\n保险，本质是一份合同，同样的条款类似情况下，不同的价格，并不能带来实质的差异。\n所以不要被业务员误导，保险不一定贵的就更好，看条款才是王道\n套路三：隐瞒病史\n很多老百姓买保险，根本不重视保险中的健康告知，有些业务员为了出单，投保时让你故意把一些疾病隐瞒不填，提成他拿到了，但出了问题要理赔，你没有跟保险公司说实话，在理赔时被保险公司查到，有可能一分钱也拿不到。\n所以这里提醒大家，在买保险时一定不要听一些业务员说的“健康告知随便填，不说就查不到”的这些鬼话\n一定要如实填写，不然理赔时受损失的是自己。 #保险知识#\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 22:52:43","updateTime":"2021-05-09 22:52:43","isExist":null},{"id":2164,"question":"买什么保险?","simplecontent":null,"content":"重疾险应该作为人生的第一张保单，主要有2个原因：\n1.购买保险其实和身体健康有着非常密切的关系，如果我们只是购买一份医疗险。未来可能面临着停售的风险，或者身体健康状况发生变化，就可能导致购买不了新的医疗保险，但是购买一款终身保障的重疾险可以保障我们漫长的一生。\n2.生活中的小病小痛，我们的医保完全够用，但是一旦发生重大疾病，医疗费用可能让一个家庭的经济遭受沉重负担，而且医疗险是要先花钱后报销，但重疾险一旦确诊就可以提前给付。\n我个人认为保险购买顺序应该是：\n第一，重疾险：以特定重大疾病为保障对象，这些重大疾病一般发病率高，治疗费用也高，例如恶性肿瘤、急性心肌梗塞、冠状动脉搭桥术、严重冠心病等。\n第二，意外险：主要保障意外身故、意外伤残、因意外看病住院等，例如跌倒摔伤、开水烫伤、被狗咬伤、交通事故、旅行意外等等。\n第三，寿险：寿险的赔付条件非常简单，就是被保险人身故。无论是因疾病身故还是意外身故，寿险都能赔付。（有些寿险产品加入了全残责任，被保险人全残也能赔付）\n第四，子女教育险：教育支出成为刚性需求，而保险本金安全追求稳健收益，养成定期储蓄，应该提前规划，最好带有投保人保障豁免功能（豁免也就是指如果投保人发生了身故、重疾、残疾等特殊情况保费就不用交了，保险继续有效，但具体发生哪种情况才能豁免就要具体看豁免险保障内容）。\n第五，养老险：中国进入老龄化社会，家庭结构发生改变，所以要为自己以后购买一份保障。\n回答整理内容不易，如果对你有帮助麻烦请采纳支持一下，如果有什么不懂，可以追问","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 22:49:07","updateTime":"2021-05-09 22:49:07","isExist":null},{"id":2163,"question":"狄仁杰电影?","simplecontent":null,"content":"唐朝名相狄仁杰的故事在民间广为流传，关于他的电影也很多，徐克就拍了一个系列：《狄仁杰之通天帝国》 《狄仁杰之神都龙王》 《狄仁杰之四大天王》，不过豆瓣评分都只有六点多，其他的关于狄仁杰的电影，我想更没有看透了吧？\n但是遇到了还是忍不住去看了，因为狄仁杰太有名了，总想看看关于他的电影还有什么出奇的没有。昨天就看了一部，叫《狄仁杰之迷雾神都》，不仅想吐槽一下。\n这部电影，我感觉制作上很幼稚，应该是新人之作，制作粗糙，不事雕琢。\n百度搜一下它的导演阎乐阳，竟然搜不到。这样看来这部电影应该是这位导演的第一部执导之作。\n看完后感觉它在叙事上简陋粗糙，禁不住琢磨，故事平淡不吸引人。粗制滥造之作。我想从以下几个方面来谈谈我自己的看法。\n演员演技\n要说演员的演技，给人的感觉就是平平无奇，没什么特别之处。甚至可以说多数演员没表现出什么可圈可点的演技。\n就拿官小七来说，看似精明心思缜密的一个人，其实就是胆子大了点儿，敢在死人身上搜钱财。\n分析案件？可有特别之处？编剧导演加给她的台词，背的顺溜些罢了。有什么能让人惊叹的演技么？是在看不到。其他演员演员更不用说了，发挥演技的机会也较少。\n\n摄影\n镜头语言的运用较少，比如特写镜头的运用就比较少，该运用特写镜头的地方没有运用。\n这就使得电影语言的表现力不足，使得人物性格张力不够，显得前确不饱满。比如官小七去见赵员镇告诉他这时赵圆震的随从说：“早就告诉过你，坦白交代，从轻发落，现在知道怕了？。”\n官小七：“我不是害怕，我是怕你们查不出案，替你们着急。”\n随从：“你......”.此时是不是应该给赵员震随从一个一闪而过的面部表情特写？\n\n摄影师好像不善于做人物内心外化的工作，不能很好地运用镜头语言。\n其实，此时也应该给官小七一个得意、嚣张的面部特写，但是这些都没有，这就让人对无论是随从还是官小七的心理了解就不够，显得人物形象就不够充盈生动。\n大理寺的赵员震在破案方面显得智力平平，对案件没有任何自己独到的见解，草包一样，那他凭什么 去做那个大理寺卿？\n难不成英明果决的武则天养的都是碌碌无为之辈?这可不是武则天的用人风格。\n\n服装\n武则天作为中国历史上第一位女皇帝，形象不够威严高大。也就是服装不是很符合女皇的身份。\n片中女皇的服装看着也就是一个一般贵族女性的华丽服装而已。\n朝堂上，女皇应该穿皇帝的服装吧？这么随便，就穿一套平常的贵妇服装而已，处理国家大","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 22:47:27","updateTime":"2021-05-09 22:47:27","isExist":null},{"id":2162,"question":"武则天历史?","simplecontent":null,"content":"中国唯一的女皇帝武则天\n武则天，是一个颇有历史魅力的名字，是一个似传奇而非传奇的历史人物。她是唐朝开国功勋武士 的次女，唐太宗李世民的幼妾，唐高宗李治的皇后。她在协助高宗处理军国大事，佐持朝政三十年后，亲登帝位，自称圣神皇帝，废唐祚于一旦，改国号为周，成为中国历史上空前绝后的唯一女皇。从她参与朝政，自称皇帝，到病移上阳宫，前后执政近半个世纪，上承“贞观之治”，下启“开元盛世”，历史功绩，昭昭于世。诚如宋庆龄对她的诚恳评价：武则天是“封建时代杰出的女政治家”。\n武则天，本名武照，称帝后改为武曌。初唐并州文水（今山西文水县）人。她诞生于唐高祖武德七年（624年）正月，卒于中宗神龙元年（705年）十一月。生母是武士 的续妻，陇右大士族、隋朝宰相、遂宁公杨达之女。\n武则天，出生在唐初新贵显宦之家，显赫的权势，豪奢的生活，滋养了她无限量的权力欲。然而，初唐极重士族的门阀之风盛行，而武氏庶族的门第，低微的出身，又使她饱受流俗的轻视，而不甘埋没。这一特殊的境遇与遭际，强烈地刺激着青年时代的武则天，陶冶了她狂妄地去追逐和攫取最高权力，以达唯我是从的欲望，和以冷酷而不择手段地去报复一切的心理。这一点在她以后从政乃至于“南面称孤”的一系列政治斗争中，表现的尤为突出，成为她一生功过参差的修养。品德、性格和心理根源。\n则天自幼聪慧敏俐，极善表达，胆识超人。父亲深感她是可造人才，遂教她读书识字，使她通晓世理。史载，则天十三、四岁时，已是博览群书，博闻强记，诗词歌赋也都奠定了一定基础，而且长于书法，字态卓荦不群。\n贞观十一年（637年）， 14岁的则天以长相俊美，入选宫中，受封“才人”。入宫之后，则天行事干练，善解人意，再加上姿色娇艳，颇得太宗欢心，遂赐号“媚娘”。时日既久，太宗又发现则天学识尚好，且懂礼仪，便把她从侍穿衣着的行列，调人御书房侍候文墨。这一变故使武则天开始接触皇家公文，了解了一些宫廷大事，并能读到许多不易得见的书籍典章，眼界顿阔，日渐通晓官场政治和权术。\n贞观二十三年（649年），太宗死去，则天与所有嫔妃，发送长安感业寺削发为尼。太宗九子李治唐高宗即位后，因早先与则天暗通款曲，对她极有兴趣，遂经常往来于感业寺，并于两三年后重召则天入官，晋封为“昭仪”。永徽六年（655年），极受高宗宠幸的武则天，在内宫的斗争中稳操胜券，并日促高宗立己为后。然而，在封建社会中，皇后的废立乃国之大事","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 22:45:25","updateTime":"2021-05-09 22:45:25","isExist":null},{"id":2161,"question":"武则天让位给谁?","simplecontent":null,"content":"　　李显是唐高宗李治跟武则天的第三个儿子。历史上李显总共当过两次皇帝，唐高宗李治死后，李显即位，不过只过了一两个月的皇帝瘾就下台了。公元705年，武则天重病垂危，将皇位又归还给了唐中宗李显。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 22:43:19","updateTime":"2021-05-09 22:43:19","isExist":null},{"id":55,"question":"现在的医生都很坑爹的？","simplecontent":"","content":"医生故意开很多药，私营的医院费用很高，效果很虚的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:44:52","updateTime":"2021-05-09 11:44:53","isExist":null},{"id":79,"question":"沃柑在哪里生产的","simplecontent":"","content":"沃柑出名，那是因为2012年来到广西的武鸣这个地方的，由于气候环境适合沃柑的生长条件，武鸣沃柑一上市就打出了名堂的，当年的武鸣沃柑地头收购价格达到十几块钱一斤的，武鸣沃柑一下子就俘获了很多消费者们的心，有句广告词说得好，中国沃柑看广西，广西沃柑看武鸣。武鸣沃柑的成功，让武鸣这个地区的很多果农跟风种植起来，武鸣沃柑开启了疯狂的扩种之旅的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:41:41","updateTime":"2021-05-09 11:41:41","isExist":null},{"id":1751,"question":"橘子和橙子哪个好吃?","simplecontent":null,"content":"橙子更好吃\n橘子和橙子口味相似，因为同属柑橘属植物，它们的营养成分区别也不大。橘子是冬季最常见的水果，它性温，味甘、酸，具有润肺、止咳、化痰、健脾、顺气、止渴的作用，是男女老幼都适合食用的水果佳品。但橘子宜常吃而不宜多吃，多吃易上火，会出现口舌生疮、口干舌燥、咽喉干痛、大便秘结等症状。尤其是春节期间，为图“吉利”的含义，很多人是“橘不离手”。此时饮食本就油腻，每天再来几个橘子，就属“火上浇油”了。而橙子则不同了。它性凉、味酸，维生素C的含量比橘子好，有止呕恶、清火、解酒、解毒的功效，是非常典型的“节日水果”。此外，从水分含量上来说，橙子也比橘子更高。可以起到补水的作用，在干燥的北方也非常适合食用。所以综上来说，还是橙子更胜一筹。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:40:54","updateTime":"2021-05-09 11:40:55","isExist":null},{"id":1765,"question":"公务员是不是只有应届生才能考?","simplecontent":null,"content":"不是的。毕业了也可以报考。在读的非应届毕业生是不能报考的。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:40:10","updateTime":"2021-05-09 11:40:10","isExist":null},{"id":1769,"question":"招聘看什么软件?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:53","updateTime":"2021-05-09 11:38:53","isExist":null},{"id":1770,"question":"招聘需要收费吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:52","updateTime":"2021-05-09 11:38:53","isExist":null},{"id":1771,"question":"哪些公司不能去?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:52","updateTime":"2021-05-09 11:38:53","isExist":null},{"id":1772,"question":"好的公司但是远能去面试吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:52","updateTime":"2021-05-09 11:38:52","isExist":null},{"id":1773,"question":"整容常用的名词?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:51","updateTime":"2021-05-09 11:38:52","isExist":null},{"id":1774,"question":"薪资福利一般有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:51","updateTime":"2021-05-09 11:38:51","isExist":null},{"id":1775,"question":"结婚酒店清单费用?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:50","updateTime":"2021-05-09 11:38:51","isExist":null},{"id":1776,"question":"结婚服装费用?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:50","updateTime":"2021-05-09 11:38:50","isExist":null},{"id":1777,"question":"奶茶代理多少钱?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:49","updateTime":"2021-05-09 11:38:50","isExist":null},{"id":1778,"question":"蜜雪冰城出名吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:49","updateTime":"2021-05-09 11:38:49","isExist":null},{"id":1779,"question":"排骨怎么做好吃?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:48","updateTime":"2021-05-09 11:38:49","isExist":null},{"id":1780,"question":"鲍鱼好处?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:48","updateTime":"2021-05-09 11:38:49","isExist":null},{"id":1781,"question":"inn绕肉怎么做?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:48","updateTime":"2021-05-09 11:38:48","isExist":null},{"id":1791,"question":"怀孕放多少天?","simplecontent":null,"content":"产假，是指在职妇女产期前后的休假待遇，一般从分娩前半个月至产后两个半月，晚婚晚育者可前后长至四个月，女职工生育享受不少于九十天的产假。2011年11月21日，国务院法制办公室全文公布《女职工特殊劳动保护条例（征求意见稿）》，拟将产假由90天增至14周， 生育流产医疗费用由单位支付。2012年4月18日，国务院常务会议审议并原则通过《女职工劳动保护特别规定（草案）》。草案将女职工生育享受的产假由90天延长至98天，并规范了相关待遇。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:38:41","updateTime":"2021-05-09 11:38:41","isExist":null},{"id":1784,"question":"怎么判断牙齿烂了?","simplecontent":null,"content":"病情分析：牙髓坏死一般最准确的判断是做牙髓活力试验，在牙髓活力试验中，可以诊断为牙髓坏死。正常情况下，会发现患牙无自觉症状，没有冷热刺激性疼痛，探诊疼痛，无叩痛，即使有较深的空洞或较深的牙周袋，在探诊过程中也无感觉，如果牙齿没有龋齿，会发现牙齿会有变色现象，一般牙齿呈现暗黄或灰黄色，可以判断牙髓基本上是坏死状态。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:36:49","updateTime":"2021-05-09 11:36:49","isExist":null},{"id":1810,"question":"个税除了扣除，申报需要填写哪个公司?","simplecontent":null,"content":"现在我们使用智能手机了，甚至马上用上5G手机了，其实华为的产品不仅仅只是手机领域，还有很多华为品牌，比如华为电视，华为路由器，华为电脑等等，对于手机领域来说，P30系列，Mate20系列、荣耀V20、荣耀Magic2、荣耀Note10、荣耀Play、华为nova系列……现在华为公司的产品丰富，种类多，特别是手机方面更齐全，","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:36:20","updateTime":"2021-05-09 11:36:20","isExist":null},{"id":1814,"question":"娃和螃蟹哪个好吃?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:36","updateTime":"2021-05-09 11:35:36","isExist":null},{"id":1809,"question":"个税退多少钱?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:35","updateTime":"2021-05-09 11:35:35","isExist":null},{"id":1811,"question":"买过什么华为产品?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:35","updateTime":"2021-05-09 11:35:36","isExist":null},{"id":1806,"question":"额度有多少?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:34","updateTime":"2021-05-09 11:35:34","isExist":null},{"id":1807,"question":"利率是多少?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:34","updateTime":"2021-05-09 11:35:35","isExist":null},{"id":1808,"question":"离职是不是可以领取失业保险?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:34","updateTime":"2021-05-09 11:35:35","isExist":null},{"id":1802,"question":"孩子起什么名字好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:33","updateTime":"2021-05-09 11:35:33","isExist":null},{"id":1804,"question":"办过信用卡吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:33","updateTime":"2021-05-09 11:35:34","isExist":null},{"id":1805,"question":"什么信用卡?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:33","updateTime":"2021-05-09 11:35:34","isExist":null},{"id":1799,"question":"用什么软件p图?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:32","updateTime":"2021-05-09 11:35:32","isExist":null},{"id":1800,"question":"常用p图手法?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:32","updateTime":"2021-05-09 11:35:33","isExist":null},{"id":1801,"question":"保险医疗流程?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:32","updateTime":"2021-05-09 11:35:33","isExist":null},{"id":1823,"question":"螺蛳粉为什么臭?","simplecontent":null,"content":"螺蛳粉的“臭”味来源于螺蛳粉里的酸笋，它是新鲜笋经工艺发酵后酸化而成的，其味道让许多人“退避三舍”，但懂得欣赏它的内涵的人，就会知道，它是香而不腐的，闻之开胃，想之流涎，吃之打滚。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:35:28","updateTime":"2021-05-09 11:35:28","isExist":null},{"id":1817,"question":"手工心和玫瑰怎么做?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:45","updateTime":"2021-05-09 11:33:45","isExist":null},{"id":1818,"question":"哪些岛旅游比较好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:44","updateTime":"2021-05-09 11:33:45","isExist":null},{"id":1819,"question":"广东南澳岛好玩吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:44","updateTime":"2021-05-09 11:33:45","isExist":null},{"id":1820,"question":"哪些小镇比较好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:44","updateTime":"2021-05-09 11:33:44","isExist":null},{"id":1821,"question":"美甲转钱吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:44","updateTime":"2021-05-09 11:33:44","isExist":null},{"id":1822,"question":"美甲和美容通常是强制要求的吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:43","updateTime":"2021-05-09 11:33:44","isExist":null},{"id":1826,"question":"煎饼果子有哪些陪料?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:42","updateTime":"2021-05-09 11:33:43","isExist":null},{"id":1827,"question":"明间小吃有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:42","updateTime":"2021-05-09 11:33:43","isExist":null},{"id":1828,"question":"大众点评有哪些小吃?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:42","updateTime":"2021-05-09 11:33:42","isExist":null},{"id":1829,"question":"美食城在哪里?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:41","updateTime":"2021-05-09 11:33:42","isExist":null},{"id":1832,"question":"为什么这边白切鸡不好吃?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:41","updateTime":"2021-05-09 11:33:41","isExist":null},{"id":1833,"question":"如何保证wifi360度有信号?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:33:41","updateTime":"2021-05-09 11:33:41","isExist":null},{"id":2160,"question":"广东邻近的城市?","simplecontent":null,"content":"广西，湖南，江西，福建\n\n台湾海南贵州不靠近广东","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:33:28","updateTime":"2021-05-09 11:33:28","isExist":null},{"id":2159,"question":"广西云南贵州地图?","simplecontent":null,"content":"左边是云南，中间是贵州。右边是广西，广西靠近广东","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:32:23","updateTime":"2021-05-09 11:32:23","isExist":null},{"id":2158,"question":"贵州和广西对比?","simplecontent":null,"content":"个人觉得贵州比较好！但是要看你侧重那些方面了，一下是我个人对广西和贵州的比较1、投资（从旅游业出发）：广西已经发展起来了，而贵州还有很多地方处于能发展却还没有发展的阶段，比如说旅游景点，大家都知道桂林山水甲天下，请问下，有谁知道贵州山水秀如画！去过了桂林一次，你还想去第三次第四次么？我想至少我就不喜欢做重复的事，最重要的是现在的桂林多了一些商业性，少了一些自然纯。而贵州有很多和桂林一样的地方还没有被开发出来！那里有自然的风景和新鲜的空气，至少我认为他没有广西那么污染大！！2、饮食：广西应该是以粤菜为主吧。都是些有名的大菜，但是作为老百姓有多少人可以每天都吃着那些名肴呢，贵州的饮食是出自于民。食之于民，比如 红油米皮，野冰粉、辣子鸡、黄糕粑，蕨粑等等数不胜数，这些都是取自于民间或者说有的还是山间的食物做成的。只要你啃出门，一碗米皮一两块的有，四五块的也有。。你想吃高档的也有，想享受民风民俗的也有！！（当然也许是我对广西不了解）3、气候：广西我知道一点那边夏天需要喝特殊的茶，好像叫苦茶是么？为的是降暑，而贵州不需要降暑，夏天最高气温不到32°。冬天最低气温不超过-7°（这还是那年霜冻造成的）。这样的天气你觉得是好还是不好呢，冬天的太阳晒得人懒洋洋的。夏天的太阳至少让人不会感觉会窒息；看到这里你还在为广西那边的大热天而烦恼么？还有很多很多的区别，这里就不多说了，当然不可否认的是广西某些地区比贵州的发达！但是这并不表示广西就比贵州好，地区的差异，导致了人们的认知上的差异。个人的思想不同，认知就更具差异化，不能一概而论的说那个地方好，而是得看你侧重那一块儿！广西毕竟比贵州先发展起来，那么他的部分城市在经济上就应该是发达于贵州的大多数城市。这点也是无容置疑的，但是还是那句话，每个人看到的方向，看到的点不同那么他所得到的结果就不同！！ 最好的方法是自己去体会，。。。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:29:40","updateTime":"2021-05-09 11:29:40","isExist":null},{"id":2157,"question":"贵州和广西区别?","simplecontent":null,"content":"广西人讲话听不懂，贵州话大多听得懂，除了一些当地的词语，贵州人和云南四川吃的东西都比较麻辣，菜系相似\n\n贵州省就在广西的边上。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:28:49","updateTime":"2021-05-09 11:28:49","isExist":null},{"id":1824,"question":"螺蛳粉是哪个地方的?","simplecontent":null,"content":"螺蛳粉是哪里的特产呢？螺蛳粉是我国广西壮族自治区柳州市的特产小吃。螺蛳粉具有辣、爽、鲜、酸、烫的独特风味。\n\n\n\n它由柳州特有的软韧爽口的米粉，加上酸笋、花生、油炸腐竹、黄花菜、萝卜干、鲜嫩青菜等配料及浓郁适度的酸辣味和螺蛳的汤水调合而成，螺蛳粉的味美还因为它有着独特的汤料。\n\n螺蛳粉的螺汤由螺肉、猪骨、药材、天然香料等民间秘方熬制而成，熬过汤后的螺肉就会丢弃，因其精华都浓缩入汤里了。\n\n\n\n螺蛳粉最早出现于20世纪70年代末，虽然时间不长，但嗍螺和米粉在柳州有着悠久的历史。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:27:00","updateTime":"2021-05-09 11:27:00","isExist":null},{"id":1825,"question":"螺蛳粉为什么出名?","simplecontent":null,"content":"1/3分步阅读\n首先，螺蛳粉具有酸、辣、鲜、爽、烫多种独特味道。它一出世便霸道的俘虏了人们的味蕾。它的味道从嘴里，直接被吃到了心里。\n\n\n2/3\n      螺蛳粉鲜美的味道来自丰富的选料。\n\n      粉的汤料由螺蛳、山奈、八角、肉桂、丁香、多种辣椒、等等天然香料和味素配制而成。螺蛳粉靓丽的颜色，鲜辣的味道全部出自天然食材。\n\n      软滑爽口的米粉，配上炸腐竹、酸笋、炸花生米、黄花菜、嫩青菜等等食材浇上汤料，成就了一碗令人向往美味。\n\n\n「特惠」螺蛳粉培训，来食为先，地道技术配方。\n广告\n3/3\n螺蛳粉店家会另外配备：卤猪脚、卤鸭脚、卤蛋、等等风味小吃供顾客自由选择，以丰富螺丝粉的味道，满足顾客的需求。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:26:05","updateTime":"2021-05-09 11:26:05","isExist":null},{"id":1834,"question":"家里买投影仪还是电视机好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:59","updateTime":"2021-05-09 11:24:59","isExist":null},{"id":1835,"question":"电脑预算多少号?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:58","updateTime":"2021-05-09 11:24:59","isExist":null},{"id":1836,"question":"苹果12和8哪个好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:58","updateTime":"2021-05-09 11:24:59","isExist":null},{"id":1837,"question":"耳机断开一个没用了?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:58","updateTime":"2021-05-09 11:24:58","isExist":null},{"id":1838,"question":"想买一台ipad?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:57","updateTime":"2021-05-09 11:24:58","isExist":null},{"id":1839,"question":"想买台音响?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:57","updateTime":"2021-05-09 11:24:57","isExist":null},{"id":1840,"question":"苹果不需要性能，用几年不卡，不像国产卡的一批?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:56","updateTime":"2021-05-09 11:24:57","isExist":null},{"id":1841,"question":"小米11和华为mate40有的一拼?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:56","updateTime":"2021-05-09 11:24:57","isExist":null},{"id":1842,"question":"有没有撩妹了?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:56","updateTime":"2021-05-09 11:24:56","isExist":null},{"id":1843,"question":"最近看你跟她很熟，是不是聊上了?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:55","updateTime":"2021-05-09 11:24:56","isExist":null},{"id":1861,"question":"对公司有什么建议?","simplecontent":null,"content":"工作内容，管理，环境，团队，制度","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:47","updateTime":"2021-05-09 11:24:48","isExist":null},{"id":1857,"question":"哪些护肤牌子好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:04","updateTime":"2021-05-09 11:24:04","isExist":null},{"id":1858,"question":"哪些药膏好用?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:03","updateTime":"2021-05-09 11:24:03","isExist":null},{"id":1859,"question":"中午可以睡多久?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:02","updateTime":"2021-05-09 11:24:03","isExist":null},{"id":1860,"question":"喝水后想拉屎?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:24:02","updateTime":"2021-05-09 11:24:02","isExist":null},{"id":1862,"question":"女生经常穿哪件衣服?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:57","updateTime":"2021-05-09 11:23:58","isExist":null},{"id":1871,"question":"复式房子如何?","simplecontent":null,"content":"复式的房子，说明如下：\n复式房屋的好处：\n1、户内隔层为木结构，将隔断、家具、装饰融为一体，既是墙，又是楼板、床、柜，降低了综合造价。\n2、平面利用系数高，室内空间高，通过夹件层复合，可使住宅的使用面积提高50％～70％。\n3、由于复式设计的特点，复式住宅在空间使用率上要远远优于普通住宅。通过隔层，复式住宅相对于普通住宅多扩展出了50％甚至更多的使用空间。简单的说，这是一种“向高度要空间”的设计思路。\n4、上部层采用推拉窗户，通风采光好，与一般高和面积相同住宅相比，土地利用率可提高40％。\n5、更加个性化的私人设计：通过对室内空间的再设计、再分割，可以融入更多的创意体现个性。在实际的设计中就有下层全部为家庭娱乐核心、而上层全部为非待客区域的设计，十分富有个性。\n复式房子的不足：\n1、自然通风、采光较差，复式住宅面宽大、进深小，如采用内廊式平面组合必然导致一部分户型朝向不佳。\n2、楼高的限制，复式住宅不是真正意义上的“两层楼”。所以，在将空间分割成上下两层后必然会使这两层在层上受到一些影响。虽然动静分开了、储物空间也大了，但是这些是以牺牲高为代价的。\n3、楼梯间占空间，会有些浪费，楼梯间可能会占掉10-15平方，当然平层设计不好的也存在过道占空间的问题，相对来说复式浪费的更多一些。\n4、增加装修费用，增加的部分主要在楼梯，有些设计好的复式楼梯是混凝土结构的，在交房时就已经做好了，只需要多花个栏杆、扶手和贴面的费用，有些楼梯是需要住户买现成的，这样需要多掏很多钱。\n5、楼高过低，难于充分利用，如厨房只有2米高度，长期使用易产生局促憋气的不适感；贮藏间较大，但高只有1.2米，很难充分利用；\n6、楼梯设计复杂，楼梯的设计在复式住宅中显得尤为重要。如果想节省空间就要将楼梯设计得陡一些、窄一些，这样就会给老人和小孩带来很大的不便甚至危险。而将楼梯设计的宽了、平了又会占用过多的室内空间。很难两全。\n7、安全性比较差，由于分割空间的需要，室内的隔断、楼板均采用轻薄的木隔断，木材的成本较高且隔音、防火功能差，房间的私密性、安全性较差。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:53","updateTime":"2021-05-09 11:23:53","isExist":null},{"id":1863,"question":"女生穿衣服是什么颜色的?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:04","updateTime":"2021-05-09 11:23:05","isExist":null},{"id":1864,"question":"你还联系以前同学吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:04","updateTime":"2021-05-09 11:23:04","isExist":null},{"id":1865,"question":"上班玩手机会被说吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:03","updateTime":"2021-05-09 11:23:04","isExist":null},{"id":1866,"question":"孩子几岁认识多少字?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:03","updateTime":"2021-05-09 11:23:04","isExist":null},{"id":1867,"question":"公司有微波炉吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:03","updateTime":"2021-05-09 11:23:03","isExist":null},{"id":1868,"question":"你经常带饭去公司吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:02","updateTime":"2021-05-09 11:23:03","isExist":null},{"id":1869,"question":"公司领导猥琐吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:23:02","updateTime":"2021-05-09 11:23:02","isExist":null},{"id":1880,"question":"拉屎挂几次?","simplecontent":null,"content":"一般来说，每天大便1-2次对健康最有利，每天排便3-4次是否正常，取决于每个人的具体情况。正常人的排便次数应为每天一至两次，但不超过三次，每周不少于三次。那么，一天大便三四次正常吗?正常人一天排便几次?这是大家比较关心的问题，下面来看看详细的回答。\n\n1、正常人排便是每天1至2次或1到2天一次。如果每天排便3次或者4次，但排便成形、粪便柔软、排便颜色正常，无其他明显不适，均为正常，建议观察。如果每天排便3至4次，粪便不形成，甚至排泄物稀疏，多见于结肠炎，建议应做大便常规、粪便细菌培养、血常规、结肠镜等检查。\n\n2、每天排便是否正常，不仅取决于排便次数，还需要观察排便的特点。正常人每天排便三次或三天一次，这些都属于正常范围。如果每天大便3-4次，呈稀水样大便，这样是不正常的，可称为腹泻。\n\n3、如果大便没有明显的排便困难和粪便稀疏症状，每天排便1-2次或者两天排便1次都是正常现象。排便是否正常，排便次数不是决定因素，主要是判断粪便的状态、颜色、气味和感觉。如果患者有不良的饮食习惯、暴饮暴食、不注重膳食营养的平衡，经常食入高脂肪、高热量、高胆固醇的食物或者长期饮酒，都会增加肠道负担，损害肠道。\n\n以上是针对一天大便三四次正常吗以及正常人一天排便几次做出的分析，综合以上内容可知，正常一天1-2次大便或者2天1次大便属于正常，但是还应观察粪便，如果一天3-4次大便，大便颜色正常、成形，这些均为正常，不用担心。同时，应注意个人卫生，不要吃不健康或不卫生的食物，使病毒或细菌进入肠道，引起胃肠炎。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:22:59","updateTime":"2021-05-09 11:22:59","isExist":null},{"id":1889,"question":"镇里的水为什么那么差?","simplecontent":null,"content":"水质和所处的地理位置是有很大的关系的。这种情况说明水里的水锈比较大。可以用棉沙过滤一下，或者条件好干脆用纯净水好了。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:22:30","updateTime":"2021-05-09 11:22:31","isExist":null},{"id":2156,"question":"如何挑选板栗?","simplecontent":null,"content":"1、板栗的软硬程度：好的板栗比较坚硬，一般是捏不动的，若是捏起来比较软，则可能表示板栗已经变质。\n\n2、板栗的重量：好的板栗水分饱满，而变质的板栗一般水分已经被氧化，摇晃一下还会出现晃动的声音，因此会比好的板栗轻一些。\n\n3、打开观察：将板栗剥开，观察里面的果肉，如果有异味、或者变色发干，则表明已经变质。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:21:47","updateTime":"2021-05-09 11:21:47","isExist":null},{"id":2155,"question":"板栗的功效?","simplecontent":null,"content":"健脾养胃、止血消肿、强筋活络。板栗的性味归经是甘、咸、性温，归脾经、胃经、肾经，具有健脾养胃、止血消肿、强筋活络的功效。板栗可用于脾胃虚弱、脾肾阳虚、便溏腹泻、肾气亏虚、腰脚无力、久泻不止或者便血的症候。外敷可以治疗筋骨的肿痛。长期食用可达到养胃健脾、补肾、养颜的保健功效。板栗中含有丰富的营养成分，包括糖类、蛋白质、脂肪、多种维生素和无机盐，对于高血压、冠心病、动脉粥样硬化等都具有较好的防治作用。老年人常食栗子可以抗衰老，延年益寿。但是需要提醒大家注意，食用栗子的时候，生食不易消化，多食熟栗子也会令人气滞中满。特别是对于便秘的孩子、功能性消化不良的孩子，栗子也是不建议多食的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:20:16","updateTime":"2021-05-09 11:20:16","isExist":null},{"id":1905,"question":"老人吃什么东西养生好?","simplecontent":null,"content":"老年人养生一直都是大家关注的问题，那么老人养生吃什么好，介绍老人必吃的六种养生食物……\n\n梨\n\n梨具有润燥消风，镇咳止喘，清心降火的作用，醒酒解毒。生梨性凉，老年人不宜一次吃得过多。脾胃较弱的人，也可以做成冰糖炖梨水，亦是一种很好的食用方法。老年人养生吃什么好老年人饮食养生老年人如何养生声明：图片来源网络，如有侵权，敬请告知\n\n大枣\n\n大枣具有宁心安神、益智健脑、增强食欲、除腥祛味，抗过敏，提高免疫力的作用，亦可防治高血压、骨质疏松和贫血，是老年人冬季的补养佳品。\n\n菊花\n\n菊花可疏风平肝，清心除烦，祛燥润喉，生津明目，解酒毒，对感冒、头痛都有一定的辅助治疗作用。老年人冬季可适当饮用菊花茶，达到祛火润肺的保养目的。\n\n红薯\n\n红薯被评价为餐桌上的最佳食物，它具有预防癌症、防止便秘、减肥的功效，常吃红薯可以延年益寿。老年人养生吃什么好老年人饮食养生老年人如何养生\n\n核桃\n\n核桃是补脑的最佳食品，亦是补肾固精、温肺定喘的食疗品，对肾虚、尿频、咳嗽等症有很好疗效。老年人常吃核桃，能够头脑清晰、耳聪目明。\n\n板栗\n\n栗子有百果之王的美称，既可以补脾健胃，又能够补肾强筋，还具有活血止血作用。在深冬季节，每天吃几颗栗子，有利于补养元气，强壮肾精。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:19:42","updateTime":"2021-05-09 11:19:43","isExist":null},{"id":1893,"question":"每天喝矿泉水好吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:19:04","updateTime":"2021-05-09 11:19:04","isExist":null},{"id":1896,"question":"汤圆有什么馅?","simplecontent":null,"content":"芝麻，花生，大黄米","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:18:48","updateTime":"2021-05-09 11:18:48","isExist":null},{"id":1895,"question":"汤圆吃多少就会腻?","simplecontent":null,"content":"三个就很难吃下去了","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:18:34","updateTime":"2021-05-09 11:18:34","isExist":null},{"id":2154,"question":"汤圆味的还是甜的好吃?","simplecontent":null,"content":"汤圆应该是甜的。\n\n据传，汤圆起源于宋朝。当时的明州（现浙江省宁波市）所兴起的一种新奇食品，即用黑芝麻、猪板油做馅、加入少许白糖，外面用糯米粉搓成圆形，煮熟后，吃起来香甜软糯，回味无穷。同时，汤圆象征合家团圆美满，吃汤圆也意味着在新的一年里合家幸福、团团圆圆，所以是正月十五元宵节必备美食。\n\n甜馅汤圆本身已有甜味，所以汤不需要再加糖，以减少热量摄取；若是无馅小汤圆，汤可以用糖桂花、甜酒酿、花茶或者桂圆红枣汤、桂圆姜汤取代，后者可有补身祛寒的功效；煮咸汤圆时可放一些蔬菜，增加纤维素。\n\n扩展资料：\n\n甜馅汤圆本身已有甜味，所以汤不需要再加糖，以减少热量摄取；若是无馅小汤圆，汤可以用糖桂花、甜酒酿、花茶或者桂圆红枣汤、桂圆姜汤取代，后者可有补身祛寒的功效；煮咸汤圆时可放一些蔬菜，增加纤维素。\n\n面对热滚滚、香喷喷的汤圆，忍不住想要大咬一口，老少一定要特别注意，吃汤圆切记缓慢、小口，避免汤圆哽住喉头或气管。由于汤圆含高量“糖分”，加上芝麻、鲜肉、花生含“高油脂”及“高热量”，一定要少量食用，不要一次吃得太多。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:17:47","updateTime":"2021-05-09 11:17:47","isExist":null},{"id":1897,"question":"汤圆有什么含义?","simplecontent":null,"content":"汤圆象征合家团圆更美好，吃汤圆意味新的一年阖家幸福、团团圆圆。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:16:45","updateTime":"2021-05-09 11:16:46","isExist":null},{"id":1901,"question":"无线蓝牙耳机好用吗?","simplecontent":null,"content":"    1、减少手机辐射\n大家都知道，手机的辐射是我们不容忽视的。而普通的有线耳机并不能帮助我们减轻这一问题，但蓝牙耳机就不同了。特别是在我们打电话的时候，蓝牙耳机不仅能够帮助我们减小辐射，还可以让我们的手更加轻松，是不是一举两得呢?\n2、保障人身安全\n有了蓝牙耳机，司机们就再也不要单手握方向盘接电话了，而车也会开得更稳。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:16:08","updateTime":"2021-05-09 11:16:08","isExist":null},{"id":1914,"question":"香港的四大恶人是谁?","simplecontent":null,"content":"今天给小伙伴们讲解勾起童年记忆的四大“恶人”，80年代初，中国香港一度被称“东方好莱坞”，香港影片的崛起时代，有些人成就了巨星，有些人成为了“跑龙套”的配角，“四大恶人”便是其中的“配角”代表。\n\n四大恶人\n\n恶人代表之一\n何家驹刚开始投身于报馆工作，担任总编辑，不幸染上赌博输光所有家产，后来只能到片场做杂工，因为之前做编辑，后来慢慢担任了编剧和导演的活，后来又做起了“经纪人”，辉煌时还给周润发、刘德华做过经纪人，之后就开始投身演员行业，第一部影片就是香港黑帮经典影片《监狱风云》由梁家辉、周润发主演，何家驹饰演“反派”大咪哥，凭着大咪一角拿下金像奖最佳男配角，在香港演艺圈占有一席之地，只是万年过得有些凄惨，典型的戏红人穷。六十六岁死于糖尿病及并发症离世。\n\n何家驹\n\n恶人代表之二\n成奎安人送绰号“大傻”起初是“黑帮”打手，出狱之后便开始演艺生涯，饰演很多“黑帮人员\"角色，每个角色里总是带着”傻劲儿“，出演了《英雄本色》《赌神》，经典桥段是《赌侠》里的”小赌场“老板，被刘德华饰演的（小刀）周星驰饰演的（阿星）忽悠投降输一半，”小人得志的模样“。五十四岁死于鼻咽癌去世。\n\n成奎安\n\n恶人代表之三\n李兆基人送绰号“十三太保”相比成奎安，李兆基才算是当时香港的“黑道”大哥级别的人物，李兆基也是在出狱之后再大哥的帮助下才进去演艺圈，出演的《古惑仔》系列也是“黑道”大哥的存在，在香港黑帮热潮退出之后，转型到喜剧电影，出演了《食神》，不过在该影片里饰演的还是“反派”。六十九岁死于肝癌。\n\n李兆基晚年\n\n恶人代表之四\n黄光亮人称“傻飚”不过不是真傻，而是在《监狱风云》里饰演的“监狱老大“傻飚，故而人称”傻飚“看他的面相给人一种”不寒而栗“的感觉，还带有一种”邪恶的气息“，如今七十一岁的黄光亮基本上退出了演艺圈。\n\n黄光亮\n\n“四大恶人”现在仅剩黄光亮一人存活。\n图片来源于网络，如有侵权，请联系原作者删除.\n\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:15:26","updateTime":"2021-05-09 11:15:27","isExist":null},{"id":1912,"question":"刘德华为什么这么久还能火?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:14:26","updateTime":"2021-05-09 11:14:26","isExist":null},{"id":1915,"question":"国产片哪些电影也比较好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:14:25","updateTime":"2021-05-09 11:14:25","isExist":null},{"id":1916,"question":"恐怖片有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:14:24","updateTime":"2021-05-09 11:14:25","isExist":null},{"id":1918,"question":"日本平时经常看吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:14:24","updateTime":"2021-05-09 11:14:24","isExist":null},{"id":1919,"question":"你最你自己身材最满意的是哪个地方?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:14:23","updateTime":"2021-05-09 11:14:24","isExist":null},{"id":1934,"question":"牙膏怎么选?","simplecontent":null,"content":"牙膏是我们日常生活必备的。选择一款合适的牙膏，对我们的口腔健康有十分重要的作用。商场里各种各样的牙膏，让我们眼花缭乱。接下来就跟大家分享一下如何选择合适自己的牙膏，希望对大家有所帮助。\n1，牙齿发黄要找有机硅。含有有机硅成分的牙膏，这种硅拥有良好的耐磨系数，可以在美白牙齿的同时，将对牙齿的磨损程度降到最低。\n\n2，防止蛀牙要找氟。含氟牙膏是指含有氟化物的牙膏。科学家发现，氟化物能有效预防龋齿。对于儿童，特别是6岁以下的儿童，要注意防止氟摄入过量。\n\n3，牙齿敏感找氯化锶或硝酸钾。牙膏里含有硝酸钾或氯化锶等脱敏成分，对牙本质过敏有一定的缓解作用。 牙本质敏感的人可选用这种牙膏。\n\n4，预防牙垢找\"焦磷酸盐\"或\"柠檬酸锌\"。这类牙膏采用摩擦和化学漂白的原理去除牙齿表面的着色，起到预防牙垢，洁白牙齿的作用。\n\n5，消炎找“盐”。因为 盐本身有杀菌消炎的作用，所以含盐牙膏适合大多数人群。\n\n\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:14:13","updateTime":"2021-05-09 11:14:14","isExist":null},{"id":1938,"question":"女生是不是很容易增肥?","simplecontent":null,"content":"　　女人一生的体重如同波浪般此起彼伏，这主要是在女人的生命历程中埋伏着种种肥胖陷阱。为什么女人就是容易肥胖？\n\n\n\n　　1、青春期发育\n\n　　步入青春期，女性的身体开始发生一些微妙的变化。雌性激素增多，卵巢排卵合成孕激素，进而引发女性出现增高、脂肪增多、乳房发育等形体变化。这些变化也意味着女性的体重会攀升。\n\n　　2、节日\n\n　　比起男性朋友，女性朋友似乎更难以抵御美食的诱惑。重大节日的来临让女性们便有了胡塞海吃的“正当理由”。平日节食的人难免会趁机任性一回。年年逢节日都如此，一年年叠加，体重自然增加不少。\n\n　　3、参加工作\n\n　　参加工作后，人们可控制的“弹性时间”变少了，人也不像读书时候活泼，爱参加各种活动，运动就会变少。另外，参加工作后面对各种压力，熬夜加班、久坐不起已经成为一种生活的常态。不规律的生活，让人们难逃肥胖一劫。\n\n　　4、结婚\n\n　　有调查显示调查中13%的女性在婚后发胖。新婚几年生活甜蜜，心宽体胖。婚后，女性和丈夫一起生活，饮食习惯上会有所改变，不少女性跟随丈夫吃得更多了。如此一来，变胖也就在所难免了。\n\n　　5、生育\n\n　　怀孕生产是女性最容易变胖的时候。怀孕时候，为了给胎儿充分营养，准妈妈们会大量进补。而生产后，身体还没恢复，运动不便，并且饮食上也会进补。吃多动少，因此容易发胖。\n\n　　6.、中年\n\n　　不管是男性还是女性，在步入中年后都极容易肥胖。这主要是因为在中年后人的身体机能衰退，代谢率下降，摄入热量难以被消耗，容易造成热量剩余。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:12:32","updateTime":"2021-05-09 11:12:32","isExist":null},{"id":1937,"question":"牛排值的吃吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:12:02","updateTime":"2021-05-09 11:12:02","isExist":null},{"id":2002,"question":"哪个招聘软件质量更好?","simplecontent":null,"content":"Boss直聘、58同城、猎聘、智联招聘、前程无忧。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 11:11:46","updateTime":"2021-05-09 11:11:47","isExist":null},{"id":2040,"question":"女生穿碎花裙子好看吗?","simplecontent":null,"content":"一般来说，这些穿起来不好看的碎花多半有以下特点：色彩太多看起来嘈杂、深色底色、饱和度过高、花朵太密集、版型过于繁冗导致整体设计更加拥挤。\n\n密度高但饱和度低，且颜色干净（碎花图案颜色单一）\n\n1. 小个子不要穿花朵太大的裙子，尽量选择小碎花。\n\n比如这条旗袍型连衣裙，挺有韵味适合拍写真，但我反正是从购物车里删除了。\n2. 皮肤黑黄的女生需要特别注意挑选不显黑的颜色，不然显黑显黄再配上碎花会让你土上加土。\n3. 版型宜简不宜繁，适当露肤效果好。\n你会发现，流行的碎花连衣裙多为吊带裙或者法式裙，这是因为这些裙子增加了露肤面积，减少了碎花的占地面积，增加干净整洁的感觉。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:11:19","updateTime":"2021-05-09 11:11:20","isExist":null},{"id":2048,"question":"为啥男生皮肤很黑?","simplecontent":null,"content":"病情分析：男生皮肤黑可能是由于遗传的因素占的比例比较大一点，另外如果是后天的变黑可能是由于男生不注意防晒，在太阳下运动而导致的。皮肤黑并不影响身体健康，相反男生皮肤稍微黑一点证明自己的身体很健康。建议在夏天阳光比较强烈的时候出门要抹一点防晒。\n\n\n\n  一、肠胃能力差　　由于生活节奏太快，很多人饮食习惯不规律，严重损害了肠胃，造成功能障碍，也会导致肤色暗沉，气色很不好。　　二、体内毒素堆积　　如果新陈代谢正常的话，气色也会看起来好多了，可是如果新陈代谢出现问题，毒素就会在体内堆积，皮肤会变差，气色不好，更白不起来了。\n  　　了解了皮肤黑的原因，男人就不用再疑惑自己为什么不白了。现在找到自己肤色越变越黑的根源了吗?看看自己的肤色有没有被这些外界　因素所影响。[收起]\n\n\n  一、紫外线和电脑的辐射　　紫外线和电脑的辐射都会使皮肤容易老化，是衰老最强劲的杀手，它会使黑色素沉积，血液流通不畅，最终导致皮肤变墨，怎么也白不起来。　　二、皮肤缺水　　皮肤在严重缺水的情况下，也会导致暗沉，因为皮肤的含水量太低，多种皮肤问题就会出现，皮肤怎么会白起来呢!　　三、营养不良、贫血　　营养不良或者贫血的人，一般会血色素较低，这些人普遍会肤色不好看，暗淡无光，多是贫血导致的，所以这类人要及时补充营养。\n\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:09:30","updateTime":"2021-05-09 11:09:31","isExist":null},{"id":2042,"question":"那款运动鞋穿着舒服?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:09:24","updateTime":"2021-05-09 11:09:25","isExist":null},{"id":2058,"question":"肌肉如何长得更快?","simplecontent":null,"content":"患者要想快速的增长肌肉在平时一定要加强体育的锻炼，通过体育锻炼可以使肌细胞的体积增大，可以使肌肉得到快速的增长。\n\n此外患者在饮食上也一定要多吃新鲜的蔬菜和水果，要多吃一些富含优质蛋白的食物如牛肉、瘦肉、羊肉、鱼、多喝牛奶，患者平时也要多注意休息。\n\n对于想要快速增长肌肉的患者来说平时也一定要保持睡眠习惯、良好的睡眠习惯可以使患者的体力得到恢复，患者同时又加强了锻炼、加强了饮食的营养，这样就可以使机体的肌肉得到快速的增长。\n\n1/8分步阅读\n先变强壮\n\n \n\n    力量越大意味着肌肉越多。开始力量训练吧。我提倡负重练习，因为这可以让你由轻量开始然后不断的增加重量。体重训练也同样有效。从一根杠铃杆开始，学习一些正确的技巧，每次健身都增加一些重量，逼着自己走出自己的舒适圈。\n\n2/8\n使用自由负重训练\n\n \n\n    你可以用杠铃来举起最大负重。重量越大刺激越大，也就意味着更多肌肉。哑铃是非常不错的辅助练习器械，但不适和用来主训练。\n\n \n\n    安全性：机器逼着你做一些固定的，不自然的动作。这些动作可能会造成身体伤害。自由负重训练重复的是自然的动作。\n\n \n\n    高效性：自由负重训练迫使你控制重量并要掌控平衡。这比机器更好地增肌，因为机器已经帮你保证了平衡。\n\n \n\n    功效性：使用机器训练获得的力量并不能转移到自由负重器械上或者现实生活中。现实生活中没有机器可以帮你控制平衡。\n\n \n\n    多样性：只用一个哑铃你就可以做数百种练习。还可以节约金钱和空间，特别是当你想建立一个家庭健身房的时候\n\n3/8\n3）做组合练习\n\n \n\n    如果你已经训练了基础力量以及肌肉质量，单一的训练还算不错，但如果你正准备增肌，同时刺激到多块肌肉的训练更好。不要做无休止的二头肌弯曲，改为手掌向外和手掌向内的引体向上，以及杠铃划船。也不用练习伸臂，改为卧推、举压，或者双杠臂曲伸。当然也不要做腿屈伸，做些深蹲和硬拉。\n\n4/8\n深蹲对你的整个身体都由好处。这是最重要的训练。一旦能负重300磅深蹲，你一定已脱胎换骨了。这里说的是你的臀部低于膝关节的自由负重深蹲。\n\n \n\n    当你做深蹲和硬拉时，所有的肌肉都被拉紧。这些动作使你的身体成为一个整体，可以让你应付大重量。不要在二头肌弯曲上面浪费时间了。如果你能负大重量进行深蹲和硬拉，你的手臂一定已经很粗。\n\n5/8\n做全身的训练\n\n \n\n    不要依照健美杂志的建议训练。当你已打下基础后，身体局部分离训练倒是不错，但那要你能负重300磅深蹲了才好。 初期还是做一些组合练习比如深蹲、硬拉，卧推，杠铃划船，头上杠铃推举，引体向上，双杠臂曲伸等\n\n6/8\n保证恢复\n\n \n\n    专业的运动员一个星期训练5到6次。然而他们一开始并不那样做。他们变得魁梧和强壮后才增加训练强度。如果你想一步登天按他们得计划训练，你将会因过度训练而受伤。\n\n \n\n    休息","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:08:18","updateTime":"2021-05-09 11:08:18","isExist":null},{"id":2064,"question":"不会反弹的祛痘护肤品?","simplecontent":null,"content":"不管是何种类型的痘痘，痘痘产生的根本原因是相同的：油脂分泌过量，毛孔堵塞，和细菌滋生。其它的都是各种诱因\n\n你体内的毒素多,你要内外调节才会好,单靠些什么止痘,去痘的没什么用的,好了也会长,你自己一定要注意钦食,多吃水果,多喝水,产品老中医止痘精华素不错,你还可以去医院买个排毒胶囊来吃,很多人都是因为体内有毒素,排不出去,所以就长豆豆,这段时间不要用太多泡泡的洗面奶洗,洗个温和一点的,钦食是最重要的,祝你成功.\n\n用肥皂或者阿奇霉素","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:06:57","updateTime":"2021-05-09 11:06:57","isExist":null},{"id":2153,"question":"香港的化妆品好吗?","simplecontent":null,"content":"这是肯定的.\n首先价钱是绝对比大陆便宜的.\n其次都是国外原装进口的.\n但是 不能和水货 假货的价钱比哦.\n在内地专柜卖100的东西.真的10块能买到..你也不能相信吧.所以一分价钱一分货是没错的`","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:04:07","updateTime":"2021-05-09 11:04:08","isExist":null},{"id":2060,"question":"免税店买的最多是啥?","simplecontent":null,"content":"香港国际机场免税店的商店特别多,有各种顶级品牌,奢侈品。最值得购买的当属大牌子的包袋、太阳镜。Gucci、香奈儿、普拉达、爱玛仕、卡地亚,,,,,,没有了关税，它们在这里的价格显得更为平易近人。\n\n最值得购买：大牌包包、太阳镜、手表最划算\n\n最不值得购买：化妆品(还是日上便宜)\n\n建议：\n\n1、 如果你去的时间段正好是香港的打折季(7-8月和圣诞)，那么建议你直接在港内买，就不要在香港机场免税店买了。\n\n2、 虽然北京上海的免税店美妆品部分价位低过香港，但香港机场也有一些套组是内地机场没有的。候机的时候也可以逛逛。\n\n3、 最后如果想买点保健品带回来，可以选择1号航站楼的余仁生，这里的保健品都是纯中药的，价格比它的原产国新加坡还便宜。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:03:18","updateTime":"2021-05-09 11:03:18","isExist":null},{"id":2062,"question":"针灸有效吗?","simplecontent":null,"content":"病情分析：针灸治疗眩晕症是有一定效果的，其主要是通过刺激穴位达到舒筋活络增加脑部供血的作用。建议患者在针灸期间，要注意休息，避免过度劳累；不要过度贪凉，注意保暖，防止受凉。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:02:17","updateTime":"2021-05-09 11:02:18","isExist":null},{"id":2145,"question":"广东哪些地方吃辣椒?","simplecontent":null,"content":"韶关，河源，梅州经常吃辣椒","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:01:23","updateTime":"2021-05-09 11:01:24","isExist":null},{"id":2102,"question":"女生染头发什么颜色好看?","simplecontent":null,"content":"1.黑直发的女生\n\n如果你平时就是一个黑发的妹纸，想染头却不想染特别明显的颜色的话。建议你可以选择黑茶色，这是一款百搭型的发色，平时染也不会错。\n\n不需要漂还无敌显白，很适合亚洲人，就算穿中式嫁衣也不违和哦，会显得人特别温柔，就像《延禧攻略》中的容音小天使一样。\n\n\n\n2.中短发的女生\n\n中短发的女生墙裂推荐你灰棕色，这个颜色偏冷棕色系，适合皮肤发黄还有发红的女生，能提亮肤色，有显白的效果。\n\n它在不同光线下，会呈现出不一样的颜色。在冷光下有一点青木灰的感觉，在暖光下就是温柔的深棕色啦。重点是！这个发色也不需要漂，如果在搭配微卷你绝对是小仙女！\n\n\n\n3.长卷发的女生\n\n如果你的年龄年轻一点，可以选择粉棕色，相比那些饱和度、明亮度比较高的粉色，这款粉棕色真的对亚洲人友好很多，梦幻又浪漫，染上你就是仙女本仙。但是这种颜色需要漂，浅色系的发色还容易掉色~\n\n像最近流行的雾霾灰和雾霾紫色也可以尝试一样，这种颜色偏冷灰色调，只要肤色别太过于黄和黑都挺适合的，唯一的缺点就是要漂，而且以后也会慢慢掉色。\n\n\n\n当然，好看的染发色有很多，但是适合你的可能只有一小部分。建议小可爱们如果想染头发，请提前选好颜色来尝试哦~如果只在婚礼前一天做的话，不合适可就来不及换咯！\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 11:00:37","updateTime":"2021-05-09 11:00:37","isExist":null},{"id":2103,"question":"女生染头发绿色好看吗?","simplecontent":null,"content":"染过绿色的头发比较容易褪色，因为染绿色需要高度双氧水或者漂粉漂色，损伤头发，掉色后会变成灰色带绿。之后绿色开始变少，黄色和白色的成分居多。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 10:58:17","updateTime":"2021-05-09 10:58:18","isExist":null},{"id":2147,"question":"如何根据菜放合适的盐?","simplecontent":null,"content":"每种菜烹制的时候放盐的最佳时机！\n1.烹制快结束时放盐的菜：烹制爆肉片、回锅肉、炒白菜、炒蒜薹、炒芹菜时，在旺火、热锅油温高时将菜下锅，并以菜下锅就有“啪”的响声为好，全部煸炒透时适量放盐，炒出来的菜肴嫩而不老，养分损失较少。\n2.烹调前先放盐的菜：蒸制块肉时，烧整条鱼、炸鱼块时，在烹制前先用适量的盐稍为腌渍再烹制，有助于咸味渗入肉体。烹制鱼圆、肉圆等，先在肉茸中放入适量的盐和淀粉，搅拌均匀后再吃水，使能吃足水分，烹制出的鱼圆、肉圆、亦鲜亦嫩。有些爆、炒、炸的菜肴，挂糊上浆之前先在原料中加盐拌匀上劲，可使糊浆与原料粘密而紧不致产生脱袍现像。\n3.吃前才放盐的菜：凉拌菜如凉拌莴苣、黄瓜，放盐过量，会使其汁液外溢，失去脆感，如能食前片刻放盐，略加腌制沥干水分，放入调味品，食之更脆爽可口。\n4.在刚烹制时就放盐的菜：做红烧肉、红烧鱼块时，肉经煸、鱼经煎后，即应放入盐及调味品，然后旺火烧开，小火煨炖。\n5.烹烂后放盐的菜：肉汤、骨头汤、腿爪汤、鸡汤、鸭汤等荤汤在熟烂后放盐调味，可使肉中蛋白质、脂肪较充分地溶在汤中，使汤更鲜美。炖豆腐时也当熟后放盐，与荤汤同理。\n【做菜应如何放盐】\n如果做菜用的食油是豆油、菜子油等，为了减少蔬菜中的维生素及其它营养物质在烹调的损失，一般应等热煸炒过蔬菜以后再放盐。\n如果用花生油炒菜，由于花生容易生黄曲霉素B1，在榨花生油时，虽经多种方法处理以除去这种毒素，但仍会有极微量黄曲霉素素残留存在。因此，用花生油淡菜时最好先放盐，后放菜，以使盐中的碘化物去解除黄曲霉素的毒性，有利于保障身体健康。\n如果用猪油、鸡油等动物油炒菜，先放盐后放菜也有利于对猪油、鸡油中有机氯农药残留量的削减。\n就这些，希望对你有帮助。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 10:57:16","updateTime":"2021-05-09 10:57:17","isExist":null},{"id":2141,"question":"摄像头什么品牌好?","simplecontent":null,"content":"摄像头品牌中，360、罗技和小米都是比较好的品牌。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 10:56:23","updateTime":"2021-05-09 10:56:23","isExist":null},{"id":2139,"question":"舌头裂开怎么办?","simplecontent":null,"content":"舌头裂开了需要排除一些口腔方面的疾病，还需要排除是否有上火，还需要排除一些免系统方面的疾病。如果舌头有裂开，而且曾经有过艾滋病的高危行为，或者是曾经有过输血或者曾经有过一些针刺伤，像这种情况是需要进行艾滋病抗体的筛查。其实艾滋病的症状并没有明显的特异性，是没有办法通过症状期推断是否有艾滋病的感染。\n\n如果想要明确或者是想要排除是否有艾滋病的感染。就需要进行艾滋病抗体或者是艾滋病核酸的检测。需要在窗口去之后进行检测，结果是阴性的就可以排除。艾滋病的一旦明确诊断之后，就需要尽早的进行系统规范的抗病毒治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-09 10:55:45","updateTime":"2021-05-09 10:55:46","isExist":null},{"id":1796,"question":"什么香水比较好?","simplecontent":null,"content":"如果是很女人的，最好用花香调，水果香调太孩子气了。推荐Jennifer\nLopez的still，清淡的茶香+花香，挺温婉的感觉，而且价格便宜。Paul\nSmith的Rose也不错，小家碧玉的玫瑰香，感觉很温柔。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:23:46","updateTime":"2021-05-09 02:23:46","isExist":null},{"id":1803,"question":"孩子跟女生性同意吗?","simplecontent":null,"content":"如果女方有家族企业需要继承人，我是无所谓以后孙子跟女方姓的，我家又没皇位可继承。我还会尽量说服老公。\n如果女方家也普通人家，那就按传统咯","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:22:29","updateTime":"2021-05-09 02:22:29","isExist":null},{"id":1812,"question":"社保没有交满15年怎么办?","simplecontent":null,"content":"1、继续缴纳社保\n\n如果想要在之后的时间里领取养老金，并享受医保待遇就只能继续缴纳社保费用，知道缴满15年为止。\n\n2、一次性缴满15年\n\n如果你是社会保险法实施之前参加养老保险（社会保险法于2011年7月1日开始实行）可以一次性缴满15年，之后在办理退休手续，就可以按月领取一定的养老金了。据了解有一些地区开始取消一次性缴满15年的政策了，部分地区暂未执行，大家可拨打12333咨询当地社保机构了解情况。\n\n3、从城镇职工保险转为城乡居民养老保险\n\n可以将城镇职工养老保险个人账户的全部储存额度转入城乡养老保险的个人账户中。之后可以选择养老保险的缴费额度，累计缴满15年就可以按月领取一定的养老金了。\n\n4、取出账户余额\n\n如果你不想再继续缴纳社保，也没有领取养老保险的需求，就可以向社保局提交书面申请，终止职工基本养老保险，申请通过后就可以将个人账户的钱以及利息一次性支付给本人，但是统筹账户部门不能退。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:21:13","updateTime":"2021-05-09 02:21:14","isExist":null},{"id":1813,"question":"火锅店为什么晚上才开?","simplecontent":null,"content":"首先，吃火锅一般都较晚的去吃，然后吃的时间又长，那么自然的会到很晚的时间，小吃所需要的时间较短，这么说吧，火锅，从你开始点菜，到你吃完，聊会天，一般三小时左右的吧，这还是一桌的情况，陆陆续续的人都进来吃那么时间自然就更久了。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:20:25","updateTime":"2021-05-09 02:20:26","isExist":null},{"id":1816,"question":"彩礼和聘礼区别?","simplecontent":null,"content":"聘礼为订婚时男方为了表达自己的求取之心，向女方赠送的礼金或礼品；彩礼则为结婚时男方赠送给女方的礼金和礼品。通常订婚时聘礼礼金的数额要小于结婚时彩礼礼金的数额。","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:19:58","updateTime":"2021-05-09 02:19:58","isExist":null},{"id":1830,"question":"肯德基是不是有代工厂?","simplecontent":null,"content":"肯德基薯条，鸡翅，汉堡，蛋糕，蛋挞都是代工厂","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:19:01","updateTime":"2021-05-09 02:19:02","isExist":null},{"id":1854,"question":"陈安之为什么不行?","simplecontent":null,"content":"鼓励行，实业不行，投资很多失败\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:32","updateTime":"2021-05-09 02:18:32","isExist":null},{"id":1844,"question":"男生接生尴尬事?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:02","updateTime":"2021-05-09 02:18:02","isExist":null},{"id":1845,"question":"支付令和起诉区别?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:01","updateTime":"2021-05-09 02:18:02","isExist":null},{"id":1846,"question":"法律援助中心可以免费打官司，12348?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:01","updateTime":"2021-05-09 02:18:01","isExist":null},{"id":1847,"question":"丢身份证麻烦?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:00","updateTime":"2021-05-09 02:18:01","isExist":null},{"id":1848,"question":"改名字的影响?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:00","updateTime":"2021-05-09 02:18:00","isExist":null},{"id":1849,"question":"发红包了?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:18:00","updateTime":"2021-05-09 02:18:00","isExist":null},{"id":1850,"question":"改名，学历学籍流水怎么办?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:59","updateTime":"2021-05-09 02:18:00","isExist":null},{"id":1851,"question":"你们公司女生多不?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:59","updateTime":"2021-05-09 02:17:59","isExist":null},{"id":1852,"question":"公司单身女生多不?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:58","updateTime":"2021-05-09 02:17:59","isExist":null},{"id":1853,"question":"介绍几个小姐姐吧?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:58","updateTime":"2021-05-09 02:17:58","isExist":null},{"id":1855,"question":"电脑直营店和普通店区别?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:57","updateTime":"2021-05-09 02:17:57","isExist":null},{"id":1856,"question":"山药为什么痒?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:56","updateTime":"2021-05-09 02:17:57","isExist":null},{"id":1870,"question":"评价下上司?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:43","updateTime":"2021-05-09 02:17:44","isExist":null},{"id":1872,"question":"复式房子价格多少?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:42","updateTime":"2021-05-09 02:17:43","isExist":null},{"id":1873,"question":"建议去哪里找房子？附近是村子有名房的?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:42","updateTime":"2021-05-09 02:17:42","isExist":null},{"id":1874,"question":"附近房子是否有停车位，可以充电?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:40","updateTime":"2021-05-09 02:17:41","isExist":null},{"id":1875,"question":"大单间好吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:40","updateTime":"2021-05-09 02:17:40","isExist":null},{"id":1876,"question":"房子装修定制有必要吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:39","updateTime":"2021-05-09 02:17:39","isExist":null},{"id":1877,"question":"脚臭怎么办?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:38","updateTime":"2021-05-09 02:17:39","isExist":null},{"id":1878,"question":"你喜欢按摩吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:38","updateTime":"2021-05-09 02:17:38","isExist":null},{"id":1879,"question":"你会按摩吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:37","updateTime":"2021-05-09 02:17:38","isExist":null},{"id":1881,"question":"护书家如何?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:37","updateTime":"2021-05-09 02:17:37","isExist":null},{"id":1882,"question":"买多少钱房子好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:36","updateTime":"2021-05-09 02:17:37","isExist":null},{"id":1883,"question":"销冠如何做到的?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:34","updateTime":"2021-05-09 02:17:34","isExist":null},{"id":1884,"question":"教师资格证和教育局统一面试或单独组织面试?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:34","updateTime":"2021-05-09 02:17:34","isExist":null},{"id":1885,"question":"华强北的背包客?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:33","updateTime":"2021-05-09 02:17:34","isExist":null},{"id":1886,"question":"哪些水果或者蔬菜祛痘?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:33","updateTime":"2021-05-09 02:17:33","isExist":null},{"id":1887,"question":"qq手机如何设置不能访问空间?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:32","updateTime":"2021-05-09 02:17:33","isExist":null},{"id":1888,"question":"买什么水杯好?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:32","updateTime":"2021-05-09 02:17:32","isExist":null},{"id":1890,"question":"中国水资源怎么弄的?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:31","updateTime":"2021-05-09 02:17:32","isExist":null},{"id":1891,"question":"过滤器有用吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:31","updateTime":"2021-05-09 02:17:31","isExist":null},{"id":1892,"question":"如何快速适应团队?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:30","updateTime":"2021-05-09 02:17:31","isExist":null},{"id":1894,"question":"汤圆好吃吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:29","updateTime":"2021-05-09 02:17:30","isExist":null},{"id":1899,"question":"平日礼的一些小小仪式感?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:26","updateTime":"2021-05-09 02:17:26","isExist":null},{"id":1900,"question":"现在买有优惠吗？?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:25","updateTime":"2021-05-09 02:17:26","isExist":null},{"id":1902,"question":"耳机这款音质真的不错?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:24","updateTime":"2021-05-09 02:17:25","isExist":null},{"id":1903,"question":"好想好想和你在一起这首歌如何?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:24","updateTime":"2021-05-09 02:17:24","isExist":null},{"id":1904,"question":"奶粉什么样的好喝?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:23","updateTime":"2021-05-09 02:17:24","isExist":null},{"id":1906,"question":"平常吃的药材有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:22","updateTime":"2021-05-09 02:17:23","isExist":null},{"id":1908,"question":"电影主要看的是评分吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:22","updateTime":"2021-05-09 02:17:22","isExist":null},{"id":1909,"question":"春节档有什么电影?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:21","updateTime":"2021-05-09 02:17:21","isExist":null},{"id":1910,"question":"有什么著名的导演?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:17:21","updateTime":"2021-05-09 02:17:21","isExist":null},{"id":1920,"question":"你最性感的部位是哪里?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:42","updateTime":"2021-05-09 02:08:42","isExist":null},{"id":1921,"question":"男生玩lol?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:41","updateTime":"2021-05-09 02:08:42","isExist":null},{"id":1922,"question":"0点准时睡觉吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:40","updateTime":"2021-05-09 02:08:41","isExist":null},{"id":1923,"question":"这个人很奇怪吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:40","updateTime":"2021-05-09 02:08:40","isExist":null},{"id":1925,"question":"晚上爱上王者荣耀怎么办?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:39","updateTime":"2021-05-09 02:08:40","isExist":null},{"id":1926,"question":"马化腾又当上了中国首富?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:39","updateTime":"2021-05-09 02:08:39","isExist":null},{"id":1928,"question":"中印边境局势?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:38","updateTime":"2021-05-09 02:08:39","isExist":null},{"id":1929,"question":"美国的脸上是做什么的?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:38","updateTime":"2021-05-09 02:08:38","isExist":null},{"id":1930,"question":"科幻片喜欢看吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:37","updateTime":"2021-05-09 02:08:38","isExist":null},{"id":1931,"question":"最近美国有什么最新的大片?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:34","updateTime":"2021-05-09 02:08:35","isExist":null},{"id":1932,"question":"大片的剧情是什么?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:34","updateTime":"2021-05-09 02:08:34","isExist":null},{"id":1933,"question":"你喜欢看重复电影吗?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:33","updateTime":"2021-05-09 02:08:33","isExist":null},{"id":1936,"question":"牛排的质量如何?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-09 02:08:32","updateTime":"2021-05-09 02:08:32","isExist":null},{"id":2150,"question":"高血压?","simplecontent":null,"content":"是什么造成","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:35:11","updateTime":"2021-05-08 19:35:11","isExist":null},{"id":2148,"question":"三高是什么?","simplecontent":null,"content":"高血糖，高血脂，高血压","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:34:59","updateTime":"2021-05-08 19:34:59","isExist":null},{"id":2149,"question":"祛痘不能吃总结?","simplecontent":null,"content":"糖，油，烤，湿热","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:34:06","updateTime":"2021-05-08 19:34:07","isExist":null},{"id":2146,"question":"市场有哪些辣椒?","simplecontent":null,"content":"现在很多人喜欢吃辣椒，放了辣椒的饭菜吃着特别开胃，很多饭菜里面都会放一些辣椒，如果饭菜里面没有辣椒的话，就会觉得这种饭菜吃着一点味道都没有。有些辣椒特别辣吃一点点就受不了，有些辣椒越吃越香，今天给大家分享几种美味的辣椒。\n\n第1种小米椒，小米椒一般就是朝天椒，个体比较小，没有成熟的时候是淡绿色，成熟的时候是橙黄色，我们在市场上见到的小米椒基本上都是这种颜色，一般用来做泡椒凤爪，刚吃的时候特别辣，辣过之后就是爽，后味香香的总想尝几口。\n\n第2种二荆条，这种辣椒在吃川菜的时候比较常见，不仅辣而且味道特别香，它的辣度是那种是稍微辣的，颜色红红的比较好看，和我们平常见的辣椒差不多，在炒菜的时候会放入二荆条，饭店里面用这道菜的比较多，做出的饭菜比较开胃下饭。\n\n第3种七星椒，这种辣椒也是产自于四川，它的辣度比小米椒还要辣，据说辣度可以达到七级，因此给它取名七星椒，它是一种十分优质的辣椒，颜色红润，不仅辣度非常高，在用的时候千万不能多用，很多人接受不了这种辣辣的程度。\n\n第4种新一代辣椒，这种辣椒产于河北，这款辣椒的价格不贵，辣度一般很多人能接受，也是很多家庭里面经常买的，这种辣椒上色入味的效果很好，平常在做菜的时候，一般用的都是这种辣椒。\n\n第5种朝天椒，在饭店当中用的比较多，这种辣椒的辣椒要辣一些，价格呢也比较便宜，很多地方都有种植，农村地区种的辣椒就有这个品种，一般辣椒朝天生长的就是朝天椒。它可以制作成辣椒末辣椒粉，辣椒油等等。你觉得哪种辣椒最好吃？\n\n全国各地出产的辣椒可能各不相同，四川这边多见的是二荆条。\n二荆条，绿色越深的越辣，越浅的越嫩。\n下面绿色和红色都是二荆条。长度一般是10-15厘米。\n买的时候尽量挑选直一些的，这样切的时候能排得整齐，比较容易下刀。\n绿色的一般作为主菜料可以直接当菜吃的，用来爆炒（肉丝、牛柳）干煸。\n红色的用来做泡椒、豆瓣酱。\n一般四川每家会至少有三个泡菜坛子。（分开泡是避免串味）\n一个泡椒，一个泡仔姜，一个泡青菜。（我没那么讲究，泡椒和青菜放一起泡，姜单独泡）\n我妈妈做的是七斤海椒1两盐，炒菜咸淡刚好。\n市面上卖的豆瓣酱大多都偏咸。\n\n\n\n\n有个很好吃的菜叫炒油蚱蜢，其实是炒蔫椒，\n选用快下季的那种最后一次采摘的辣椒。\n这种辣椒本身的水分已经失去很多了，蔫蔫的，炒起来不太炝辣，略加一点醋。\n哎吧妈呀~太开胃下饭了，不说了，我吞个水口先~\n\n云南、广东、广西等地多产小米辣，长3-5厘米左右。\n大家平时吃的野山椒是小米辣的一种。\n这种辣椒多用于配料，不是直接当主菜吃的那种。\n\n\n\n甜椒：偏方圆形大小约莫半掌，各地称呼不同，也有叫灯笼椒、柿子椒\n颜色很多。市场常见的有黄色、红色、绿色（不常见有橙色、紫色、白色）\n红色的多用于做主菜与肉丝加糖炒甜椒肉丝，\n其他颜色大多做菜品装盘、摆盘装饰、蔬菜沙拉等。\n甜椒也可以泡到坛里子吃，大家可以试试，\n泡了之后挺酸爽开胃的，没其他辣椒那么辣。\n\n\n青椒：这个比甜椒细长很多，但比二荆条粗，\n我不确定是不是甜椒类的一种，毕竟不是学蔬菜专业的。\n这种去掉把之后，大多切丝炒肉，\n或整个炒虎皮青椒，主要的辣味应该是在籽上。去掉籽没那么辣了。\n\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:24:33","updateTime":"2021-05-08 19:24:33","isExist":null},{"id":2144,"question":"微波炉有声音?","simplecontent":null,"content":"1、呼呼声\n微波炉发出的呼呼声与磁控管无关，磁控管的谐振频率很高，远高于人耳所能听见的声音频率。这种噪声来自用于给磁控管降温的风扇。\n\n2、嗡嗡声\n微波炉还会产生一种嗡嗡声。这种噪声来自于变压器、二极管和电容器。它们在将电源插座50赫兹电流的电压逐渐升高时会产生振动，发出嗡嗡声。\n\n3、滋滋声\n这是因为你加热的食物含有油脂的原因，那响声是油分子爆裂的声音，所以用微波炉加热带有油脂的食品时，要用微波炉专用保鲜膜盖好并扎一些小眼，以防油分子爆裂时污染微波炉的腔体。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:05:31","updateTime":"2021-05-08 19:05:31","isExist":null},{"id":2143,"question":"微波炉什么情况会爆炸?","simplecontent":null,"content":"1、热带皮、带壳的食物\n比如鸡蛋、栗子、土豆、香肠等，还有表皮比较结实的水果，比如猕猴桃、葡萄、橙子等，常见的事故就是很多人在用微波炉煮鸡蛋可能一不小心就会“砰”的一声炸开，糊满微波炉内壁；也有可能在你打开炉门的瞬间，炸糊在你的脸上、眼睛里；甚至还有可能在你放进嘴的时候爆炸，十分危险。\n\n因为平时煮鸡蛋时，是从外到内加热；而用微波炉煮蛋正相反，是从内到外进行快速加热，使鸡蛋内产生大量蒸汽，但又被蛋壳包裹住，最后就会爆炸。\n\n建议想要用微波炉煮蛋最好去壳，或用牙签、叉子将蛋黄、蛋清表面的膜刺破，其他带皮或带壳的食物，也是同样原理，一些栗子，土豆，香肠，水果等封闭的东西要先划破口子或切块再加热，最好分几次加热，严格把控时间为好\n\n2、热脂肪含量高而水分含量低的食物\n比如坚果、五花肉、奶酪、油炸食物等，因为水分少，以同样能量的微波加热后，温度就上升得特别快，很容易烧焦或炸开。如果一定要用，就要严格控制时间，此外，鱼干、肉干等水分含量也很低，微波加热时易烧焦，产生致癌物。\n\n3、热水\n传统烧水时，水会流动，到了沸点就“开”了，而微波炉加热时，水不流动，只是温度升高，有可能超过了沸点还“不开”，这时候稍有动静，水就会猛烈沸腾，有可能发生爆炸现象，如果要在微波炉烧水，可以在容器里放一把适合微波炉加热的汤勺，这样可以让水正常沸腾。还要严格算好烧水时间。\n\n对于牛奶、汤、粥、杂粮糊等流质食物，用微波炉加热时要用广口容器，不要把水加得太满。最好不要一次性加热到位，而是分两次加热，中途搅拌一下，能热得更快更均匀，也能避免汤水溅出。\n\n4、热干辣椒\n干辣椒含水少，且其中的辣椒素易挥发、不稳定，微波加热后容易着火，其挥发出来的物质还会刺激眼睛和嗓子。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:05:10","updateTime":"2021-05-08 19:05:10","isExist":null},{"id":2142,"question":"微波炉会爆炸吗?","simplecontent":null,"content":"微波炉正常使用的话并不会发生爆炸事故。\n\n微波炉是一种用电磁波加热食物的厨房电器，不仅可以快速热饭热菜，解冻食物，还能制作多种美食，在出厂前是经过合格检测的，如正确使用并不会出现爆炸危险，但若是不当使用微波炉的话，如放了一些不可以微波的东西，轻则损坏微波炉，重则引发火灾或爆炸。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:04:39","updateTime":"2021-05-08 19:04:39","isExist":null},{"id":2054,"question":"微波炉如何用?","simplecontent":null,"content":"1.排除不可微波加热的食物：鸡蛋、坚果、冻肉类等；2.排除不可微波加热的器皿：金属器皿、塑料等；3.开始加热：将需要加热的东西放入微波炉中，选择需要的选项即可。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:03:55","updateTime":"2021-05-08 19:03:55","isExist":null},{"id":2055,"question":"微博有哪些信息有用?","simplecontent":null,"content":"1/6分步阅读\n一、看新闻\n\n上面有很多新闻媒体的大号，可以看它们发布的最新消息，民生新闻、国际大事等，比看电视方便、信息更集中。\n\n \n\n二、看娱乐八卦\n\n有的博主专门提供娱乐八卦的内容，吃瓜专用\n\n \n\n三、获取一些知名人士、机构的动态\n\n比如关注一些感兴趣的考古家、美食家、设计师、明星、名人、电视台、部门、公司等，也可以叫做追星。\n\n\n2/6\n四、发布你的动态\n\n你的心情、活动、状态、行程、生活等都可以在上面发布，比如看电影的感想、生活的感悟、分享你的一些发现等，加上话题还可以让更多志同道合的人看到你的内容\n\n \n\n五、玩超话\n\n就是相同兴趣的人的聚集地，可以在里面交流、阅读、找好友等\n\n \n\n六、发布活动、广告等\n\n如果你有产品，可以设计一些活动，让看到的人参与，增加你的产品曝光率\n\n通过微博营销，哪家广告投放放心?鱼爪传媒!\n广告\n3/6\n七、和他人讨论时事热点\n\n在热门事件博文下面参与评论，讨论具体事件\n\n \n\n八、私聊\n\n当你想和某个人说话时，比如朋友、同事、名人等，可以给他发私聊，在没有其他联系方式的时候可以这么联系对方\n\n \n\n九、转发\n\n如果你看到一些很好的内容，可以转发成你的微博，方便你日后查看。\n\n微博可以借款吗_用360借条_0.5-20万想借就借!\n广告\n4/6\n十、交友\n\n你可以在上面找到很多志同道合的人的人，他们成为网友，也可以发展为真实朋友\n\n \n\n十一、和明星、大号、权威号互动\n\n追星的人可以给明星留言，说不定会得到回复，或者对一些专业机构、知名人士进行提问，遇到不对劲的事情时，还可以@一些监管机构进行举报\n\n \n\n十二、卖东西\n\n你可以为自己的商品引流，前提是你把自己的微博账号经营得比较好，有一定数量的粉丝。\n\n网上借款可靠吗-_评估时间短_效率快\n广告\n5/6\n十三、搜索答案\n\n当你遇到不懂得问题时，可以在上面根据关键字查找，看看有没有相关答案，或者你自己提问，看看有没有人回答。\n\n \n\n十四、找图片\n\n比如寻找一些好看的手机壁纸、明星图片等\n\n \n\n十五、寻找灵感\n\n创作者可以在上面搜索一些创作相关的内容，看看有没有什么新的角度或者话题等。\n\n6/6\n十六、学习\n\n有很多人会发一些各行业的知识或者操作方法，比如电脑技能、做菜方法等，都可以通过微博来学习。\n\n \n\n十七、鉴别购买物品的质量和真假\n\n比如买包包、衣服、数码产品等","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:03:25","updateTime":"2021-05-08 19:03:25","isExist":null},{"id":2057,"question":"保研条件?","simplecontent":null,"content":"保研需要什么条件\n\n保研条件因本科学校不同而不同，规则制订和操作权由各校掌握，有加分细则，如发表论文、竞赛获奖等，因此学校不同，保研情况也各有不同。\n\n \n\n但是，与保研有直接关系的主要是成绩、竞赛证书、科研经历等等（硬性指标），最重要的是学习成绩和综合测评。其次是学术和英语；再者是学生工作或支教。\n\n1、 学习成绩和综合测评一定要好，这是硬性指标。\n\n2、拥有丰富的科研经验。这一点也是导师最为看重的，在读研前就有科研经历的学生一定会让导师省心不少。\n\n3、 参加各类竞赛的经历。竞赛的经验可以加创新学分，重要性不需赘述。\n\n4、 英语很重要。保研的同学，考过英语六级（大部分高校对六级都有要求），成绩越高越好。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 19:02:39","updateTime":"2021-05-08 19:02:39","isExist":null},{"id":2138,"question":"相亲的学历鄙视链?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:58:44","updateTime":"2021-05-08 18:58:44","isExist":null},{"id":2140,"question":"不知道买哪个好如何选择?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:58:44","updateTime":"2021-05-08 18:58:44","isExist":null},{"id":2137,"question":"吃多少菜不会长痘?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:58:43","updateTime":"2021-05-08 18:58:43","isExist":null},{"id":2101,"question":"月经如何喝红糖?","simplecontent":null,"content":"月经期间喝红糖水只适用于月经量少的女性，月经量多者不可在月经期间喝红糖水以免导致月经过多，红糖具有活血通络、温中散寒、祛瘀止痛、补血等作用，寒邪入体、气滞血瘀、瘀则不通，不通则痛而出现月经量少、痛经。患者服用后可达到增加月经量、止痛的效果，但是不能多喝避免出现月经淋漓不尽、月经过多等情况，一个月经周期最多服用三天。喝红糖水的同时不可在同服其他具有活血化瘀效果的食物或药物，饮食清淡不要吃辛辣刺激性食物，注意保暖，注意休息不要熬夜。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:39:37","updateTime":"2021-05-08 18:39:37","isExist":null},{"id":2100,"question":"红糖和白糖，冰糖区别?","simplecontent":null,"content":"市场上一直流行着红糖的各种神奇效果。其实不管是红糖、白糖还是冰糖说白了只是名字有所不同而已。它们的原材料都是蔗糖或甜菜等其他糖含量较高的植物里面提取的，本质上都属于蔗糖。不过制作工序的多少和制作工艺的不同使得其外表有所变化。一般来说，分为以下几种。\n1、红糖\n\n制作最为简单，只要原材料如甘蔗、甜菜榨汁后过滤再将汁液熬一下就浓缩成了红糖。\n2、白糖\n\n在红糖的制作基础上，经过纯化、脱色，去除杂质后就制作成了白糖。\n3、冰糖、绵白糖\n\n对白糖结晶进行再加工，形成粒状结晶的白砂糖、冰状结晶的冰糖以及绵软细腻结晶的绵白糖。\n那么很多人提到的冰糖降火、白糖上火是否正确呢？其实经过上面我们对几种糖的制作过程介绍就会发现它们其实是同一种东西，只不过经过的程序有多有少，所以它们的功效是不会不同的。\n还有一个是市场上的红糖比白糖贵，是不是说明红糖更有营养呢？\n也是从我们对几种糖类的介绍之后我们可以看到红糖只是经过加热后熬煮后浓缩的甘蔗甜菜汁等，因为经过高温加热熬煮会损失一定量的维生素之外，红糖确实留住了甘蔗甜菜里的大部分营养物质，比白糖是多了一些矿物质元素。经过多重工序制作的白砂糖、冰糖和绵白糖除了蔗糖和水以外就几乎没有其它的营养素了。\n丛这一点来看红糖确实有那么一点优势，但也仅仅是一点优势而已，并没有市面上宣传的那么神奇。相反，不管是红糖、还是白糖亦或是冰糖它们都属于高热量的食物，其中的营养价值并不是很高。\n而红糖价格会比白糖贵的原因是它不像白糖那么常用，它的销量较小，这也导致了厂家的生产和流通成本增加而引起红糖价格比其他糖类高旭许多。以下是几种红糖具有各种神奇作用流传较高的几种说法：\n1、功能性红糖？\n市场上经常会出现一些功能性红糖和古方红糖，其实这些红糖只是在制作过程中加入了一些辅料如红枣汁、桂圆汁等等，其实际效果还不如自己直接拿着甘蔗吃桂圆好。\n2、红糖补铁？\n红糖制作原料甘蔗和甜菜等本身含铁量就比较少，自然红糖的含铁量就比较少了。除了含铁量少之外红糖中的铁吸收率其实也很低，所以想要靠吃红糖改善缺铁贫血并不是一个好方法。相反，使用太多高热量的糖类很容易使得自己变得肥胖。\n3、红糖有利于调节月经？\n目前并没有确凿的证据证明红糖可以治疗痛经，喝开水依旧是有效缓解月经疼痛的一个老办法。\n糖每天吃多少好？\n糖不能多吃，吃多不仅会让人变胖，还会增加 2 型糖尿病、血脂异常、高血压等心血","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:38:52","updateTime":"2021-05-08 18:38:52","isExist":null},{"id":2099,"question":"白糖，冰糖和红糖那个对健康好？","simplecontent":null,"content":"你好，你好 他们各有各的优点的 冰糖可以去火，红糖可以顺气驱寒补血，白糖做菜时是必需的调料，不过白糖别吃多了，会上火，长虫牙 最后祝你身体健康 万事如意，感谢对我的信任，希望可以帮到您，祝您健康！\n\n红糖和白糖的主要成分都是蔗糖，唯一不同的是，白糖的蔗糖几乎是100%，红糖的蔗糖几乎是99%，只有大约1%的其他成分，两者的热量几乎一样，都是碳水化合物，催肥的好工具。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:38:05","updateTime":"2021-05-08 18:38:05","isExist":null},{"id":2098,"question":"红糖吃多了?","simplecontent":null,"content":"病情分析：红糖水虽好，千万不能够多喝，尤其是在睡觉之前，否则很容易导致体内的糖分储存量过多，长期如此很容易导致出现糖尿病、发胖以及龋齿的情况。\n\n病情分析：有可能会引起糖代谢异常诱发血糖疾病和上火，还可能会导致胃酸分泌过多，诱发胃部胀气和疼痛以及溃疡疾病，红糖水可以起到补气活血作用，适量摄入可以补充体内所需营养，还可以缓解气血不足，要避免长时间过量摄入。平时要多饮水，促进体内新陈代谢加快，能够防止上火。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:36:13","updateTime":"2021-05-08 18:36:13","isExist":null},{"id":2097,"question":"怎样做红糖发糕?","simplecontent":null,"content":"1/7分步阅读\n红糖用热水冲开，晾至温热或彻底晾凉\n\n2/7\n面粉和酵母粉混合\n\n3/7\n加入晾好的红糖水，拌匀\n\n4/7\n模具里面抹油，倒入面糊\n\n放上红枣，发酵至2-2.5倍大\n\n6/7\n放入蒸锅盖好盖子，冷水开始蒸，上汽后再蒸30分钟，关火后焖5分钟脱模取出即可\n\n7/7\n完成\n\n注意事项","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:35:23","updateTime":"2021-05-08 18:35:23","isExist":null},{"id":2096,"question":"烧麦的来历?","simplecontent":null,"content":"最早的史料记载，在元代高丽(今朝鲜)出版的汉语教科书《朴事通》上，就有元大都(今北京)出售“素酸馅稍麦”的记载。该书关于“稍麦”的注说是以麦面做成薄片包肉蒸熟，与汤食之，方言谓之稍麦。麦亦做卖。又云：“皮薄肉实切碎肉，当顶撮细似线梢系，故曰稍麦。”“以面作皮，以肉为馅当顶做花蕊，方言谓之烧卖。”如果把这里“稍麦”的制法和今天的烧卖作一番比较，可知两者是同一样东西。\n\n到了明清时代，“稍麦”一词虽仍沿用，但“烧卖”、“烧麦”的名称也出现了，并且以“烧卖”出现得更为频繁些。如《金瓶梅词话》中便有“桃花烧卖”的记述。《杨州画舫录》、《桐桥椅棹录》等书中均有烧卖一词的出现。\n\n清代无名氏编撰的菜谱《调鼎集》里便收集有“荤馅烧卖”、“豆沙烧卖”、“油糖烧卖”等。其中“劳馅烧卖”是用鸡肉、火腿配上时令菜作馅制成。“油糖烧卖”则用板油丁、胡桃仁和白糖做馅制成。中国南方还有一种“卤馅”芽菲菜烧卖。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:33:03","updateTime":"2021-05-08 18:33:03","isExist":null},{"id":2095,"question":"烧麦做法?","simplecontent":null,"content":"1、瘦肉及肥肉同剁烂，加入调味料搅至起胶状，分别做成小肉丸。\n\n2、面粉筛匀放入大碗中，慢慢加入滚水，迅速拌匀成软粉团，以少许面粉爽手，\n\n将粉团搓成长条形，再分切小圆粒，碾成薄圆形粉皮，放入肉丸做成小笼包形状。\n\n3、蒸笼涂油，铺上菜叶，再涂油在菜叶上，放入小笼包隔水蒸七至八分钟，拌匀\n\n沾汁一同上桌，趁热进食。\n\n主料：猪肉馅\n\n辅料：云吞皮、鸡蛋、青豆、洋葱\n\n调料：香油、酱油、盐、胡椒粉、淀粉、料酒、姜末","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:32:17","updateTime":"2021-05-08 18:32:17","isExist":null},{"id":2094,"question":"烧麦是什么东西？烧麦是哪里的特产？","simplecontent":null,"content":"烧卖，是“以面作皮，以肉为馅，当顶做花蕊，上屉笼蒸熟”的小吃。据说是起源于内蒙古，最早记载于元代，人称“稍麦”;明末清初流传至京、津称为烧麦，乾隆年间的竹枝词有“烧麦馄饨列满盘”的说法;而后至江苏、浙江、广东、广西一带，南方人把它叫做烧卖，《金瓶梅词话》中就有“桃花烧卖”的记述。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:31:50","updateTime":"2021-05-08 18:31:50","isExist":null},{"id":2093,"question":"减肥食物?","simplecontent":null,"content":"现在大鱼大肉的日子，让我们的肚子上赘肉是越来越多，有四种蔬菜汁可以去掉肚子上面油脂\n\n1.番茄汁：每人每天吃上2～3个番茄，可以满足一天维生素C的需要。喝上几杯番茄汁，可以得到一昼夜所需要的维生素A的一半。番茄含有大量柠檬酸和苹果酸，对机体的新陈代谢有益，可促进胃液生成，加强对油腻食物的消化。番茄中的维生素P有保护血管、防治高血压的作用，并能改善心脏功能。番茄汁兑上苹果汁可以起到减肥的作用。此外，常饮番茄汁可使皮肤健美。\n\n2.黄瓜汁：多喝黄瓜汁对人体益处很多。能调节血压，预防心肌过度紧张和动脉粥样硬化;可使神经系统镇静和强健，增强记忆力;对牙龈损坏及对牙周病的防治也有一定的功效;所含的多种元素都是头发和指甲所需要的，能预防头发脱落和指甲劈裂;利尿功能较强;含脂肪和糖较少，是比较好的减肥饮料。\n\n3.芹菜汁：可以增强人的食欲。在天气干燥炎热的时候，早上起床后喝上一杯芹菜汁，感觉会好得多。在两餐之间最好也喝些芹菜汁。芹菜汁也可作为利尿和轻泻剂以及降压良药。由于芹菜的根叶含有丰富的维生素A、B1、B2、C和P，故芹菜汁尤其适合于维生素缺乏者饮用。\n\n4.白菜汁：白菜对于促进造血功能的恢复、抗血管硬化和阻止糖类转变成脂肪、防止血清胆固醇沉积等具有良好的功效。白菜汁中的维生素A，可以促进幼儿发育成长和预防夜盲症。白菜汁所含的硒，除有助于防治弱视外，还有助于增强人体内白细胞的杀菌力和抵抗重金属对机体的毒害。当牙龈感染引起牙周病时，饮用白菜和胡萝卜混合汁，不仅可以为人体供应大量维生素C，同时还可以清洁口腔。\n\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:25:22","updateTime":"2021-05-08 18:25:22","isExist":null},{"id":2092,"question":"减肥的菜谱?","simplecontent":null,"content":"01\n冬瓜\n冠军是冬瓜噢，大家有没有猜对！冬瓜含有丰富的蛋白质、维生素等营养成分，它的营养价值相当高，而且没有一点脂肪，热量很低，很清淡。\n冬瓜具有利尿、利便、利水等作用。其中所含的丙醇二酸，能有效地抑制糖类转化为脂肪，是减肥期间很好的食物。\n\n02\n黄瓜\n黄瓜含水分为98%，并含有维生素C、胡萝卜素，以及少量糖类、蛋白质、钙、铁等人体必须的营养素。而且黄瓜的热量非常低，每100克只有15大卡的热量！\n黄瓜有清热、解渴、利水、消肿的功效。黄瓜也是难得的排毒养颜食品，它能美白肌肤，保持肌肤弹性，抑制黑色素的形成。\n\n03\n西红柿\n西红柿含有非常丰富的营养，据营养学家研究测定：每人每天食用50克-100克新鲜西红柿，即可满足人体对几种维生素和矿物质的需要。\n西红柿中还含有丰富的食物纤维，让人很容易有饱腹感，而且纤维不会被人体所吸收。是所有蔬菜中最不容易转化为脂肪的食品之一。\n\n04\n苦瓜\n苦瓜的水分率高，热量很低，其钾含量较高，有利于消除水肿，并且能抑制脂肪吸收，具有解毒排毒、养颜美容，消暑祛暑的作用。\n苦瓜的热量非常低，含有丰富的苦味素，是出了名的“脂肪杀手”。常吃苦瓜还能增强皮层活力，使皮肤变得细嫩健美。减肥，不要忘了吃苦瓜。\n\n05\n胡萝卜\n胡萝卜是一种营养丰富的家常蔬菜，被称为“小人参”。美国科学家研究证实：每天吃两根胡萝卜，可使血中胆固醇降低10%-20%；每天吃三根胡萝卜，有助于预防心脏疾病和肿瘤。\n胡萝卜的热量比较低，非常适合在减肥的时候食用。而且胡萝卜营养丰富均衡，还有不错的饱腹感，是水分和纤维含量较高的蔬菜。\n\n06\n芹菜\n芹菜的热量极低，它不但营养丰富，还含有大量的膳食纤维。有助于肠胃消化，排毒瘦身。芹菜还含有利尿有效成分，可以消除体内多余水分，利尿消肿。\n夏季气候炎热，人们往往感到口干舌燥气喘心烦，身体不适，常吃些芹菜有助于清热解毒，去病强身。经常失眠，头疼的人适当多吃一些，可以得到改善。\n\n07\n生菜\n生菜营养含量丰富，含有大量胡萝卜素、维生素还有膳食纤维素。常吃生菜可以促进脂肪的消化与吸收，同时还可以改善肠胃。\n生菜的含水量很高，高达95%以上，每100克仅15千卡的热量。生菜的营养素种类比较全面，适当多吃些生菜可以避免减肥过程中的营养","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:22:38","updateTime":"2021-05-08 18:22:38","isExist":null},{"id":2091,"question":"我喜欢吃的菜?","simplecontent":null,"content":"苦瓜排骨，白切鸡，夕瓜炒肉，蒸肉饼，蒸鸡蛋，玉米冬瓜汤，酱油鸡，白灼虾，葱油鸡，\n蒸鱼，白灼菜心，酱油蒸排骨，盐焗鸡翅，玉米萝卜汤，滑蛋虾仁，苦瓜炒肉，青瓜炒肉，黄瓜炒肉，鸡煲，黄瓜炒肉，豆角炒肉，西红柿炒肉，荷兰豆炒肉，莲藕汤，","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 18:20:00","updateTime":"2021-05-08 18:20:00","isExist":null},{"id":2090,"question":"如何隐藏摄像头?","simplecontent":null,"content":"工具/原料\nmore\n咖啡纸杯(1) 小刀(1） 纸巾(1） 摄像机(1-3） 玩偶(2） 剪刀(2） 反光材料做成的衣服(3) 路障(3)\n第一种方法\n1/3分步阅读\n把咖啡纸杯用小刀戳一个圆圆的洞\n\n\n2/3\n在里面填充纸巾\n\n\n3/3\n装上相机\n\n\n第二种方法\n1/5\n用剪刀将玩偶靠近眼睛处剪开\n\n\n2/5\n将部分填充物去出\n\n\n3/5\n将摄像机放进眼睛处\n\n\n4/5\n重新填充好玩偶\n\n\n5/5\n成品图\n\n\n第三种方法\n1/2\n穿上反光材料做成的衣服，别人就会以为你在勘探地质\n\n\n2/2\n放心大胆的拍你自己想拍的内容\n\n\n注意事项\n以上照片均不是本人拍摄\n\n不能用以上方法做违法的事情，否则后果自负\n\n拍摄 隐蔽拍摄\n编辑于2017-08-09，内容仅供参考并受版权保护\n\n 赞踩分享\n热卡(HitCar) 货车24V倒车视频影像套装 大巴卡车拖拉机通用航空头7寸显示器防水摄像头 7寸高清屏幕\n￥145 元￥395 元\n去购买\n京东广告 \n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 13:24:49","updateTime":"2021-05-08 13:24:49","isExist":null},{"id":2089,"question":"摄像头安装在那里好?","simplecontent":null,"content":"看用途，1.一般情况装在正对入户门的位置，防止陌生人撬门进入家中。2.安装在正对客厅公共环境中，避免照入卧室厕所得隐私环境。3.安装在其他需要安全防范的位置。安装高度1.8米——2.5之间最佳。\n\n前门和一楼窗户一般是犯罪分子最常用的入侵途径。事实证明，约有一半的小偷通过高楼的前门进入屋子里，而在一楼的住宅户，小偷一般从一楼窗户进入，因此应在一楼的窗边和屋子前门的地方安装摄像头。此外，鉴于前门视野开阔，安装摄像头可以用来识别入侵者。\n\n将摄像头安装在门上或窗框上，使其能覆盖窗口区域及窗前区域。另一种是将摄像头安装在室内并紧闭窗门，使其监控窗前屋子的一切。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 13:17:15","updateTime":"2021-05-08 13:17:15","isExist":null},{"id":2088,"question":"什么时候考虑复用代码，抽离方法出来?","simplecontent":null,"content":"超过三个方法用到相同的逻辑","filterContent":null,"type":"java","status":0,"createTime":"2021-05-08 13:09:55","updateTime":"2021-05-08 13:09:55","isExist":null},{"id":2087,"question":"如何排毒的方式?","simplecontent":null,"content":"1/6分步阅读\n柠檬水排毒是最受欢迎的排毒方法之一，枫糖浆和辣椒制作柠檬水，你可以喝几天。这种果汁应该清除体内的所有毒素，也有助于减肥。一个新鲜的柠檬榨汁，加入一汤匙辣椒半茶匙有机枫糖浆并与一杯水混合，制成一杯柠檬水。一天你需要几杯这种饮料。\n\n\n2/6\n用盐水冲洗身体。盐是一种天然消毒剂，可有效去除消化道中的杂质。该过程非常有效，通常用作结肠疗法。\n\n通过将两茶匙非浸渍盐溶解在一升温水中。早上喝。喝完后，右侧躺卧一会儿，这将有助于水通过小肠，很快就有排泄的感觉，呕吐和腹泻是常见的。这些症状是正常的，\n\n\n3/6\n尝试用蔬菜汁排毒。这是一种清洁身体的健康方式，无需准备重要的营养素或遭受饥饿。只需将一杯白菜（无茎），一个苹果，一个香蕉和半杯新鲜欧芹加入少量的水混合均匀即可\n\n\n4/6\n多喝水。增加水的摄入量，这是你自然清洁身体的主要方法之一。你应该每天至少喝8-10杯水。通过水帮助您的肾脏和肠道保持清洁，从您的身体溢出毒素和污垢。水对皮肤也很好。它会让你健康和年轻，你不会有皱纹和粉刺。\n\n\n5/6\n多吃纤维。纤维是一种非常重要的营养素，可以维持消化功能。它也是一个伟大的清洁工。当你吃更多纤维时，你将帮助你的身体摆脱消化道中随时间积累的毒素和其他有害物质。最好的天然纤维来源是全麦谷物，新鲜水果和蔬菜。\n\n\n6/6\n减少单糖的摄入量。简单的碳水化合物是大米饭，面包。这些产品或多或少缺乏您身体所需的所有营养素。但它会导致血糖升高和血糖下降，这对你的整体健康不利。尝试通过更多的全谷物饮食和复杂的糖类来解决这个问题，例如在土豆，全谷物，谷物，黑米和豆类。复合糖可以更好地消化，帮助清洁身体积累的防腐剂和毒素。\n\n\n注意事项","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 13:03:51","updateTime":"2021-05-08 13:03:51","isExist":null},{"id":2086,"question":"如何排毒?","simplecontent":null,"content":"（1）多饮凉开水：水是百药之王，可以稀释毒素，加快代谢速度，促进毒素及时从尿液中排出体外。肠道，尤其是大肠是粪便堆积的地方，多饮水可以促进新陈代谢，缩短粪便在肠道内的停留时间，减少毒素的吸收，溶解水溶性的毒素。充足饮水可以清除胃肠内的垃圾和毒素，预防多种疾病的发生。此外，凉开水还有去火、消炎、解毒等食疗功效，更加重要的是，充足的水分渗入人体细胞之间，具有保护细胞、延长细胞寿命的作用。\n\n　　（2）多吃新鲜和有机食品：生鲜果蔬可以提供大量纤维素和活性维生素，有助于排毒。多吃粗粮等富含膳食纤维的食物，少吃加工食品、速食品和清凉饮料。因为其中含有较多的防腐剂和色素。要控制盐分的摄入。过多的盐会导致闭尿、闭汗，引起体内水分堆积。\n\n　　（3）多吃抗氧化剂含量丰富的食物：多吃新鲜的富含维生素C的蔬菜、水果及富含维生素E的坚果类食物（如核桃、黑白芝麻、花生、榛子、杏仁等）。这些食物富含抗氧化剂，有助于预防体内毒素堆积和消除体内自由基的作用，增强体质，延缓衰老。因为人体的衰老过程就是氧化过程，抗氧化就是抗衰老。\n\n　　（4）吃东西不要太快：多咀嚼，这样可分泌较多唾液，中和各种毒性物质，引起良性连锁反应，排出更多毒素。\n\n　　（5）少荤多素：每周吃两天素食（或生机断食一天），给肠胃休息的机会。 因为暴饮暴食和过多的油腻或刺激性食物，会在新陈代谢中产生大量毒素，造成肠胃的巨大负担。因此，在饮食中要多吃蔬菜、水果和杂粮，才有助于化解和排出毒素。\n\n　　(6）多吃富含叶绿素的食物：富含叶绿素的食物具有解毒功能，多吃有助于消除体内累积的毒性物质。在毒性物质由肝脏排出而被小肠吸收之前，让其附着在食物纤维和叶绿素上，并随着大便排出体外，能减少毒性物质的累积效应。\n\n　　（7）尽量减少肉、蛋、油、盐、白砂糖、酱油、精制与加工食品的摄入量。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 13:03:15","updateTime":"2021-05-08 13:03:15","isExist":null},{"id":2085,"question":"长痘不同阶段?","simplecontent":null,"content":"1/4分步阅读\n痘痘第一阶段：刚开始长痘一般都是偶尔，或者一两颗，多半是闭合性的小痘痘，俗称：闭合性粉刺，属于轻度痘痘；\n\n处理方法：在这个阶段，一般只要正确对待，检讨自己前段时间的生活习惯、饮食习惯积极改正，多吃水果多喝水、饮食清淡不宜上火，最关键也是护肤工作，看是否是化妆品过敏所引起的痘痘，只要找准痘源，此阶段的痘痘一般都可阻止，避免其恶化。\n\n2/4\n痘痘第二阶段：真正的肆虐是从这一阶段开始，肌肤由偶尔长痘变为持续长痘，痘痘也因之前的闭合状态渐渐成熟、发炎，伴有白色物质或脓水流出，像常见的白头粉刺、红色脓包痘基本都属于这一阶段。\n\n处理方法：如果不幸进入第二阶段，必须及时采用正确的祛痘方式进行治疗，像纯植物药妆的萱语萱颜祛痘精纯露针对此阶段痘痘治愈效果极佳，口碑相当不错，及时治愈不会留下痘印痘疤等肌肤问题。\n\n3/4\n痘痘第三阶段：此阶段痘痘很疯狂，主要是以囊肿型和聚合型痘痘为主，也极易发展为硬颗粒痘痘，像结节，此后治愈难度又上了一个台阶，比如说第二阶段萱语萱颜祛痘精纯露1-2瓶就可以摆平痘痘，这阶段的痘痘患者一般都需要3-4瓶左右，才会彻底治愈根除青春痘。\n\n处理方法：除注意饮食，养成良好生活习惯之外，必须选择正确方法持续治疗，已经输重度痘痘患者。\n\n4/4\n痘痘第四阶段：痘印，深浅程度不同的痘印，看似表面平静实则意义深远而不可估量。\n\n处理方法：痘印的淡化是最考验毅力和耐力的事情，需要长期的特殊护理和生活作息配合，比如：深色食物尽量少食，夏季出门必须做好防晒工作，重视细节，想要尽快结束痘印，也可以借助类似萱语萱颜去痘印修护凝胶样的专业去痘印产品，事半功倍，尽快摆脱痘印。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 13:01:15","updateTime":"2021-05-08 13:01:15","isExist":null},{"id":2084,"question":"长痘快速原因?","simplecontent":null,"content":"　　(1)脸上油脂分泌过剩\n\n　　其实人的脸部是会不断向外分泌油脂的，如果油脂分泌旺盛，而又不注意清洁皮肤的话，将会使油脂堵塞毛孔，进而引发痘痘爆发的问题出现。\n\n　　(2)爱吃甜食\n\n　　如果生活中很喜欢吃甜食，例如冰淇淋、巧克力等，这样可能会使得糖分摄入过量，也会促进表皮细胞增长、皮脂腺分泌增加等，稍微不注意护理皮肤就会诱发慢性炎症最终引起痘痘生长，因此为了避免长痘，在饮食方面还是需要注意的。\n\n　　(3)寝具不干净\n\n　　其实枕巾和被套等地方都是容易藏污纳垢的地方，如果长期不注意换洗就会滋生细菌，如果每田晚上睡觉都是触碰到枕巾和被套，就容易使皮肤受到污染，进而引起长痘的问题。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 13:00:36","updateTime":"2021-05-08 13:00:36","isExist":null},{"id":2083,"question":"熬夜会长痘吗?","simplecontent":null,"content":"现代人普遍钟爱夜生活，而这些经常熬夜的人通常都会出现长痘的情况，这是因为频繁熬夜会导致人体内分泌失调，久而久之就会诱发痘痘，尤其是对于肝气旺盛的人来说，爆痘的情况会更严重。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:59:48","updateTime":"2021-05-08 12:59:48","isExist":null},{"id":2082,"question":"判断体内湿热症状?","simplecontent":null,"content":"若患者经常上火、口臭，易发生口腔溃疡，脸部油腻，容易出汗，头发发油、大便较粘稠，几种现象结合起来，患者可能有湿热表现。\n\n判断一个人的湿热体质，我们主要是从患者的一些临床表现来判断的，假如说患者经常容易上火，有口臭，容易发生一些口腔溃疡，甚至会出现这个脸上容易出现油腻，容易出汗，头发也容易这个发油、出汗。\n\n再加上大便比较粘稠，容易粘马桶，这种都是一些湿比较重的表现，这几种现象结合起来，患者可能有湿热的表现。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:59:09","updateTime":"2021-05-08 12:59:09","isExist":null},{"id":2067,"question":"身体哪部分可以显示湿气或者内分泌比较重?","simplecontent":null,"content":"　　春季雨水偏多，昼夜温差大。再加上最近气候多变，导致各类疾病高发。很多人都有过这些症状，身体乏力，晨起贪睡，大便不成形，小便不畅，胸口闷，每天困乏的不行，再瘦也会有小肚腩......其实这些都是湿气重的表现\n\n　　湿气的典型特征就是黏浊，所以大便糖稀，难以冲掉正是湿气重最显著的特征。湿气分为湿热和寒湿。遇热为湿热，遇冷为湿寒。所以湿气一年四季都存在我们身体里面，不分季节，危害极大。湿气重并非仅仅引起大便不成形这么简单，可怕的还在后面。\n\n　　中医认为，“湿气”会引发和恶化多种疾病，生活中的很多疾病都跟湿邪有关，是健康的克星。\n\n　　1、湿气表现在皮肤上会出现长斑长痘，暗黄无光；\n\n　　2、表现在体型上就是水肿肥胖，大腹便便；\n\n　　3、表现在精神气色上就会出现无精打采，困乏无力。\n\n　　因为环境和饮食习惯、生活习惯等因素，每个人体内都会有不同程度的湿气。\n\n　　如何判断自己体内是否有湿气?\n\n　　1、起床时——看感觉\n\n　　如果每天早晨起床的时候觉得特别疲劳，头发昏，打不起精神来，或是像穿了件湿衣服一样，浑身不清爽，人也懒得动……这是体内有湿的一种表现。\n\n　　2、如厕时——看大便\n\n　　性状：大便粘在马桶上了，冲好久才能冲干净。手纸三五张纸反复擦也擦不净，说明体内有湿。\n\n　　颜色：正常的大便是金黄色香蕉形的。体内有湿的情况下，大便的颜色发青，溏软不成形(这是脾虚的重要标志)，总有排不净的感觉。\n\n　　3、洗漱时——看舌苔\n\n　　早起刷牙前，对着镜子看看自己的舌头。健康的舌淡红而润泽，舌面有一层舌苔，薄白而清静，干湿适中，不滑不燥。\n\n　　①舌苔白厚，看起来滑而湿润，则说明体内有寒；\n\n　　②舌苔粗糙或很厚、发黄发腻，则说明体内有湿热；\n\n　　③舌质赤红无苔，则说明体内已经热到一定的程度伤阴了。\n\n　　4、刷牙时——恶不恶心\n\n　　看早上起来刷牙的时候，恶不恶心?有些人一刷牙就呕吐、恶心，嗓子里边总是有丝丝拉拉的、不干不净的感觉，即使有吐痰，也是体内有湿气的表现。\n\n　　5、早起时——小腿肚子发酸\n\n　　早晨起来感觉小腿肚子是不是发酸、发沉。当小腿肚子发酸发沉时，也是体内有湿气的典型特征。\n\n　　中医教你“食疗”排除体内湿气\n\n　　食物“病人服之，不但疗病，并可充饥”。中医很早就认识到食物不仅能营养，而且还能疗疾祛病。由10味配方组成：赤小豆，芡实，茯苓，(炒)","filterContent":null,"type":"","status":0,"createTime":"2021-05-08 12:58:27","updateTime":"2021-05-08 12:58:27","isExist":null},{"id":2081,"question":"产品经理面试问题?","simplecontent":null,"content":"转载自公众号：产品刘\n\n产品经理面试习题大汇总（一）\n1、介绍一下你自己。\n\n介绍一下自己的姓名，年龄、毕业院校，工作经历。简单的介绍，保持在三分钟以内，给面试官问问题的时间。\n\n工作经历主要讲一些你牛逼的工作经历，例如：你加入XX公司以后，销售额增加了多少、用户翻了多少倍...这样一些。有些人工作经历比较多，3年跳了好几家公司，建议你合并一下，不然面试官会觉得你这个人没有定力，在其他家公司干的时间都不长，在我公司能干多久？\n\n至于你的毕业院校牛逼的肯定要说出来，如果觉得学校不好，不好意思说那就不说吧。\n\n总的原则就是扬长避短，把自己的经历简单介绍下，然后留给面试官发问的时间。\n\n \n\n2、做过的项目有哪些，简单的介绍一下。\n\n主要想考察你做的项目有哪些，以及你在项目中的贡献，你可以说说你做的项目流程，你在项目中的角色，你的项目周期是多久，你的项目解决了什么问题，你的项目给你们的产品带来那些改变，例如：用户增加了，留存率提高了多少等。有些面试官可能问一些你做的项目细节问题，你一定要往你熟悉的地方引，不要被他带入坑里去。\n\n \n\n3、你觉得产品经理需要具备那些能力？\n\n回答的思路基本上是：\n\n产品经理都要干什么——所以需要XXX的能力——XXX的经历锻炼/使我具备了这些能力。如果你没有相应的经历锻炼出来的能力，你就直接把需要的能力告诉他，不需要再说“XXX的经历锻炼/使我具备了这些能力”，他不问你就不说。\n\n逻辑能力-产品经理需要把用户所有的操作情况都考虑到，需要严谨的逻辑能力，我通过XX，锻炼了我这种能力。\n\n沟通能力-因为产品经理需要和运营、市场、技术、设计、老板等各个部门沟通，所以需要较强的沟通能力，我通过XX，锻炼出来这种能力。（你面试回答问题的过程也侧面反映了你的沟通能力）\n\n文档能力-因为产品经理需要经常输出BPD、MRD、PRD文档，需要有较强的文档能力，我通过XX，锻炼出这种能力。\n\n学习能力-因为互联网瞬息万变，前年流行互联网金融，今年流行直播、共享单车，产品经理需要不断的去体验，去学习才能不落伍。同时产品经理需要懂营销，懂技术、懂运营、懂设计，这些知识只有不断地学习才能掌握，所以产品经理需要学习能力，我平时会下一些APP，看一些书来充实自己。（你如果说上面的那句话，面试者有可能问你看了那些书，体验了那些APP，如果你没怎么准备，没怎么体验，建议不要","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:55:33","updateTime":"2021-05-08 12:55:33","isExist":null},{"id":2080,"question":"项目做完，产品经理是不是就完成了所有的任务？","simplecontent":null,"content":"这个项目终于做完，如果产品经理不跟进了，那就没有把控产品研发的进度，没有很好的履行产品的职责。应该拿着这个产品，找到上下游，让产品顺利上线。\n\n \n\n产品对个人工作的掌控：产品经理应该对全年的工作有个计划，细分到每个季度，输出哪些内容，达成什么目标，这样一年结束，会有所收获和反思。\n\n \n\n产品对项目的掌控：好处在于：一方面是对自己工作有益处，另一方面让个人规划更有条理。\n\n \n\n以上的问题是产品经理再工作时经常会遇到的的几个问题。当然并不全面，大家若遇到其他的问题，欢迎给我们留言，我们一起来分析探讨。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:51:46","updateTime":"2021-05-08 12:51:46","isExist":null},{"id":2079,"question":"PM需要平衡各方面利益，当公说公有理婆说婆有理时怎么办？","simplecontent":null,"content":"通过客观数据或者逻辑分析让我们的话更有理有据，让双方达成共识。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:51:05","updateTime":"2021-05-08 12:51:05","isExist":null},{"id":2078,"question":"如何平衡产品方案和技术方案？","simplecontent":null,"content":"方案容易出现问题，产品和技术容易出现矛盾，我们说的他们不愿意做，他们想做的我们觉得没意义。所以，平衡方案显得很有意义：\n\n\n情况一：技术限制不可行，调整方案，或者从其他途径迂回达成方案，多跟技术的同学沟通，了解他们的技术瓶\n\n情况二：产品方案和技术方案优缺点各异，无从选择，挑选一个方案上线，如果开发难度不大，就两个方案都做，用数据说话，数据好，继续做该方案，数据不好，改用其他方案。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:50:50","updateTime":"2021-05-08 12:50:50","isExist":null},{"id":2077,"question":"和技术沟通的过程中，常使用“我觉得…?","simplecontent":null,"content":"我觉得这个口头禅，很多产品经理都有。\n\n \n\n问：这个网站应该怎样做？\n\n喜欢回答：我觉得如何如何。\n\n \n\n当产品和技术争执时，容易出现：\n\n \n\n我觉得你是错的；\n\n我觉得这个产品应该这样做；\n\n我觉得目标用户是这样的；\n\n \n\n我们应该有些手段和方法去说服我们的技术。而不是简简单单的告诉他，我觉得应该这样做，除了产品感觉特别好的天才，我觉得这种主观思想，容易让产品经理对产品认知产生偏差。\n\n ","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:50:06","updateTime":"2021-05-08 12:50:06","isExist":null},{"id":2076,"question":"如何看竞品?","simplecontent":null,"content":"1研究目的明确\n\n2分析对象是谁\n\n3最终输出结果（1用户需求；2功能对比；3信息架构 ；4信息展示；5 交互细节），辅助产品设计。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:49:38","updateTime":"2021-05-08 12:49:38","isExist":null},{"id":2075,"question":"产品经理就是抄，别人做的好的拿来用就行了？","simplecontent":null,"content":"Copyright © 1999-2020, CSDN.NET, All Rights Reserved\n\n\n\n如何用Python追到女朋友\n  登录\n\n陪学\n关注\n产品经理常遇到的6大问题及解决思路 原创\n2020-02-12 19:59:46\n\n陪学 \n\n码龄3年\n\n关注\n作为一个产品经理，在工作的过程中经常会遇到这样那样的问题，遇到问题之后我们应该如何去解决呢？解决思路是如何的？\n\n \n\n本文列举了常见的问题，以及解决思路，希望能和大家一起探讨。\n\n \n\n \n\n01\n\n有人觉得老版本不好看，要求改版。是否应该改版呢？\n\n \n\n \n\n先研究产品定位：\n\n\n支撑这种垄断地位的，绝不是创新，而是低价+易用性，这给普通网民和微小公司提供了一个极佳的广告平台。在这里，丑陋的页面和设计可以由较轻的页面和较快的加载速度所弥补，垃圾横行所付出的代价，早已被网站低廉的广告价格所补偿。\n\n\nCraigslist并不是不可以将收费面扩大，把网站外观弄得更好，派出业务员去做线下推广，但它无意那么做，因为做这些事情会增加人力成本，影响本已形成的用户习惯，进而破坏其垄断地位。\n\n \n\n\n\n \n\n                          \n\n产品本身的定位与价值内涵没有搞清楚的时候，不要轻易去否定任何事——此时美丑根本不是任何问题。\n\n \n\n \n\n \n\n \n\n02\n\n用户希望再加一个功能，是否应该增加？\n\n \n\n \n\n先研究投入与产出是否值得，产品在加新功能时，要了解产品底层每一个服务端、每一个业务层等，根据实际需要判断加新功能的必要性\n\n \n\n判断是否需要做一个新功能时的一些流程和方法：\n\n \n\n首先是围绕“为什么要做这个功能？”的一连串问题（过程中可以做简单的调研）\n\n \n\n用户为什么需要这个功能？\n\n我们为什么需要这个功能？\n\n这个功能背后的需求是什么？\n\n这个需求是伪需求吗？\n\n这个需求符合产品的定位及边界吗？\n\n有这个需求的用户群有多大？\n\n这个需求的频次有多大？\n\n这个功能上线后对业务的提升有多大？\n\n满足这个功能背后的需求有更好的方案吗？\n其次是实施这个功能的一套风险预案（你无法保证每个判断都绝对正确）\n\n\n最小化产品\n\n不要一开始就把功能做得尽善尽美，而是先把必不可少的元素做上去，受用户欢迎了再继续迭代优化\n\n \n灵活的入口\n尽量不要把功能的入口给固定死了，","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:49:18","updateTime":"2021-05-08 12:49:18","isExist":null},{"id":2074,"question":"用户希望再加一个功能，是否应该增加？","simplecontent":null,"content":"先研究投入与产出是否值得，产品在加新功能时，要了解产品底层每一个服务端、每一个业务层等，根据实际需要判断加新功能的必要性\n\n \n\n判断是否需要做一个新功能时的一些流程和方法：\n\n \n\n首先是围绕“为什么要做这个功能？”的一连串问题（过程中可以做简单的调研）\n\n \n\n用户为什么需要这个功能？\n\n我们为什么需要这个功能？\n\n这个功能背后的需求是什么？\n\n这个需求是伪需求吗？\n\n这个需求符合产品的定位及边界吗？\n\n有这个需求的用户群有多大？\n\n这个需求的频次有多大？\n\n这个功能上线后对业务的提升有多大？\n\n满足这个功能背后的需求有更好的方案吗？\n其次是实施这个功能的一套风险预案（你无法保证每个判断都绝对正确）\n\n\n陪学\n关注\n产品经理常遇到的6大问题及解决思路 原创\n2020-02-12 19:59:46\n\n陪学 \n\n码龄3年\n\n关注\n作为一个产品经理，在工作的过程中经常会遇到这样那样的问题，遇到问题之后我们应该如何去解决呢？解决思路是如何的？\n\n \n\n本文列举了常见的问题，以及解决思路，希望能和大家一起探讨。\n\n \n\n \n\n01\n\n有人觉得老版本不好看，要求改版。是否应该改版呢？\n\n \n\n \n\n先研究产品定位：\n\n\n支撑这种垄断地位的，绝不是创新，而是低价+易用性，这给普通网民和微小公司提供了一个极佳的广告平台。在这里，丑陋的页面和设计可以由较轻的页面和较快的加载速度所弥补，垃圾横行所付出的代价，早已被网站低廉的广告价格所补偿。\n\n\nCraigslist并不是不可以将收费面扩大，把网站外观弄得更好，派出业务员去做线下推广，但它无意那么做，因为做这些事情会增加人力成本，影响本已形成的用户习惯，进而破坏其垄断地位。\n\n \n\n\n\n \n\n                          \n\n产品本身的定位与价值内涵没有搞清楚的时候，不要轻易去否定任何事——此时美丑根本不是任何问题。\n\n \n\n \n\n \n\n \n\n02\n\n用户希望再加一个功能，是否应该增加？\n\n \n\n \n\n先研究投入与产出是否值得，产品在加新功能时，要了解产品底层每一个服务端、每一个业务层等，根据实际需要判断加新功能的必要性\n\n \n\n判断是否需要做一个新功能时的一些流程和方法：\n\n \n\n首先是围绕“为什么要做这个功能？”的一连串问题（过程中可以做简单的调研）\n\n \n\n用户为什么需要这个功能？\n\n我们为什么需要这个功能？\n\n这个功能背后的需求是什么？\n\n这个需求是伪需求吗？\n\n这个需求符合产品的定位及边界吗？\n\n有这个需求的用户群有多大？\n\n这个需求的频次有多大？\n\n这个功能上线后对业务的提升有多大？\n\n满足这个功能背后的需求有更好的方案吗？\n其次是实施这个功能的一套风险预案（你无法保证每个判断都绝对正确）\n\n \n\n最小化产品\n\n不要一开始就把功能做得尽善尽美，而是先把必不可少的元素做上去，受用户欢迎了再继续迭代优化\n\n \n\n灵活的入口\n尽量不要把功能的入口给固定死了，否则该功能不受欢迎后撤下的话，显得动静比较大，就像刚装上一只手然后又被砍掉一样，可以挑些可线上灵活配置的入口，比如说 banner 或运营位\n\n \n\n灰度发布\n可以选择特定比例或特定类型的用户展示新功能\n\n \n\n功能开关\n有些功能的入口考虑到用户的操作场景，不得不将入口固定的时候，可以给它设置开关，如果不受欢迎的话把开关关掉，就可以恢复到之前的设计\n\n \n\n数据校验\n发布前做好数据埋点，功能上线后将收集到的数据与自己的预期相比较，太糟糕的话分析原因是什么，是功能不行还是设计不行，如果是功能不行则砍掉功能，如果是设计不行则优化设计，再次迭代上线）","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:48:25","updateTime":"2021-05-08 12:48:25","isExist":null},{"id":2073,"question":"有人觉得老版本不好看，要求改版。是否应该改版呢？","simplecontent":null,"content":"先研究产品定位：\n\n支撑这种垄断地位的，绝不是创新，而是低价+易用性，这给普通网民和微小公司提供了一个极佳的广告平台。在这里，丑陋的页面和设计可以由较轻的页面和较快的加载速度所弥补，垃圾横行所付出的代价，早已被网站低廉的广告价格所补偿。\n\nCraigslist并不是不可以将收费面扩大，把网站外观弄得更好，派出业务员去做线下推广，但它无意那么做，因为做这些事情会增加人力成本，影响本已形成的用户习惯，进而破坏其垄断地位。\n\n产品本身的定位与价值内涵没有搞清楚的时候，不要轻易去否定任何事——此时美丑根本不是任何问题。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:47:14","updateTime":"2021-05-08 12:47:14","isExist":null},{"id":2072,"question":"：沟通客户、工程师和项目经理间存在的隔阂?","simplecontent":null,"content":"通常，客户和工程师之间由于背景差异以及理解技术条款的不同方式，他们无法进行有效地沟通。这可能导致混乱和严重的沟通问题；因此，项目经理的一项重要任务——特别是在需求分析阶段——就是保证双方能够准确了解交付成果以及必须完成的任务。\n\n要解决这个问题，你应当：\n\n在每次会议上做记录，并向整个项目团队分发这些记录。\n注意用词一致。从一开始就列出一份你要使用的名词术语表，保证所有股东都有一份，并坚持使用这些术语。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:44:31","updateTime":"2021-05-08 12:44:31","isExist":null},{"id":2071,"question":"需求时间不够?","simplecontent":null,"content":"我们常常听到客户这样说：“这是一个非常紧迫的任务，我们需要项目在X周内完成。”常见的错误就是，没有进行详细分析，并了解项目的范围以及完成项目所必需的资源，就同意客户的要求。未经讨论就同意不合理的时间表，你实际上在给客户造成伤害：项目很有可能被延期（因为不可能按时完成），或存在质量问题（因为你在赶工，没有进行适当的检验）。\n\n要解决这个问题，你应当：\n\n把项目需求规范转化成一个项目计划、详细的任务和各阶段所需的资源，并为最佳情况、一般情况和最差情况建立模型。\n保证项目计划考虑到有效资源的限制，并为检测和质量检验保留足够的时间。\n与客户讨论最终期限问题，用你计划草案中的数据为你的陈述提供证据。如果你的计划是合理的，则很有可能随后的谈判会极为成效，并对双方有利。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:43:58","updateTime":"2021-05-08 12:43:58","isExist":null},{"id":2070,"question":"需求中途变更?","simplecontent":null,"content":"为变更请求的收集、分析和组合制定一个定义明确的过程，保证你的客户知道他/她的切入点。\n为每个开发阶段设定转折点，超过这个转折点就不允许进行某些改变——例如，一旦一个模块完成75%，就不允许进行重大改变。\n保证向所有股东清楚地通报变更请求（和变更批准），以及进行变更的根本原因，因而还要对主项目计划进行更新。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:43:18","updateTime":"2021-05-08 12:43:18","isExist":null},{"id":2069,"question":"客户不清楚需求?","simplecontent":null,"content":"确保在项目开始之初，你用了足够的时间来了解项目的目标、交付成果和范围。\n确定客户所使用的任何假设，用批评的眼光评估项目给终端用户可能带来的好处和风险。\n尝试为项目写出一份具体的远景陈述，包括它提供的特殊功能或给用户带来的好处，以及希望它解决的所有商业问题。\n让客户阅读、考虑并同意前面完成的软件需求规范，调整他们的期待，保证双方充分理解项目交付成果。","filterContent":null,"type":"需求分析","status":0,"createTime":"2021-05-08 12:42:30","updateTime":"2021-05-08 12:42:30","isExist":null},{"id":2068,"question":"香港的消费?","simplecontent":null,"content":"怎么可能，人家月最低收入10000元，一碗面二十块左右。而我们月最低收入1500元，一碗面也是二十块左右 // @五九式主战坦克: 香港，告别了一个旧时代，迎来了一个新时代。从此以后，与全国人民同甘苦，共进退。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:19:25","updateTime":"2021-05-08 12:19:25","isExist":null},{"id":2063,"question":"天气多热出汗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:59","updateTime":"2021-05-08 12:03:59","isExist":null},{"id":2065,"question":"什么皮肤好用?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:59","updateTime":"2021-05-08 12:03:59","isExist":null},{"id":2066,"question":"灯泡买多少瓦比较好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:59","updateTime":"2021-05-08 12:03:59","isExist":null},{"id":2051,"question":"每天喝什么茶好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:58","updateTime":"2021-05-08 12:03:58","isExist":null},{"id":2052,"question":"如何积累话语，关键词还是整段话?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:58","updateTime":"2021-05-08 12:03:58","isExist":null},{"id":2053,"question":"为啥华为项目很难做?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:58","updateTime":"2021-05-08 12:03:58","isExist":null},{"id":2056,"question":"答题有哪些实用题目?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:58","updateTime":"2021-05-08 12:03:58","isExist":null},{"id":2061,"question":"每天一道菜，做些什么好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:58","updateTime":"2021-05-08 12:03:58","isExist":null},{"id":2043,"question":"电影有必要去看吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:57","updateTime":"2021-05-08 12:03:57","isExist":null},{"id":2044,"question":"需求分析师的如何分析需求?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:57","updateTime":"2021-05-08 12:03:57","isExist":null},{"id":2045,"question":"冲突如何解决?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:57","updateTime":"2021-05-08 12:03:57","isExist":null},{"id":2046,"question":"冲突有哪些案例?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:57","updateTime":"2021-05-08 12:03:57","isExist":null},{"id":2047,"question":"男生戴帽子好看吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:57","updateTime":"2021-05-08 12:03:57","isExist":null},{"id":2050,"question":"常种的药材有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:57","updateTime":"2021-05-08 12:03:57","isExist":null},{"id":2037,"question":"西瓜有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:56","updateTime":"2021-05-08 12:03:56","isExist":null},{"id":2038,"question":"祛痘产品哪些好用?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:56","updateTime":"2021-05-08 12:03:56","isExist":null},{"id":2039,"question":"为什么火山岩用完后会爆痘?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:56","updateTime":"2021-05-08 12:03:56","isExist":null},{"id":2041,"question":"衣服哪些材料好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 12:03:56","updateTime":"2021-05-08 12:03:56","isExist":null},{"id":2034,"question":"用完欧莱雅火山岩洗面奶满脸爆痘?","simplecontent":null,"content":"我用欧莱雅男士洗面奶别的都行，就这个反长痘痘，直接扔了\n\n男 31岁\n用了一个月 结果不停的长痘，之前没有痘的\n停用两个月了 一直不停的长痘 每天都有\n今天问天猫客服 告诉我初期这样是正常现象 坚持用下去就好了\n需要配合水凝露一起用 坚持下去就好了\n现在都害怕了 去搜索火山岩那个套装的追加评论 结果大多数都说越用痘痘越多\n真是伤心了 谁知道，这是咋回事，现在该怎么办，以后该用什么\n现在只用香皂洗脸了，啥也不敢用了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 08:30:41","updateTime":"2021-05-08 08:30:41","isExist":null},{"id":1913,"question":"四大天王哪个最火?","simplecontent":null,"content":"90年代四大天王当时最红是黎明，其次是刘德华和张学友，接着才是郭富城。\n\n1、黎明：在20世纪90年代，黎明比李克勤更快成名，以柔软的双手获得了奖项，几乎所有的奖项都获得过一次金马奖，新世纪后黎明主攻商业和幕后工作，培养新人，渐渐淡出了人们的视野。\n\n2、刘德华：刘德华是音乐界的常青树。20世纪90年代末，道恩逐渐从领奖台上退下来。他连续七年荣获香港十大金曲中最受欢迎男歌手奖。勤奋踏实是刘德华成功的基石。他在音乐和影视领域取得了巨大的成就。\n\n3、张学友：在国际排名上，张学友无疑是四王之首，他在当时的世界排名仅次于迈克尔·杰克逊。\n\n4、郭富城：郭富城在王中天是出名的最新一位，被称为“亚洲舞蹈王”。是一部电影、电视、唱歌、舞蹈等多户型发展的巨星，曾两次金马最佳皇帝奖、国际杰出艺术家奖，是四天王舞的最佳之一。\n\n\n\n扩展资料：\n\n四大天王现状：\n\n现年60岁的刘德华是娱乐界当之无愧的“劳动模范”。多年来，他为我们留下了无数的经典影视作品，并凭借出色的演技获得了“最佳男演员”的荣誉。\n\n张学友在其他三天王的努力下，张学友是一个一直坚持歌手头衔的歌神。\n\n即使没有刘德华的努力，张学友的一门心思，郭富城在影视上仍然有自己的位置，虽然刘德华没有那么成功，但也是一个很强的演员，每个角色都很好。\n\n自2012年与前妻乐吉尔离婚后，黎明一直单身，但乐吉尔已经再婚。这两年来，黎明和刘德华一直在做慈善，只是人们都比较低调而已。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:06:00","updateTime":"2021-05-08 08:06:00","isExist":null},{"id":1935,"question":"自助餐吃多了真的好吗?","simplecontent":null,"content":"病情分析：自助餐由于食物种类多，价格实惠，颇受消费者们的喜爱，但是自助餐食物由于在室温下放置时间较长，容易滋生细菌。如果发现食物因暴露在空气中时间过久而发干、发蔫，应尽量少食用。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:05:20","updateTime":"2021-05-08 08:05:20","isExist":null},{"id":1940,"question":"女生多少斤不好看了?","simplecontent":null,"content":"90斤左右最好","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:04:53","updateTime":"2021-05-08 08:04:54","isExist":null},{"id":1949,"question":"海边有什么好玩东西?","simplecontent":null,"content":"海边可以玩的项目很多，游泳，玩沙子，晒太阳日光浴，躺着发呆，看书，聊天，喝饮料，吃海鲜，\n\n沙滩排球，篝火晚会，开派对，水上活动（比如 摩托艇，香蕉船，滑翔机，潜水，等等）。\n\n\n去海边主要是体验大海，要注意安全，可以在海边玩海沙，捡贝壳，趟水，捡卵石，挖小螃蟹，在海边要防晒，可涂防晒霜，小孩在海水里要有人监护，最好穿长袖衣服。防止晒伤皮肤。捡贝壳，在海边走走，散散步，闻闻海的味道，累了，躺下了用沙子埋住拍日光浴。\n\n或者玩沙子，皮艇、游泳、划浪、快艇，沙滩项目，排球，日光浴，沙雕，其实主要看你去的那个海边有什么设施，有什么玩什么，没有的话，自己带点小道具，玩一下水和沙子也是不错的。\n\n海边可以玩的方式有很多，只要去了海边，你就能自然的想到很多可玩又有娱乐性的节目，充分发挥自己的想象，就算是普通的沙子都能玩出自己的乐趣。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:03:28","updateTime":"2021-05-08 08:03:28","isExist":null},{"id":1963,"question":"电脑的护眼模式真的有用吗?","simplecontent":null,"content":"有用，护眼模式（低蓝光模式）开启后可以起到降低手机和平板电脑屏幕蓝光辐射比、提升屏幕蓝光峰值比、降低屏幕亮度和降低屏幕色温（使屏幕变黄）的作用。\n\n使蓝光波段总能量和蓝光波段峰值能量均得到抑制，从而降低屏幕有害蓝光辐射对眼部健康的损害。所以护眼模式确有降低屏幕有害蓝光的作用，推荐开启。\n\n\n\n扩展资料\n\n电子产品的护眼模式（低蓝光模式）开启后可以起到降低屏幕亮度作用。但是，虽然同款电子产品的屏幕亮度越低则蓝光辐射也越小，但屏幕亮度不一定就是越低越好，屏幕亮度过低时可能会导致频闪频率过低，同样会对眼睛造成伤害。\n\n另外，使用者所处的环境光照明度也需与屏幕亮度匹配，长期在环境光照度明显高于或低于屏幕亮度的条件下使用电子产品，都会很“伤眼”。环境光照度明显低于屏幕照明度时观看屏幕还容易导致眩光。所以，屏幕亮度的高低以眼睛感觉舒适为宜，同时环境光照明度也要与屏幕亮度相匹配。\n\n参考资料来源：人民网-护眼模式“护眼”吗？防蓝光贴膜“防蓝光”吗？\n\n只能说减小了光对眼睛产生的伤害，最重要的是要注意眼睛的休息和减少电子显示设备的使用时间。\n","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:02:52","updateTime":"2021-05-08 08:02:52","isExist":null},{"id":1987,"question":"有什么歌曲放松的?","simplecontent":null,"content":"潘玮柏《转机》\n梁静茹《如果在一起》\n南拳妈妈《下雨天》\n许蒿《浅唱》《爱情里的眼泪》\n依稀《i miss you》\n范玮琪《一颗星的距离》\n薛之谦《传说》\n欢子《永远不分开》\n\nwhen a child is born （很经典很纯净的）\nwill you be there （什么也不要想，就是听歌，除非你想哭）\nscared of the moon （很有梦幻感的，强烈建议）\nsomeone put your hand out （听歌，什么也别想）\nsomeone in the dark （同上）\nmusic and me （很可爱的童声啊。别看见是小孩唱就不听，你会后悔的）\nyou are my life （听上去很舒服，听歌，别管他是谁！）\none more chance\nyou are not alone （- -）\nheaven can wait （就是听歌。。。。。。。。。。。。。。）\nwhatever happens\nthe lost children 【【（强烈推荐，非常有爱！）】】\nthrough the rain （玛丽亚凯莉，也不错）\nwhen i saw you （同上）\nthank god i found you （同上）\nmelt away （同上）\nhero（同上）\nunderneath the stars （同上，很好啊）\nthe colour of love （CELINE DION）\nChristmas in my heart （忘了她名字，那个什么莎拉）\nwhite Christmas （同上）\nangel （《天使之城》的插曲）\n要不听听纯音乐：\nwith an Orchid\nNightingale\nin the morning light\n——雅尼\n还有：\n天空之城\n爱的纪念\n爱的罗曼史\n要不听听一些电影原声音乐（ost）吧，都挺好听上去很舒服\n《泰坦尼克》OST，十分好听的电影原声（纯音乐）\n《歌剧魅影》2004年电影版OST，是音乐剧改编的，里面的歌那个赞啊。。\n上述歌曲都是慢歌，都可以在QQ音乐找到（电影OST你把电影名字打上去就有了）\n对不起我其实听的英文歌还是喜欢的那种比中文歌多得多（个人爱好问题，因为所有欣赏的歌手都是外国的，这不算崇洋），但都是好歌啊。。。。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:01:47","updateTime":"2021-05-08 08:01:47","isExist":null},{"id":1994,"question":"滴滴顺风车多少钱?","simplecontent":null,"content":"这是肯定的，这也算是一种另类的拼车，所以在花费上是要优惠不少，1.3元/公里，比出租车都便宜，我也是刚注册的，打算过段时间出门的时候用，你也可以去官网下载个。\n便宜，比打的便宜近一半，挺好","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 08:00:51","updateTime":"2021-05-08 08:00:51","isExist":null},{"id":2025,"question":"吃不完的菜怎么办?","simplecontent":null,"content":"1/3分步阅读\n隔夜菜在5摄氏度以下的低温环境，可以存放1-2天。如存放3天以上，蔬菜中天然存在的硝酸盐会转化为亚硝酸盐，有致癌作用，加热也不能去除。\n\n2/3\n动物性食品在25-30摄氏度时，3-4小时即变质。\n\n3/3\n凉拌菜由于加工时就收到了较多污染，即使冷藏，隔夜后也很可能已经变质，应该现制现吃。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 07:59:48","updateTime":"2021-05-08 07:59:48","isExist":null},{"id":1941,"question":"男生165身高体重比多少为好?","simplecontent":null,"content":"标准59.27公斤，算胖瘦得分80以上正常、合适。\n\n标准体重应该是109斤。\n\n计算方法\n\n男性：(身高cm－80)×70﹪=标准体重\n\n女性：(身高cm－70)×60﹪=标准体重","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 01:49:02","updateTime":"2021-05-08 01:49:02","isExist":null},{"id":1943,"question":"买上下铺的床买多宽好?","simplecontent":null,"content":"1、上铺：900*2000*100-150mm；下铺：1200*2000*100-150mm。\n\n2、上铺：900*1900*50-100mm；下铺：1200*1900*100-210mm；上床内径：900*1900mm。\n\n3、上铺：1000*1900*50-70mm；下铺：1200*1900*50-70m；拖床：1000*1870*50mm；上床内径：1000*1900mm；拖床内径：1000*1870mm。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 01:48:15","updateTime":"2021-05-08 01:48:16","isExist":null},{"id":1982,"question":"深圳摇号难不难?","simplecontent":null,"content":"据悉，深圳每个月，都有超过100万人在摇号，但是，只有几千人能够摇到车牌。如果你想花钱买，你得花几万块。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 01:47:28","updateTime":"2021-05-08 01:47:28","isExist":null},{"id":1993,"question":"胡椒粉会上火吗?","simplecontent":null,"content":"吃胡椒粉会导致上火的，胡椒粉在中医里面是属于温热性的食物，这个有一定的温经散寒暖胃功效，如果有脾胃虚寒的话，可以多吃一些胡椒粉的，但是如果容易出现有上火体质的人体尽量不要吃胡椒粉，如果吃胡椒粉上火，有可能还会出现有口舌生疮，也有可能还会出现有小便发黄或者还会导致眼屎增多，出现有上火可以用点金银花，菊花泡水喝，如果比较严重还可以吃点牛黄解毒片来调理，也可以做一下中医的拔罐放血疗法，同时还要多点喝水，尽量不要吃辣椒，大蒜，韭菜，生姜等辛辣热气的食物，以免导致上火加重。同时平常还可以配合多吃一些蔬菜和水果。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-08 01:45:38","updateTime":"2021-05-08 01:45:38","isExist":null},{"id":1907,"question":"芋头会导致湿热吗?","simplecontent":null,"content":"可能会。\n虽然说芋头在中医上性味平和，食用后不会增加体内湿寒之气，但中医认为，脾脏是运化水湿的重要部分，而芋头中富含淀粉，这种物质不易被人体消化吸收，要是食用过多的话，容易损伤脾胃，从而导致运化水湿的功能下降，所以吃芋头是有可能会导致体内湿气增加的。","filterContent":null,"type":"","status":0,"createTime":"2021-05-08 01:44:55","updateTime":"2021-05-08 01:44:55","isExist":null},{"id":1990,"question":"盐吃多会有什么病?","simplecontent":null,"content":"1、盐吃多了会患高血压。许多研究以及临床数据证实，高盐饮食是导致人患上高血压有原因之一。\n\n2、引起血管硬化。每天有高盐摄入的人容易增加人体内的血液量，这将增加血管壁上的压力，当血管壁上的压力太大，就容易发生血管硬化和其它问题。\n\n\n3、增加肾脏的负担。如果你吃太多的盐，就会感到口渴，喝很多水，以缓解口渴。长期摄入食盐会导致身体出现浮肿，从而增加肾脏的负担。\n\n4、得严重胃病。当人体摄取的食盐量过高之后，就会对人体的胃粘膜产生损伤，进而诱发胃病。\n\n5、容易感冒。吃盐多的人容易感冒。因为高浓度的盐可以抑制呼吸道细胞的活性，对抗病毒能力产生影响。如果你多吃盐，唾液就会减少，口腔中的有益菌也会减少。病毒就会更容易在上呼吸道上繁殖。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 01:18:52","updateTime":"2021-05-08 01:18:53","isExist":null},{"id":2007,"question":"在公司挺闲?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 01:17:55","updateTime":"2021-05-08 01:17:55","isExist":null},{"id":1917,"question":"197.贞子是哪个电影的?","simplecontent":null,"content":"贞子是经典恐怖电影《午夜凶铃》中一个恐怖的角色。电影里的贞子，原名山村贞子,生于20世纪50年代。她继承了母亲的先天超能力，可以通过灵力进行自己想做的一切。但是贞子是一个心理极其阴暗的人。一次在医院探望父亲的时候，她用超能控制了色迷心窍的全日本最后的一个天花病病者强奸自己，并投入枯井里。在枯井里，贞子用怨念制成了生前记忆深处的残像和诅咒，封印在录影带里，每一个看到录影带的人都会在７天后死去，唯一拯救的方法就是将录影带拷贝多一份给别人看。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:52:57","updateTime":"2021-05-08 00:52:58","isExist":null},{"id":1927,"question":"207.什么时候所有人奔小康了?","simplecontent":null,"content":"2020江泽民提出全面小康","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:52:15","updateTime":"2021-05-08 00:52:15","isExist":null},{"id":1939,"question":"219.脂肪肝是什么导致的?","simplecontent":null,"content":"脂肪肝是指肝细胞内脂肪堆积过多所引起的一种肝脏的病变，它的原因有很多，往往是由于长期过量饮酒、药物、中毒、营养代谢异常等因素引起，是缓慢的发展过程。重度脂肪肝的患者容易发展为脂肪性肝炎以及肝纤维化，主要临床表现为右上腹的不适和胀痛、乏力等。 但对于轻中度脂肪肝的患者，往往没有明显的临床症状，通过CT或者B超检查才能发现。所以脂肪肝的患者平时需要注意控制饮食，控制体重，适当锻炼，酒精性脂肪肝的患者尤其需要注意戒酒。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:51:14","updateTime":"2021-05-08 00:51:14","isExist":null},{"id":1945,"question":"新房要考虑的问题？","simplecontent":null,"content":"水电费价格，网费，物业费，房租，床","filterContent":null,"type":"","status":0,"createTime":"2021-05-08 00:50:15","updateTime":"2021-05-08 00:50:16","isExist":null},{"id":1953,"question":"中午睡多久比较好?","simplecontent":null,"content":"中午休息的时间推荐是40分钟左右，因为人体正常的情况下存在着昼夜节律，白天活动，晚上睡觉是正常的生理规律，建议晚上的睡眠时间是晚上11点到早上6点或7点。一天总的睡眠时间建议在7-9小时之间，最优的睡眠时间是7-7.5小时，小于7小时或者大于7.5小时，长期如此会导致患者寿命缩短，所以中午休息尽量控制时间短点，不能违背白天应该正常活动的生理规律。大多数患者如果白天连续工作，需要适当休息，如果休息时间过短，大脑和身体的疲劳得不到缓解，休息时间过长会导致大脑进入抑制状态，影响下午的工作效率，所以建议是40分钟，最长不要超过1个小时。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:50:02","updateTime":"2021-05-08 00:50:02","isExist":null},{"id":1954,"question":"鞋子为什么老是臭?","simplecontent":null,"content":"产生异味的原因\n大部分的拖鞋制作所使用的材质是EVA和PVC，而这些材料总是会有不可避免的“臭塑料味”，虽然对人体影响不大，但多少还是会影响到我们的穿着心情。\n塑料橡胶拖鞋，市面上大多有两种，一种是比较重的PVC材质，另外一种是比较轻的EVA材质。\nPVC材质做出来的鞋子，比较重，比如这种：\n材质里写着PVC，千万别买，沾了水，时间一长，臭味立马就出来了\n另外一种EVA材质，比较轻，像这样的\n材质写着EVA，这种材质做出来的拖鞋很轻，虽然看起来比较低端，外观效果不如上面PVC的，但是穿再久，都不会发臭。\n日常如果去超市买的话，拿起来掂量下，明显比较轻的那种，就对了。\n二、解决办法\n买回来反复多洗刷几次，最好能够放在阳台经历风吹日晒，过几天就没有异味了。\n用白开水、盐水或者白醋浸泡，浸泡十来分钟即可，晾干后臭味就会消失。\n买一些活性炭放在鞋子里边吸收异味，过几天将活性炭取出来再穿就没有异味了。\n注意事项：不能使用84消毒液擦洗或者浸泡，消毒液与拖鞋塑料成份会发生化学反应，散发出的氯气不仅难闻，而且还具有毒性。\n办法2：将新买来的拖鞋洒上少量米酒，反复多擦拭几次，这样拖鞋里的异味会随酒精蒸发掉一部分。最好能够放在阳台经历风吹日晒，过几天就没有异味了；如果没有米酒也可以用白开水+盐水，浸泡十来分钟即可，晾干后臭味就会消失。\n方法3：同样还是浸泡的方法，我们还可以放一盆水在里面加入适量的洗衣粉，然后把拖鞋浸泡在里面一段时间，再刷拭干净。这样既可杀菌，又可有效去除拖鞋里的大部分异味。当然如果你正好随手有吃剩下的或柚子皮，放在鞋子里去味的效果也不错。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:49:42","updateTime":"2021-05-08 00:49:43","isExist":null},{"id":1968,"question":"蚊香液买什么牌子好?","simplecontent":null,"content":"电蚊香液的质量问题将会影响到驱蚊效果和使用安全，好的电蚊香液对家人的身体伤害小。下面推荐几个好用的电蚊香液的品牌：\n\n一、枪手电蚊香液\n\n枪手电蚊香液无香型，无味，无难闻刺激性气味。 1瓶45毫升蚊香液功效长达45晚（每晚8小时），采用拟除虫菊酯类药剂为有效成分，使用过程中挥发均衡，可有效驱蚊。价格：20元左右/两瓶装\n\n\n\n二、榄菊电蚊香液\n\n榄菊始于1982年，专业杀虫品牌，植物提取，无香无味无刺激，不含避蚊胺。价格：25.9左右/两瓶装\n\n\n\n三、超威电蚊香液\n\n超威味道为艾草清香型，安全有效，气味清新，采用氯氟醚菊酯复配方，有效驱蚊，符合国家标准，安全有保障。价格：19.9/两瓶装\n\n\n\n扩展资料：\n\n使用电蚊香液注意事项：\n\n1、不管是蚊香还是蚊香液，都含有微量麻醉物或毒物用来麻醉或者毒死蚊子，因为计量少，所以人不会受其危害，无论是对平常人还是孕妇，都是有少量危害的。所以孕妇最好不要用蚊香液，而是改为用纱窗防蚊。\n\n2、而在怀孕期间，最好不要用驱蚊产品。可以选择使用灭蚊灯或蚊帐什么的.蚊香对胎儿有影响，并可能导致畸形。\n\n3、蚊香无论怎么加工，里面都含有菊酯，这种菊酯是一种农药，对婴儿和孕妇都会产生危害。另外，蚊香液燃烧释放出的烟雾含有对人体有害的物质，家长不可偏信各种名目的儿童专用蚊香。所以家里小孩或者老人、孕妇，最好不要用任何驱蚊产品，还是用蚊帐最可靠。\n\n参考资料来源：百度百科-蚊香液","filterContent":null,"type":"","status":0,"createTime":"2021-05-08 00:48:15","updateTime":"2021-05-08 00:48:16","isExist":null},{"id":1975,"question":"4g和5g差别大吗，有些使用了5g的手机真的好吗?","simplecontent":null,"content":"看视频都影响不大，可能差1秒左右，体验上没有差别，在玩游戏差别快些，但是家里没有5g，外面流量太高不会用","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:47:36","updateTime":"2021-05-08 00:47:36","isExist":null},{"id":1977,"question":"一般平时家里多少电?","simplecontent":null,"content":"70度，一般1元一度，也有1.5元","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:42:07","updateTime":"2021-05-08 00:42:07","isExist":null},{"id":1984,"question":"Wifi怎么可以穿墙?","simplecontent":null,"content":"1/4分步阅读\n路由器位置：应该把路由器放到家里中间位置，这样接收信号很平均，不要把路由器放墙角，最好放稍微高点的地方。\n\n2/4\n设置路由器：路由器里的默认信号强度为强，要改成穿墙模式，这样速度能提升50%。\n\n教你手机怎么wifi怎样图解教程与步骤_下载快手\n广告\n3/4\n路由器天线方向：将两根天线分别朝着竖、横的方向放着，可以大大增强家里的wifi信号。\n\n新手怎样理财_12理财入门训练营_每天1元_跟大咖学\n广告\n4/4\n若想让常活动的区域网络更好，可将两根天线都朝所选区域。\n","filterContent":null,"type":null,"status":0,"createTime":"2021-05-08 00:41:36","updateTime":"2021-05-08 00:41:36","isExist":null},{"id":1999,"question":"平时在外面睡，沙发不透气很热?","simplecontent":null,"content":"沙发，大多数布艺的沙发， 材质都是化纤，而且很厚，它的透气性实际上很差，表布大部分的作用是用来遮脏的，因为内胆脏了很难清洗，还有就是控制成本，化纤的成本很低，而且可以大量生产，所以在淘宝上那些几十块钱的四件套，大部分都是化纤材料。<div><br></div><div>它的透气性就很差。</div><div><br></div><div>床品上，大部分家庭都回去买纯棉的，纯棉的透气就很好，尤其是长绒棉，而且也十分舒适，当皮肤接触床品的时候也感觉很滑很舒服。</div><div><br></div><div>所以沙发，大家就千万不要在沙发睡了，沙发过度柔软，对腰椎也不好，很容易造成腰间盘突出。</div><div><br></div><div>家里掌握行政大权的女性朋友们，意思意思就行了，别让人成宿成宿在沙发睡，那真的累。</div>","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:15:57","updateTime":"2021-05-07 23:15:57","isExist":null},{"id":1997,"question":"可以买清明的票?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:15:08","updateTime":"2021-05-07 23:15:09","isExist":null},{"id":1959,"question":"广东人的平均寿命是多少？","simplecontent":null,"content":"从调查中，我们可以很清楚的看到排名第九位的是海南省，人均寿命为76.3岁。第八名是辽宁省，人均寿是76.38岁。山东省位列第七人均寿命排行是76.46岁。第六名广东省，人均寿命是76.49岁。第五名江苏省，人均寿命是76.63岁。第四名浙江省，人均寿命是77.73岁。第三名天津市，人均寿命是78.89岁。我们的首都北京市位列第二名，人均寿命高达80.18岁。","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 23:15:00","updateTime":"2021-05-07 23:15:00","isExist":null},{"id":1960,"question":"男女的平均寿命是多少？","simplecontent":null,"content":"中国人的平均寿命 算算你的预期寿命<div>目前，中国人的平均寿命为72岁，以此为基数，回答下列问题，进行加减，最后就可得出您可能的寿命。</div><div>1.如果您是男性，减3岁；女性则加1岁。</div><div>2.居住在100万人以上的城市市区，减2岁；居住在人口少于1万人的小镇或农村，加2岁。</div><div>3.祖父母或外祖父母中有1位活到85岁，加2岁；4位祖辈都活到80岁，加6岁。</div><div>4.父母有1人在50岁明医以前死于中风或心脏病，减4岁；父母、兄弟姐妹中任何一位50岁前得癌症或心脏不正常，或自幼就有糖尿病，减3岁。</div><div>5.如果您是一位富翁，减2岁。</div><div>6.如果您大学毕业，加1岁；65岁仍在工作，加3岁。</div><div>7.如果您有配偶并住在一起，加5岁；如果没有，从25岁起每独居10年，减1岁。</div><div>8.如果您常伏案工作，减3岁；如果您常从事体力劳动，加3岁。</div><div>9.如果您每星期进行球类、游泳、跑步等运动5次，加4岁；每星期2次，加2岁。</div><div>10.如果您每晚睡眠超过10小时，减4岁。</div><div>11.经常紧张、易怒、性急，减3岁；感到生活很轻松，工作应付自如，加3岁。</div><div>12.如果您常常感到快乐，加1岁；经常感到不快，减2岁。</div><div>13.如果您去年因一次交通违章受罚，减1岁。</div><div>14.如果您抽烟，每天2包，减8岁；每天1-2包，减6岁；1包以下，减3岁。</div><div>15.如果您每天喝白酒50—100毫升，减1岁。</div><div>16.体重超过标准5公斤以上，减2岁；超过15公斤以上，减4岁；超过25公斤，减8岁。</div><div>17.如果您已40多岁，每年体检1次，加2岁；40岁以上女性，每年看妇科5次，加2岁。</div><div>18.如果您今年30—40岁，加3岁；40—50岁，加5岁；超过70岁，加6岁。</div><div>您计算出您的大致寿命了吗？如果您算出的结果不令人满意，也不要灰心丧气，从现在做起，改变不良生活习惯，戒烟、戒酒、正确进行身体锻炼、乐观地生活，您的寿命就会延长，生命的钥匙就在您自己手上。</div><div>(明医回答)</div>","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 23:13:50","updateTime":"2021-05-07 23:13:50","isExist":null},{"id":2033,"question":"蚊香液的保质期?","simplecontent":null,"content":"蚊香的保质期约为两年。\n\n一般来说，如果蚊香液的液体在一年内没有用完并密封，则在明年仍可以使用。存放时，尽量避免阳光直射，以免影响驱蚊效果。\n\n大多数蚊香液说明书仍然要求在通风环境中使用蚊香液，以避免室内高浓度的防蚊液并危害健康。因此，在使用蚊香液时，请打开玻璃窗进行通风，当然，仍然需要关闭纱窗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-07 23:12:40","updateTime":"2021-05-07 23:12:40","isExist":null},{"id":1969,"question":"为什么蚊香液有一股异味?","simplecontent":null,"content":"蚊香液通常是有味道的，也就是说，它利用蚊香液散发出的气味来驱除蚊子，效果相对较好。<div><br></div><div>蚊香液自身是有一定味道的，在指定的温度下将蚊香液的活性成分均匀地分布在空气中，从而达到驱蚊效果。由于空气中充满了蚊香，人们不可避免地会吸入。蚊香液中有一些驱蚊成分，也添加氯仿，苯，醚等作为溶剂。这些化学成分或多或少会对人体造成伤害。除了使用蚊香液驱除蚊子外，您还可以选择在门上钉上一个纱网，这样蚊子就很难飞入房间，或者您可以选择在身上喷一些驱蚊花露水，其中含有一定数量的驱蚊成分可以使蚊子远离，也可以选择在卧室中支撑蚊帐，这也可以有效地防止蚊子的入侵。</div>","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:12:14","updateTime":"2021-05-07 23:12:15","isExist":null},{"id":1970,"question":"附近有人装修是什么感受?","simplecontent":null,"content":"每天早上6:30准时用电钻把我叫醒，我真谢谢你啊<div><br></div><div>上网课什么都听不见 ‍，声音已经调到最大了……</div><div><br></div><div>我整个人都要神经衰弱了</div><div><br></div><div>睡觉真的很烦</div>","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:11:32","updateTime":"2021-05-07 23:11:32","isExist":null},{"id":1971,"question":"最快解决没有热水洗澡的问题?","simplecontent":null,"content":"电热水龙头，电热丝","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:10:29","updateTime":"2021-05-07 23:10:30","isExist":null},{"id":2032,"question":"电费一个月多少度?","simplecontent":null,"content":"70度，一般一般月1元，也有1.5元","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-07 23:09:10","updateTime":"2021-05-07 23:09:10","isExist":null},{"id":1978,"question":"水费一般一个月用多少吨水?","simplecontent":null,"content":"7吨，水费一般5元一顿","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:08:31","updateTime":"2021-05-07 23:08:31","isExist":null},{"id":1996,"question":"小吃街隐藏在小地方，没有城管?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:07:06","updateTime":"2021-05-07 23:07:06","isExist":null},{"id":1995,"question":"后面有小吃街?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:07:02","updateTime":"2021-05-07 23:07:03","isExist":null},{"id":2026,"question":"猪脚饭放多少天?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:06:55","updateTime":"2021-05-07 23:06:55","isExist":null},{"id":2023,"question":"塑料水杯用久了多久要更换?","simplecontent":null,"content":"我认为尽量不用塑料材质的水杯，特别是喜欢喝茶的朋友。经常与开水打交道，不好。如果因为它不怕摔，而喜欢的话，最好半年更换一次，最多一年。而且还要多盛温开水，少用沸水。<div>塑料表面看似光滑，实际内部微观构造均有很多孔隙，孔隙中易藏留污物，所以一般塑料杯洗不干净甚至发粘发涩。不好的塑料杯多有异味。所以，塑料水杯最好是1-2个月换一次。塑料不能用加热的方法来消毒的，加热后会释放致癌物质的</div>","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 23:06:48","updateTime":"2021-05-07 23:06:48","isExist":null},{"id":2021,"question":"塑料杯子喝热水有害吗?","simplecontent":null,"content":"长期用塑料杯喝水对身体有一定的害处，制作塑料杯的塑料中含有一定量增塑剂和有害化学物质，长期盛装热水会释放入水，故建议选用玻璃杯饮水，选用塑料杯时也应在大型或正规的商场、超市选购选择材质合格、耐高温的塑料杯，不应贪图便宜。尽量选择知名企业或正规企业的产品，塑料树脂中易出现的游离苯酚、丙烯腈单体及残留物等有害物质，均有强制性国家卫生标准限定含量，企业生产的产品必须符合限量要求，经检验合格后的产品才能出厂销售。","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:05:45","updateTime":"2021-05-07 23:05:46","isExist":null},{"id":2008,"question":"最近一个月没啥任务?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:05:12","updateTime":"2021-05-07 23:05:13","isExist":null},{"id":2009,"question":"医生读书多是不是应该收费多?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:05:08","updateTime":"2021-05-07 23:05:08","isExist":null},{"id":2017,"question":"曼玲粥店讲吃剩排骨给人吃?","simplecontent":null,"content":"无","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 23:04:57","updateTime":"2021-05-07 23:04:57","isExist":null},{"id":1624,"question":"47.不同症状是哪些器官影响?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1625,"question":"48.不同症状忌口?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1626,"question":"49.深圳免费景点?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1627,"question":"50.孩子第一年不同状态?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1628,"question":"51.不同水果成熟季节?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1629,"question":"52.离职后社保怎么办?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1630,"question":"53.跨省社保怎么办?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1631,"question":"54.男生什么发型好看?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1632,"question":"55.做什么指甲好看?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1633,"question":"56.深圳景点攻略?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1634,"question":"57.做保姆好吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1635,"question":"58.深圳保姆需要考什么证?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1636,"question":"59.如何查询社保?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1637,"question":"60.买什么牌子电脑好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1638,"question":"61.多重电脑好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1639,"question":"62.香烟什么牌子好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1640,"question":"63.酒什么牌子好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1641,"question":"64.白酒怎么做?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1642,"question":"65.红酒和葡萄酒区别?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1643,"question":"66.两边房有什么好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1644,"question":"67.潮汕哪里好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1645,"question":"68.公司睡得舒服?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1646,"question":"69.手机电用的很快?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1647,"question":"70.晚上又得开会?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1648,"question":"71.大蒜口臭怎么办?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1649,"question":"72.白切鸡怎么做好吃?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1650,"question":"73.薪资不高，能学到东西能去吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1651,"question":"74.如何查看电脑是国行还是外国的无保修的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1652,"question":"75.开发票需要写上型号吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1653,"question":"76.王老吉和加多宝哪个好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1654,"question":"77.王老吉的糖分?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1655,"question":"78.痘痘硬块?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1656,"question":"79.吃豆浆和牛奶对痘痘?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1657,"question":"80.诈骗信息?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1658,"question":"81.有哪些诈骗场景?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1659,"question":"82.坂田是不是很多工厂倒闭了?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1660,"question":"83.小米股票如何?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1661,"question":"84.牙齿痛怎么办?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1662,"question":"85.牙齿痛感受?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1663,"question":"86.历史什么资料好看?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1664,"question":"87.转正答辩问什么?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1665,"question":"88.答辩多久?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1666,"question":"89.答辩谁?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1667,"question":"90.学生答辩很简单，一晚上出来了?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1668,"question":"91.硕丰快递多久?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1669,"question":"92.其它快递多久?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1670,"question":"93.为啥硕丰很贵?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1671,"question":"94.下午茶有吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1672,"question":"95.下午茶吃什么?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1673,"question":"96.下午可以出去吧?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1674,"question":"97.下午茶没有，当减肥了?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1675,"question":"98.电梯房好贵?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1676,"question":"99.鸡尾酒好喝吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1677,"question":"100.鸡尾酒价格?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1678,"question":"101.鸡尾酒和普通酒区别?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1679,"question":"102.酒吧哪些酒女生更容易醉?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1680,"question":"103.修电脑如何防止以后维权不保修?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1681,"question":"104.cpu买哪些好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1682,"question":"105.肝癌症哪些不能吃？霉变，腌制，泡制菌类?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1683,"question":"106.中国哪个省份美女多?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1684,"question":"107.带班的红薯会导致什么问题？制癌?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1685,"question":"108.哪些水果不能吃？槟榔，生的香蕉，变质水果?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1686,"question":"109.鸡脚来源哪里?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1688,"question":"111.转让费多少钱?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1689,"question":"112.很容易忘记打卡?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1690,"question":"113.朋友圈广告多?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1691,"question":"114.他是谁?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1692,"question":"115.电影阿凡达好看?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1693,"question":"116.公司什么时间缴纳社保和公积金?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1694,"question":"117.房子考虑问题 采光和大小?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1695,"question":"118.整容整哪里 双眼皮?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1696,"question":"119.加班有薪水吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1697,"question":"120.工作日加班算吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1698,"question":"121 711店是什么国家?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1699,"question":"122.911是那年?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1700,"question":"123.要不要把自己缺点告诉别人?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1701,"question":"124.天气如何?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1702,"question":"125.变冷了还是保持不变?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1703,"question":"126.不同兵种区别?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1704,"question":"127.大学生到军营担任什么?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1705,"question":"128.售楼的人有监控，人都是带头盔进入?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1706,"question":"129.宾馆和酒店区别?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1707,"question":"130.都是照骗吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1709,"question":"132.优衣库质量如何?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1710,"question":"133.优衣库是女装还是男装?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1711,"question":"134.借钱给个谁?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1712,"question":"135.借钱为什么难还?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1713,"question":"136.借钱会导致什么问题?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1714,"question":"137.你有什么大招?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1715,"question":"138.你怕黑吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1716,"question":"139.理发店多少钱?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1717,"question":"140.理发店为什么这么坑?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1718,"question":"141.榴莲饼为甚好吃?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1719,"question":"142.热干面为什么便宜?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1720,"question":"143.为什么大家喜欢吃热干面?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1721,"question":"1.闹钟掉了没有?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1722,"question":"2.做事情怎么老是不规范?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1723,"question":"3.眼睛怎么按舒服?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1724,"question":"4.叶黄素作用?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1725,"question":"5.哪些食物有叶黄素?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1726,"question":"6.培训机构有作用吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1727,"question":"7.买什么洗面奶好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1728,"question":"8.皮肤是不是控油还是保湿好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1729,"question":"9.平时哪些不要吃比较好会长痘的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1730,"question":"10.附近有幼儿园好不好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1731,"question":"11.附近有什么中学学校?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1733,"question":"13.地铁站一个站要多久?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1734,"question":"14.地铁站挤不挤?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1735,"question":"15.深圳环境如何?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1736,"question":"16.刷卡还是刷微信进入地铁站?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1737,"question":"17.地铁站价格怎么算的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1738,"question":"18.衣服店吐槽衣服?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1739,"question":"19.为什么专卖店衣服前面价格便宜，后面很贵?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1740,"question":"20.什么颜色护眼?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1741,"question":"21.路边种植是什么树?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1742,"question":"22.伤残如何评定?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1743,"question":"23.头发接发?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1744,"question":"24.晚上如何早睡?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1745,"question":"25.用什么软件清理手机内存?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1746,"question":"26.5g是不是比4g快?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1747,"question":"27.5g每月费用?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1748,"question":"28.比特币是违法吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1749,"question":"29.大数据杀熟，机票同时间不同手机价格不一样?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1750,"question":"30.二手热水器出问题会三包和追究别人责任吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1752,"question":"32.鼠标原配为啥不好用?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1753,"question":"33.订单快药好用吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1754,"question":"34.如何做到一周菜不重样?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1755,"question":"35.五花肉炒什么菜好吃?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1756,"question":"36.有哪些老字号的店?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1757,"question":"37.虾如何做好吃?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1758,"question":"38.以后孩子谁照顾?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1759,"question":"39.剧本杀如何玩?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1760,"question":"40.哪些护肤品适合男生用?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1761,"question":"41.欧莱雅好用吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1762,"question":"42.脸颊逗是什么原因？晚上宵夜太多了?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1763,"question":"43.领导力怎么培养?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1764,"question":"44.目前哪些不足?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1766,"question":"46.学车要多久?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1767,"question":"47.学车有几门考试?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1768,"question":"48.学车难度最大?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1782,"question":"62.学生不听老师很难教?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1783,"question":"63.牙齿镶牙多少钱?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1785,"question":"65.养孩子最贵的是纸尿裤和奶粉和医疗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1786,"question":"66.洗碗机有必要买吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1787,"question":"67.洗碗机能洗干净吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1788,"question":"68.洗碗机是否要重复洗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1789,"question":"69.行业龙头有哪些?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1790,"question":"70.生育津贴怎么领取?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1792,"question":"72.怀孕超人倍多少钱?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1795,"question":"75.孩子第一年的每个月做什么事情?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1797,"question":"77.联想各个平排对比?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1798,"question":"78.拍照用什么姿势?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1815,"question":"95.免费听歌app?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1911,"question":"191.著名的导演有哪些电影好看的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1942,"question":"手机如何设置内存卡是读取手机的数据?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1944,"question":"买什么窗帘可以防止蚊子?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1946,"question":"加班申请需要什么流程?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1947,"question":"什么情况加班申请允许的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1948,"question":"周末去哪里比较好?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1950,"question":"海边什么时候去?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1951,"question":"去海边可以吃到海鲜吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1955,"question":"延迟退休怎么说，弹性选择可以吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1962,"question":"天做多久的眼保健操?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1965,"question":"为什么最近拼多多好像挺好的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1966,"question":"企业推卸责任而不是解决问题?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1967,"question":"有什么对付蚊子的好办法?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1973,"question":"买个好的电脑就是不一样?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1974,"question":"手机坏掉了如何维修?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1976,"question":"家里最大功率是哪个电器?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1979,"question":"为什么公寓的水电费会那么贵?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1980,"question":"家里装一个电视有必要吗?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1983,"question":"医保有哪些医院?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1986,"question":"很累怎么放松?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1989,"question":"炒粉怎么做好吃?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2000,"question":"看见一个护肤的?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2001,"question":"福利院如何操作?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2003,"question":"代码框架如何?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2004,"question":"框架如何分层?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2005,"question":"哪里看教程?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2006,"question":"视频是如何讲细节?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2011,"question":"黄铮去掉拼多多职务?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":2015,"question":"在售楼处买房，但是开发商不认可?","simplecontent":null,"content":"","filterContent":null,"type":null,"status":0,"createTime":"2021-05-07 22:28:19","updateTime":"2021-05-07 22:28:19","isExist":null},{"id":1972,"question":"怎么解决退货的问题？","simplecontent":null,"content":"问商家多少斤，然后到app计算一共多少钱，软件会有提前告知多少费用\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 22:27:34","updateTime":"2021-05-07 22:27:34","isExist":null},{"id":1998,"question":"拼多多比淘宝要好?","simplecontent":null,"content":"拼多多和天猫用户规模啊差不多，但是京东少很多\n\n拼多多利润不高，都是靠补贴拉低价格\n\n拼多多走不长远，一是产品质量差的太多，退货又没有淘宝那么方便 ，骗人红包多了就没有人点了.\n\n拼多多现在只有电商，马云有支付宝，阿里云，京东有物流和京东金融","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 09:18:34","updateTime":"2021-05-07 09:18:35","isExist":null},{"id":360,"question":"拼多多有运费险吗?","simplecontent":"","content":"有的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-07 09:17:38","updateTime":"2021-05-07 09:17:38","isExist":null},{"id":1964,"question":"京东、天猫、拼多多区别?","simplecontent":null,"content":"","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 09:17:32","updateTime":"2021-05-07 09:17:33","isExist":null},{"id":2024,"question":"永和出名吗?","simplecontent":null,"content":"永和豆浆很有名。\n永和豆浆泛指台湾台北县永和市中正桥一带以贩卖豆浆为主的早餐店，约1950年左右，由山东和河北的两位老兵首先开始经营，其中最著名的为中正桥头的“世界豆浆大王”。\n“永和豆浆”品牌是1982年由台湾弘奇食品有限公司创立餐饮业知名品牌，1995年跨过台湾海峡，来到大陆发展。\n经过数十年的发展，永和豆浆遍布中国大江南北，已成为消费者信赖和喜爱的品牌，并逐步发展成为台湾饮食文化的一张名片。","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 08:59:31","updateTime":"2021-05-07 08:59:31","isExist":null},{"id":2019,"question":"外卖用红包商家亏本么？","simplecontent":null,"content":"扣的是商家的钱吗\n外卖的东西越便宜越不能买，10快少东西，外卖拿6快，4块钱你觉得给什么别人吃?","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 00:08:26","updateTime":"2021-05-07 00:08:26","isExist":null},{"id":2016,"question":"Lv包造假严重?","simplecontent":null,"content":"假的比真的技术还要好，还加入了芯片，跳到官网上，内在勾结\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 00:08:07","updateTime":"2021-05-07 00:08:07","isExist":null},{"id":2027,"question":"叶子是真的，花是假的?","simplecontent":null,"content":"老年人很容易上当，我婆婆买了盆跟上图一样的花，只是颜色不同，我远远看着觉得颜色太艳了，凑近了看发现花是假的。婆婆气不过去找卖花的，卖花的说“我也不知道是假的”，后来给换了一盆。我猜想很多老年人都会当真花一直养下去。\n\n另外加上高额的入场费等等一系列费用，让房租造成了一部分实体店的负担。在其最疯狂的时候、店铺经过层层转手之后，转租费一度高达10多万，另外加上喝茶费，往往需要十几万的成本。信息不对称的时代，东莞有着世界工厂之称号。国内外许多客商来这进行批发，在最疯狂的时候稍好点的店铺炒\n\n记得前几年的一个新闻，有个女孩买了个宠物猪，说长不大，结果最后喂到一二百斤[捂脸]","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 00:07:12","updateTime":"2021-05-07 00:07:13","isExist":null},{"id":2031,"question":"喝奶茶肚子疼?","simplecontent":null,"content":"病情分析：喝奶茶出现了肚子疼的现象，可能是由于自身肠胃不好所导致的。除此之外，也可能是由于奶茶中的某种成分对胃肠道造成刺激，从而导致胃肠功能紊乱引起的。患者可以多喝一些热水或者是采用局部热敷的方法，来进行缓解肚子疼的症状，也可以在医生的指导下，口服一些阿莫西林，这样也能够缓解肚子疼。平常最好不要喝奶茶，多喝一些温开水。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-07 00:05:41","updateTime":"2021-05-07 00:05:41","isExist":null},{"id":1988,"question":"什么蘑菇会中毒?","simplecontent":null,"content":"\n1、白毒鹅膏菌\n\n此蘑菇极毒，毒素为毒肽和毒伞肽。中毒症状主要以肝损害型为主，死亡率很高。\n\n2、白黄粘盖牛肝菌\n\n于松林中地上单生或群生。食后往往引起腹泻，但经浸泡、煮沸淘洗后可食用。属外生菌根菌，与松等形成菌根。\n\n3、大鹿花菌\n\n在针叶林中地上靠近腐木单生或群生。可能有毒，毒性因人而异，不可食用，毒蘑菇中毒一般分为胃肠炎型、神经精神型、溶血型、脏器损害型和日光皮炎型五种类型。\n\n4、毒鹅膏菌\n\n又称绿帽菌、鬼笔鹅膏、蒜叶菌、高把菌、毒伞。在阔叶林中地上单生或群生。此菌极毒，据记载幼小菌体毒性更大。\n\n5、介味滑锈伞\n\n常生在针阔叶混交林中地上，单生或群生。有强烈的芥菜气味，口尝有辣味。有毒，不宜食用。","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 00:04:39","updateTime":"2021-05-07 00:04:39","isExist":null},{"id":2022,"question":"塑料杯子喝热水有害吗?塑料杯子喝热水是否有害，不能轻易下结论。因为塑料分很多种，有没有危害，这个很难讲，不是所有的塑料都是有危害的，比如PP、HDPE等材料的塑料杯就是比较好的，而PP是最常见的微波炉器皿。但是像PVC和PC等塑料对人体就会有危害，PVC因为加工的时候，需要用到塑化剂，遇热后容易产生对人体不利的物质。所以在选购塑料杯时，一定要选择符合国家标准的食用级塑料所制的水杯，如果不好区分是哪种塑料有害，还是尽量使用玻璃杯、搪瓷杯，以及不锈钢的杯子喝热水。?","simplecontent":null,"content":"塑料杯子喝热水是否有害，不能轻易下结论。因为塑料分很多种，有没有危害，这个很难讲，不是所有的塑料都是有危害的，比如PP、HDPE等材料的塑料杯就是比较好的，而PP是最常见的微波炉器皿。但是像PVC和PC等塑料对人体就会有危害，PVC因为加工的时候，需要用到塑化剂，遇热后容易产生对人体不利的物质。所以在选购塑料杯时，一定要选择符合国家标准的食用级塑料所制的水杯，如果不好区分是哪种塑料有害，还是尽量使用玻璃杯、搪瓷杯，以及不锈钢的杯子喝热水。?\n\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-07 00:00:23","updateTime":"2021-05-07 00:00:24","isExist":null},{"id":1981,"question":"蚊子咬后怎么办?","simplecontent":null,"content":"用肥皂","filterContent":null,"type":"","status":0,"createTime":"2021-05-06 23:57:21","updateTime":"2021-05-06 23:57:22","isExist":null},{"id":1985,"question":"住房一般咬考虑附近有哪些店?地铁站，便利店，宵夜，公交，医院?","simplecontent":null,"content":"地铁站，便利店，宵夜，公交，医院?\n\n\n\n","filterContent":null,"type":"","status":0,"createTime":"2021-05-06 23:57:05","updateTime":"2021-05-06 23:57:06","isExist":null},{"id":1992,"question":"猪杂汤河粉会上火吗\n?","simplecontent":null,"content":"猪杂汤里一定有胡椒！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:48:55","updateTime":"2021-05-06 23:48:55","isExist":null},{"id":1991,"question":"吃炒粉会上火吗?","simplecontent":null,"content":"会,因为往往为了增加炒粉的香味,外面的店长会在炒粉时加入猪油来炒,我却受不了,吃一次就会喉咙痛,这吃多了对人不好。而方便面更容易上火,本身它是经油炸过才打包装,加上它配上的香粉猪油和调味料吃了会上火,吃多餐脸上会长豆豆呵","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:48:41","updateTime":"2021-05-06 23:48:41","isExist":null},{"id":1961,"question":"专家说延迟退休可以多拿工资？","simplecontent":null,"content":"我读书少砖家不要骗我。砖家说迟3年每月多拿200元，按平均退休工资3000元算好吗？砖家。即1年退休金3.6万元ⅹ3=108000元，如果迟3年退，每月多拿300元。108000÷300元=160个月÷12=13年才能拿到。63退休+13年=76岁平均73岁。砖家你数数是体育老师教还是外星人教的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:48:03","updateTime":"2021-05-06 23:48:03","isExist":null},{"id":1958,"question":"延迟退休对于公务员还是私企有什么区别吗?","simplecontent":null,"content":"国企可以一直上班，到规定年龄退休，民企年龄大了，一般都不会聘用了，基本找不到工作，除非是一直在一个企业做，一直在一个民企做，公司也要一直给交五险一金，这也是很大的一笔支出，年龄大了，医疗方面特别要注意。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:47:32","updateTime":"2021-05-06 23:47:32","isExist":null},{"id":1957,"question":"延迟退休 男女多少年？","simplecontent":null,"content":"对于拿到退休金是不划算的，辛辛苦苦工作几十年，本来就拿不了多少养老金，怎么还要一把年纪继续工作。，现在刚参加工作的95后大概25岁，如果65岁退休预计工作40年。据国家统计年鉴多年来的数据显示，自1981年至2019年，平均每5年的平均预计寿命就要增长一岁","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:47:17","updateTime":"2021-05-06 23:47:17","isExist":null},{"id":1956,"question":"谁愿意延迟退休？","simplecontent":null,"content":"现在想延迟退休的，应该是高职位高权利高收入的公职人员居多，可以让这些人五十岁后到非公企业上班体验一下社会的实际情况，公务员招收年龄应该放款到五十岁，非公企业很多人员能力很强，五十岁也是有经验有阅历的，可以把身份通道互换一下。五十岁以后公务员实行社会竞聘制，打破铁饭碗，看这些要求延迟退休的人是否愿意\n有些人年龄大了很多疾病，还不能退休，本人今年55岁，81年15岁参加工作，30年交养老金，工龄40年，糖尿病，高血压缠身，应该可以退休了吧 ！\n男的命本来就没有女人的长，年龄大的老人工资本来也不高，还需要交保险，很恶心\n我觉得应该是女生身体好，年龄大也应该去工作，不然以后所有开支都是男的，压力很大\n一部分，强烈支持延迟退休。这部分主要是女同志，身体比较健康，所在地其他工作机会较少，在职时工资待遇不低，所以希望多工作几年，还能多缴纳养老保险，退休时养老金还能高些。\n另一部分，对延迟退休持不同意见。尤其是有技之长的基层职工，干了大半辈子了，可以说在企业内也没有太大发展了，希望能早些退下来，可以领到养老金，还可以利用自己的技术谋一份职业，一举两得，何乐而不为？还有的人是希望能早退下来，享享清福，也能帮着孩子看看孩子，乐呵乐呵。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:47:04","updateTime":"2021-05-06 23:47:04","isExist":null},{"id":1952,"question":"即热式热水器主要问题是什么？","simplecontent":null,"content":"1.也许大家问即热式电热是否安全，是因为它功率大，但是小佳告诉大家，这是个绝对的误区。\n2.即热式电热本身存在最主要的问题就是功率太大，超出了大多数家庭的用电负荷，以南京为例，新小区家庭规定8000w为最大限度，一个即热式电热水器就占了8000w，那电冰箱、电水壶、电视机，这些都用不了了啊，其余的小区更悲伤了，基本都还是限制在5500w，即热式电热水器连他们的门槛儿都迈不进去。正是因为功率这个无关安全的问题，成为了即热式电热水器最大的问题。\n\n市面上有些即热式电热水器，因为内胆等核心部件质量不好，就靠防电墙作为噱头，让用户以为这是一款安全性能非常高的机器，但是真的那么安全吗？防电墙的原理是通过增大电阻来减小电流，洗澡时若不断电，是存在一定的漏电风险的，当然大家无需害怕，小佳也只是普及一个知识点。\n\n答案是：很多家庭不具备即热式热水器安装的条件。至于即热式热水器的安全性，目前市面上大品牌的即热式热水器，在保证供电能力的前提下，安全性是可以保证的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:46:36","updateTime":"2021-05-06 23:46:36","isExist":null},{"id":1924,"question":"舌头裂开了很痛怎么办?","simplecontent":null,"content":"阴虚火旺湿热，舌炎，等病因而导致的症状，建议您平时补充多种维生素，多吃蔬菜水果，可以服用口炎清颗粒等，对症调理一下，如果总不缓解，及时去医院进一步的检查\n健康指导：这种病俗称舌裂，是一种发生于舌头的一种疾病，中医认为是由于心火较大所致多是由于缺乏矿物质及核黄素等营养成分所致，比如缺乏B族维生素，因此就需要及时的补充这些营养成分，多吃水果蔬菜，必要的时候可吃B族维生素的药物进行治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:45:40","updateTime":"2021-05-06 23:45:40","isExist":null},{"id":1898,"question":"女生喜欢吊坠还是喜欢戒指？","simplecontent":null,"content":"https://www.xiaohongshu.com/discovery/item/60499e07000000002103c461","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 23:45:12","updateTime":"2021-05-06 23:45:12","isExist":null},{"id":1623,"question":"有比较耐玩游戏那?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:50:14","updateTime":"2021-05-06 22:50:14","isExist":null},{"id":1622,"question":"充电线不好用?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:50:10","updateTime":"2021-05-06 22:50:10","isExist":null},{"id":1621,"question":"公司充不了电?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:50:07","updateTime":"2021-05-06 22:50:07","isExist":null},{"id":1620,"question":"家里需要多少插座?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:50:03","updateTime":"2021-05-06 22:50:03","isExist":null},{"id":1619,"question":"如何说离职原因?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:50:00","updateTime":"2021-05-06 22:50:00","isExist":null},{"id":1618,"question":"耙耙形状原因?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:56","updateTime":"2021-05-06 22:49:56","isExist":null},{"id":1617,"question":"不同猪肉部位?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:52","updateTime":"2021-05-06 22:49:52","isExist":null},{"id":1616,"question":"单反相机哪些品牌好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:48","updateTime":"2021-05-06 22:49:48","isExist":null},{"id":1615,"question":"穿凉鞋舒服吧?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:45","updateTime":"2021-05-06 22:49:45","isExist":null},{"id":1613,"question":"不同猪肉部位?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:31","updateTime":"2021-05-06 22:49:31","isExist":null},{"id":1612,"question":"单反相机哪些品牌好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:28","updateTime":"2021-05-06 22:49:28","isExist":null},{"id":1610,"question":"社保哪些个人不能交?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:20","updateTime":"2021-05-06 22:49:20","isExist":null},{"id":1609,"question":"飞机票多少钱?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:11","updateTime":"2021-05-06 22:49:11","isExist":null},{"id":1608,"question":"吃什么提高精子质量?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:07","updateTime":"2021-05-06 22:49:07","isExist":null},{"id":1607,"question":"祛痘最好用的药膏?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:04","updateTime":"2021-05-06 22:49:04","isExist":null},{"id":1606,"question":"发视力口腔缺钙抵抗力人群补充维生素?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:49:00","updateTime":"2021-05-06 22:49:00","isExist":null},{"id":1605,"question":"不同维生素作用?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:48:56","updateTime":"2021-05-06 22:48:56","isExist":null},{"id":1604,"question":"木地板好处?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:48:52","updateTime":"2021-05-06 22:48:52","isExist":null},{"id":1603,"question":"地板和木地板价格差别大?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:48:48","updateTime":"2021-05-06 22:48:48","isExist":null},{"id":1602,"question":"96出生多大了?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:48:43","updateTime":"2021-05-06 22:48:43","isExist":null},{"id":1601,"question":"窗帘最好买那种不遮光的?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:48:39","updateTime":"2021-05-06 22:48:39","isExist":null},{"id":1600,"question":"窗帘好看才是真的好吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:48:35","updateTime":"2021-05-06 22:48:35","isExist":null},{"id":1599,"question":"装修价格多少?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:15:48","updateTime":"2021-05-06 22:15:48","isExist":null},{"id":1598,"question":"房租总厂多少?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:15:33","updateTime":"2021-05-06 22:15:33","isExist":null},{"id":1594,"question":"房租可能包括公摊面积?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:15:18","updateTime":"2021-05-06 22:15:18","isExist":null},{"id":1593,"question":"手机内存被吃了?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:59","updateTime":"2021-05-06 22:14:59","isExist":null},{"id":1591,"question":"请多多和淘宝优势?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:47","updateTime":"2021-05-06 22:14:47","isExist":null},{"id":1590,"question":"怎么喝水?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:44","updateTime":"2021-05-06 22:14:44","isExist":null},{"id":1589,"question":"配置文件的编码类型是什么?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:40","updateTime":"2021-05-06 22:14:40","isExist":null},{"id":1588,"question":"晨会内容是不是昨天工作内容和进度，和今天内容进度?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:36","updateTime":"2021-05-06 22:14:36","isExist":null},{"id":1587,"question":"开会时间多久?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:32","updateTime":"2021-05-06 22:14:32","isExist":null},{"id":1586,"question":"开会有东西吃吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:28","updateTime":"2021-05-06 22:14:28","isExist":null},{"id":1585,"question":"最近有啥事做吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:25","updateTime":"2021-05-06 22:14:25","isExist":null},{"id":1584,"question":"价格贵的耳机和普通区别?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:21","updateTime":"2021-05-06 22:14:21","isExist":null},{"id":1583,"question":"耳机质量如何?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:17","updateTime":"2021-05-06 22:14:17","isExist":null},{"id":1582,"question":"是新电脑吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:13","updateTime":"2021-05-06 22:14:13","isExist":null},{"id":1581,"question":"华为操作麻烦吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:07","updateTime":"2021-05-06 22:14:07","isExist":null},{"id":1580,"question":"早上困不困?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:03","updateTime":"2021-05-06 22:14:03","isExist":null},{"id":1579,"question":"外包有啥不好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:14:00","updateTime":"2021-05-06 22:14:00","isExist":null},{"id":1578,"question":"发物有哪些?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:13:56","updateTime":"2021-05-06 22:13:56","isExist":null},{"id":1577,"question":"失恋如何安慰?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:13:36","updateTime":"2021-05-06 22:13:36","isExist":null},{"id":1576,"question":"女朋友不想打疫苗怎么办?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:13:23","updateTime":"2021-05-06 22:13:23","isExist":null},{"id":1575,"question":"愚人节开了什么大的玩笑?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:13:19","updateTime":"2021-05-06 22:13:19","isExist":null},{"id":1574,"question":"五一去哪里玩?","simplecontent":null,"content":"五一 准备和女友出去游玩，第一次和女友长距离旅行 ，避坑就老哥们推荐，或是其他景点地方\n\n大概三个方向\n\n1.云南线 大理 +丽江+香格里拉\n\n2 成都+九寨沟\n\n3 卡茶盐湖\n\n4广州 吃吃吃","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:13:13","updateTime":"2021-05-06 22:13:13","isExist":null},{"id":1573,"question":"专硕竞争真的大，今年电子信息都炸了?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:13:02","updateTime":"2021-05-06 22:13:02","isExist":null},{"id":1572,"question":"美国很多人攻击亚裔人?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:57","updateTime":"2021-05-06 22:12:57","isExist":null},{"id":1571,"question":"亚裔不完全是中国人吧?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:54","updateTime":"2021-05-06 22:12:54","isExist":null},{"id":1570,"question":"计算机考研，学硕还是专硕?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:49","updateTime":"2021-05-06 22:12:49","isExist":null},{"id":1569,"question":"二本研究生值不值得读?","simplecontent":null,"content":"楼上说的对，很多冷门专业211都是国家线，何必去一个二本\n二本研究生虽然容易，没什么作用，很多企业只认985和211的，其它的学校含金量不高没必要","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:44","updateTime":"2021-05-06 22:12:44","isExist":null},{"id":1568,"question":"如果诸葛亮满状态多活三十年不死，能否统一三国?","simplecontent":null,"content":"他多活三十年也不可能给蜀汉加一百万人口啊，就算加上还是没魏国多","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:38","updateTime":"2021-05-06 22:12:38","isExist":null},{"id":1567,"question":"考研的学费贵吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:29","updateTime":"2021-05-06 22:12:29","isExist":null},{"id":1566,"question":"现在结婚，男方真的得花这么多钱吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:25","updateTime":"2021-05-06 22:12:25","isExist":null},{"id":1565,"question":"谁说非要母乳喂养?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:19","updateTime":"2021-05-06 22:12:19","isExist":null},{"id":1564,"question":"638.去云南旅游时间够吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:15","updateTime":"2021-05-06 22:12:15","isExist":null},{"id":1563,"question":"3号和5号哪天加班好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:12:04","updateTime":"2021-05-06 22:12:04","isExist":null},{"id":1562,"question":"中国的土狗，土猫在国外是名贵品种吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:11:52","updateTime":"2021-05-06 22:11:52","isExist":null},{"id":1561,"question":"为什么裤子拉链老是掉下来?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:11:47","updateTime":"2021-05-06 22:11:47","isExist":null},{"id":563,"question":"成年人还能长高吗?","simplecontent":"","content":"篮球、打篮球、打篮球，一年长高了快6CM了\n\n买个厚底鞋，在买个薛之谦同款的增高鞋垫，最好是出门的时候在带上一顶帽子，这样的话最起码有个5-7厘米的变化。\n饮食结构：补钙最好的食物是牛奶，酸奶，鸡蛋，和肉。\n\n体育锻炼：这个也是很有必要的，运动前一定要注意热身，拉拉筋骨，我一直有晨跑的习惯（每天早上五公里），运动之后，也是满满正能量的一天。\n\n\n外来因素：每天晒10-15分钟的太阳也可以保证钙的摄入量，一个成年人每周最好晒3-4次太阳。\n\n睡眠要充足：充足的睡眠也是很有必要的，成年人每天要保证8个小时的睡眠，11点之前入睡，这样可以改善新陈代谢，加大钙的吸收，也可以分泌更多生长激素，让骨骼充份吸收。\n\n还有最最最重要的就是杜绝不良习惯，烟酒，油炸膨化食品，肥宅水和碳酸饮料，这些都是影响钙吸收和长高的罪魁祸首，切记、切记、切\n打篮球：每天坚持打一个小时就行。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:11:00","updateTime":"2021-05-06 22:11:01","isExist":null},{"id":1560,"question":"是什么阻碍了中国的文化发展?","simplecontent":null,"content":"老祖宗厉害”这种思想真的害了很多人，特别是文化程度不高的朋友。正是因为文化水平不高，许多事情都掰扯不明白，解释不通，最后只能说“老祖宗厉害”。认真观察一下，只要是涉及到历史的问题，评论里总有“我们3000年前就有了”，“领先西方2000年”，“中国在古代是世界第一”，“我们在古代能吊打全世界”“中国有五千年文明”等等数不胜数，越是受教育程度低的人，越热衷于发这种评论。鲁迅很早就说过这种现象，其实就是阿Q精神，精神胜利法，当下被人欺负了，就自己安慰自己，“我祖上阔过”，但可惜的是你祖上从来没有阔过！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:10:33","updateTime":"2021-05-06 22:10:33","isExist":null},{"id":1559,"question":"中国的发展是因为什么?","simplecontent":null,"content":"说句扎心的话，假如这个星球上没有西方，那么我们肯定依然生活在大清朝，即便不是大清朝，也无非是另一个封建王朝而已，我们晚上还是点蜡烛，出门靠走路，只有达官贵人才能坐轿，我们不会有电力电脑手机网络汽车飞机等等。中国自身的文明根本无法完成进化和破壁，我们将会永远在无尽的王朝循环之中。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:10:25","updateTime":"2021-05-06 22:10:25","isExist":null},{"id":1558,"question":"81.工作发际线如何?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:10:13","updateTime":"2021-05-06 22:10:13","isExist":null},{"id":1557,"question":"76.比特币最大的价值就是割韭菜，请问以比特币交易的货物够一百个批萨了没？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:10:04","updateTime":"2021-05-06 22:10:04","isExist":null},{"id":1556,"question":"艾滋病的传染途径有哪些?","simplecontent":null,"content":"艾滋病病毒感染者虽然外表和正常人一样，但他们的血液、精液、阴道分泌物、皮肤粘膜破损或炎症溃疡的渗出液里都含有大量艾滋病病毒，具有很强的传染性；乳汁也含病毒，有传染性。\n指导意见：\n唾液、泪水、汗液和尿液中也能发现病毒，但含病毒很少，传染性不大。初次感染HIV后2-4周左右。临床主要表现为发热、咽痛、盗汗、恶心、呕吐、腹泻、皮疹、关节痛、淋巴结肿大及神经系统症状。多数患者临床症状轻微，持续1-3周后缓解。你可以观察下或者去医院检查","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:09:55","updateTime":"2021-05-06 22:09:55","isExist":null},{"id":1555,"question":"香港和内陆的区别?","simplecontent":null,"content":"香港的地铁线路基本都运营到晚上十二点半以后吗\n香港不分初中和高中，分为中一和中六六个年级，也就没有了中考这一环节\n香港的ATM机是先取卡后取钱，这是为了用户的用卡安全，防止有些人取出钱来一高兴就忘记拔卡了；\n香港赚钱深圳花\n香港的私立医院很贵，公立医院排队看病的人又太多了，所以很多人选择到深圳看病\n香港洗碗工月收入也可以过万，但是房价平均18万，买房子是按尺计算，千尺以上可以称之为豪宅","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:09:32","updateTime":"2021-05-06 22:09:32","isExist":null},{"id":630,"question":"学区房的条件是啥?","simplecontent":"","content":"现在男生很难考得过女生，不管是理科还是文科，英语和语文难度比物理化数难度高，而且物理化数偏向于女生，几乎都是记忆力的题目，没有太多逻辑学习了\n坐标上海:我表哥比我大4个月，我们2009年大学本科毕业，我表哥继续考研 硕士博士读下去。 我本科毕业直接进了外企，然后就贷款买房了，12年过去了！  我表哥博士了，某研究所工作工资12000 房子买不起 无趣老光棍一个！  我09年150万贷款买的房子已经涨到900多万了，我已经是公司中层管理了 年薪60W。   这就是男人高学历的下场！！！\n职场潜规则，在同等条件下，男生往往比女生更有竞争力。甚至男生的学历没有女生高，很多老板都会选择男生。一方面男生抗压能力强，可以接受更高强度的工作。同时没有产假，不会因为有了孩子分散太多注意力，会把更多精力投入到工作中。而且男生还可以从事很多体力工作，就业面和就业范围都比女生多。所以就算男生没有高学历，依然可以在社会上找一份合适的工作。但女生在职场上的就业和上升渠道就窄很多，只能通过学历来为自己镀金，让自己在职场选择上更有优势。\n大多数本科毕业的都已经23岁左右了，很快就到了适婚年龄，男生就要考虑买车买房娶媳妇的彩礼钱了，这些压力摆在面前，家庭条件一般的男生根本没有时间再去考研了，耽误不起了。只能尽早结束学业，步入社会打拼，储备基金，为以后娶媳妇养家做准备。所以现实压力根本不允许很多家庭条件一般的男生继续在校园象牙塔里待下去。而女生没有那么大的养家压力，读研更有助于找优质对象，进体制内有一份稳定的工作\n不得不承认，在中国现有的考试制度下，男生确实不占优势。男生的自控能力和记忆性明显不如女生，在死记硬背方面跟不上女生，努力程度也比不上女生。从初中开始，男生的辍学率就远远高于女生。等到考研的时候，光英语这一门就卡掉了很多男生，很多考研男生就败在了女生的手里，女生考研的成功率也高于男生。\n我已经好几年没招到男研究生了，现在名下指导的清一色女生，我们这个专业每年考进来的男生很少，男生考不过女生也是既定事实，即使有个把男生也会把大佬抢走了，作为一名男导师，我还是觉得带男生比较方便。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 22:08:21","updateTime":"2021-05-06 22:08:22","isExist":null},{"id":1554,"question":"23.喝酒不能吃感冒药吗?","simplecontent":null,"content":"喝完酒给人家送感冒药，能活着都算幸运的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:33","updateTime":"2021-05-06 21:22:33","isExist":null},{"id":1553,"question":"22.基金经理都是嘴炮？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:25","updateTime":"2021-05-06 21:22:25","isExist":null},{"id":1552,"question":"中东的石油比扩泉水便宜?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:22","updateTime":"2021-05-06 21:22:22","isExist":null},{"id":1551,"question":"女生的阴毛需要刮吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:18","updateTime":"2021-05-06 21:22:18","isExist":null},{"id":1550,"question":"19.嫖娼被抓会被告诉家人吗?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:14","updateTime":"2021-05-06 21:22:14","isExist":null},{"id":1549,"question":"18.为什么线下衣服网上找不到？","simplecontent":null,"content":"因为有的品牌不给在网上卖,怕价格太低了导致实体店没生意呀~就是限制住了呀~~有时候在网上看到了某品牌的衣服,如果是不给在网上卖他还出现的话就有可能是假的哦!\n穷男生有什么特点？\n首先，我不喜欢吃拉面和沙县小吃。第二我衣服也没什么logo。第三头我发两边长，中间没头发。第四我不喜欢洗头，不只是早上，啥时候都不喜欢洗。第五我不喜欢和饮料，我喜欢喝白开。第六我手机上没淘宝。第七不穿篮球鞋，我都是布鞋。\n然后钱呢？我得钱呢？让你们这些女的给我偷走了吗？？？","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:10","updateTime":"2021-05-06 21:22:10","isExist":null},{"id":1548,"question":"17.为什么专卖店的衣服在线上如何找？","simplecontent":null,"content":"大部分品牌都有专柜专供和电商专供，专柜款必须得在实体店卖，网上旗舰店是没有的。不过也有实体店的老板偷偷拿到网上卖，价格比实体店稍微便宜一点。\n你可以记住货号，然后淘宝输入牌子加货号。\n如果没有记住货号，例如你看上fiveplus一款羽绒服，你可以输入：fiveplus 羽绒服 代购。我最近商场看上的衣服这样都搜出来了，不过正品的代购基本打65折左右，太便宜的基本是高仿，还不如等打折季店里都是5折的。。也可以找原单，拉夏我买到一款原单的大衣，原价699，买到159，质量不好，比对了是正品，可是拉夏的质量不敢恭维，退掉了\n因为公司保护实体，所以网上的商品都不是最新的，或者说，更新很慢","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:22:00","updateTime":"2021-05-06 21:22:00","isExist":null},{"id":1547,"question":"16.什么周大福、周生生、周福生、周金生、周六福之类的有什么区别？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:52","updateTime":"2021-05-06 21:21:52","isExist":null},{"id":1546,"question":"周大福历史?","simplecontent":null,"content":"周大福是最早成立的。1929年，一位来自广东顺德的小伙周至元在广州开了一家叫周大福的金店，此后十几年，虽然在周至元的手中，这家金店没有壮大起来，但也经营得不错。\n\n直到1943年，这家金店一个叫郑裕彤的学徒娶了周至元的女儿周翠英，开始接手金店生意，才不断发展起来的，名声才开始不断显露，最终使这家金店成为了国内现在最大的珠宝首饰企业之一。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:47","updateTime":"2021-05-06 21:21:47","isExist":null},{"id":1545,"question":"15.手机摔了会怀成声王子?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:32","updateTime":"2021-05-06 21:21:32","isExist":null},{"id":1544,"question":"14.拍照什么姿势比较好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:28","updateTime":"2021-05-06 21:21:28","isExist":null},{"id":1543,"question":"拍照买什么衣服比较好?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:25","updateTime":"2021-05-06 21:21:25","isExist":null},{"id":1542,"question":"12.如何去掉一些坏习惯?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:21","updateTime":"2021-05-06 21:21:21","isExist":null},{"id":1541,"question":"11.深圳的中学升学率有多少？","simplecontent":null,"content":"深圳中考，非深户想上公办高中，稳在班上前五、六名的学生才有希望。\n数据上说深圳中考整体录取率45％左右，但是非深户只有18％","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:17","updateTime":"2021-05-06 21:21:17","isExist":null},{"id":1540,"question":"10.找什么样的房东比较好？","simplecontent":null,"content":"这房东肯定难说话，不能踫。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:10","updateTime":"2021-05-06 21:21:10","isExist":null},{"id":1539,"question":"9.网络小说的套路是如何？","simplecontent":null,"content":"网络小说真的是骗人的，开头说免费，加入会员后看小说基本上是字字分分，没上千元一篇总归是看不到完的，还是买书看比较实惠。\n华莱士确实有问题，我每次吃都拉稀。有一次我便秘，我都想买来华莱士当泻药[左捂脸]\n以前请客叫了韩国的真露，都听说过没喝过，客人喝了一口皱眉头，我为了打圆场，我说我喝吧，结果我喝了一口也无论如何喝不下去了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:21:03","updateTime":"2021-05-06 21:21:03","isExist":null},{"id":1538,"question":"8.深圳未来的发展如何？","simplecontent":null,"content":"深圳确实需要反自己，不能再走房价暴长的老路，应该大力发展科技\n畸形深圳，小学高中学位严重短缺，高中升学率不足50%。高房价高租金，阻碍了企业发展。\n深圳除了房租贵、房子贵，其他的消费跟其他地方差不了多少","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:20:56","updateTime":"2021-05-06 21:20:56","isExist":null},{"id":1537,"question":"7.拍照场景有哪些？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:20:49","updateTime":"2021-05-06 21:20:49","isExist":null},{"id":1536,"question":"为什么女生喜欢高大的男生?","simplecontent":null,"content":"高大的男人比矮小的男人更显沉稳、伟岸、可靠。过低会显得无力、滑稽、弱小，过高则显得笨重、突兀、距离感太大。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:20:41","updateTime":"2021-05-06 21:20:41","isExist":null},{"id":1535,"question":"相亲墙要求180以上?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:20:23","updateTime":"2021-05-06 21:20:23","isExist":null},{"id":1534,"question":"6.江小白比真露还难喝吗?","simplecontent":null,"content":"有这闲工夫做品牌还真的不如去研究一下产品  江小白真心难喝  我就买了一瓶 还是98一瓶500毫升的  喝了一口就不喝了  那个入口真正不如15块的牛栏山  而且搞个度数25度的白酒你兑凉白开呀  还有实在研究不出你找有技术的代工贴牌也好啊   不要浪费了这个品牌","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:20:18","updateTime":"2021-05-06 21:20:18","isExist":null},{"id":1533,"question":"5.现代社会诈骗方式？","simplecontent":null,"content":"检察官介绍，升级后的诈骗，主要采用“线上诈骗+线下取钱”模式","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:20:06","updateTime":"2021-05-06 21:20:06","isExist":null},{"id":1532,"question":"4.navicat注册特别麻烦？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:19:55","updateTime":"2021-05-06 21:19:55","isExist":null},{"id":1531,"question":"3.电脑的传输速度有多快？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:19:52","updateTime":"2021-05-06 21:19:52","isExist":null},{"id":1530,"question":"如何判断孩子是不是被别人生的？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:19:48","updateTime":"2021-05-06 21:19:48","isExist":null},{"id":1529,"question":"1.复读有什么好处？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 21:19:33","updateTime":"2021-05-06 21:19:33","isExist":null},{"id":1528,"question":"被渣女伤过的男人和感情顺利的男人在将来的人生道路上谁更有前途？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 18:24:32","updateTime":"2021-05-06 18:24:32","isExist":null},{"id":1527,"question":"广东婚礼包多少钱?","simplecontent":null,"content":"一直怀疑微信红包上限200的原因，是因为微信总部在广州，而在广州，结婚满月之类的宴席，包200的红包是常规操作……","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 18:14:04","updateTime":"2021-05-06 18:14:04","isExist":null},{"id":1526,"question":"脸上很多一粒粒小疙瘩?","simplecontent":null,"content":"病情分析：考虑是粟丘疹、闭口粉刺，或者单纯的皮肤粗糙。随着年龄增加，皮肤不完全光滑是正常老化情况，不属于疾病范畴。如若侧着光能看见小米粒样孤立散在的丘疹，则闭口粉刺或者粟丘疹的可能性大，可外用阿达帕林凝胶，每晚一次，点涂在闭口处；对于单纯不光滑的情况可以外用些含有酒精或水杨酸的护肤品来改善，若效果不佳，可考虑选择果酸换肤、光子嫩肤等医美技术改善，避免日光暴晒。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 16:47:19","updateTime":"2021-05-06 16:47:19","isExist":null},{"id":1525,"question":"端午节和儿童节放假吗?","simplecontent":null,"content":"端午节放假一天，儿童节不放假","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-06 09:53:33","updateTime":"2021-05-06 09:53:33","isExist":null},{"id":1524,"question":"深圳最快高铁速度?","simplecontent":null,"content":"厦深高铁将按时速250公里达速运行，对列车运行时刻进行优化调整，在厦门北至深圳北之间开行最快2.5小时可通达列车，同时在潮汕至深圳、广州间安排开行高品质城际列车。\n记者了解到，在提速之前，厦深高铁按照时速200公里运行，深圳北到厦门北最快需要3.5小时。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 22:46:21","updateTime":"2021-05-05 22:46:21","isExist":null},{"id":1523,"question":"为啥深圳坪山有高铁?","simplecontent":null,"content":"是。深圳坪山站是除深圳北站外厦深铁路在深圳的第二个站点，位于龙岗区与坪山新区交接处，将成为综合交通枢纽。站房为线正下式站房，以铁路高架桥为分界，分为上下两层，共设4站台8股道，总建筑面积9992.78平方米，站房雨棚钢结构覆盖面积18131.2平方米，站台雨棚面积27535.6平方米。\n\n5月4号，小编从南山区轨道交通前期规划研究方案汇报会上获悉，西丽中心片区将新建一座高铁站，设置11个站台、20条线，承接深圳西站的客运功能。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 22:44:56","updateTime":"2021-05-05 22:44:56","isExist":null},{"id":1522,"question":"联通和电信哪个信号好?","simplecontent":null,"content":"联通4G网速是最快的，电信次之。联通4G和电信4G虽然都使用国际通用的比较成熟的网络制式，但是电信4G网络建设了大量的b5频段基站来增强信号覆盖，所以这部分基站的网速就非常慢了，也就是使用的3G网速的快慢。\n\n移动：信号好，速度不快，在上海是唯一愿意进小区做覆盖的\n\n联通：居民小区普遍差一点，但是整体网速最好，如果手机不支持VoLTE打电话有时候不太好，2、3G被人为搞成烂网了\n\n电信：信号与联通没有本质差别，各有胜负，网速最差，不用VoLTE打电话极差，用VoLTE体验还不错\n\n===========================\n\n移动：综合信号最好，4G比另外2家覆盖好些，但是一旦没4G信号真心没法愉快的手机上网；\n联通：网速最快，且网络制式全球主流，随便什么手机都能用，综合来说信号不如另外2家；\n电信：2、3G信号比较好，有时候比移动好（现在好像越来越差了），4G信号有时候比联通4G好，有时候不如…手机太难买。\n总的来说，一线城市推荐联通电信，二线城市推荐移动电信，三线及以下城市推荐移动。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 22:15:11","updateTime":"2021-05-05 22:15:11","isExist":null},{"id":1521,"question":"臭豆腐怎么做的?","simplecontent":null,"content":"长沙臭豆腐用的是“黑卤水”，它是用黑豆豉煮水，然后放入香菇、冬笋丝，倒入适量的白酒、碱面。然后静置发酵，大约15-20天左右，过滤一下，滤出残渣，剩下的就是黑色的，散发着臭味的“黑卤水”，然后用这个卤水来浸泡豆腐。\n\n来看看泔水泡的臭豆腐，具体有什么样的差别吧，外观经过长时间不好吃，和外面差人家的臭豆腐根本没有差别，但是如果玩一玩之后真的是酸臭味，毕竟这是用泔水泡成的。如果用粪水泡到会是怎么样的呢？外观上基本上也是一致的，臭味和之前的对比相对来说也是非常的深一些。\n\n这两款豆腐还经过了疯狂的油炸比较臭豆腐也是经过油炸之后才能吃的，经过油炸之后的臭豆腐测试员们才能做出好的判断，这两款臭豆腐经过油炸之后，竟然发生了非常不可思议的变化，那就是臭味完全就没有了，只有一个臭豆腐被油炸过的香味，在外貌上和正常的臭豆腐也是完全一样的，看了之后买臭豆腐的时候真的是要非常非常小心了。\n\n\n非发酵的方法相对来说也是有些复杂，主要就是为了做好一个卤水来泡制臭豆腐的，当然卤水的食材也是非常的讲究，他们选择的就是咸菜和芥菜等等蔬菜，作为底子倒入大容器里，泡水封存起来进行发酵，做臭豆腐的时候只要将老豆腐放入泡好的卤水当中，隔一段时间捞出来就可以进行炸制了，对这种方法真的是非常的健康了。如果这样吃臭豆腐的情况下，还要建议大家去正规的地方买，别看那些街头小贩，最好还是不要去了，毕竟现在国家的企业管理相对来说也是非常的严格，如果一旦查出来是用粪水制作的，那么后果真的是非常的严重。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 20:58:35","updateTime":"2021-05-05 20:58:35","isExist":null},{"id":1520,"question":"含有叶黄素的食物有哪些?","simplecontent":null,"content":"玉米、菠菜、甘蓝菜、绿花椰菜、蛋黄、南瓜、胡萝卜等；水果如：芒果、猕猴桃、葡萄、橙子和橙汁、西红柿；另外还有奇异果。大量吃绿色蔬菜既能保证叶黄素的吸收，尤其是玉米、胡萝卜、菠菜、紫甘蓝等。\n\n\n现在我们面对电脑或者是每天面对手机的时间是比较长的，对于眼睛的影响是非常多的，现在也有很多人都会出现眼疲劳或者是近视等情况，所以考虑服用叶黄素或者是吃一些红色食物是非常有必要。具体的叶黄素的食物排行榜都有哪些？我们应该多吃一些什么食物呢？下面我来介绍一下。\n\n\n\n叶黄素的食物排行榜\n\n\n\n叶黄素的食物排行榜\n\n\n\n其实生活当中有很多的食物当中都会有叶黄素成分，比如我们可以多吃一些鸡蛋，特别是鸡蛋黄，鸡蛋黄里面所含有的叶黄素成分是比较多的，而且非常容易被人体消化和吸收，要比直接的去吃绿色的蔬菜吸收率要高出很多倍，另外，蛋黄里面还有非常多的新元素，对于预防视网膜的退化有一定的帮助，还可以多吃一些玉米，玉米不仅是粗粮，而且对于保护眼睛的黄斑感光区有非常好的帮助下，可以有效预防老年白内障或者是黄斑变性等情况，另外还可以多吃些菠菜，菠菜所含有的叶黄素成分也是比较多的，除了菠菜之外，还可以多吃一些甘蓝等等。\n\n\n\n现在我们已经了解了叶黄素的食物排行榜，除了以上的食物之外，还可以多吃一些猕猴桃，猕猴桃不仅有着非常丰富的维生素C成分，叶黄素成本也是比较突出的，可以有效的祛预防眼疲劳，对保护眼睛健康也非常好的帮助。\n\n叶黄素是保证我们眼睛健康的重要元素之一，因此一直都被称作是黄金眼，对视网膜中的黄斑具有重要的保护意义。它不但具有抗氧化性，还能帮助抑制有害自由基的形成，防止对眼睛造成伤害。叶黄素在很多食物中都存在，我们今天就来大概了解一下。\n\n04.jpg\n\n一、含有叶黄素的食物有哪些？\n\n如果想了解更多食物中含有叶黄素，加微信号 zy13319584431，进入叶黄素群交流。 \n\n1、蛋黄\n\n我们都知道鸡蛋被称作是全营养食物，讲的是从蛋壳到蛋黄其都具有十分好的营养价值。蛋黄中含有丰富的叶黄素和玉米黄素，吃了以后可以使得眼睛更加的明亮，而且颜色越黄的蛋黄对于眼睛的益处就越多。\n\n通过食物补充叶黄素是没有问题的，但是要知道食物补充叶黄素是有限的，而且叶黄素的补充需要一个周期，所以一般建议直接服用叶黄素片进行补充，目前市面上最热销的叶黄素片有国内的汤臣倍健叶黄素，国外的澳佳宝叶黄素片。\n\n汤臣倍健叶黄素：汤臣倍健叶黄素提取自叶黄素含量高的万寿菊，每片含有38mg叶黄素酯粉，含量高，稳定性好。除此之外还含有100mg蓝莓果汁粉，其中的花色苷可以激活视网膜，改善人眼视觉的敏锐程度，因此能有效改善眼部疲劳情况，缓解视力下降，保护眼睛等，点击开启护眼之旅》》》\n\n什么食物含叶黄素最多\n\n澳佳宝叶黄素片：澳佳宝是国际大品牌。澳佳宝叶黄素原料来自澳洲，最大程度上保证原料的天然无污染，且相比普通的压片糖果一般性标准，此款产品属于金字塔顶端的澳洲要求：澳洲处方药生产标准TGA。进入购买页面>>>\n\nblob.png\n\n2、猕猴桃\n\n这是一种公认的含有叶黄素最多的水果，具有十分不错的保护眼睛的功效。长期食用猕猴桃不仅可以帮助使得皮肤变好，还能防止眼睛出现疲劳感。而且猕猴桃中富含的维生素是高等抗氧化剂，可以帮助清楚体内不正常堆积的氧化物。\n\n3、玉米\n\n在玉米的营养成分中不仅含有丰富的叶黄素，还含有丰富的玉米黄质，这些物质对于保护眼睛的健康都有十分不错的效果，可以帮助预防老年性的黄斑变性。\n\n4、菠菜等绿叶蔬菜\n\n在菠菜和一些绿色蔬菜中叶黄素的含量也比较高，但其中以深色的蔬菜含量最多，如菠菜和甘蓝等，长期食用这些食物能够有效的保护我们的眼睛不受伤害。\n\n以上四种食物就是相对来说含有叶黄素含量比较多的一些食物，因此在平时的时候我们可以有意识的多食用一些，既能起到一个帮助防止人体老化的作用，又能很好的帮助保护人体的眼睛。不过食物中摄取的叶黄素还是有限的，如果身体确实有必要补充叶黄素，建议还是直接服用叶黄素片比较好。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 13:47:42","updateTime":"2021-05-05 13:47:42","isExist":null},{"id":1519,"question":"黄色护眼吗?","simplecontent":null,"content":"我一个室友的书本基本全是黄色(类似于橙黄色)重新印刷的，他也配有黄色镜片的眼镜(无度数)，据他妈妈“咨询过眼科专家说黄色很护眼”，而且他的视力比较好，我产生了疑问和渴望","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 13:45:13","updateTime":"2021-05-05 13:45:13","isExist":null},{"id":1518,"question":"护眼黄色还是绿色好?","simplecontent":null,"content":"青绿色护眼，因为绿色和青色对光线的吸收和发射都比较恰当，比较适合人眼，所以远眺大自然的绿色景物可缓解眼睛的疲劳状态。青草和绿色，不仅能吸收强光中对眼睛有害的紫外线，同时还能减少因强光对眼睛所产生的耀光。所以青绿色是对眼睛最好的颜色。\n\n白色纸张在生产过程中，不可避免地会添加到漂白剂，虽然从视觉上看，白纸黑字会更清晰，但白纸反射光线强，比较刺眼，并不适合长时间阅读。木浆原色就是偏黄，黄纸的颜色还原度较高，在使用中不容易伤眼。特定亮度的黄纸，其反射的光波频谱小，它能以最小的光波引起最强的色觉。虽然在视觉亮度上稍逊于白色纸张，但它所塑造的视觉环境是比较舒适安全的。--------------------------------------------------------------------------------------------------也就是说，黄色的纸只是相较于白纸来说，对眼睛的刺激伤害没那么大，至于防近视，确实不是换一张纸就能做到的。\n简单点来说，纸不会自己发光，我们所看到的颜色是纸的吸收色。在白光的照射下，泛黄的纸是吸收了部分蓝光，所以显现了黄色。可能有部分保护视力的作用。一般出现在小孩子的作业本里。那种很白很白的作业本，实际上在硫酸漂白木浆之后，再额外加入可以发射蓝光的荧光剂，使得纸张整体在照射下很白，这在抵档卫生纸等中很常见。比起护眼的考虑，荧光剂可能造成的实际危害会更大。额外补充一点，白光照明光的实现，可以用红-绿-蓝三基色，也可以用黄-蓝两基色。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 13:44:24","updateTime":"2021-05-05 13:44:24","isExist":null},{"id":1517,"question":"用社保卡开药,为何要比市价贵很多?","simplecontent":null,"content":"我们这里也是，医保药店的药比非医保药店的药贵，两三块的看不出，二三十块的就立马贵上5—8块。其他更贵的我觉得还要高。本人亲身经历。不使用医保又觉得里面的钱取不出，浪费。所以医保像个坑，变相榨取。\n之前也听朋友说去医院看同样的病，他有医保，同样的检查和治疗比跟他一起看病的没有医保的多了好几百块。\n医保，看来并不一定是替老百姓省钱的工具，也是更好“攫取”的工具。不医保，花钱还少，医保，花钱还高。\n\n因为药店的药比较贵那种很黑的一般刷最贵的 而且会说 这个不是医保能刷需要更改药名刷谁TM知道有没有乱搞","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 13:38:27","updateTime":"2021-05-05 13:38:27","isExist":null},{"id":1516,"question":"芝麻酱，花生酱，沙茶酱哪个好吃?","simplecontent":null,"content":"把牛筋加五香大料烧烂捞出篦起来漏汁，葱姜蒜下锅煸香，加入沙茶酱，蚝油，大葱段和牛筋一起翻炒三十秒，加入盐糖胡椒粉香醋和香菜少许，在大火翻炒十五秒即可出锅入盘。\n\n\n茶酱通常是潮汕人会比较偏爱的一个酱，有点甜m，基本去吃牛肉火锅都会有配。还挺香的，甜香的，可以尝试一下，我有试过炒猪肉会更好吃，牛肉容易炒老了。可以尝试，喜欢甜口的话，记得多放点蒜","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 09:21:26","updateTime":"2021-05-05 09:21:26","isExist":null},{"id":1515,"question":"芝麻酱和花生酱有什么区别?","simplecontent":null,"content":"在吃火锅的时候很多人喜欢蘸芝麻酱吃，有的商家会用花生酱代替，这是因为芝麻酱的营养成分远高于花生酱，芝麻酱和花生酱的区别有以下几点：\n\n1、看颜色——花生酱一般为浅米黄色，品质细腻，香气浓郁，无杂质。芝麻酱一般色泽为棕黄色或棕褐色，无杂质。\n\n2、闻气味——花生酱有浓郁的花生香气，芝麻酱有浓郁的芝麻香气。混合掺假的就会出现复合型香气，而且味道不纯。\n\n3、品味道——花生酱比芝麻酱的味道要甜一些。\n\n4、比质地——芝麻酱很容易就可以从瓶中自然倒出，而且细腻度更高，花生酱就相对差很多。\n\n5、亲水度——芝麻酱的亲水度要高于花生酱，加水后很容易就可以稀释，而花生酱相对较困难。\n\n\n芝麻酱除了大量的钙之外，芝麻酱还提供了十分丰富的钾、镁、铁、锌等矿物质，以及大量的维生素E、维生素B1、尼克酸，还有蛋白质和单不饱和脂肪酸，同时还含有强力的抗氧化成分芝麻酚。纯正的芝麻酱不但香味十足，还是我们膳食钙质的良好来源，每天吃30克芝麻酱(一大勺)就可补充330毫克左右的钙。\n\n花生酱跟芝麻酱相比，花生酱不含胡萝卜素，而且钙、铁、硒、等营养素的含量也远远低于芝麻酱，而钠的含量却比芝麻酱高出60倍左右，100g的花生酱钠含量2340mg,换算成盐大概5.8克。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 09:14:38","updateTime":"2021-05-05 09:14:38","isExist":null},{"id":1514,"question":"火锅调料什么配?","simplecontent":null,"content":"火锅文化现在深入人心，人们越来越爱吃火锅，对火锅的口味要求也越来越高，吃火锅时，必备的是调料小蝶，但是怎样调出一碗好吃的调料呢 却是不简单的事情。小编以前每次吃火锅时，调料基本是看到哪个放哪个，好不好吃，完全凭运气!今天就让我们一起来学学如何调火锅调料小碟吧！\n\n吃火锅什么调料好吃\n\n每次吃火锅，总是看到别人随手调出好吃的蘸料，为什么自己却调不好?到底吃火锅什么调料好吃呢？别着急，小编帮你整理了10种火锅蘸料的秘方，辣的、不辣的，一定有你喜欢的那一款!\n\n1、香辣蘸料\n\n花生酱+麻油+辣椒油+生抽+香醋+香菜+糖\n\n在涮火锅时，如果吃白菜、菠菜、生菜以及菌菇类等素菜，香辣蘸料与它们更相配。\n\n2、原味蘸料\n\n芝麻酱+麻油+蒜泥\n\n第二种火锅蘸料则比较香，简单却十分味美，适合口味比较清淡的人。\n\n3、腐乳麻酱\n\n腐乳+芝麻酱+辣椒油+芝麻+香菜\n\n爱吃腐乳的胖友们，这种蘸料比较咸香，在吃鱼肉、虾肉等原味海鲜的时候，蘸它吃超级棒!\n\n4、鲜香姜汁\n\n麻油+姜末+生抽+香醋+糖\n\n吃火锅时，像鱼虾蟹类等原味的海鲜，也可以选择鲜香姜汁作为蘸料，海鲜的味道也会另有一番滋味。\n\n5、蒜香蚝油\n\n蒜泥+蚝油+料酒+胡椒粉\n\n有些吃货不吃辣，这一种蘸料就只是蒜的辣味，把牛肉、羊肉、大虾等蘸它吃，最美味不过啦~\n\n吃火锅什么调料好吃\n\n6、麻酱蘸料\n\n芝麻酱+麻油+生抽+香醋+糖+葱花+姜末\n\n第六种是大众经典款蘸料，适合大多数人，而且各种荤菜、素菜都可以。\n\n7、牛肉辣酱\n\n麻油+牛肉酱+辣椒酱+花生碎+芝麻\n\n牛肉辣酱非常鲜香，下面条吃也超级过瘾!曾经在火锅店里，看到有吃货甚至把牛肉酱当作一种小菜直接吃!\n\n8、沙茶辣酱\n\n沙茶酱+辣椒碎+葱花+蒜泥+老抽\n\n对于重口味的胖友，沙茶辣酱绝对可以满足你的需求。如果吃清淡一些的汤底，或者是有些菜味道不够好，用沙茶辣酱可以提升品味。\n\n9、蒜泥辣酱\n\n蒜泥+生抽+红油辣酱+香醋\n\n这个蘸料就比较辣了，不过，在吃火锅的时候，无论是吃肉类，还是菠菜、白菜等一些蔬菜，蒜泥辣酱都很适合。\n\n10、终极辣酱\n\n辣椒油+辣椒粉+麻椒粉+小米椒+香菜+葱花\n\n如果其他的蘸酱，已经满足不了你对辣的需求，那就把几种辣味调料放在一块儿，再加上香菜、葱花和麻椒来丰富口感，嗜辣的吃货们赶紧开动吧!\n\n吃火锅什么调料好吃\n\n吃火锅什么调料好吃，相信大家也都心中有","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 09:13:55","updateTime":"2021-05-05 09:13:55","isExist":null},{"id":1513,"question":"牛肉火锅用什么调料好吃?","simplecontent":null,"content":"（一）棒棒料：芝麻酱（或花生酱）先用冷开水边下边调成厚糊状，再加入已炒好的红油四川辣酱、生抽王、糖、醋、味精、葱姜末、麻油后再调成薄糊状即成。\n此种调料富有四川辣味，适用于多种主料如粉丝、豆腐、素菜等。\n（二）蚝油料：锅内放入植物油，加蒜泥炒香，再放入蚝油继续炒透，后加入少许料酒、糖、味精、胡椒粉拌匀即可。\n此种调料适合不吃辣的人，宜配蘸羊肉、牛肉、活虾、蛤蜊、河蚌等活鲜主料。\n（三）红油蒜泥料：四川辣酱炒出红油，加入少许糖、生抽王、醋、味精、生蒜泥一起拌调即成。\n此种调料辣中带香，适合多种人的口味，宜配鱼、腰、肫、鸡片、粉丝、白菜、菠菜、豆腐等主料。\n（四）怪味料：红油辣酱、葱姜末、糖、醋、酱油、花椒粉、味精等。\n制法先将红椒切细，在锅内加入植物油烧到九成热，放入辣椒细末炒透倒入碗内，然后加入其他配料一起拌和成糊状即成。\n此种调料以辣为主，兼有多种口味，适合配各种荤素菜等主料都可。\n（五）乳腐汁料：先将红乳腐压碎，加入少许冷开水拌成薄糊状，再用洁纱布沥去渣子，放入锅内烧开加入少许糖、味精、白酒、盐拌匀即可。\n此种调料适配鱼、虾之类的主料为佳。\n（六）麻酱料：芝麻酱（或花生酱）用冷开水边下边调成厚糊状，加入少许糖、盐、生抽王、胡椒粉、味精、葱白头、香菜末、麻油拌和即成。\n此种调料适合配蛤蜊、鱼片、腰片和各种河鲜。\n（七）姜汁料：姜去皮切成末，加入醋、绵白糖、生抽王、盐、味精，再加冷开水拌匀即可。\n此种调料适合配鱼、虾、蛏子、海螺、蚧等。\n（八）麻酱油料：生抽王加入少量冷开水与糖、味精、麻油拌和即成。此料适配各种火锅。\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 09:12:11","updateTime":"2021-05-05 09:12:11","isExist":null},{"id":1512,"question":"胸透的姿势?","simplecontent":null,"content":"双手叉腰，正面贴近机器","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 07:25:14","updateTime":"2021-05-05 07:25:14","isExist":null},{"id":1511,"question":"避孕和备孕词语?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 07:08:02","updateTime":"2021-05-05 07:08:02","isExist":null},{"id":1510,"question":"体检的外科和内科体检什么?","simplecontent":null,"content":"外科是检查手和脚和腰灵活，内科是用听诊器听心","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 07:01:20","updateTime":"2021-05-05 07:01:20","isExist":null},{"id":1509,"question":"胸透有辐射吗?","simplecontent":null,"content":"胸透就是x线胸部透视，是利用x线穿透过胸部后，实时观察肺部、心脏、肋骨、胸膜、胸壁、纵隔、支气管等部位的病变。\n\n胸透的费用一般都比较低，一般是十元左右。做胸透的时候不需要空腹；在做胸透前要摘除身上可能会影响到透视结果的首饰及随身物品；冬季做胸透时尽量要脱掉厚的外套，女性患者的文胸最好也脱下，以免金属扣件影响到透视的结果。\n\n婴幼儿、儿童、孕妇和哺乳期妇女尽量不要做胸透，因为胸透是有辐射的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:55:41","updateTime":"2021-05-05 06:55:41","isExist":null},{"id":1508,"question":"b超有辐射吗?","simplecontent":null,"content":"B超是没有辐射的，它是利用超声波反射的原理制作的。超声波就像普通的声音一样，只是音调非常高，对人体没有影响。所以体检做B超是没有辐射的，要积极配合医生的指示。一般女性在怀孕期间孕检，可以忽略不计对宝宝造成的不良影响。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:54:45","updateTime":"2021-05-05 06:54:45","isExist":null},{"id":1507,"question":"体检注意事项?","simplecontent":null,"content":"病情分析：入职体检的注意事项1、体检前保持充足睡眠。2、验血时要求空腹，不要吃早餐也不要喝水。3、体检前三天以清淡食物为宜，辛辣食物尽量不吃，不熬夜、不喝酒。4、体检时记得带上身份证原件和彩照。入职体检通常不会过于仔细，不能成为衡量身体是否健康的唯一标准。在入职体检过后，应该找一个时间去医院做一个全方位的全身体检，这样才能更全面、更细致、更深入的了解自己当下的身体情况，及早发现隐疾，对症下药，防患未然。?那些还不了解的朋友，现在应该对入职体检项目有了一些了解。入职体检项目不多，不够细致，很难全方位检测出身体状况。入职体检相对全身体检，可能更显表面化一些。朋友们不可将入职体检的报告作为唯一衡量自己是否健康的准则。在入职体检之后，抽空做一次全身体检，及早发现病症才是做体检的最终目的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:54:04","updateTime":"2021-05-05 06:54:04","isExist":null},{"id":1506,"question":"体检常规项目?","simplecontent":null,"content":"病情分析：你好，根据您的描述，一般情况下入职体检就需要抽血检查肝肾功能，B超检查肝胆，有的时候会检查胸透，这个要根据各地公司规定的。建议最好是按规定进行检查，平时一定要注意休息，饮食要清淡，多喝水，多吃青菜和水果，不要吃生冷辛辣的食物，有情况要及时去医院处理。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:53:50","updateTime":"2021-05-05 06:53:50","isExist":null},{"id":1505,"question":"入职体检可以不做胸透吗?","simplecontent":null,"content":"入职体检可以不做胸透，如果有特别的需求，比如有的人需要在3个月内或者近期有怀孕的计划，可以申请不做胸透。入职体检通常的检查项目包括内科、外科、眼科、耳鼻喉科、口腔科等的检查以及抽血的项目，抽血的项目通常的包括血常规、肝功能、肾功能、血糖、血脂、微量元素、乙肝五项、丙肝抗体、戊肝抗体、甲肝抗体等。入职体检的其他的项目包括心电图的检查以及彩超的检查，彩超的检查通常检查的是肝、胆、胰、脾、肾、甲状腺、心脏、颈动脉。入职体检可以不做胸透，但是一定要和工作人员充分的沟通，说明原因。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:53:17","updateTime":"2021-05-05 06:53:17","isExist":null},{"id":1504,"question":"放射体检?","simplecontent":null,"content":"病情分析：您好，拍X光片和胸透不能做。只要是接触放射性的检查都不能做的。胸透由于放射线剂量比较大，怀孕早期不宜做，肝胆B超检查对怀孕没有影响，其它加做的项目如心电图等也对怀孕没有影响，可以做。体检是体格检查的简称，指通过医学手段和方法对受检者的身体检查。是医疗的诊断环节，是针对症状或疾病及其相关因素的诊察手段。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:50:49","updateTime":"2021-05-05 06:50:49","isExist":null},{"id":1503,"question":"体检怀孕哪些不用做?","simplecontent":null,"content":"胸透，x片","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:50:26","updateTime":"2021-05-05 06:50:26","isExist":null},{"id":1502,"question":"体检项目?","simplecontent":null,"content":"血常规和肝功能，内科，外科，五官，视力，胸透，身高体重，血压，(额外的尿常规，心电图)","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:48:45","updateTime":"2021-05-05 06:48:45","isExist":null},{"id":1501,"question":"近视恢复?","simplecontent":null,"content":"每天训练2小时，大概半年可以好了","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:30:09","updateTime":"2021-05-05 06:30:09","isExist":null},{"id":1500,"question":"深圳第三人民医院体检时间抽血最晚?","simplecontent":null,"content":"10点","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-05 06:23:59","updateTime":"2021-05-05 06:23:59","isExist":null},{"id":1499,"question":"台风一般在几月份_广东一般几月份刮台风？","simplecontent":null,"content":"在五月份就有了，只是对于我国的影响比较弱，随着时间的推移，在7、8月份我国东南沿海陆续遭受不同台风的影响，强度不断加大，破坏性也随之加大。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:19:56","updateTime":"2021-05-04 21:19:56","isExist":null},{"id":1498,"question":"猫和狗哪个好?","simplecontent":null,"content":"本人不讨厌狗，但是我懒，又更喜欢猫，因此选择了猫咪~我的猫咪俩宝贝并不高冷~粘我粘的走哪跟哪~我给点回应就冲我喵喵叫~不用拉出去溜，省心的很~","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:14:06","updateTime":"2021-05-04 21:14:06","isExist":null},{"id":1497,"question":"养猫还是养狗好?","simplecontent":null,"content":"各位铲屎官们大家好啊，欢迎收看今天的COLA宠物，关注一下小编，拜托了！\n\n今天小编就聊聊关于养宠物的话题，究竟是养猫好还是养狗好呢？这个话题可是争论了很久很久，猫奴们纷纷扛起猫咪的大旗，表示养猫好，一定是猫咪好！狗奴们则不屑一顾，谁有我狗子可爱？小编整理了铲屎官们的观点，一起对比看看到底养猫好还是养狗好？\n\n\n1.卫生问题\n如果是养狗的话狗狗每天的排便就是一个问题，因为狗子很可能随地给你拉尿，我们都知道狗子的习惯就是保护领地然后撒尿为证，这儿，即使朕的江山。而且拉粑粑也比较多，臭味很大，必须要出去遛狗跟在狗子后面铲屎，我们不能破坏环境不是？而且狗子比猫更容易沾染味道，一周不洗澡，臭味扑鼻。\n\n猫猫就不一样了，一般猫咪家养的话一个月洗一次就够了，而且猫咪爱干净，懂得在固定猫砂里面拉尿，铲屎官只需要每天铲屎，然后出门的时候和垃圾一起丢掉就好啦。\n\n2.运动量\n狗子需要每天出去遛狗，基本要半小时以上，尤其是大型犬，运动量不够就会展现出超强的拆家能力，把你的家，拆的让你目瞪口呆。\n\n而猫咪呢，即使你不用带它出去也可以，有的猫咪一辈子没有出去过户外，天天呆在家里睡觉吃饭打豆豆，铲屎官闲了陪它玩玩，很省心。\n\n3.互动\n狗子比较忠诚，很喜欢和人互动，喜欢陪人玩耍，精力充沛，一招手就跑过来了，基本上随叫随到。而猫咪呢，就不一定了，完全取决于今天的心情，心情好了就会陪你玩，心情不好理都不理，仿佛你只是空气，完全不把你当回事儿。如果你喜欢有一个忠诚乖巧的玩伴，可以选择狗狗哦！\n\n4.空间\n养猫没有什么空间要求，猫咪运动量不像狗子，基本一个猫爬架就满足了。狗子的话如果你屋子太小就会觉得很憋屈，尤其是体型比较大的狗子，像金毛啊哈士奇啊萨摩什么的，最好还是房子大一点哦，免得这群主子精力充沛然后拆家。\n\n5.掉毛问题\n其实这方面来说猫狗都一样啦，都有掉毛的问题。我们甚至记得以前在某些博主视频中看到了猫咪或者狗狗的掉毛量一般都能成为另一只猫猫狗狗。大型犬的换季毛量很多很多，一抓一大把，几乎都能说是一年两次，一次半年，养狗的主子可以买撸狗手套哦，可以比较方便收集毛。\n\n猫咪的话，如果你是长毛猫的话也会有点尴尬，粘的衣服上到处都是，家里飞的飘的都是毛，小编也推荐那种撸猫手套哦，还是很方便的！无论猫猫狗狗掉毛，都需要经常打理的，不能偷懒哦！\n\n还有一些铲屎官想要圆满猫狗双全的梦想，认为选择什么的是小孩子才做的，我猫狗都要。但是不免有点困惑，猫咪狗狗能不能一起养？其实是可以的，很少家庭会出现猫狗不容的场面，虽然平时会打打闹闹，但是很多时候还是比较温馨的，所以不必担心哦！其实家里猫狗双全，真的很幸福！！新时代的人生赢家啦！\n\n说了这么多，喜欢猫还是喜欢狗呢？\n\n编辑：依依","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:13:24","updateTime":"2021-05-04 21:13:24","isExist":null},{"id":1496,"question":"养猫还是养狗好?","simplecontent":null,"content":"现在特别流行养宠物，尤其是一些大城市里面的人，几乎每家都会养一只宠物。现在最流行的宠物是什么？当然是宠物猫跟宠物狗了，在座的朋友们，你们更喜欢宠物猫还是更喜欢宠物狗？其实前段时间，就有一位网友问了小编这个一个问题，他问：是养猫好一点还是养狗好一点？相信出了这位网友之外，还有很多人都特别的纠结，不知道该养什么宠物好。不要紧，现在我们就一起去看一下养猫跟养狗的区别，到时候大家也就都知道自己该养什么宠物了。\n\n第一个区别：饭量\n养狗跟养猫所需要喂的食物的量是不同的。其实从体型我们也就可以看出，狗狗它吃的多，猫咪它吃的少。据统计，狗狗平均一个月能吃十来斤的食物，而一只猫咪，一个月也就只能吃三五斤的粮食而已。如果你想少花点钱买食物的话，那小编建议你还是养猫比较好，哪怕是小型犬泰迪、博美等，吃的也是要比猫咪多的。\n第二个区别：亲人程度\n猫咪跟狗狗的亲人程度是不同的。给大家举个例子，当你上了一天的班，下班回到家之后，狗狗它见到你是会直接扑过来的，它会对你特别的热情。而猫咪不同，你下班回到家之后可能都看不到猫咪的身影，就算你能找到猫咪，猫咪它可能都不会在意你，有些猫咪甚至会把你当成空气一样来对待。如果你能忍受这种态度的话，你当然是可以养猫的，但是如果你忍受不了这种态度的话，那你最好还是养狗比较好。\n第三个区别：性格\n\n狗狗的性格要更好一些，因为狗狗大都比较阳光比较活泼，就算是你做了伤害狗狗的事情，狗狗它也不会记你的仇，还是对你跟以前一样好。猫咪就不一样了，猫咪的性格比较冷，它根本不会管你是不是它的主人，如果你伤害了它的话，它甚至会当场发作，就算不当场发作，它以后也会找机会报仇的。\n第四个区别：好养程度\n\n说实话，狗狗是要比猫咪好养的，而且好养太多了。比如说，你养了一只狗，你只需要给它喂食，给它买个小窝，偶尔带着它出去走走就可以了。猫咪不同，你要是养了一只猫咪的话，你就得给它喂食、给它买猫玩具、给它买猫爬架，它想要什么了，你就得给它拿什么东西过来。所以说，养猫真的是一件很麻烦的事情，不是真心喜欢猫咪的人，是忍受不了这种麻烦的。\n第五个区别：对“抚摸”的态度不同\n\n狗狗它是非常渴望主人抚摸自己的，甚至当主人好久没有抚摸自己的时候，它自己都会冲到主人的面前，去跟主人要“抚摸”。而猫咪就不同了，猫咪特别不喜欢主人抚摸自己，当它看到主人要来抚摸自己的时候，它甚至会逃走。\n文中图片来源于网络，\n\n\n\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:13:07","updateTime":"2021-05-04 21:13:07","isExist":null},{"id":1495,"question":"联想创始人?","simplecontent":null,"content":"柳传志","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:10:10","updateTime":"2021-05-04 21:10:10","isExist":null},{"id":1494,"question":"小孩几岁学舞蹈比较好?","simplecontent":null,"content":"一般来说，3到5岁开始学习跳舞是最佳的年龄阶段了。这是因为3岁宝宝的活动能力以及身体协调能力都已经有了一定的成长，身体的柔韧性非常好，节奏感稍为差一点需要学习以及巩固但总体而言，此时宝宝已经具备了学习跳舞的基本能力，可以循序渐进开始培养他的跳舞能力。\n\n4岁以上比较好，5、6岁时练习基本功的效果最好。因为4岁以前幼儿的大肌肉群发育不完全，开始练功容易出现问题。要有好的基本功的话，最好不要超过9岁，最最迟也不好超过11岁。因为孩子的柔软度练习的最佳时间是9～11岁。过了之后，柔软度很不容易达到最好。如果仅仅是兴趣的话，什么时候开始学都没有关系了。4周岁开始学舞蹈是最科学的年龄。因为舞蹈毕竟是对身体能力的训练，太早进入舞蹈训练对于小孩子的肌肉和骨骼发育不利。\n\n作为业余爱好，儿童舞蹈对孩子的身体条件要求并不高，只要没有严重的身体缺陷，都可以学习。但是，舞蹈学习的很多益处不是短期就能体会到的，持之以恒才会得到更大收获。当然，如果专业学习舞蹈对于舞者身体比例、体重、身高等有比较严格的标准。父母可以根据孩子的实际情况，让孩子学习业余或专业的舞蹈。\n\n孩子开始学舞蹈，应该在7-10周岁之间，这时，孩子的身体骨骼发育比较完全。但是家长如果想让孩子对舞蹈产生兴趣，就应该从3-4周岁开始，在幼儿园时期可以锻炼一下幼儿对舞蹈的协调性，例如跳一些儿童舞蹈之类的，不太需要舞蹈基本功的练习。5周岁以后，就可以对孩子进行一些少儿舞蹈基础培训。\n\n5—7周岁的时候，属于学舞蹈的初期时段，不要过分地让孩子做劈腿、下弯腰等高难度的动作。采用积极鼓励的方式，让他们对着镜子看着自己做动作，培养孩子对舞蹈的兴趣。这样培训2年左右，就可以要求孩子的基本功专业一点了。\n\n如果孩子天赋条件突出，很喜爱舞蹈，有意愿进行专业的舞蹈学习的话，建议等到10岁以上为最佳。因为专业舞蹈训练强度大、时间长，对于10岁以下孩子的生长发育是十分不利的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:08:05","updateTime":"2021-05-04 21:08:05","isExist":null},{"id":1493,"question":"水果可以放冰箱几天?","simplecontent":null,"content":"一般水果放冰箱冷藏保存3—7天，硬皮水果可以保存半个月到20天。最好用保鲜袋铺些面巾纸密封，在4度以下保存，保存时间过长丢失水汽味道也不好了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:05:49","updateTime":"2021-05-04 21:05:49","isExist":null},{"id":1492,"question":"青菜放冰箱能保存几天？","simplecontent":null,"content":"青菜放冰箱能保存5天，没烂，可以吃,不过没那么营养。\n\n将蔬菜清洗后再放入冰箱会更好。这是因为蔬菜中有不少泥土，其中暗藏着寄生虫虫卵和其他的细菌，买回蔬菜直接放入冰箱的做法不卫生。\n\n最好在清洗过后用塑料袋包扎后放入冰箱，这样也可以节省下一次烹饪的时间。\n\n但需要注意的是，洗完蔬菜后最好控干水分后再放入冰箱，以免多余的水分导致蔬菜腐烂。\n\n新鲜蔬菜最好放冰箱里不要超过3天。\n\n虽然蔬菜放在冰箱里看起来会很新鲜，但其中的营养成份一样会流失，所以都是要尽快食用，最好在两三天内。\n\n\n\n展开剩余59% ","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:05:11","updateTime":"2021-05-04 21:05:11","isExist":null},{"id":1491,"question":"食物保存在冰箱可以放多久?","simplecontent":null,"content":"(1)蛋品。\n新鲜带壳蛋，可冷藏4-5个星期，熟蛋可冷藏一星期。\n(2)奶制品。\n牛油，冷藏2个星期，冷冻9个月;牛奶，冷藏5天;酸奶，冷藏7-10天。\n(3)肉类。\n牛肉、冷藏1-2天，冷冻3个月;肉排，冷藏2-3天，冷冻9个月;香肠，冷藏2-3天，冷冻2个月;鸡肉，冷藏2-3天，冷冻1年;鱼肉，冷藏1-2天，冷冻3个月至半年。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:04:25","updateTime":"2021-05-04 21:04:25","isExist":null},{"id":1490,"question":"为什么冰箱里的东西也会发霉？","simplecontent":null,"content":"霉变是食物中的微生物生长到一定数量后的宏观表现，我们用肉眼可以直接观察到的现象，但其实在食物中，即使是新鲜的刚烹饪完的食物中也存在肉眼看不见的微生物。把食物放在冰箱中储存是因为低温可以限制微生物的生长活性和速度，但不代表微生物会死亡，所以如果放置的时间长了，微生物的数量繁殖的足够多了就会表现出霉斑。这是从量变到质变的过程。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 21:03:41","updateTime":"2021-05-04 21:03:41","isExist":null},{"id":1489,"question":"什么牌子的酱油好?","simplecontent":null,"content":"1.海天\n始于1955年,专业的调味品生产和营销企业,产品涵盖酱油/蚝油/酱/醋/料酒/调味汁/鸡精/鸡粉/腐乳等几大系列百余品种,佛山市海天调味食品股份有限公司...\n2.李锦记LeeKumKee\n李锦记始创于1888年，香港百年中式酱料品牌，以工业化生产蚝油起家的酱料品牌。李锦记旗下产品种类丰富齐全，主要生产蚝油、酱油、辣椒酱、方便酱及XO酱等中式酱料产...\n3.厨邦\n起源于清末民初的香山酱园，专业生产调味品的现代化大型技术企业，是我国调味品行业的主要品牌企业之一。厨邦年产调味品可达50万吨，产品涵盖酱油、鸡粉（精）、酱类、蚝...\n4.欣和Shinho\n创立于1992年,专业生产和销售酱油类/干调类/蚝油类/蜂蜜类等调味品的食品企业,旗下拥有六月鲜/葱伴侣/味达美等系列产品,烟台欣和企业食品有限公司...\n5.味事达Master\n始于1956年,集调味品研发/生产/销售和售后服务于一体的食品企业,其极鲜酱油颇具声誉,亨氏(中国)调味食品有限公司...\n6.加加JIAJIA\n创建于1996年,上市公司,集酱油/食醋/鸡精等调味品的研发/生产/营销于一体的综合性企业,加加食品集团股份有限公司...\n7.KIKKOMAN万字\n源于17世纪日本,全球知名的食品佐料专业制造商,酱油行业知名品牌,大型跨国集团公司,龟甲万株式会社...\n8.东古\n始创于1850年,主要从事面豉/酱油等系列产品的研发/生产/加工/销售的企业,鹤山市东古调味食品有限公司...\n9.千禾味业\n始于1996年,国内知名酱油品牌,专业酿造高品质健康酱油/食醋的大型上市调味品公司,千禾味业食品股份有限公司...\n10.鲁花\n鲁花为食用油行业知名品牌，以食用油为主导，横跨食用油、调味品、米面等多个行业的大型农业产业化集团。其鲁花橄榄油选用来自西班牙的优质橄榄果，以“取之于民，用之于民...","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:46:24","updateTime":"2021-05-04 20:46:24","isExist":null},{"id":1488,"question":"潮汕人的海石花?","simplecontent":null,"content":"这是海石花泡水后的样子，据说4两海石花就能制作3-4斤海石花冻。\n\n\n\n海石花是一种绿色冷饮，切丝后调加少许地瓜粉、蔗糖煮熟，凝结后刨成小条浸于冷水中挑卖。\n\n\n\n海石花具有退热、凉肠、凉血等药用价值。取赤菜少许用开水冲泡或煮沸加点糖即可食用。\n\n\n\n还可以把海石花直接冲水泡着喝，润滑爽口、稠而不腻，不仅清凉止渴，而且可防治赤痢和肠热病。夏秋季节酒席之末用它当甜品，还可醒酒。\n\n\n\n一般在街上看到有人拉出来卖是这样的，从一大锅舀出来，有海石花果冻还有一些甜水，清甜爽口。\n\n\n\n\n\n偶尔也会看到这样的，做成像薯粉条一样，没有任何汤汁，撒些白糖粉就可以食啦，味道是一样的，只是吃法不一样。\n\n\n\n\n\n看起来是不是很诱人，想不想要来一碗呀，清热解毒，还可以美容护肤呢，因为富含胶质，对女生的皮肤很好哦，这种天气吃了皮肤水润润的呢\n\n\n\n接下来小编分享一款炼奶西米海石花制作方法，很简单的哟~\n\n\n\n\n\n把草洗干净，因为是海草，难免会有细沙，洗洗洗洗洗！！！\n\n这是洗好的草，这时候可以下锅了。\n\n\n\n为了方便，用了个网袋，把草装里面了，下了半锅水。\n\n\n\n啦啦啦啦！配角出场啦！下点白醋。不用很多，大概下个10毫升就可以了。\n\n\n\n开煮，用高压锅，大火煮开。高压锅 发出声音后，转小火煮个10分钟。关掉。煮出来的水是这样的。\n\n\n\n然后。 把水倒出来放一边。草继续煮第2次，不用下醋了，就是再加水继续煮。大火煮开，小火煮10分钟！一共煮了三次。最后把三次煮出来的水混在一起。倒进碗里放凉就好。这就是刚才那把草煮出来的~\n\n\n\n大概两三小时吧，它就会凝固了，可以放进冰箱冰镇一下，等凝固后用保鲜膜包住碗。然后放进冰箱。感觉会变得更爽口点~\n\n\n\n最后，想怎么吃它就怎么吃。这里是加了西米露和炼奶，冰镇后更好吃，还在犹豫什么~你也赶紧来一碗吧！！！\n\n斌说潮汕私房茶，仅剩最后30罐\n\n首赞\n+1\n平台声明\n\nSoul：深度定位你的灵魂","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:44:24","updateTime":"2021-05-04 20:44:24","isExist":null},{"id":1487,"question":"海石花是什么?","simplecontent":null,"content":"海石花是热带海藻中的一种，是从普通珊瑚草中精选而出的枝条较大的黑褐色海藻。主要产于南中国海无污染海域，常年水温保持在25-32度之间，是营养价值很高的一种海藻，含有多种天然高贵的、珍贵的营养成份，含有丰富的维生素矿物质、纤维质、天然优质胶原蛋白、海中酵素等营养素。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:43:49","updateTime":"2021-05-04 20:43:49","isExist":null},{"id":1486,"question":"教小孩子作业是很麻烦的?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:42:24","updateTime":"2021-05-04 20:42:24","isExist":null},{"id":1485,"question":"两年照片对比区别?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:40:42","updateTime":"2021-05-04 20:40:42","isExist":null},{"id":1484,"question":"何鸿燊为什么叫赌王?","simplecontent":null,"content":"何鸿燊娶了四个老婆，子女多达17位，像是现在活跃在娱乐圈的何猷君，是他和四太梁安琪的儿子。英俊潇洒还智商在线，粉丝无数!\n\n何鸿燊，从一个白手起家的毛头小子成长为拥有澳门赌场独家专营权的商业巨头，其产业养活了\n澳门近三分之一的人口。因此被称为「赌王」。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:29:33","updateTime":"2021-05-04 20:29:33","isExist":null},{"id":1483,"question":"何鸿燊为什么叫赌王？为何可以有4个女人？","simplecontent":null,"content":"规矩是民不告，官不究。大太太是正妻，已经过世，两个人是自由恋爱，当时赌王还是个穷小子。娶这个妻子，对他人生帮助很大。后来出了车祸，长年卧床。二太太跟赌王也是自由恋爱，她是正式的妾，也有法律文书的（因为那时作为殖民地的香港延续了部分的清朝法律）。她的子女目前是最有出息的，几乎个个都是国外高校毕业，著名的何超琼（李嘉欣老公的前妻，大美女，米高梅赌场的老板）、何超仪（香港艺人，家里这么有钱还要进演艺圈，够有个性吧！）都是她生的。三太太是大太太病床边的长年看护，是大太太为了打击二太太，要求他娶的，所以在伦理上有优势（几个太太里她最丑，子女出息最差。三房经常上娱乐版的，目前有个青春美貌的何超莲，有兴趣可以看看照片）。\n\n四太太没有证。她是二太太出国陪孩子读书期间，跟赌王认识并且好上的（因为此二房的人挺讨厌她的）。后来跟的年头长了，而且也有了子女，所以大家都认她了。她生的子女年纪都比较小，但很聪明，很会读书，其中有一个还拿过香港的学生理科奖项。去年还是今年，有一个上牛津了（同时被麻省理工学院录取，但赌王觉得家里还没有出过牛津的学生，要求他上牛津。）因为现在所有人都不是正妻，所以没有人有绝对的优势。相互之间还经常要把对方的合理性拿出来撕逼的。娶四个老婆，还是要付出代价的，比如说赌王每年过生日的时候，还要合理安排时间，一顿饭要分成四次来吃。赌王家的争产大战已经拉开序幕，这是本世纪最引人遐想的一场好戏。\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:28:07","updateTime":"2021-05-04 20:28:07","isExist":null},{"id":1482,"question":"澳门赌王?","simplecontent":null,"content":"赌王何鸿燊读音 - shen","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:25:48","updateTime":"2021-05-04 20:25:48","isExist":null},{"id":1481,"question":"后背长痘是肝不好吗?","simplecontent":null,"content":"背部长痘与肝脏没有太大的关系。背部出现长痘痘最常见是毛囊炎，跟金黄色葡萄球菌感染也有关系。如果后背出汗比较多，不注意勤换衣物，很容易导致背部","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:23:33","updateTime":"2021-05-04 20:23:33","isExist":null},{"id":1480,"question":"肝不好?","simplecontent":null,"content":"皮肤失去光泽，弹性变差，面色晦暗，有时候会出现面色发黑等症状，还会出现全身乏力、厌油腻、纳差、恶心、呕吐以及上腹部胀痛或隐痛，有些患者出现黄疸，还会出现全身皮肤瘙痒，全身皮肤及巩膜发黄，小便发黄的症状。如果肝脏出现肝硬化，有可能还会出现肝掌，蜘蛛痣等症状，如果出现以上的这些表现，建议及时去检查上腹部CT或腹部彩超以及肝功能等检查，明确肝脏的疾病\n\n1、容易腹泻\n\n平时生活中，如果发现自己总有腹泻的情况出现，那很有可能是肝脏功能下降了。因为肝脏本身可以促进胆汁的排泄，帮助食物的消化。如果肝脏功能下降明显，此时分泌的胆汁量不足，而肝脏功能下降的人没有注意饮食方面的问题，有可能就会导致腹泻这种情况的出现，这些都和肝脏功能下降有关。\n\n2、容易疲劳乏力\n\n在功能肝脏功能下降的过程中，此时患者可能会有身体疲劳乏力的情况出现。如果短时间内总是感觉到自己身体疲劳，乏力感明显，很有可能是肝脏功能下降，身体吸收营养物质能力降低引起。如果没有足够的营养供给，此时人体就会出现乏力，疲劳的情况。\n\n\n3、胃口下降明显\n\n胃口下降也是肝脏功能受损的一种表现，因为肝脏是消化食物的重要器官，一般进食高脂肪的食物后，需要肝脏分泌出胆汁进行消化。如果肝脏功能下降，此时食物消化受到影响，因此人也会有胃口下降的明显表现。如果经常存在这种情况，还需及时提高肝脏功能了。\n\n4、经常失眠\n\n在肝脏功能下降的过程中，此时患者可能会有失眠的情况出现。在夜间睡觉过程中，通常容易出现潮热出汗、口干等情况，因此就会有失眠的情况发生。如果短时间内总是受到失眠的困扰，就需要警惕起来，可能就和肝脏功能下降有关。\n\n\n5、出现口臭症状\n\n在肝脏功能下降的过程中，很多人都会有口臭的情况出现。因为肝脏功能下降，此时身体消化食物，吸收营养物质的能力均会受到影响。因此，口腔就容易滋生细菌，或者有胆汁返流的情况出现，此时患者可能会有口臭的明显表现。特别是在早上起床之后明显口臭，可能就和肝脏功能下降有关。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:22:43","updateTime":"2021-05-04 20:22:43","isExist":null},{"id":1479,"question":"恋爱应该听父母的意见吗?","simplecontent":null,"content":"可以听，但是心里的声音更重要\n\n我认为，恋爱和结婚都是自己的事，和谁交往、怎么交往都完全是自己的自由，父母及其他人都是不能干涉的，但是他们有权也可以对你的恋情、婚姻，提出他们的建议和看法，至于采不采纳那得由你自己来做决定。\n\n父母对你的恋爱或婚姻提出一些与你不同的看法，甚至反对你的恋爱和婚姻，你也可能有时会为此对他们非常不爽、甚至和他们争吵、闹掰、断绝关系。\n\n但是，你自己也要冷静一下并同理思考一下，因为天底下可能没有多少父母，是不希望自己的儿女过得幸福的，他们都是婚恋过来人，他们提出自己的看法，可能确实有他们的理由，有他们自己的角度，看到了你自己看不到的地方。\n\n你自己也需要跳出自己的角度理性分析，换位思考一下他们的理由是否真的有道理，他们说的事情是否真的会影响到你的人生幸福，而不要在自己的角度钻牛角尖。\n\n对大多数人而言，能绝对包容你、无条件对你好、愿意全力支持帮助你、真正爱你的人，往往只有自己的父母至亲，而不是你的配偶和朋友。\n\n人一辈子可能会有很多个朋友、很多个恋人、多个配偶伴侣，但父母至亲却是唯一的，不要为了一些生命中的过客，伤害了自己最亲近的人，越是亲近之人带来的伤害越大。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:20:54","updateTime":"2021-05-04 20:20:54","isExist":null},{"id":1478,"question":"肝病如何治疗?","simplecontent":null,"content":"菊花枸杞决明子茶包正品男清热去火熬夜牛蒡根","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:16:34","updateTime":"2021-05-04 20:16:34","isExist":null},{"id":1477,"question":"肝发生病变前，身体可能会发出16个暗号?","simplecontent":null,"content":"1、皮肤干燥、瘙痒难耐——肝阴不足，肝脏对皮肤的滋养不够；\n2、情绪不稳、烦躁易怒——肝阳上亢导致控制不好情绪，做事没耐心，爱发脾气；\n3、黑眼圈明显、熊猫眼——气血不畅，新陈代谢减慢，毒素垃圾堆积于眼周血管；\n4、后背粉刺多，长痘痘——肝功能降低，黄体荷尔蒙增多，皮脂分泌增加。\n5、经常放屁、肚子胀气——肝郁气滞，肠道蠕动变慢，食物发酵气体增多；\n6、眼睛干涩、时而发痒——肝血不足，眼睛需要肝血的滋养，肝血对眼睛滋养不足所致；\n7、头发出油，爱掉头发——肝经湿热，肝脏对脂肪的代谢减弱，大量脂肪被转化为体脂储存；\n8、口苦口臭、舌苔厚腻——浊气上逆，代谢紊乱，氮气、氨等代谢废物无法及时排出体外；\n9、失眠多梦、半夜早醒——肝火旺盛，肝脏表面植物神经异常兴奋导致入睡困难；\n10、小便浑浊、黄如浓茶——木火刑金，尿液中尿胆红素过高；\n11、指甲竖纹，无小月牙——肝功能衰弱，肢体末端血液循环受阻；\n12、手掌发红，按压白色——雌性激素分泌紊乱，皮下黏膜小动脉扩张；\n13、面色晦暗，长黄褐斑——肝毒堆积，内分泌失调，雌性激素含量升高；\n14、伤口不易愈合、出血——肝脏分泌凝血因子减少，常见于流鼻血、牙龈出血。\n15、巩膜发黄，有红血丝——肝阴亏损，血液中胆红素含量升高；","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:15:38","updateTime":"2021-05-04 20:15:38","isExist":null},{"id":1476,"question":"后背粉刺多?","simplecontent":null,"content":"后背粉刺多，长痘痘——肝功能降低，黄体荷尔蒙增多，皮脂分泌增加。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:14:28","updateTime":"2021-05-04 20:14:28","isExist":null},{"id":1475,"question":"知乎如何复制内容?","simplecontent":null,"content":"首先光标选中需要保存的那段文字，右键菜单选择“打印”\n在microsoft print to pdf打印预览中再选择那段文字，复制粘贴到TXT文档中即可。大功告成！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:07:36","updateTime":"2021-05-04 20:07:36","isExist":null},{"id":1474,"question":"家住一楼，蚊子特别多，有什么有效的驱蚊方式？","simplecontent":null,"content":"可以的话先给一楼安装一个窗纱吧，防止蚊子大批量飞进来，这个就像是挂了一个蚊帐。一楼本身就比较阴暗，积水、污水、草丛这些四周的环境都是相对于楼上最恶劣的，这样子的环境灰常适合蚊子的生活，方便的话就给一楼四周处理一下环境卫生，但是已经达到完美，就当做我没有说，然后我要表示一下我对你的同情。\n\n在门口挂一些艾草驱蚊。艾草带有特殊气味，可以驱赶蚊虫，老家奶奶就会给家里面准备很多，特别是到了端午节，在门上插艾草也是我家里面的一个习俗，带有驱邪、招百福的寓意。蚊子尤其多的话，可以将艾草煮水拖地可以大面积，大范围的犴蚊子，这样子气味散发的也会比较快。艾草烟熏也是一个很好的方法，闻着艾草的香气，烦躁的心情也会平静下来，很多时候在村子里面驱蚊都是大把大把点燃艾草拿来烟熏蚊子这样子的方式就会比较痛苦。\n\n\n灯，蚊香，蚊香液，拍子\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:05:38","updateTime":"2021-05-04 20:05:38","isExist":null},{"id":1473,"question":"澳门有什么好玩的地方?","simplecontent":null,"content":"大三巴牌坊\n澳门渔人码头\n澳门旅游塔\n玫瑰堂\n龙环葡韵住宅式博物馆\n议事亭前地\n官也街","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 20:00:33","updateTime":"2021-05-04 20:00:33","isExist":null},{"id":1472,"question":"香港的电视剧常出现的地方?","simplecontent":null,"content":"「旺角」「油麻地」「九龙城寨」「五彩斑斓的灯牌」「小巴」「轮渡」「聚集着蛊惑仔的大排档」「卧底天台」「长长的阶梯」","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:58:49","updateTime":"2021-05-04 19:58:49","isExist":null},{"id":1471,"question":"香港为什么老是拍警匪片?","simplecontent":null,"content":"為什麼要現代呢？因為拍古裝武俠片的製作預算是很高的。現代片只要大家穿回正常的衣服， 走在現代的街道上面就能拍了，是一個經濟成本上的考量。真的很不浪漫哦，很不文藝。\n\n因为香港是亚洲最安全的城市，香港的警队是世界上著名的纪律部队，不仅战斗力强，而且还很廉洁，深得香港市民的爱戴。而且香港是发达城市，以前有些匪徒是很猖獗的，毕竟香港遍地黄金，所以香港警察的地位就突出了，拍警匪片也是为了顺应民意。\n\n很大一部分人是因为演员才看的\n既然能一直拍，就说明没有赔钱","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:58:04","updateTime":"2021-05-04 19:58:04","isExist":null},{"id":1470,"question":"香港有军队吗?","simplecontent":null,"content":"香港没有自己的军队。自1997年7月1日中国收回香港主权以后，香港防务由中国人民解放军驻香港部队（下称“驻港部队”）管理。\n\n驻港部队从1993年初开始组建，1996年1月28日组建完毕，1997年7月1日0时进驻香港，取代驻港英军接管香港防务，驻港军费均由中央人民政府负担。\n\n驻港部队为三军合成部队，因此装备有包括轻武器，轮式装甲车、直升机以及轻型作战舰艇的各类武器。2009年至2013年，驻港部队主力战斗的装备进行了部分更新及更换：\n\n1、陆军的快速机动、火力突击及特种侦察等能力明显地增强了，同时扩充编制了装甲、特种作战、工兵和防化分队；\n\n2、海军的近海防卫及对空防护能力亦有进一步的提升，更新及更换了一批舰艇，包括056型导弹护卫舰等；\n\n3、空军更新及更换的警戒雷达、直-8运输搜救型直升机、直-8指挥侦察型直升机、直-9武装直升机和防空武器〈包括防空导弹〉系统等亦增强了对香港空域的警戒防护能力。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:54:36","updateTime":"2021-05-04 19:54:36","isExist":null},{"id":1469,"question":"香港的飞虎队的战斗力有多强呢？","simplecontent":null,"content":"看你怎么想了，首先你要明白，香港飞虎队是特警部队。他再强也和军方的特种部队有比较大的差距的。但是飞虎队在特警部队里的实力绝对是最顶尖那一个序列的，这得益于上世纪70年代开始到世纪末香港回归为止的这段期间内，香港作为经济发达水路交通便利，香港本地地形复杂等等因素。是黑道牛鬼蛇神们喜爱的地方。所以飞虎队有很多实战机会，而且成绩斐然。要知道，见过血的兵和没见过血的兵，即使基础素质一样，实际表现也差得远。\n\n范畴就不一样，特种兵是军事力量，香港飞虎队是警察力量，从训练、装备、要求上香港飞虎队都比特种兵差的太远了。\n　　要想成为有“军中精英”之称的特种部队中的一员并非易事，各国在挑选特种部队队员时都有极为严格的标准，中国特种部队当然也不例外，一般讲主要有以下几个方面：\n　　忠诚不二：特种部队是执行政治任务的武装集团，对国家、对民族的忠诚是成为特种部队队员的首要条件。这也是特种兵在作战中具有不畏艰苦、不怕牺牲和英勇战斗精神的思想基础。有了它，队员才能在执行任务中时刻以国家利益为重。\n　　军中精英：正像人们所想像的那样，肩负特殊使命的特种部队队员都是百里挑一的军中精英，要想成为一名特种队员，首先必须成为一名具有职业军人素质的军人。中国特种队员几乎都是从最好的部队中精选出的尖子，在进入特种部队前，都有一定的部队生活经历，掌握必要的军事专业技能，有的甚至还有实战经验。当然，担负不同特种作战任务的特种部队在选拔队员时，也有自己的专业侧重。像媒体报道的中国“飞龙”特种大队，其成员绝大部分就是从侦察兵部队选调的。\n　　绝对强悍：从地理上看，波浪滔天的大海、峰峦耸立的高山、一望无际的平原、凶险莫测的密林都可能是特种作战战场；从气候上看，特种队员应能在酷暑严冬、风雪雷电中不分昼夜地连续作战；从作战技能上看，特种队员要能适应空降、机降、泅渡和徒涉等作战要求；从生存环境上看，特种队员要能在水断粮绝、孤立无援的环境中，通过利用当地资源确保生存。这些极度恶劣的生存环境，对特种队员的身体素质提出了很高的要求，要求必须具有强壮的体魄、坚强的毅力和持久的忍耐力，能最大限度的适应不同的作战环境 。\n　　智力高超：特种部队成员往往在敌人心脏地带实施短促而高风险的作战，面临着常人难以想像的军事和心理压力，没有过人的智力就难以顺利遂行作战任务。一名特战队员不仅要学会射击、格斗、刺杀和爆破技术，学会照相、窃听、通信、泅渡、滑雪、攀登和跳伞技术，学会警戒、侦察、搜索、捕俘、营救等技战术技能，还要掌握一些疾病的防治，可食野生动植物的辨别知识，掌握预定作战地域语言、风俗等，这些没有较好的文化水平和理解力是难以实现的。\n　　以上只是入门条件，进入后将面临更严酷的训练，面临层层淘汰的可能。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:52:14","updateTime":"2021-05-04 19:52:14","isExist":null},{"id":1468,"question":"香港的飞虎队如何运作?","simplecontent":null,"content":"分为ab对队，a队是攻击，b队负责伏击，每对又分2个小组","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:47:36","updateTime":"2021-05-04 19:47:36","isExist":null},{"id":1467,"question":"香港的飞虎队如何?","simplecontent":null,"content":"而这种高成功率和严酷的训练是分不开的，由于香港没有兵役制的存在，所以首先这些队员都是从警队里面选出，而这些警员在之前就接受过一定的训练，入选飞虎队之后，他们还将进行为期9个月的专业训练，在这9个月的时间里，是完全与外界隔绝的，而且训练内容并不比各国特种部队训练的内容差。\n\n而且这支队伍内的分工也是非常明确的，包括特别任务连总部，也就是主官及指挥部门；行政组。最主要的任务是进行情报分析；训练组及支援组，主要是教官队伍；行动组，分别是攻击组和狙击组，任务就不用说了，执行者就是他们；除了这些还有医疗组，通讯组，军械组，运输组等辅助部门。\n\n不过，曾经辉煌的飞虎队，现在却面临一个尴尬的境地，那就是出现了青黄不接的情形，由于队员全部都是从警队选拔，但是那警队现在的情况来说，去年只聘用了300人，而今年更是只有两百人，而每年自然流失，退役的则达到500人，所以在青年警员较少的情况下，很多警队都不愿放人参加飞虎队，于是就出现了现在飞虎队青黄不接的情形，很多40岁以上的人还在飞虎队中服役","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:45:48","updateTime":"2021-05-04 19:45:48","isExist":null},{"id":1466,"question":"香港的保安局?","simplecontent":null,"content":"保安局（英语：Security Bureau，SB）是中华人民共和国香港特别行政区政府的决策局之一，专责维持治安、出入境、海关管制、协助罪犯改过自新、协助滥用药物者戒毒，以及提供可靠的消防及紧急救援服务等。保安局及其辖下各支纪律部队的首要任务，是确保香港继续成为一个安稳、太平的城市。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 19:43:40","updateTime":"2021-05-04 19:43:40","isExist":null},{"id":1465,"question":"联想电脑如何进入bios?","simplecontent":null,"content":"f1","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 17:47:51","updateTime":"2021-05-04 17:47:51","isExist":null},{"id":1464,"question":"联想电脑关机后鼠标还亮?","simplecontent":null,"content":"一、联想电脑usb供电导致\n\n1、如果是小新AIR13等电脑，观察鼠标是否接在右侧关机充电标志的USB接口，如果是此接口，因为该接口具有关机充电功能，在关机状态下该接口也会供电，所以鼠标灯会亮，如要关闭此功能，则需要在BIOS中关闭关机充电的功能，操作方法如下：\n\n1）笔记本电脑在关机状态下按Novo键，按下方向键移动到BIOS SETUP的选项，敲击回车键进入BIOS；\n\n\n\n2）在BIOS中按右方向键，移动到configuration的选项。找到always on usb的选项敲击回车，选择Disable的选项敲击回车，然后按Fn+f10选YES保存重启，然后在关机断开电源测试鼠标灯是否熄灭。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 17:47:37","updateTime":"2021-05-04 17:47:37","isExist":null},{"id":1463,"question":"当组长作用?","simplecontent":null,"content":"当组长是承担懂吗\n\n是的，大家说白了是合作关系，不是谁管理谁的关系，尤其是能力和想法都差不多时","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 16:04:25","updateTime":"2021-05-04 16:04:25","isExist":null},{"id":1462,"question":"疫苗作用?","simplecontent":null,"content":"印度在2020年已基本实现了全民群体免疫\n但遗憾的是进化的病毒将直接绕过抗体杀死寄主\n抗体包括天然抗体和疫苗抗体\n有效的方法只有严格实行隔离管理，彻底切断传染源\n\n如果辉瑞都不管用，其它的就是生理盐水了。现在公认辉瑞效果好但副作用大，连辉瑞都这样了[左捂脸]\n\n注射疫苗不一定产生抗体，而且病毒不断变异，所以不管是哪国的疫苗对印度的新冠病毒都不见得有用，所以就事论事，不崇洋但也理智","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 16:02:30","updateTime":"2021-05-04 16:02:30","isExist":null},{"id":1461,"question":"带头盔有用吗?","simplecontent":null,"content":"带头盔是对的，防风沙，要说什么交通安全，纯属虚构，不管是自已摔倒，或利碰倒，都不会保险。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 15:12:27","updateTime":"2021-05-04 15:12:27","isExist":null},{"id":1460,"question":"广东哪里吃辣?","simplecontent":null,"content":"吃辣椒在粤北，其它广东人吃微辣可以","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 14:03:19","updateTime":"2021-05-04 14:03:19","isExist":null},{"id":1459,"question":"潮汕人会吃辣吗？不吃","simplecontent":null,"content":"不吃","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 14:02:24","updateTime":"2021-05-04 14:02:24","isExist":null},{"id":1458,"question":"讨厌吃辣的城市?","simplecontent":null,"content":"1.潮州。潮州是广东发展历史很悠久的城市之一，在对广东的社会区域发展上看来，它的城市发展也是出现了许多很不一样的发展轨迹和文化，而饮食文化则是其中很有代表性的一种，像是其很知名的潮州菜则更是知名，也是独具岭南文化特色，而这个菜系也是不喜好吃辣的，这在对潮州人民而言，也更是比较讨厌吃辣的。\n\n2.中山。中山也是广东的一个很讨厌吃辣的城市，因为在其城市的饮食文化中，像是中山菜的特色也是很明显，而中山菜的特点是讲究色、香、味、形，在口感上的要求是嫩滑或爽脆，所以在吃辣的程度上说也都是不怎么突出的，所以在对这个城市发展上看来，本地的市民其实对于吃辣是不怎么热衷的。\n\n1.广州。要是说广东的饮食文化最集中的城市，就莫过于是广州了，广州以其独特的广州菜而闻名全国，而这个菜系最大的特点就是少用辣椒等辛辣性作料，也不会大咸大甜，以其丰富精细的选材和清淡的口味来获得更多人的喜爱，所以在广州的城市内，其城市的人还是不喜好吃辣的，也是当地的饮食文化特色。\n\n当然，也不是说每一个城市都必须要吃辣，或者是任何一个不喜欢吃辣的城市都不吃辣，它们只是在某些菜品中是放入了辣椒，但也绝对不是主要的味道，也更是与重庆等城市的吃辣口味是完全不一样的，而形成这些特点的文化也是跟当地的城市是有关的，这也更是能看出其城市的一些不同之处。\n图片来源于网络，如有侵权，请联系删除。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 14:01:33","updateTime":"2021-05-04 14:01:33","isExist":null},{"id":1457,"question":"吃桔子上火吗?","simplecontent":null,"content":"病情分析：少吃，适量的吃是没事的，但是多吃桔子会上火。桔子具有健脾顺气的作用，适用于脾胃虚弱的各类人群，但是并不适用于体内郁热的人群，主要是由于桔子性温，吃的量多的话会引起体内积热，引起口干易渴、口腔溃疡等上火现象。桔子也可以止咳化痰，适用于痰湿咳嗽者，但是如果是痰色黄质粘者不适用，会加重肺热，引起鼻咽干燥甚至流鼻血或者是咯血。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 14:00:04","updateTime":"2021-05-04 14:00:04","isExist":null},{"id":1456,"question":"吃橘子上火吗?","simplecontent":null,"content":"橘子吃多了会上火。上火之后可表现为舌头起泡、甚至口腔溃疡、嘴角发炎、脸上起痘痘、舌苔大部分都是黄的。因为橘子是热性的食物，所以在吃橘子的时候不要贪吃，要有量的限制。橘子内含有丰富的维生素，而且橘子具有很强的药用功能，是生活中非常重要的水果，尤其是老年人、急慢性支气管炎及心血管病患者的上乘果品，特别对经常服用降压药的老年患者有补钾的功能。桔子虽然非常好吃，又含有丰富的营养价值和药用价值，但是却不能贪吃。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 13:59:44","updateTime":"2021-05-04 13:59:44","isExist":null},{"id":1455,"question":"潮州5老黄皮功效?","simplecontent":null,"content":"黄皮肤黄皮肤有清除胸腹胀痛、生津止渴、解渴、疏肝理气、镇咳的作用;苦涩味偏重的黄皮肤，实际效果尤佳。有黄皮肤的苦涩味，能够刺激性胆液代谢，促消化，使消化吸收功能畅旺;此类苦涩味质，也有清脑功效，又能松驰胸腔肌肉紧张，撑胀情况获得降低或清除，黄皮肤往往能疏肝理气、镇咳，便是因为它具备松驰胸腔肌肉紧张功效，使吸气畅顺，沒有阻碍问题，咳嗽当然终止。\n\n黄皮肤也有较高的功效与作用，根、叶、果和種子等都可以当药，具备助消化健胃消食、行气健脾胃、理气止疼等作用，俗有“饥食荔枝，饱食黄皮肤”之说。外果皮能消风肿，去疳积;種子能冶疗疝气、蜈蚣咬伤和小孩头疮。黄皮肤種子含有油脂，油的密度达到42%，为优质的润滑液。黄皮肤做为一种高品质的新鲜水果，其果子除生鲜外，还行生产加工成效冻、苹果酱、果脯、果饼及清爽饮品等或盐渍、蜜饯。因此 ，在民俗黄皮肤有着“果中珍宝”之称。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 13:59:07","updateTime":"2021-05-04 13:59:07","isExist":null},{"id":1454,"question":"潮州老药桔作用?","simplecontent":null,"content":"胃痛腹胀肚痛肝气郁结喘咳嗽有痰多消化不良胸闷气短膈噎本产品也能作醒酒的用处.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 13:58:08","updateTime":"2021-05-04 13:58:08","isExist":null},{"id":1453,"question":"潮州老香黄作用?","simplecontent":null,"content":"老香黄：广东潮汕凉果老香黄（也称老香橼、佛手香黄），是用佛手果、佛手柑（也称五指柑、蜜罗柑或福禄柑）的果子腌渍而成的，因其功效与作用明显深受红人亲睐并闻名全球。 佛手果为广东省正宗中药材“十大广药”之一，展翠 汕头佛手果为广东省名果之一。\n\n2、药理学作用 中药材香黄的功能： 1.身体排毒，减轻肾衰竭。 2.健脾开胃，促进消化。 3.塑身美体，当减肥产品。 4.作身体之外穴位敷贴消化吸收科学研究用。 5.改进机体细胞外液,升清降浊。 6.作调味品。 7治痢疾。 8.抗菌剂。 9.治亚急性风湿性关节炎。 10.护肤品。 11.特色美食时尚潮流。 12.治放环后月经不调。 13.治黄水疮。 使用方法：干吃或取小量水冲食用。 储藏：长期性储存，越长越好，不适合冷冻。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 13:52:53","updateTime":"2021-05-04 13:52:53","isExist":null},{"id":1452,"question":"潮州三宝作用?","simplecontent":null,"content":"潮州三宝分别是老香橼，老药桔、黄皮鼓，是潮州凉果特产中的极品，在潮汕地区的凉果界中，具有举足轻重的地位，深受潮人的青睐并享誉海内外，故被誉为潮州三宝。\n\n老香橼又称老香黄、佛手果，是潮汕地区一种凉果，是潮州三宝之首，更是一种药膳类制品。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 13:51:16","updateTime":"2021-05-04 13:51:16","isExist":null},{"id":1451,"question":"钵钵鸡如何?","simplecontent":null,"content":"味道还是可以的，我之所以去叶婆婆钵钵鸡，更喜欢的是他们的藤椒味，那个荤素搭配，做出来的菜品，味道甭提有多好啦。你可以吃吃看，就知道我没有骗你了。\n\n我非常喜欢吃这个，然后我个人认为钵钵鸡的味道就是非常好的那种味道，然后它有酸酸辣辣的，上面还浇着一些比较好吃的一些酱汁在上面，然后如果你喜欢的话，你也可以去尝试着吃一下这个，如果你不喜欢吃辣的话，你就不要尝试这个东西了。\n\n为啥吃钵钵鸡\n\n肯定好啊，串串香就是四川人创造的，而且特别是那家叫屋头串串香的，味道很不错，服务也很好！\n\n味道特别好\n\n串串香为什么在这两年很火？针对这个问题，小编专门请教了圈内某超级吃货，以下内容为其个人看法，供大家讨论交流。串串香源于火锅，食材也和火锅差不多，种类丰富。一般比较经典的食材有牛肉、毛肚、土豆、鱿鱼、香肠、五花肉、排骨、藕片、火腿肠、海带、莴笋、香菇花菜等等。\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 13:48:17","updateTime":"2021-05-04 13:48:17","isExist":null},{"id":1450,"question":"榴莲有多少瓣?","simplecontent":null,"content":"除了大家说的闻味道辨别是否成熟，还有就是看外观辨别果肉大小：\n生长正常的榴莲是5瓣肉，也就是从外观上看为5囊隆起，所以买的时候可以数瓣数；\n如果不是完整的鼓起，往往外观长得不圆，有凹陷进去的部分，那么这囊就发育不完整，可能里面只有半囊肉。\n所以挑选的时候看形状～不要长得歪七扭八；看饱满度～每囊越胖肉越大～\n\n还有很少见的据说有6瓣～我目前也还没见过哈哈～\n\n跟买彩票一样中奖","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 10:04:33","updateTime":"2021-05-04 10:04:33","isExist":null},{"id":1449,"question":"榴莲和牛油果?","simplecontent":null,"content":"气味刚开始是难以接受的 吃了一些之后会被榴莲的软糯香甜所吸引 然后会喜欢上榴莲的香味（气味） 喜欢上是有个过程 一旦喜欢上你会觉得榴莲是名副其实的水果之王 牛油果的接受过程和榴莲很相似","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 10:00:29","updateTime":"2021-05-04 10:00:29","isExist":null},{"id":1448,"question":"榴莲味道?","simplecontent":null,"content":"榴莲刚入口是一种热带气息的甜香，咬下去时糯软的果肉，丝丝凉凉，像奶油一样。细细品尝，甜熟的气息夹杂着奶香溢满口腔和呼吸道，果肉虽然是凉的，但却仿佛弥漫出温暖的午后阳光。吞下果肉，唇齿留香，好似刚刚咽下的不是榴莲，而是一块浓缩的幸福。。。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:56:27","updateTime":"2021-05-04 09:56:27","isExist":null},{"id":1447,"question":"榴莲种类?","simplecontent":null,"content":"1、猫山王榴莲\n猫山王属于马来西亚的特有品种，榴莲中的战斗机。果皮大多都是绿色的，且底部有五角星标记。果肉色泽金黄明亮，香甜细腻，纤维少，味道超级浓郁，口感很饱满。果核也很小。虽然猫山王果肉味道有些微苦，但味觉方面层次过度很自然。整体来说绝对是王者级别。\n2、托曼尼\n托曼尼又叫玲珑榴莲，号称“榴莲中的爱马仕”，它是被认为最接近马来西亚猫山王的一个品种，有猫山王80%的味道，除了核很大，其他都很棒。相对于猫山王来讲，性价比很高。所以它又享有“泰国长柄猫山王”的称号。其主要特点在于：个头小，皮厚，核大。不过它不用开裂就可食用，果肉颜色偏黄，口感香甜软糯。\n3、干尧\n干尧是马来西亚极品猫山王榴莲嫁接过去的，整体口感不如猫山王，但是也比较有特点。有猫山王60%的味道，但核不算大，不少人觉得比托曼尼更好吃，因为肉多一点。\n4、甲仑\n甲仑是泰国的初代榴莲品种之一，而且没有经过太多的现代化改良。因此甲仑的口感是比较浓郁的，就很纯粹的榴莲味道。榴莲整体味道比较狂野~有猫山王40%的味道，核很大。虽然比金枕好吃很多，但是同时期有托曼尼、干尧可选择，就没必要买甲仑啦，除非是什么品种都想尝尝。\n当然，甲仑有个优点，就是很大概率能有6房肉，一般都有5房，我们这里挑选的话也能至少保证4房。\n5、金枕\n金枕就是目前来说大家吃到的最多的品种了。果壳呈黄色，刺比较尖。核小肉多，而且肉也很甜。刚开始吃觉得有异味，但是继续吃下去就会觉得很清凉甜蜜，回味也比较好。只吃过金枕的，会觉得很好吃，但是吃过干尧、托曼尼之后，就觉得金枕不好吃啦。\n优点是果期很长，其他榴莲基本1个月就过季了，金枕至少半年。所以有其他榴莲时，建议先吃其他榴莲，其他榴莲过季之后，再吃金枕。\n6、青尼\nChanee（青尼）榴莲个头是蒸笼型，果实通常都是中间肥大、头细底平，果肉瓣槽比较深，果蒂比较大，而且短。果肉呈现深黄色，比较像杏色。口感方面，青尼的肉质也很细腻，且比较甜比较润。核小。产量很多~\n7、长柄\n它的得名源于它比其他榴莲品种的果柄都比较长。整个榴莲也是以圆形为主，果肉和果核也很圆。皮是青绿色的，刺很多很密。果核大，果肉少，但不影响它细腻的口感和香浓的味道。\n8、苏丹王\n马来西亚比较大众的榴莲，味道不如猫山王浓郁。苏丹王榴莲口感很绵密，而且肉很厚，但是核也大。产量也多，目前来说蛋糕甜品比较喜欢用这种榴莲。\n呐，想吃什么样的榴莲，","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:54:53","updateTime":"2021-05-04 09:54:53","isExist":null},{"id":1446,"question":"榴莲种类?","simplecontent":null,"content":"我有一客户买了我五年榴莲了、还不是批发、自己吃、一个月猫山王三箱、一年买榴莲花十万、有矿了不起","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:53:50","updateTime":"2021-05-04 09:53:50","isExist":null},{"id":1445,"question":"榴莲价格?","simplecontent":null,"content":"榴莲肉买一瓣就得四五十，但是买一个五斤的榴莲差不多一百块钱，比如我今天在外卖点的就花了90，然后打开是完整的五大瓣。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:53:14","updateTime":"2021-05-04 09:53:14","isExist":null},{"id":1444,"question":"如何选择牛肉?","simplecontent":null,"content":"1、选择肥瘦相间，稍带点筋的牛肉，这样炖煮出来的牛肉才好吃。\n\n2、牛肉事先冷水浸泡1小时左右，一方面去腥，另一方面泡出血水后的肉口感更好。\n\n3、牛肉冷水入锅，加料酒，姜片，焯水。捞出后清水洗净，可去腥，也可以减少牛肉水份流失。\n\n4、选择砂锅，可以让牛肉更入味，也可以保持牛肉营养不流失。\n\n5、炖煮时除常备材料外，可加些啤酒，山楂片，陈皮，可以加速软化牛肉的肉质。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:33:17","updateTime":"2021-05-04 09:33:17","isExist":null},{"id":1443,"question":"耗烙?","simplecontent":null,"content":"粿条汤是一种非常隐忍的小食，起初外地客会觉得这个味道有点偏淡，但实际上，正是这种克制的隐忍突显了食材的本真口感。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:29:57","updateTime":"2021-05-04 09:29:57","isExist":null},{"id":1442,"question":"潮汕美食话?","simplecontent":null,"content":"食在广州，味在潮汕”","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:28:13","updateTime":"2021-05-04 09:28:13","isExist":null},{"id":1441,"question":"潮州美食?","simplecontent":null,"content":"\n1、潮州牛肉火锅\n\n很多外地朋友，了解潮州美食，都是从潮州牛肉火锅和砂锅粥开始，无不对其鲜嫩可口赞不绝口。那么潮州牛肉火锅究竟好在哪里？\n\n\n一是采用最新鲜的嫩牛肉。一般都是刚屠宰好3小时内的肉，还保留牛肉的鲜嫩水性，如果使用僵直期的牛肉味道就不好。\n\n\n二是选牛与育肥。精选2年左右的黄牛，牛太小则没有牛肉味，太大则肉太老；外地牛一般运至潮州后都会用一段时间育肥后再屠宰，这样可以使牛肉肥瘦相间，有丰富的大理石花纹，保持绝佳口感。\n\n\n三是屠宰方式。潮州牛肉采用传统的击晕方式，使肌肉保持柔软不收缩。相比流水作业的电晕宰杀导致肌肉收缩味道更好。\n\n\n四是牛肉供应与产业链。潮汕地区整条牛肉产业链非常成熟，屠宰场一般都是配合火锅店营业时间，早上屠宰供应中午，下午屠宰供应晚上，其他地方一般都是一天一屠宰，很难满足时间快的要求。加上潮州火锅店多，消费量足够大，只用好肉、新鲜的肉，不用注水肉，从而一直保证良好口碑。\n\n\n五是刀工。潮州牛肉是不冷冻的，故只能用人工手切，这也是和其他地方牛肉店最大区别所在。而且潮州人一般都是按部位切片，不同部位厚薄切法都不一样，对刀工技术要求比较高，才能切出最细嫩可口的牛肉。\n\n\n六是汤底。潮州牛肉火锅的汤底，一般都用牛骨加南姜熬制的清汤，再配几块白萝卜或苦瓜。为什么汤底会导致潮州牛肉火锅与外地区别呢，因为熬汤用的南姜对去除腥味有较大帮助，是潮州独有的食材。\n\n\n潮州牛肉火锅，正是由于对每个环节都做到精益求精，所以才使得其能够独步于天下，扬名于海内外，为众多食客所深深喜爱。\n\n\n2、潮州牛肉丸\n\n比起潮州牛肉火锅知名度，潮州牛肉丸有过之而无不及，以弹劲胜似乒乓球而闻名天下。分为牛肉丸和牛筋丸，牛肉丸肉质鲜嫩，口感润滑；牛筋丸则更有嚼劲，口感更香脆。\n\n\n一是采用手工捶打牛肉。最传统的潮州牛肉丸做法，使用牛的后腿肉，去筋后切块，然后用2把3斤重铁锤不断捶打直至肉块变为肉浆。不用刀切碎是潮州牛肉丸和外地最大区别，也正因为没有切断牛肉纤维，并通过不断捶打使之延展折叠，才使得潮州牛肉丸弹性出众。\n\n\n二是牛肉使用比例要求。正宗潮州牛肉丸，必须包含90%以上手打牛肉，剩下10","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:27:04","updateTime":"2021-05-04 09:27:04","isExist":null},{"id":1440,"question":"茂名高铁票定价为什么这么贵？","simplecontent":null,"content":"广--京0.408元/公里，广--茂0.632元/公里。难道我们茂名好欺负？\n\n第一、粤西地区基本上都是平原，修建铁路征收农田，赔偿较大。\n第二、粤西地区河流众多，立桥墩于水流之中建设难度可想而知。\n第三、该条铁路规格很高，沿线尽量是做到一市一县一景，而且基本沿海走，在一定程度上起到观光列车的作用。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:23:24","updateTime":"2021-05-04 09:23:24","isExist":null},{"id":1439,"question":"茂名什么时候成立?","simplecontent":null,"content":"茂名市地处广东省西南部，全市陆地总面积11459平方公里。1958年设立茂名市，1983年实行市管县体制，现辖茂南区、茂港区及电白县，并代管高州市、化州市和信宜市。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:19:30","updateTime":"2021-05-04 09:19:30","isExist":null},{"id":1438,"question":"选夫人历史?","simplecontent":null,"content":"家乡区县： 广东省高州市\n简介\n\n     冼夫人（512年—602年），原名冼珍，南北朝时期高凉郡（今广东高州）南越族人，为南越族杰出的女领袖和军事家。南梁宋康郡夫人、陈朝石龙太夫人、隋谯国夫人，谥诚敬夫人。\n\n     冼氏世代均为南越族首领。冼夫人生于梁武帝初年。嫁与南梁宋康郡公高凉太守冯宝，辅佐冯宝平息了广东原住民与中原人士的冲突，促进了中原民系和南越民系的和解，并引海南岛各族部落归附梁朝，并开始设立崖州。使海南岛划入中国版图。\n\n历史功绩\n\n     南梁侯景之乱时，冼夫人率兵击破高州刺史李迁仕，并与都督陈霸先联合。陈朝初，镇压广州刺史欧阳纥之乱，获册封为中郎将、石龙太夫人，仪仗比照刺史。陈朝建立后，冼夫人即率众归附陈朝。冼夫人保境安民，被南越族尊为“圣母”。\n\n     隋文帝出兵南下灭陈后，岭南陈朝守将徐璒并未归附隋朝。总管韦洸被徐璒所阻。于岭下停滞不前，无法进入岭南。源陈主帅杨广命令陈后主致书夫人，使其归隋，为了证明是真的，还把冼夫人曾经献给陈朝皇帝的扶南犀杖及陈后主的兵符拿给她看，冼夫人见到信及物件，始确信陈已灭亡，便派孙子冯魂迎韦洸岭南，各地才闻风归附。从此岭南地区全部归隋朝管辖。\n\n     不久番禺人王仲宣谋反，越族首领皆响应。将韦洸于岭南首府南海，并派兵进屯衡山，断绝中原和岭南的交通。夫人便派遣孙子冯暄领兵救援韦洸。由于冯暄与叛军将领陈佛智素来友善，故意停留不解南海之围。夫人知道之后，派人将冯暄监禁。改派另一名孙子冯盎讨伐陈佛智，击败陈佛智并将其斩首。再进兵至南海，与鹿愿军会合，共败王仲宣。是役，夫人亲自被甲，率领军队，保护隋文帝使节裴矩招抚岭南各州。使苍梧郡南越族首领陈坦、冈州冯岑翁、梁化邓马头、藤州李光略、罗州庞靖等皆来参谒裴矩，归顺随朝。隋文帝大表赞赏，拜冯盎为高州刺史，并赦免冯暄，拜为罗州刺史。追赠冯宝为广州总管、谯国公，册封夫人为谯国夫人。将宋康邑再次授予冯仆的遗孀洗氏(冼夫人亡夫冯宝原为南梁宋康郡公，夫人本为南梁宋康郡夫人。隋代修改地方体制，不设宋康郡)。让谯国夫人开创幕府，可以自由任命长史及下属官员，给予印章(有实权。)，可以调动南越族各部及岭南六州兵马，若遇有机急，可便宜行事。\n\n     不久，番州总管赵讷贪污，苛待人民，使南越诸俚獠叛乱。夫人派遣长史张融向朝廷报告，提出安抚之法，并告发赵讷罪状。隋文帝派戈调查后，找到赵讷","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:16:25","updateTime":"2021-05-04 09:16:25","isExist":null},{"id":1437,"question":"高州方言?","simplecontent":null,"content":"高州方言指的是高州地区使用的方言，包括高州白话和高州涯话。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:14:21","updateTime":"2021-05-04 09:14:21","isExist":null},{"id":1436,"question":"高州方言?","simplecontent":null,"content":"\n\n在高州，有一种......\n\n\n有一种男装摩托车叫\n\n半公旱\n\n\n\n有一种螳螂叫\n\n马浪杠\n\n\n\n有一种毛毛虫叫\n\n鸡毛难\n\n\n\n有一种三轮车叫\n\n三脚鸡\n\n\n\n有一种大拇指叫\n\n手公头\n\n\n\n有一种蝉叫\n\n朕谢\n\n\n\n有一种螃蟹叫\n\n办强\n\n\n\n有一种不知道叫\n\n矛day道\n\n\n\n有一种讨厌叫\n\n好VE\n\n\n\n有一种去玩叫\n\n去料\n\n\n\n有一种害怕叫\n\n好狂\n\n\n\n有一种吃惊叫\n\n矛啪\n\n\n\n有一种看下叫\n\n睇个\n\n\n\n有一种妇人叫\n\n方乸\n\n\n\n有一种婴儿叫\n\n阿哈\n\n\n\n有一种小孩叫\n\n细侬\n\n\n\n有一种回家叫\n\n回屋\n\n\n\n有一种叫你叫\n\nL你\n\n\n\n有一种上学叫\n\n回书坊\n\n\n\n有一种吃早餐叫\n\n食朝\n\n\n\n有一种吃午饭叫\n\n食晏\n\n\n\n有一种吃晚饭叫\n\n食晚\n\n\n\n有一种姑妈叫\n\n杯奶\n\n\n\n有一种舅父叫\n\n旧爹\n\n\n\n有一种舅母叫\n\n旧奶\n\n\n\n有一种说谎叫\n\n车大炮\n\n\n\n有一种本事叫\n\n巴闭\n\n\n\n有一种全部叫\n\n冚棚冷\n\n\n\n有一种臭男人叫\n\n麻笠佬\n\n\n\n有一种蜈蚣叫\n\n白缩\n\n\n\n有一种完了的感叹叫\n\n屙贺\n\n\n\n有一种眼镜蛇叫\n\n饭铲头\n\n\n\n有一种抬头叫\n\n颚高头\n\n\n\n有一种小偷叫\n\n白捻佬\n\n\n\n有一种傻人叫\n\n憨佬\n\n\n\n有一种蜥蜴叫\n\n雷公狗\n\n\n\n有一种壁虎叫\n\n偷盐蛇\n\n\n\n有一种嚣张叫\n\n串\n\n\n\n有一种犀利叫\n\n劲抽\n\n\n\n有一种蜘蛛叫\n\n琴罗\n\n\n\n有一种媒婆叫\n\n唛婆\n\n\n\n有一种赶集叫\n\n趁圩\n\n\n\n有一种中介叫\n\n98佬\n\n\n\n有一种洗澡叫\n\n冲凉\n\n\n\n有一种捉迷藏叫\n\n庵鸡猫\n\n\n\n有一种新郎叫\n\n新姑yeah\n\n\n\n有一种继母叫\n\n后抵乸\n\n\n\n有一种凄凉叫\n\n阴公\n\n\n\n有一种骂小孩的话叫\n\n粪箕秧\n\n\n\n有一种亲嘴叫\n\n嗲\n\n\n\n有一种肥肉叫做\n\n谋啤\n\n\n\n有一种煎饼叫\n\n锅那籺\n\n\n\n有一种医生叫\n\n黄绿佬\n\n\n\n有一种杨桃叫\n\n五捻\n\n\n\n有一种香蕉叫\n\n蕉子\n\n\n\n有一种橡胶树的果实叫\n\n胶银\n\n\n\n有一种煤油灯叫\n\n火水灯\n\n\n\n有一种等一下叫\n\n等阵\n\n\n\n有一种不跟你玩了叫\n\n矛捞你料嗲\n\n\n\n有一种明天叫\n\n敏日\n\n\n\n有一种昨天叫\n\n从日\n\n\n\n有一种胡说叫\n\n安个\n\n\n\n有一种屁股叫\n\n屎忽，也叫箩友\n\n\n\n有一种蜻蜓叫\n\n拧nei\n\n\n\n有一种蝴蝶叫\n\n白翼\n\n\n\n有一种包点叫\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:13:40","updateTime":"2021-05-04 09:13:40","isExist":null},{"id":1435,"question":"沙茶酱和粿条?","simplecontent":null,"content":"作为一个吃货来到潮州，当然要品尝地道的潮汕美食---牛肉火锅。潮汕美食最讲究“大味至淡”，吃出食材本身的味道，蘸上特调的沙茶酱，带给味蕾极致的享受。\n\n潮州人把用米粉做的食物叫粿，通俗一点就是河粉。粿的品种繁多，这些粿制作要求精细，风味独特。咸水粿，鼠曲粿，鱼丸粿条，菜头粿......与各种食材搭配成不同的粿，在潮州的大街小巷，你都可以找到粿的身影。此外，鱼饺，潮汕砂锅粥，卤鹅，鸭母捻.....","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:08:48","updateTime":"2021-05-04 09:08:48","isExist":null},{"id":1434,"question":"为什么牛丸不好吃?","simplecontent":null,"content":"牛肉丸好吃的秘诀在于将去除筋膜的瘦肉加工成泥状，瘦肉中的蛋白质成分就会变成具有弹牙口感的结构，牛肉丸打浆是最关键的步骤，把握好打浆的时间才能制作出美味的牛肉丸，潮庭食品正是其中的行业翘楚，由经验丰富的老师傅把控好的配方，统一生产，口感和味道都是一流。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:07:17","updateTime":"2021-05-04 09:07:17","isExist":null},{"id":1433,"question":"肥牛肉还是瘦牛肉好吃?","simplecontent":null,"content":"想要吃到鲜嫩的牛肉，除了肥牛，还有牛排，虽然牛排全是瘦肉，但是它没有完全煮熟，一般保持在五分熟和七分熟之间，因此嚼起来不太费劲。而且能用来做的肉，和平时所吃的牛肉属于不同部位的，牛排的脂肪含量会稍微高点儿，自然吃起来就比较顺滑了。所谓的肥瘦相间，不一定要看到明显的肥肉和瘦肉的纹路，只要所含脂肪足够了，就比较好嚼。牛排的品质划分，有一部分因素就是看脂肪含量有多少。大家平日里常听说的雪花牛排，其脂肪量应该算是最多的，价格也就稍贵一些。\n\n不过，不知道您是否留意过，我们所说的肥牛，差不多也只能在火锅店吃到，如果是去市场上购买牛肉的话，就很难碰到肥瘦相间的牛肉，而从小到大我们吃的牛肉，大多也并没有什么肥肉，都是瘦瘦的，而且口感也并不是那么细嫩，相反如果煮得不够烂，嚼起来还挺费劲的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:05:18","updateTime":"2021-05-04 09:05:18","isExist":null},{"id":1432,"question":"汕头的牛肉?","simplecontent":null,"content":"汕头牛肉的精细，主要表现在几方面：\n\n1.选料精细：潮汕自己不养牛，基本上牛从四川贵州一带进口，到本地后会再养一阵子，对性别、熟成度、是否交配过、肉质状况是否适合宰杀有严格的标准。（详见潮汕味道视频）\n\n2.切割精细：潮汕人对牛的分解，比之西方屠宰更加细分，许多部位别说洋人，没吃过的国人也是闻所未闻的，某些最好的部位一头牛有幸能找到的话可能也不超过3两。（详见晖哥博文和以下视频）\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:01:39","updateTime":"2021-05-04 09:01:39","isExist":null},{"id":1431,"question":"粤西发展?","simplecontent":null,"content":"修改一下答案吧，评论里也有人指出了，我就是粤西茂名的，茂名发展除了石油外，其他建设真的很一般，制造业不发达，很多都是靠农业生产的。\n\n所以说发展不起来的不止粤东，粤西（湛江、茂名、阳江）（一直以为云浮属于粤西后来网上搜索发现不是，暂且就把云浮放一边吧，虽然我还是觉得它属于粤西）也发展很一般，发展得好的就只有珠三角那一圈区域，都是依靠着广深和港澳在使劲的发展。\n\n粤西2018年才通了高铁，还是全国单公里计费最高的高铁，高速路每年春运都堵上24小时，能选的路很少，机场也只有湛江有个小的，广东也就十个机场，粤东占了4个了，而且李嘉诚对粤东的投资也很多，汕头还是特区，虽然看着贫困县粤东多一点，但粤东做生意的人多，对比起来已经很好了。\n\n当然粤北也好可怜，应该和粤西抱在一起哭。。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 09:00:34","updateTime":"2021-05-04 09:00:34","isExist":null},{"id":1430,"question":"梅州现在与潮汕地区相比是发达还是落后呢?","simplecontent":null,"content":"按照市级GDP排名：惠州>梅州>潮州\n按照人均GDP排名：惠州>潮州>梅州\n简而言之，惠州属于珠三角，经济发展最好；潮州梅州都属于粤东，潮州辖区小人口少但是位于沿海；梅州辖区大人口多但都是山区，因此潮州经济好于梅州。\n\n梅州地区和潮汕地区,最大的区别就是潮汕地区的交通方便很多,地势平坦,而且早年汕头就成为了中国的一个特区,因此在汕头的带动之下,整个潮汕地区的经济发展均比梅州好.梅州地区,由于告诉公路都是在新世纪后期才开始陆续建设,因此经济的发展普遍比较落后.并且梅州誉为：八山一水一分田,山多,地少,基本上没有什么工业,所以经济一致比较落后.这个也是情理之中啊……梅州主要的经营就靠“三高农业”“旅游业”,因此比较局限.希望我的回答对亲有帮助.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 06:41:18","updateTime":"2021-05-04 06:41:18","isExist":null},{"id":1429,"question":"漫步潮州古城必打卡地方——潮州八景?","simplecontent":null,"content":"【八景】湘桥春涨 鳄渡春风 西湖渔筏 韩祠橡木 金山古松 凤凰时雨 龙湫宝塔 北阁佛灯\n【新八景】滨江红棉 广场灯影 坊街亭韵 淡浮水墨 绿岛晴岚 桑浦禅泉 凤凰天池 柘林渔火\n更多可看潮汕三市通","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 06:33:25","updateTime":"2021-05-04 06:33:25","isExist":null},{"id":1428,"question":"潮州和梅州哪个更发达?","simplecontent":null,"content":"潮州之于梅州对比，就像惠州之于汕头，前者人均GDP都较后者高，人口流入强度比后者高不少。(之所以提惠州，是看到评论区有人吹惠州这个毒品全国闻名的城市)\n\n但在民生方面，诸如医疗教育等方面要逊不少。\n\n2017年末潮州户籍人口：275.79万，梅州户籍人口548.29万。梅州户籍人口是潮州的两倍。\n\n从民生的角度，综合医疗、教育、公交、公共图书馆来比较的话。\n\n二级及二级以上医院，潮州只有5家，梅州25家，潮州只有梅州的1/5。总的医院数量潮州只有28家，共6682个床位，梅州有46家，共18845个床位。医院床位数潮州大概只有梅州的1/3。换句话说，普通潮州人接收的大众医疗以及优质医疗资源都要远比梅州人少。\n\n\n\n在公交方面：\n\n潮州2018年公共汽车数量为不到400辆，全省最少。而梅州则有2357辆公共汽车运营。\n\n在城市垃圾处理方面：\n\n潮州2017年城市污水处理率只有81%，梅州城市污水处理有96.6%。\n\n潮州2017年城市生活垃圾无害化处理率77.3%，全省最低。而梅州则是100%。\n\n在教育方面：\n\n梅州已经全市获得广东省推进教育现代化先进市的称号，而潮州只有湘桥区获得。\n\n在公共图书馆方面：\n\n潮州只有4个，梅州10个。而潮州直到2018年才有一个国家一级图书馆，那就是潮州图书馆。但梅州现在已经有7个国家一级图书馆了。\n\n在公共设施民生方面，潮州可以说完全不是梅州的对手，甚至在广东他只是一个垫底的角色。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 06:31:54","updateTime":"2021-05-04 06:31:54","isExist":null},{"id":1427,"question":"潮汕交通?","simplecontent":null,"content":"交通上，潮汕有揭阳机场、潮汕高铁，在三市中心。到那有分别去三市的机场专线和高铁专线，位置询问下工作人员即可。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 06:30:20","updateTime":"2021-05-04 06:30:20","isExist":null},{"id":1426,"question":"甜和咸可以混合吃吗?","simplecontent":null,"content":"病情分析：如果是偶尔一次少吃的话，一般不会有太大影响，但如果是多吃过甜过咸食物，对肠胃等也是有一定影响，建议你还是要注意尽量减少。腹泻的话一般是消化不良或者是腹部受凉引起的症状。单纯只是甜食或者是咸的食物，彼此之间本身不存在配伍禁忌，当然与腹泻之间也没有必然关系这个不会直接引起腹泻。\n\n可以一起吃，但是不要过量。\n只要不超量摄入，甜咸混着吃对身体没有任何影响。不过最好还是先吃甜后吃咸，因为吃过甜味以后再吃别的味道，味蕾的反应会有所降低。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 06:29:14","updateTime":"2021-05-04 06:29:14","isExist":null},{"id":1425,"question":"香港好玩的地方?","simplecontent":null,"content":"香港的好玩众所周知，其中比较出名的景点就有很多，迪士尼、海洋公园、杜莎夫人蜡像馆等等都是。但如果你问哪一个景点最好，这个就难回答，因人而异，并且只要说出理由就算答案正确。倘若真要寻根问底，找出一个代表来，那我只能说，香港最好玩的地方就是香港本身。\n\n太平山\n旺角\n尖沙咀\n庙街\n铜锣湾","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-04 04:09:45","updateTime":"2021-05-04 04:09:45","isExist":null},{"id":1424,"question":"牛肉和如何降火?","simplecontent":null,"content":"牛肉和箩卜同炖可以减少温性,这么吃就不会上火了.","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:26:37","updateTime":"2021-05-03 18:26:37","isExist":null},{"id":1423,"question":"牛肉禁忌?","simplecontent":null,"content":"　　禁忌人群：1.感染性疾病、肝病、肾病的人慎食。2.黄牛肉为发物，患疮疥湿疹、痘痧、瘙痒者慎用。3.高胆固醇、高脂肪、老年人、儿童、消化力弱的人不宜多吃。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:26:09","updateTime":"2021-05-03 18:26:09","isExist":null},{"id":1422,"question":"牛肉会上火吗?","simplecontent":null,"content":"病情分析：少量食用牛肉不会引起上火的情况，但是牛肉属于温性，食用过量是会造成一些上火的症状。牛肉中富含丰富的氨基酸以及蛋白质，是不容易被人体吸收分解的，如果使用过量会增加胃肠道的负担，引起积食，消化不良，便秘等上火的症状。牛肉属于高营养的物质，相比较鸡肉，猪肉来说，牛肉的营养更符合人体的需要，对于人体肌肉的形成，有很好的促进作用，所以每天可以少量的食用牛肉，能够增强机体的免疫功能。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:24:00","updateTime":"2021-05-03 18:24:00","isExist":null},{"id":1421,"question":"粽子有哪些类型?","simplecontent":null,"content":"随着端午节的临近，很多人已经准备包粽子了，包粽子方法很简单，馅料却非常丰富，其中有肉粽，蜜枣粽子，豆沙粽子，咸蛋粽子，八宝粽子等，想要包出各种各样好吃的粽子，还真的要好好准备一番呢，为了包一次粽子，小编特意将包粽子需要的东西做了记录，然后一一对照买来，下面写出来供大家参考。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:23:12","updateTime":"2021-05-03 18:23:12","isExist":null},{"id":1420,"question":"香菜会上火吗?","simplecontent":null,"content":"香菜又名芫荽、胡荽，是香气浓郁的绿色蔬菜，其性温、味辛，含多种营养物质，一般人都能食用。另外，香菜有温热、发散的作用，应该适量食用，以免吃多了导致体内燥热之气过重。\n\n\n吃香菜是不会上火的，而且还能为人体补充丰富的营养物质，比如维生素B1，维生素B2，维生素C和胡萝卜素，以及钙，铁，磷，镁等矿物质成分。香菜中还含有挥发油成分，比如甘露糖醇，正葵醛，芳樟醇，壬醛等，具有开胃健脾，增进食欲的作用，能为人体的健康提供很多的帮助。但是中医认为，香菜性温，对于阳气盛的人，经常大量的食用香菜有出现上火的可能。所以建议适量食用香菜，有利于人体的健康。\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:21:47","updateTime":"2021-05-03 18:21:47","isExist":null},{"id":1419,"question":"香菜和芹菜哪个好?","simplecontent":null,"content":"芹菜属于凉性食物，吃芹菜不会上火，降血压、血脂。有治疗便秘的功效。还能减肥","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:20:52","updateTime":"2021-05-03 18:20:52","isExist":null},{"id":1418,"question":"祛湿食物?","simplecontent":null,"content":"导读:我们每个人体内或多或少都会有一些湿气，如果不重视，湿气会越积越多，引发很多健康问题，这时候我们可以通过食疗祛除体内的湿气，很多食物的祛湿效果都是很好的，茼蒿、青椒、苦瓜等蔬菜就可以帮助我们除湿，大家可以经常食用。\n\n很多人在夏天都感到体内湿气很重，因此要通过饮食及时清除体内的湿气，说到祛湿的食物，大家常用的有红豆、西瓜、薏苡仁、山药等，这些食物的祛湿效果确实很好，不过除了它们，有些蔬菜也有很好的除湿作用，下面推荐几种给大家食用。\n\n\n\n1、马齿苋\n\n马齿苋是一种常见的蔬菜，它的维生素含量是比较高的，此外还含有很多其它营养物质，经常食用不但可以祛湿，还可以清肠排毒、防治便秘。\n\n食用方法：凉拌马齿苋\n\n配料：马齿苋、麻油、醋、辣椒油、大蒜、盐。方法：把将马齿苋洗净放入沸水中焯2分钟，然后捞出放入凉水中降温，接着切段沥干水份放进碟子中，碗里加入醋、辣椒油、盐、麻油、大蒜伴匀，然后把调好的酱汁倒在马齿苋上。\n\n2、扁豆\n\n扁豆是属于一种常见的豆类食物，干的扁豆还是一种药材，它有健脾胃、除湿小水肿的作用，所以湿气重的人可以经常食用扁豆。\n\n推荐做法：炒扁豆\n\n材料：新鲜扁豆、大蒜、葱、生抽、盐。方法：扁豆洗净放进沸水里焯一下，锅里烧热油，加入扁豆用大火翻炒，然后洒一些水小火翻炒至熟，加入大蒜、葱、生抽、盐调味食用。\n\n3、冬瓜\n\n冬瓜是我们经常食用的蔬菜，它性寒凉，有清热、祛湿、消水肿的作用，适合大多数人食用，但体寒的人要谨慎食用。\n\n推荐食法：冬瓜排骨汤\n\n材料：冬瓜、排骨、生姜、盐。做法：冬瓜去皮切成大块，排骨洗净，生姜洗净切片，然后一起放进锅里加水炖汤，有很好的清热祛湿作用。\n\n体内湿气重的朋友可以经常食用这三种蔬菜，当然，除了这些，还有很多蔬菜也是可以帮我们祛湿的，如茼蒿、青椒、苦瓜等，湿气重的朋友必须清淡饮食，不要吃油腻的食物，这样才有利于祛湿，大家平时也可以通过运动排汗除湿，这个也是很有效的祛湿方法。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:18:43","updateTime":"2021-05-03 18:18:43","isExist":null},{"id":1417,"question":"哪些青菜祛湿?","simplecontent":null,"content":"病情分析：湿气重的蔬菜主要有青菜、南瓜、生菜、苦瓜、大白菜、黄瓜、酸笋、西兰花等；这些蔬菜会导致患者的湿气加重，容易引起头晕、头痛、四肢麻木或酸疼、肌肉酸疼、疲惫乏力、食欲不振、胸闷、腹胀等不适症状；对于湿气重的患者要避免油炸、烧烤、辛辣刺激等食物，不容易消化，会加重脾胃的负担，平时多吃薏米、红豆、绿豆、冬瓜等，具有祛湿的功效。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:17:51","updateTime":"2021-05-03 18:17:51","isExist":null},{"id":1416,"question":"吃什么去除体内湿气?","simplecontent":null,"content":"湿气重会造成很多的身体不适，很多人都喜欢去拔罐来解决体内湿气重的问题。今天小编给大家讲讲体内湿气重吃什么好、湿气重有哪些表现以及湿气重要注意什么。一起了解一下吧。\n湿气重吃什么好\n1、红豆\n红豆可增加肠胃蠕动,减少便秘,促进排尿。可在睡前将红豆用电锅炖煮浸泡一段时间,隔天将无糖的红豆汤水当开水喝,能有效促进排毒。\n2、燕麦\n燕麦可以滑肠和通便,促使粪便变大、水分增加,能有效地配合纤维,并且促进肠胃蠕动,发挥清肠通便排毒的功效。将蒸熟的燕麦打成汁当作饮料来喝是不错的选择,搅时也可加入其它食材,如苹果、葡萄乾,营养又能促进排便!\n3、薏仁\n\n薏仁可促进体内血液循环、水分代谢,发挥利尿消肿的效果,有助于改善水肿型肥胖。薏仁水是不错的排毒方法,直接将薏仁用开水煮烂后,适个人口味添加少许的糖,是肌肤美白的天然保养品。\n4、 小米\n小米不含麸质,不会刺激肠道壁,是属于比较温和的纤维质,容易被消化,因此适合搭配排毒餐食用。小米粥很适合排毒,有清热利尿的功效,营养丰富,也有助于美白。\n5、红豆\n红豆可增加肠胃蠕动,减少便秘,促进排尿。可在睡前将红豆用电锅炖煮浸泡一段时间,隔天将无糖的红豆汤水当开水喝,能有效促进排毒。\n6、胡萝卜\n胡萝卜对改善便秘很有帮助,也富含β-胡萝卜素,可中和毒素。新鲜的胡萝卜排毒效果比较好,因为它能清热解毒,润肠通便,打成汁再加上蜂蜜、柠檬汁,既好喝又解渴,也有利排毒。\n\n胡萝卜对于去除湿气也是有很大的帮助，吃胡萝卜还能帮助我们补充身体的维生素，是非常好的一种蔬菜。体内若是湿气过重，还可以多吃下面这些食物。\n7、地瓜\n地瓜中所含的纤维质松软易被人体消化,可促进肠胃蠕动,有助排便。烤地瓜是一种很好的吃法,而且连皮一起烤、一起吃掉,味道爽口甜美。\n8、 山药\n山药可整顿消化系统,减少皮下脂肪沈积,避免肥胖,且增加免疫功能以生食排毒效果最好,可将去皮白山药和菠萝切小块,一起打成汁饮用,有健胃整肠的功能。\n湿气重的表现方式有很多，当身体出现这些症状的时候，就要考虑是否是体内湿气过重的原因了，具体有哪些表现呢?一起了解一下吧。\n湿气重有哪些表现\n1、喜欢吃重口味的食物\n辛辣油腻高盐的食物吃多了,会导致经脉不畅和阻塞,从而加重体内的湿气,如此就进入了恶性循环。\n2、容易肥胖\n因为湿气过重会造成气血不足,经脉不畅通,身体里的废物难以排出体外,人就越来越胖。再加上湿气重的人","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:16:46","updateTime":"2021-05-03 18:16:46","isExist":null},{"id":1415,"question":"鸭肉除湿热吗？","simplecontent":null,"content":"病情分析：鸭肉不能除湿热，湿热忌吃鸭，鸭子寒腻具有加重湿热的效果，鸭肉味甘、寒，有滋补、养胃、补肾、除痨、消水肿、止热痢、止咳化痰等作用，但对除湿热却没有效果。湿热患者可以多到户外进行运动锻炼，例如爬山、游泳、长跑或者玩一些球类运动等，都有助于除湿热。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:15:34","updateTime":"2021-05-03 18:15:34","isExist":null},{"id":1414,"question":"防止上火的青菜?","simplecontent":null,"content":"清热败火食物 \n（1）清热解毒类：如菊花、黄瓜、板蓝根、番茄、竹笋、绿豆、豆腐、芹菜、荸荠、菱角、马齿苋、金针菜等，多有抗菌消炎作用，适用于各种实火症候。 \n\n（2）苦寒制火类：如苦瓜、苦菜、厥菜、丝瓜、田螺、茄子、小米、荞麦、兔肉、田鸡等，可以寒凉之性化热降火，多用于实火症。 \n（3）利湿泻火类：如冬瓜、西瓜、薏仁、扁豆、大麦、苋菜、甜瓜、赤小豆、黑鱼、鸭肉、鲤鱼、鲫鱼、泥鳅、莴笋、绿豆芽、鸡内金等，适用于各种实火症候。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:14:09","updateTime":"2021-05-03 18:14:09","isExist":null},{"id":1413,"question":"每天洗脸多少次?","simplecontent":null,"content":"脸上有油对皮肤是不好的，爱出油的皮肤属于油性皮肤，油性皮肤不注意护肤控油，油脂分泌旺盛会导致毛孔粗大，并且过多的油脂会堵塞毛孔，更容易长白头粉刺，所以脸上爱出油的痘痘肌肤每天最好洗三次脸，选择控油和补水的洗面奶，用温水洗后，最好再用冷水洗一遍，使面部血管收缩，减少皮脂的分泌。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:12:28","updateTime":"2021-05-03 18:12:28","isExist":null},{"id":1412,"question":"耳朵的囊肿?","simplecontent":null,"content":"病情分析：耳朵后面长的囊肿，主要是皮脂腺囊肿，是由于皮脂腺口阻塞而引起的良性肿物。如果囊肿比较小，不需要特殊的治疗，也不要经常性用手去触摸，避免囊肿迅速增大或感染；如果囊肿伴感染，可用敏感的抗生素进行治疗。如果囊肿迅速增大，或囊肿比较大，可行耳后的皮脂囊肿切除手术治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:06:52","updateTime":"2021-05-03 18:06:52","isExist":null},{"id":1411,"question":"耳朵有囊肿怎么治疗?","simplecontent":null,"content":"对于耳朵有囊肿怎么治疗，主要是看囊肿具体的位置。如果囊肿位于耳廓，相对比较好处理，在局麻下就可以完成手术，将囊肿彻底摘除。但是如果囊肿位于耳道的深部，操作很困难，而且患者会有明显的疼痛感，最好考虑全麻手术将耳道里面的囊肿彻底清除。耳朵有囊肿常常是因为有炎性刺激所引发，所以建议患者在生活当中保护好耳朵，避免经常发炎。患者一定不要用手或者棉签反复的刺激囊肿，可能会出现感染的情况，积极的手术治疗之后患者耳朵有囊肿的情况会有明显的改善。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:06:01","updateTime":"2021-05-03 18:06:01","isExist":null},{"id":1410,"question":"如何去掉黑头?","simplecontent":null,"content":"病情分析：黑头是可以去掉的。黑头是因为皮肤上的开放性粉刺长时间暴露在空气中，与空气中的尘埃相接触，然后在油脂的作用下发生化学反应，而造成的一种发黑发臭的物质。祛除黑头可以使用鼻贴，先用温水洗脸，使毛孔尽量扩开，然后将鼻贴贴在皮肤上，过几分钟后将鼻贴揭起来，黑头就会出来了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:04:33","updateTime":"2021-05-03 18:04:33","isExist":null},{"id":1409,"question":"什么是鸡眼?","simplecontent":null,"content":"脚底很硬的黄点","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 18:00:05","updateTime":"2021-05-03 18:00:05","isExist":null},{"id":1408,"question":"为什么很多人不喜欢足球?","simplecontent":null,"content":"可能是地区的原因吧！\n足球没内室，场地太大！现在很多城市都没有踢球的地方了，以前在草坪上踢球，现在谁还敢？罚死你！现在的小孩都喜欢篮球，说篮球进的球多，足球半天也不近一个球！我无语！但喜欢足球的还是不少的！玩的也很多，但限制的因素太多了！我有时就找不到人踢球，都嫌累！\n还有一点，现在的女孩都挺喜欢篮球，估计男孩子就都去打篮球了吧！反正我不喜欢篮球！\n\n主要是没场地，不适合长高，人数要多","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:41:32","updateTime":"2021-05-03 17:41:32","isExist":null},{"id":1407,"question":"一个正规足球队有多少人？","simplecontent":null,"content":"一个标准的足球队有23人，其中上场11人，其余为替补。一般来说23人中有3名门将、6-7名前锋、5-6名中场球员和7-9名后卫。当然这些位置上的人数并不是固定的，教练会根据对阵的球队及其它因素做出相应的调整。\n\n一支完整的足球队要11人，由10名球员与1名守门员组成。\n\n队员人数限制：\n\n上场比赛的两个队每队队员人数不得超过11人。\n\n每队必须有一名守门员。\n\n每队在比赛时可有1－2名替补队员，如果是“友谊比赛”，可以有5名以下的替补队员。\n\n在经裁判员同意后，在比赛暂停时，替补队员可替换队员。\n\n每次比赛，每队主教练可以自由地调整球员上下场，但单场一队只有3次换人机会，且换下球员不可再次上场。\n\n只有在被替补队员下场后，替补队员才能上场。\n\n未经裁判员同意，任何队员不得上场或下场。\n\n\n\n扩展资料：\n\n队员装备限制：\n\n1、上场队员必需的装备是：运动上衣、短裤、护袜、护腿板和足球鞋，上场队员不得穿戴能危及其他运动员的任何物件。\n\n2、护腿板必须由护袜全部包住，而且应是由适当的材料制成（橡胶、塑料、聚氨脂或其它类似的材料）。\n\n3、守门员的服装颜色必须有别于其他上场队员和裁判替补守门员或其他任何队员时，均应遵守下列规定：\n\n（1）替补前应先通知裁判员。\n\n（2）替补队员在被替补队员离场，并得到裁判员许可后，方可进入比赛场地。\n\n（3）替补队员应在比赛成死球时从中线处进场。\n\n（4）被替补下场的队员不得再次参加该场比赛。\n\n（5）替补队员无论上场与否，裁判员均有权对其行使职权。\n\n4、替补队员进入比赛场地，即成为场上队员，同时被替换出场的队员不再是场上队员，至此替补结束。\n\n参考资料来源：百度百科-足球\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:38:52","updateTime":"2021-05-03 17:38:52","isExist":null},{"id":1406,"question":"篮球基本规则?","simplecontent":null,"content":"1/6分步阅读\n首先，5人篮球赛，比赛时间为12分钟一节，每节休息5分钟，中场休息10分钟，这些小比赛略有不同可能是10分钟一节，另外加时赛为5分钟；\n\n\n2/6\n篮球的得分规则是三分线以外的投篮得3分，3分线踩线及以内的得2分，罚球得1分，目前还没有4分的引入；\n\n\n3/6\n比赛开始在中场开球，裁判抛球球员跳球得球进攻，然后轮队每节发球；\n\n4/6\n犯规，一般一场比赛每人有5次或6次犯规，每节如果达到一定的犯规次数5次就要进行罚球；\n\n5/6\n基本违例有带球走步，两次运球，脚踢球都是违例的，转换球权，这样对于本队是非常不利的；\n\n6/6\n三步上篮，违例等都是基本规则，建议初学者先看下篮球规则再上场打球，或者多看看人家打球了解规则。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:36:48","updateTime":"2021-05-03 17:36:48","isExist":null},{"id":1405,"question":"一场正规篮球赛多少时间阿?","simplecontent":null,"content":"1、根据国际篮联的规则，一场篮球比赛是由4节组成，每节10分钟，一场比赛总共40分钟。上下半场之间休息15分钟，节与节之间休息2分钟。加时赛的比赛时间均为5分钟。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:34:43","updateTime":"2021-05-03 17:34:43","isExist":null},{"id":1404,"question":"篮球需要多少人?","simplecontent":null,"content":"一个标准的篮球比赛场上有10个人，每队各五人，每个人的作用分别如下：\n\n1、控球后卫，是全队进攻的组织者，并通过对球的控制来决定在恰当的时间传球给适合的球员。控球后卫典型的进攻模式就是在对手得分之后，由控球后卫在底线运球，开始一轮新的进攻。\n\n2、中锋，在攻防两端都要起到作用，主要负责篮下的对抗动作。利用身体力量优势，强力控制篮下。一般都由队中最高的球员担任，传统上强调篮下的防守以及篮板球的保护。\n\n3、小前锋，传统上以进攻得分为主要任务，强调快速推进上篮的能力。小前锋除了速度以外，往往还被要求具备运球突破以及长距离投射的能力。\n\n4、大前锋，负责抢篮板、防守、卡位等。传统上，大前锋被要求利用他们壮硕的体型，在篮下积极强攻并争夺进攻篮板球；而在禁区防守和防守篮板球的保护方面，则被认为是中锋的主要任务。\n\n\n\n5、得分后卫，以得分为主要任务，在场上是仅次于小前锋的第二得分手。一般担任该位置的球员对体形、体能和心理质素的要求非常高，在速度和爆发力上具有优势。\n\n参考资料来源：百度百科-篮球 （球类运动）\n\n参考资料来源：百度百科-篮球比赛\n\n 1  86","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:33:33","updateTime":"2021-05-03 17:33:33","isExist":null},{"id":1403,"question":"灭蚊灯有效吗?","simplecontent":null,"content":"确实紫外线灭蚊灯所散发的波长A光对蚊子有吸引性，它也正是利用这一趋向性对蚊子进行引诱，如此看来，紫外线灭蚊等确实可以达到去除蚊虫的功效。\n\n2、灭蚊灯又称为光触媒灭蚊器，它在工作时能产生蚊子喜欢的光线、热量、二氧化碳、水蒸气、流动的空气，摸拟人体呼吸引诱蚊子，将蚊虫从人的身边吸引开，落入捕蚊气旋中，使其脱水风干而死。\n3、灭蚊灯具有消灭蚊子的效果，但是前提是使用规范。如果使用方法不当，灭蚊效果也不会很好。首先我们要灭蚊灯放在空旷处，当环境黑暗和静态时，灭蚊器灭蚊速度快，效果佳。相比较黑夜，白天灭蚊灯的效果就大打折扣了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:32:17","updateTime":"2021-05-03 17:32:17","isExist":null},{"id":1402,"question":"灭蚊拍好用吗？","simplecontent":null,"content":"电蚊拍有用，原理是通过放大器，产生高电压，电死蚊子。但是需要你先找到蚊子，主动能出击，给它一拍子。我觉得最有效的还是电蚊香。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:30:08","updateTime":"2021-05-03 17:30:08","isExist":null},{"id":1401,"question":"男生穿工装如何?","simplecontent":null,"content":"在欧美风搭配中，工装风绝对是一大亮点，也非常符合他们的气质，伦敦时尚博主Lucy Williams的这套搭配无论从款式还是配色，都充满了舒适感，军绿色的工装短外套搭配黑色的围巾，帅气的同时不失温柔，内搭选择遮肉显瘦的黑白条纹衫，下身黑色铅笔裤+黑色短靴，配色十分到位，显瘦又显腿长。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:26:49","updateTime":"2021-05-03 17:26:49","isExist":null},{"id":1400,"question":"散打好还是跆拳道好？","simplecontent":null,"content":"散打，现实中你去学的跆拳道都是花拳绣腿\n下面是拳术排行\n首选：散打，泰拳，巴西柔术\n次之：空手道，咏春\n再次之：合气道，柔道\n再再次之：ITF,国际跆拳道（比赛可以用手，拳，摔）\n再再再次之：WTF,世界跆拳道（比赛用拳不得分那种，就是阳江大部分道馆教的那种）\n你自己考虑，如果想有用的话，选我推荐的首选的那几样，我可以很负责任的告诉，学一年的跆拳道绝对打不过学三个月的泰拳或散打的，不是人的问题，而是，技巧，发力方法，比赛节奏，步法的问题，还有最重要的----气势，因为跆拳道只能算是搏击运动，不能算是搏斗术！记好我这句话。\n跆拳道的教课有个很重要的错误引导----每次得分后比赛会暂停一下，或者互相抱缠后，裁判会暂停比赛，要求分开再重新比赛，这会让跆拳道选手进入误区，每次进攻下意识的会认为，我只要打中一次就行，不需要理会防守，所以会使出象后旋，后蹬，甚至左右连踢这种没有力量，且一但被格挡将死无葬身之地的招数，因为，学跆拳道的人下意识里面还是记得，比赛是不能用手的！！！所以，散打比赛出来的选手则完全没有这样的问题，不管跆拳道选手的腿法如何厉害，只要保护好头部，跆拳道选手的腿法，除了侧揣之外，没有需要担心的， 但是因为跆拳道比赛重速度，不重力量，所以，一般跆拳道选手的侧揣都是很差的，跟散打的小侧揣比起来更不值一提，更别提散打中的垫步则揣了～～\n如果你有兴趣，可以开帖和我研究，我练过一年半跆拳，黑带，在大学里带过班，之后练过两年散打，在深圳当过助教，之后又回到广州进了泰拳的俱乐部，跟泰国老师练了一年半的泰拳，现在工作就没有时间了，主要是玩一下器械，比如弓箭，双截棍，剑道","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:26:00","updateTime":"2021-05-03 17:26:00","isExist":null},{"id":1399,"question":"跆拳道和空手道区别?","simplecontent":null,"content":"1、起源不同：\n\n空手道：\n\n空手道是日本传统格斗术结合琉球武术唐手而形成的，起源于日本武道和琉球的唐手。唐手是中国武术传入琉球，结合当地武术琉球手发展而成的，而日本本土人又将九州、本州的摔、投等格斗技与唐手相结合，最终形成空手道。二战之后通过美军宣传而在全世界广泛传播。\n\n跆拳道：\n\n跆拳道起源于朝鲜半岛，早期是由朝鲜三国时代的跆跟、花郎道演化而来的，韩国民间流行的一项技击术。\n\n“跆拳道”一词，是1955年由韩国的崔泓熙将军命名。崔泓熙将军早年在留学日本时，学习了日本松涛馆流空手道，并将其与韩国传统武技跆跟、手搏等技术融入到跆拳道中去。总之，现代的跆拳道是结合当代东亚武技之长的韩国发源武术运动之一。\n\n\n\n2、侧重点不同：\n\n空手道：\n\n空手道当中包含踢、打、摔、拿、投、锁、绞、逆技、点穴等多种技术，一些流派中还练习武器术。\n\n空手道对抗竞技中往往手脚并用。套路(型)中总体以手法为主，腿法以直线为主。以小林流拳士会为例：黑带前必须掌握的八套型中仅出现过前踢等简单直线腿法，高级型中可见侧踢(公相君大)等,也以直线腿法为主。但在实际竞技中也会有回蹴(跆拳道称为横踢)、侧踢、后踢等等动作，但大多沉稳扎实，较少空中腿法和转身动作。\n\n跆拳道：\n\n跆拳道是一种以腿法为主的武技，实战中步法的灵活运用对保证充分发挥腿的威力、取得实战的胜利具有极其重要的意义。\n\n腿法使用时多以后腿进攻，因此跆拳道的步法具有鲜明的特点，即重心落在两脚之间或偏于前脚，而且身体姿势大都以侧向站位，以便保护身体和下面要害部位和使后腿通过拧腰转髋发力，增加击打的力量和速度。\n\n3、比赛规则不同：\n\n空手道：\n\n比赛中一方有效进攻导致对手瞬时丧失战斗能力或重心明显移动为得分标准。空手道对打的时候谁先得到一分比赛要重新开始\n\n跆拳道：\n\n跆拳道对打的时候让手和脚连续攻击得分。使用允许的技术准确有力的击中有效得分部位。击头得3分，旋转踢和后踢得2分；其它技术得1分，主裁判读秒不加分。\n\n一个技术动作的最高得分分值为3分，而有效得分部位包括腹部和两肋部以及面部允许被攻击的部位。如使用允许的技术击中被护具保护的非有效得分部位，击倒对方时按得分计。\n\n参考资料来源：百度百科-空手道\n\n参考资料来源：百度百科-跆拳道","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:24:28","updateTime":"2021-05-03 17:24:28","isExist":null},{"id":1398,"question":"跆拳道和空手道的区别?","simplecontent":null,"content":"\n跆拳道和空手道技术侧重点不同。跆拳道WTF对抗竞技中一般多用腿法，拳法较少。套路（品势）中腿法较多，从第一套套路开始即出现腿法攻防。竞技中多空中腿法和转身腿法，动作凌厉潇洒。\n\n空手道对抗竞技中往往手脚并用。套路（型）中总体以手法为主，腿法以直线为主。在极真会黑带前必须掌握的七连踢也包括横踢，后回踢等动作，但大多沉稳扎实，较少空中腿法和转身动作。\n\n跆拳道和空手道的对抗竞技规则不同。跆拳道WTF实战规则较为统一，基本上为腿法击打有效部位得分或者击倒，需穿戴全套护具，且低段腿法（踢击对方的腰带以下部位）不得分。\n\n空手道实战规则有许多种，常见的有：全接触（特征是拳不击头，穿着空手道服全力击打、拳腿到肉、不寸止也不收力，一般较少穿护具）、寸止（一击得分或击倒制，不穿护具或只戴少量护具）、防具（穿戴全身护具全力击打）等等，规则较多较不统一。\n\n跆拳道和空手道的服装不同。跆拳道的道服一般为白色，领子为黑色，带有胸标，上衣下摆后侧可能印有会馆名、国籍等字样。衣形为套衫，由腰带系紧。\n\n空手道道服一般为纯白色，左胸绣有道场组织名，下摆处有时会出现一些诸如所有者姓名的小字。衣形为开衫，左侧衣襟压右侧衣襟，由腰带系紧。袖长一般在手肘附近，不同会馆会出现一定的差异。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:23:47","updateTime":"2021-05-03 17:23:47","isExist":null},{"id":1397,"question":"跆拳道的段位?","simplecontent":null,"content":"跆拳道的等级划分：\n\n10级为白带：表示空白，根本没有跆拳道知识，意味着入门阶段。\n\n9级为白带加黄杠：表示介于白带和黄带之间的水平，意味着初步接触开始入门。\n\n\n\n8级为黄带：表示大地，草木在大地生根发芽，意味着学习基础阶段。\n\n7级为黄带加绿杠：表示介于黄带与绿带之间的水平，练习者的技术在不断上升。\n\n6级为绿带：表示草木，成长中的绿色草木，意味着技术的进步阶段。\n\n5级为绿带加蓝杠：表示由绿带向蓝带的过渡带，练习者的水平处于绿带与蓝带之间。\n\n4级为蓝带：表示蓝天，草木向着蓝天茁壮成长，意味着进度达到相当高的阶段。\n\n\n\n3级为蓝带加红杠：表示练习者的水平比蓝带略高，比红带略低，介于蓝带与红带之间。\n\n2级为红带：表示危险，已具备相当的威力，意味着克制自我以及告诫对手。\n\n1级为红带加黑杠：表示经过长时间系统的训练，练习者已修完1级以前的全部课程，开始由红带向黑带过渡。\n\n黑带：表示白色的对立，相对白色技术已经熟练，意味着黑暗中也能发挥自身能力。\n\n黑带以上：\n\n\n\n黑带（1段 / 1品） 必修：高丽，升级年资：1年，年龄：15岁或以上，以下者为1品；\n\n黑带（2段 / 2品）必修：金刚，升级年资：1年，年龄：16岁或以上，以下者为2品；\n\n黑带（3段 / 3品）必修：太白，升级年资：2年，年龄：18岁或以上，以下者为3品；\n\n黑带（4段） 必修：平原，升级年资：3年，年龄：25岁或以上，以下但年满20岁者为4品；\n\n黑带（5段）必修：地跆，升级年资：4年，年龄：30岁或以上；\n\n黑带（6段） 必修：天拳，升级年资：5年，年龄：36岁或以上；\n\n\n\n黑带（7段）必修：汉水，升级年资：6年，年龄：43岁或以上；\n\n黑带（8段） 必修：一如，升级年资：8年，年龄：51岁或以上；\n\n黑带（9段） 由特别组织评核，在跆拳道有重大贡献者，升级年资：9年，年龄：60周岁或以上者。\n\n 7","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:22:59","updateTime":"2021-05-03 17:22:59","isExist":null},{"id":1396,"question":"螃蟹怎么吃？","simplecontent":null,"content":"1/8分步阅读\n先把煮熟的螃蟹的八只腿剪下来，再把大腿剪下来。\n\n\n2/8\n然后用小腿顶出大腿里的肉，满满的螃蟹肉就可以吃了。\n\n\n做美食简单又好吃_做美食简单又好吃_拼多多_品质实惠\n广告\n3/8\n再把螃蟹的肚脐取下来，肚脐上那根长长的蟹肠是不能吃的。\n\n\n螃蟹苗急售 1元/斤 每户10万补贴 包回收\n广告\n4/8\n再打开螃蟹的蟹贝壳，把蟹贝壳里的蟹胃清理出来，蟹胃呈三角形是不可以吃的。\n\n\n\n5/8\n再取蟹腮。螃蟹两边像毛毛虫一样的东西是过滤水里的脏东西的腮，不可以吃。再下面像三角形一样的白色是螃蟹的肺，也是不可以吃的。\n\n\n6/8\n附在膏上的一层膜寒性较重，建议不要吃，然后就是下边六角形的蟹心，寒性级重不可以吃，取出之后再吃。\n\n\n7/8\n最后把留下的腿顺着纹路掰下来，这样卸下来的蟹肉是一整颗的，去掉外壳就是一块完整的蟹肉。\n\n\n查看剩余1张图\n8/8\n成品图。你们学会了吗。\n\n\n总结：","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:21:02","updateTime":"2021-05-03 17:21:02","isExist":null},{"id":1395,"question":"大闸蟹为什么这么贵？","simplecontent":null,"content":"因为都爱吃，还少，所以物以稀为贵了。\n\n阳澄湖蟹,历来被称为蟹中之冠。这与阳澄湖的特殊生态环境有关。水域百里方圆,碧波荡漾,水质清淳如镜,水浅底硬,水草丰茂,延伸宽阔,气候得宜,正是螃蟹定居生长最理想的水晶宫。所以,阳澄湖蟹的形态和肉质,在螃蟹家族中,大大的与众不同。\n\n螃蟹肉质细嫩，味道鲜美，营养也十分丰富，蛋白质的含量比猪肉、鱼肉都要高出几倍，核黄素、钙、磷、铁和维生素A的含量也较高。\n\n大闸蟹的肉质鲜美，  很有营养价值。  而且产量很低，  物以稀为贵 ，一分钱一分货。\n\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:19:23","updateTime":"2021-05-03 17:19:23","isExist":null},{"id":1394,"question":"梭子蟹为什么肉很烂 梭子蟹肉吃起来粉粉的什么情况?","simplecontent":null,"content":"多为不新鲜的梭子蟹冷冻而成。\n\n一般将新鲜的梭子蟹冷冻起来，其肉质解冻后只是会有少部分水流出，但并不会出现肉质糜烂，散发异味等现象，如果冻过的梭子蟹肉质软烂，流水，甚至内部发空，可能为即将死亡或死蟹冻成，这样的蟹肉最好不要继续食用，以免对健康不利。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:17:51","updateTime":"2021-05-03 17:17:51","isExist":null},{"id":1393,"question":"螃蟹有哪些类型，吃货们可以留意一下这些常见的品种?","simplecontent":null,"content":"秋天这个时节正是吃螃蟹的季节，作为一名不安分的吃货，今天有必要和大家聊聊什么螃蟹最好吃。下面罗列了8种螃蟹，我们一起来看看到底哪种比较好吃？有位海鲜老板和我说过，选错了, 吃的只是调料。\n螃蟹，是杂食性动物，以吃海藻为生，有时也会吃微生物、虫类等等。螃蟹的分类有很多，常见的有梭子蟹 、帝王蟹、大闸蟹，但是这对于脸盲的人来说也就只有那个名字啦，螃蟹！\n\n青蟹\n\n青蟹是我国珍贵的水产品之一。肉味鲜美，营养丰富，素称酒席上之佳肴，食用药用价值高，尤其是交配后性腺成熟的雌性蟹（红虫寻、高蟹）有海中人参之美誉，是产妇、老幼和身体虚弱者的高级滋补品。\n\n梭子蟹\n\n梭子蟹适合清蒸或斩件后制作其他菜肴。梭子蟹有清热解毒、补骨添髓、养筋活血、通经络、利肢节、续绝伤、滋肝阴、充胃液之功效。对于淤血、损伤、黄疸、腰腿酸痛和风湿性关节炎等疾病有一定的食疗效果。\n\n珍宝蟹\n\n珍宝蟹每年秋季换壳，到冬季进入丰产季节，此时的珍宝蟹肉多且价低。珍宝蟹适合取肉制作菜肴，或斩件后炒制。由于珍宝蟹个体较大，肉较多，所以适合切块后烹调，可以使用各种烹调方法，都很美味。\n\n帝王蟹\n\n帝王蟹脚含有丰富的蛋白质、微量元素等营养，对身体有很好的滋补作用，吃蟹对结核病的康复在有补益。中国及亚洲周边海域是不产帝王蟹的，所认在中国市场上的帝王蟹多为进口的速冻产品，它是阿拉斯加东南海域则是在11月捕捞红色帝王蟹。\n\n兰花蟹\n\n兰花蟹因其螯和足呈蓝色，且外形似兰花而得名兰花蟹，我国海南岛附近海域较为盛产。兰花蟹背壳呈青灰色，有白色斑点，各足末端呈现鲜艳的蓝色。兰花蟹适宜清蒸食用，它的肉质洁白紧实，鲜嫩可口。\n\n红花蟹\n\n红花蟹皮薄肉多，肉质洁白鲜美。红花蟹是人们最喜爱的海蟹。她产于我国南方沿海一带，如阳江、海南等。红花蟹的重量从0.3斤-1.5斤不等，口感紧致鲜美，因为她是地地道道的海蟹，人工不能养殖，所以最为名贵。\n\n沙母蟹\n\n沙母蟹外形较小巧，背甲呈青灰褐色，与海地沙地颜色相近，背甲前端边缘呈锯齿形，螯较小巧。是在市场上最常见的海蟹品种，适合烹炒，肉质细嫩，鲜美得让人恨不得把舌头也吞下去。每年十月是吃这种螃蟹的最好季节。\n\n大闸蟹\n\n大闸蟹是河蟹的一种。河蟹的蛋白质和维生素A的含量都要高于其他品种，最适合清蒸的食用方法。吃前用姜茶漱口，以大红浙醋作料食用，才能品味到最美味的大闸蟹。\n最后要说的就是，我们吃螃蟹的时候可以","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:16:43","updateTime":"2021-05-03 17:16:43","isExist":null},{"id":1392,"question":"皮皮虾是不是 广东人所称的*赖尿虾*?","simplecontent":null,"content":"是的，广东人称皮皮虾为濑尿虾。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:14:39","updateTime":"2021-05-03 17:14:39","isExist":null},{"id":1391,"question":"皮皮虾如何做?","simplecontent":null,"content":"巨无敌好吃！椒盐皮皮虾！香辣皮皮虾！简直是！太好吃啦！！！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:12:55","updateTime":"2021-05-03 17:12:55","isExist":null},{"id":1390,"question":"皮皮虾为什么做出来没肉?","simplecontent":null,"content":"皮皮虾之所以叫皮皮虾，其中一个原因就是皮皮虾表面的虾壳本身要比虾肉要多，即便买的是很肥大的皮皮虾，剥掉身上的虾壳之后，剩下的虾肉也不多，反而是有一大堆的虾壳。\n\n如果想要吃虾肉比较多的，建议还是买明虾、基围虾等，更加划算。\n\n如果买回来的皮皮虾比较轻、瘦小，那么吃起来也是没有什么肉的，比如说没到季节的皮皮虾、雄虾、产后的皮皮虾、在淡水中养了比较久的虾等。\n\n建议在每年4-6月的时候买皮皮虾，这时候的皮皮虾才是比较肥美的。\n如果买的是生冻的皮皮虾，也就是将生的皮皮虾直接冷冻起来了，那么在吃的时候也会觉得肉很少。因为生冻过程中皮皮虾肉会缩水，拿出来再蒸的时候就会出现空壳、肉少的情况。\n\n建议买新鲜的皮皮虾，如果买的皮皮虾吃不完，也可以煮熟了冷藏或者冷冻起来，能够避免空壳的情况。\n\n\n皮皮虾本身肉就不多，如果在蒸或者煮的时候加热太久了，那么就会导致虾肉中的蛋白质收紧、缩小，吃的时候就会发现皮皮虾的肉更少了，空壳情况更严重了。\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 17:12:07","updateTime":"2021-05-03 17:12:07","isExist":null},{"id":1389,"question":"对方讲方言怎么办?","simplecontent":null,"content":"叫女友给你翻译呗\n\n那就不听啊\n实在必要听的时候让你女友在中间做翻译\n不过你可以试着学习一些","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 16:33:21","updateTime":"2021-05-03 16:33:21","isExist":null},{"id":1388,"question":"补牙好还是镶牙好?","simplecontent":null,"content":"补牙是指牙齿已经龋坏，通过口腔的治疗手段，把龋洞当中的腐败、坏死组织去除以后，用充填材料进行充填，恢复牙冠的外形。而镶牙是牙齿已经没有了，出现缺失，采用人工的手段，通过旁边的邻牙作为基牙，或者是植入种植体来修复这个牙齿的缺损。修复的牙齿是一个假牙，医学上称为义齿。补牙好还是镶牙好，从上面的解释可以看出补牙补的是自己的牙，而镶牙镶的是个假牙，所以补牙应该比镶牙更好。建议所有的人要保护好牙齿，尽量保留自己的牙齿。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 16:11:59","updateTime":"2021-05-03 16:11:59","isExist":null},{"id":1387,"question":"补牙和种植牙区别?","simplecontent":null,"content":"病情分析：种植牙是牙齿缺失，在牙槽骨内把种植体植入后等待成活，再镶牙，类似于牙槽骨螺母放在里面，把螺丝放体外，牙科牙齿硬组织缺陷之间的关系，本身就是腐烂干净后，恢复牙齿的形状和功能，进行材料的填充，还是自己的牙齿。种植牙，虽然有一个类似于真正的感觉，但那不是自己的牙齿。\n\n补牙和种牙的区别是很大的，补牙是由于假牙的根基，建立在自己的牙上，或是人工牙根上。而种牙分为活动义齿和烤瓷牙，两者都是以自己的牙齿作为，假牙存在并行使功能的基础。活动假牙有钩子挂在自己的牙上，以防止掉下来。烤瓷牙则是把自己的牙齿磨小后再套一个牙套，也就是以自己的牙为桥桩来造桥。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 16:10:53","updateTime":"2021-05-03 16:10:53","isExist":null},{"id":1386,"question":"历史朝代?","simplecontent":null,"content":"夏、商、周【西周、东周（春秋、战国）】、秦、汉（西汉、东汉）、三国（魏、蜀、吴）、晋（西晋、东晋）、五胡十六国、南北朝【南朝（刘宋、萧齐、萧梁、南陈）、北朝（北魏、东魏、西魏、北齐、北周）】；\n\n隋、唐、五代十国【五代（后梁、后唐、后晋、后汉、后周）、十国（前蜀、后蜀、杨吴、南唐、吴越、闽、马楚、南汉、南平、北汉）】、宋（北宋、南宋）、辽、西夏、金、元、明、清。\n\n\n\n扩展资料：\n\n在朝代里标注“前”、“后”在五胡十六国里和五代十国里非常普遍。\n\n十六国里有个叫的“前”是指其在十六国中是前，十六国里有两个秦，氐族苻健的前秦和羌族姚苌的后秦。后秦是反前秦建立的，也自称秦，故以前后秦区分。\n\n“前秦”是中国历史上第一个统一北方的非汉民族政权，且像孙功达《氐族研究》所称，还是“最早尝试由少数民族来统一全国”的历史政权。而“先秦”通常指秦始皇建立的秦朝之前，特指春秋、战国时期。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 16:08:19","updateTime":"2021-05-03 16:08:19","isExist":null},{"id":1385,"question":"谁带孩子好?","simplecontent":null,"content":"自己带孩子的好处：现在父母的文化程度都比较高，接触面广，可以培养孩子多方面的兴趣，年轻人的接受能力强，思想开放，虽然经验少，但是现在育儿方面的书籍很多，可以边学边育儿，能对过去不科学的育儿方法加以辨别和改进，年轻父母精力充沛、充满生气，经常带孩子出去活动，有利于孩子形成良好的性格，开阔视野，增长知识。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 15:32:39","updateTime":"2021-05-03 15:32:39","isExist":null},{"id":1384,"question":"孩子什么时候自己带?","simplecontent":null,"content":"“我们看到很多这样的悲剧，孩子小时候不是自己带，上学了才自己带，孩子不听就动手打，孩子被打后就记恨父母。”","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 15:31:23","updateTime":"2021-05-03 15:31:23","isExist":null},{"id":1383,"question":"五角大楼什么时候炸的?","simplecontent":null,"content":"2001年9月11日","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 15:05:42","updateTime":"2021-05-03 15:05:42","isExist":null},{"id":1382,"question":"911事件让五角大楼变成六角大楼，解密被炸时的内部机密?","simplecontent":null,"content":"隶属美国国防部的五角大楼，拥有23000人办公600多万平米场地的五边形大厦堪称一座小型城市。\n\n77航班上载有53名乘客和5名恐怖分子，另外还有6名机组人员也都成了殉葬品。飞机由于刚起飞不久燃料基本满位，在恐怖分子的劫持下约以20度角对准了五角大楼的西墙面部分直接撞击下来，巨大的撞击力和满载的燃油，把五角大楼的西墙冲出一个巨大的缺口，机身在撞击和爆炸中被粉碎殆尽，五层分隔式的建筑体被炸穿了3层，大火在爆炸的冲击力下顺着建筑隔层的通道扑向了两面，上百个办公室瞬间被大火吞噬。\n\n大火燃烧了四十八个小时后最终被消防员扑灭，此次被客机撞击炸毁的部门是美军的参谋本部和海军指挥中心，这两个部门几乎是“全军覆灭”，而最让美国政府提心吊胆的是大火差一点殃及到国家军事指挥中心。国家军事指挥中心的通讯天线设施在五层楼的顶部，大火一旦把他的通讯设施烧毁就意味着美国失去了对整个美军（包括全球军事基地）的指挥能力和情报获取能力，如果成真的话恐怕全球的恐怖分子会对美国的大使馆或军事基地发动恐怖袭击。通讯线路不但连接国防部长本人还有白宫的掌门人总统，他们是最高的信息获取者和命令发布者。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 15:04:47","updateTime":"2021-05-03 15:04:47","isExist":null},{"id":1381,"question":"法式美甲是什么?","simplecontent":null,"content":"传统法式指甲，也称“法式白边”是利用白色指甲油，在指甲前端画出有如微笑般的圆弧形——美甲界的特有名词“微笑线”也就这样诞生的。法式美甲不再是单一的传统款式了，有反法式、圆法式、平法式、倒V法式等创新法式美甲款，非常受大众的欢迎。\n\n\n所谓“法式指甲”，并不一定是前端白色白白一层才算，只要是双色以上的组合，都可以称作法式指甲","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 15:01:01","updateTime":"2021-05-03 15:01:01","isExist":null},{"id":1380,"question":"福寿螺能吃吗?","simplecontent":null,"content":"福寿螺不能吃。福寿螺是广州管圆线虫的中间宿主。人主要因生食或半生食中间宿主（如福寿螺）和转续宿主而感染引起广州管圆线虫病。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 14:57:45","updateTime":"2021-05-03 14:57:45","isExist":null},{"id":1379,"question":"多喝海水会得病吗?","simplecontent":null,"content":"病情分析：你好，海水不能喝，是因为有高盐的成分，但是海鱼，海产品吃了没事。比如把水里放好多钱，你能喝一下去吗？显然不能，但是海鱼，海产品，你能吃下去吗，可以的。对吧\n\n病情分析：不可以喝,海水的浓度要比人海水中体血液浓度要高,多喝了可能会脱水而死,同时海水中含有许多其他矿物质,对人体有害,实在没办法把海水蒸馏过后可以喝!","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 14:48:57","updateTime":"2021-05-03 14:48:57","isExist":null},{"id":1378,"question":"海水蒸气能喝吗?","simplecontent":null,"content":"可以，海水的水蒸气跟普通水一样。\n记得采纳啊","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 14:46:58","updateTime":"2021-05-03 14:46:58","isExist":null},{"id":1377,"question":"补牙多少钱?","simplecontent":null,"content":"补一颗牙齿通常需要花费200元到400元左右。补牙又称为牙体充填治疗。其主要适用于龋病造成的牙体部分缺损，或由于外伤导致的牙齿意外劈裂。同时注意在补牙后不要用患牙轻易的咬硬物，避免牙体受力不垂直或不均而导致脆弱的牙体意外劈裂。补牙的价钱还需要看选择何种充填材料，在传统的充填材料中以银汞合金为主，但是银汞合金因耐磨性较差且易导电导致牙齿疼痛，故现在多已淘汰。现在充填材料多选择玻璃离子粘固剂和树脂材料，其费用通常大约在400元左右。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 11:22:04","updateTime":"2021-05-03 11:22:04","isExist":null},{"id":1376,"question":"石橄榄作用?","simplecontent":null,"content":"石橄榄的功效是清热养阴、化痰止咳、润肺生津、利湿、消瘀。在临床中，石橄榄的作用可以体现在治疗肺部疾病，还有上呼吸道感染，常见于感冒、咳嗽、咽喉肿痛，以及肺炎、慢性支气管炎，这些都可以通过石橄榄进行治疗。石橄榄作为一种南方常见的中草药，可以和其他药物相配合，对于胃肠道疾病也有一定的疗效，比如胃溃疡、十二指肠溃疡、胃炎、肝炎，甚至对女性的白带、月经异常都有效果，还可以治疗各种牙痛、头痛等等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 11:20:45","updateTime":"2021-05-03 11:20:45","isExist":null},{"id":1375,"question":"鸡煲?","simplecontent":null,"content":"汤好，调料，分量，豆腐，三个人吃留多少，石橄榄核，加点面","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 11:19:35","updateTime":"2021-05-03 11:19:35","isExist":null},{"id":1374,"question":"沙姜作什么好吃?","simplecontent":null,"content":"沙姜是粤菜常用的调味料之一，其味辛辣中带着甜，香味很特殊，非常地惹味。沙姜在粤菜中的应用相当广泛，尤其是制作荤菜时，加点沙姜能起到去腥增香的作用\n如沙姜鸡、沙姜鸡脚、沙姜猪俐、沙姜猪脚等","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 10:49:19","updateTime":"2021-05-03 10:49:19","isExist":null},{"id":1372,"question":"五菱宏光好还是比亚迪?","simplecontent":null,"content":"比亚迪跟五菱价钱一样的车型，发动机比亚迪是三菱技术发动机，五菱是美国通用技术发动机，这两款发动机都不错，但是比亚迪其他硬件质量太差，不如五菱系列车型如：宝骏630、610、730等\n\n比亚迪车多侧重家用，\n小3口，5口之家，完全家用的，\n比亚迪车子质量口碑不是太好，特别是早期的F3，F0，不推荐，后续出的相对要质量稳定些。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 10:45:36","updateTime":"2021-05-03 10:45:36","isExist":null},{"id":1371,"question":"比亚迪如何?","simplecontent":null,"content":"国产车里性价比不错的一个牌子\n\n比亚迪\n\n比亚迪是一家中国汽车品牌，创立于1995年，主要生产商务轿车和家用轿车。由20多人的规模起步，2003年成长为全球第二大充电电池生产商，同年组建比亚迪汽车。\n\n比亚迪汽车遵循自主研发、自主生产、自主品牌的发展路线，矢志打造真正物美价廉的国民用车，产品的设计既汲取国际潮流的先进理念，又符合中国文化的审美观念。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 10:43:46","updateTime":"2021-05-03 10:43:46","isExist":null},{"id":1370,"question":"沙姜好吃吗?","simplecontent":null,"content":"广东，广西盛产沙姜，所以广东人和广西人一直有吃沙姜的习惯。\n沙姜气味芳香，功能主治行气温中，消食，止痛。用于胸膈胀满，朊腹冷痛，饮食不消。可作香料也可入药。\n\n我们广东，广西人一般把沙姜作为香料，用于炒菜。特别是在广西，很多菜式是以沙姜作为佐料的。\n最经典的两道用沙姜作为佐料的菜，莫过于扣肉和白切鸡了。\n“扣肉”是广西的一道名菜，以其浓郁的香味，温软的口感，深受人们的喜爱。广西人爱吃扣肉。广西人办酒席，必定少不了扣肉这道菜。扣肉就是广西饮食的最高规格的象征。这道人人喜爱的“扣肉”，佐料中必不可少的一味香料就是沙姜。广西人做扣肉是这样的，选取肥瘦适中的五花肉，切成1斤左右大小的正方形块状，放入油锅中炸至金黄，再捞起冷却，切成5厘米左右长度的薄片，拌以沙姜，腐乳，胡椒等香料，再整齐码入盘中，大火蒸熟。炸过了的五花肉，经过一蒸，吸足了水分，酥软爽口，色泽鲜艳。清香的沙姜和猪肉香完美地结合在一起，香上加香，让人回味无穷。\n再说白切鸡，广西人做得那是相当好吃。无论是养足时日的大阄鸡，年轻的小母鸡，还是下蛋老母鸡，只要把它们交到广西人的手中，广西人必定给你变出美味的食物来。我非常赞叹广西人的味觉，广西人对食物味道的感知真的有惊人的天赋：广西人做白切鸡，先把整只鸡放入冷水中，大火炖至沸腾，再转小火把鸡肉炖至酥软。捞出放入冷水中冷却，用刀切成小块。再准备好用沙姜，香菜，酱油，少许糖等调好的香料。喜欢辣的可以加上少许辣椒。接着把鸡肉放入锅中，倒入香料，大火若炒1分钟，把肉再次炒热，香料搅拌均匀，就可以出锅装盘了。这样做出来的白切鸡，散发着浓浓的沙姜香味，鲜嫩香甜，百吃不腻。我觉得沙姜和鸡肉的组合是最适合不过的美味了。\n\n或许是经过了长期的实践经验的积累，广西人对沙姜该和什么食物搭配，已经了如指掌并且运用得淋漓尽致。广西人并不是煮什么都会放沙姜的，而是根据食物本身的味道决定选取什么香料。比如煮鸭肉，鱼肉等，广西人一般是不会放沙姜的。广西人对沙姜这种香料总是用得恰到好处。\n我有一位朋友是东北地区的，在广西工作，自从我请她吃了一次我们广西的白切鸡之后，就被沙姜的香味深深地吸引了。问我鸡肉里放的是什么香料，我告诉她是沙姜。“什么是沙姜？我们那边是没有这种东西的。啊，太好吃了！”连连啧啧称赞。还说，等过年要买一些回去让她的家人也尝尝。\n确实，沙姜的味道太独特了，实在是太好吃了，尽管我吃过很多，","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 10:40:42","updateTime":"2021-05-03 10:40:42","isExist":null},{"id":1369,"question":"酸菜、咸菜、泡菜和梅菜?","simplecontent":null,"content":"酸菜、咸菜、泡菜和梅菜都是用主要用盐等调味料腌制食物，让它们通过时间的沉淀来制作食物的过程，一般都制作的过程都会有点长。\n\n酸菜主要是通过发酵也就是乳酸杆菌繁殖的过程，让食物的口味微微发酸，整个过程是通过食物发酵完成；\n\n而咸菜是指加入盐腌制的过程，味道偏咸；\n\n而泡菜也是通过发酵完成，而这种发酵是通过水中来完成，泡菜的口味也微微偏酸；\n\n而梅菜呢，则跟咸菜制作过程类似，但要多一道工序，腌制好了还需要晒干。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 05:38:03","updateTime":"2021-05-03 05:38:03","isExist":null},{"id":1368,"question":"梅菜和咸菜区别?","simplecontent":null,"content":"梅菜与咸菜在腌制上有区别， 梅菜是干的，咸菜是湿的（带水的）。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 05:35:00","updateTime":"2021-05-03 05:35:00","isExist":null},{"id":1367,"question":"潮州title?","simplecontent":null,"content":"散装话题\n电动车不够\n电动车比较方便\n早上修路很吵\n逛了牌坊街，甲第巷\n潮州肠粉用沙茶酱和芝麻酱\n本人土生土长潮州人，从小就是吃的淋花生酱。毛哥，汕头肠粉也很不错的，酱汁比较有特色，欢迎来吃。\n\n我更喜欢广式秘制酱油\n这边物价不高\n历史古城比较多\n潮州话和汕头区别\n潮州的陶瓷和不锈钢很出名\n汕尾不是潮汕的。\n我揭阳人，力推潮州口音，潮州口音女生说起来更显温柔\n我有同学在揭阳\n潮州靠近深圳和福建\n潮汕贫富差距大吗\n外地游客多吗\n有没有外国人\n和我家城市看不出来好不好，看行业\n潮汕归属感如何\n潮汕农业没有那么多","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 05:32:00","updateTime":"2021-05-03 05:32:00","isExist":null},{"id":1366,"question":"湛江和茂名如何?","simplecontent":null,"content":"近年来，广东21市可以说是一个赛过一个，每个城市都不甘示弱地往前赶，争取将城市建设得更加好。今天，笔者就来跟大家聊一聊广东的茂名和湛江。这两座城市都位于广东的西部，都是广东非珠地区综合实力比较强的城市，那么这两座城市的城建和经济相差如何？让笔者和你们一起来解读吧！\n\n在笔者看来，如果两座城市相比较的话，湛江的综合实力要比茂名的综合实力强，城建方面也好得多。尤其是这些年来被定位为粤西中心城市，城区发展更是迅猛，一栋栋高楼拔地而起。除此之外，湛江港是广东甚至全国重要的大港口，南海舰队总部就设在湛江。而且湛江还是通往海南岛的重要大通道，从湛江港南下到东南亚各国距离也更近，可以说湛江港已经成为了广东省重要的海港及通商口岸。从长远的发展角度来看，湛江比茂名更有些优势，发展潜力更大。\n虽然茂名的条件没有湛江那么好，但是茂名也不是是甘落后的城市。其实，茂名的区位优势并不逊于湛江。要知道，茂名西接广西，有粤西交通商贸枢纽的称号，也是广东的能源资源市。茂名接连广西的边界线更长，将来广西的玉林和梧州全面融入粤港澳大湾区时，茂名就是一个巨大的中转站。如果茂名加强与广西玉梧合作，再与湛江相互协同互补，其发展潜力也是无可估量的，完全不差于湛江。\n\n如果从经济总量上相比较，茂名比湛江更具优势。就拿2019年的数据来说，茂名市GDP总量达到了3252.34亿元，在广东省内排行第七，比珠三角地区的江门和中山还要高，与珠海仅相差了100多亿的差距，不久的将来很有可能再一次发力赶超珠海，这样的成绩可以说是令人想不到的。而湛江市GDP总量只有3064.72亿元，在广东省内排行第十，如果继续在原地踏步的话，很有可能被粤东地区的汕头赶超。\n虽然这些年来茂名的经济总量高于湛江，但是湛江的发展后劲十足。因为湛江有很多大项目尚未投产，如果今后能够实现投产和引入更多大型企业，湛江还是能反超茂名的。所以说，两市都有各自的优势和潜力。茂名在招商引资上做得比较好，而湛江在国企上具有优势，未来的一段时间茂名对于湛江仍然是比较大的挑战。\n\n如果从交通优势上相比较，两市都是半斤八两。不过，似乎茂名的交通网络更为完善些。要知道，茂名的铁路和公路比较发达。境内的包茂、汕湛、沈海高速贯穿全境，从客观上提升了茂名的货运能力。除此之外，茂名距离珠三角比较近，能够有效承接珠三角的货运业务，特别是深茂铁路的开通，直接将茂名联入了珠三角，对茂\n\n茂名的城市化进展比较差，但茂名的农村人均可支配收入是非珠地区最高的，而且茂名各县级市的经济发展都差不多，茂名境内经济发展均衡，不像湛江那样两极分化，湛江市区非常有钱，但徐闻雷州遂溪那些地方比茂名任何一个县都穷","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 04:05:41","updateTime":"2021-05-03 04:05:41","isExist":null},{"id":1365,"question":"湛江和茂名相比如何?","simplecontent":null,"content":"从地理位置上说，茂名完全没有能力和湛江比，这个不需比较。\n&#160;&#160;&#160;&#160;从人才上说，茂名只有一个茂名学院，而湛江有三所大学。\n&#160;&#160;&#160;&#160;从港口来说，茂名也有港口，但那是浅水小港，根本无法和湛江的万吨亿万吨港口相比。\n&#160;&#160;&#160;&#160;从交通来说，茂名偏处一隅，只有短短的一段三茂铁路，没有机场。\n&#160;&#160;&#160;&#160;从地形地貌来说，茂名基本是山区，境内多是丘陵和山地地形，下属的高州，信宜都是著名的山区，高于千米的高山并不罕见，电白，化州高山也不少，而湛江沃野千里，平原无边，高于300米的高山都找不到。\n&#160;&#160;&#160;&#160;从政策支持来说，首批对外开放港口没有茂名的份，开发区的数量也没有湛江多。\n&#160;&#160;&#160;&#160;从旅游资源来说，茂名除了一个中国第一滩，基本再没有什么客观的景点，湛江三面环海，有许多的滨海旅游景点，而茂名只有茂名电白一带有海滩，滨海旅游无法和湛江比。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 04:01:15","updateTime":"2021-05-03 04:01:15","isExist":null},{"id":1364,"question":"为啥粤西的经济不是人均经济?","simplecontent":null,"content":"如果从人均GDP来看，粤西经济圈比粤东经济圈占有一定优势，但粤西有钢铁和石化等大型国企，粤东的民营经济则更加发达，所以综合分析，粤西也只能说是略占优势。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:58:01","updateTime":"2021-05-03 03:58:01","isExist":null},{"id":1363,"question":"茂名和湛江面积?","simplecontent":null,"content":"茂名面积为11445平公里，湛江为12490平方公里，粤西经济圈总面积为23935平方公里。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:56:54","updateTime":"2021-05-03 03:56:54","isExist":null},{"id":1362,"question":"珠三角是哪些城市?","simplecontent":null,"content":"珠三角是绝对的经济中心，珠三角共包括广州、深圳、佛山、东莞、中山、珠海、江门、肇庆、惠州共9个城市","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:55:50","updateTime":"2021-05-03 03:55:50","isExist":null},{"id":1361,"question":"粤西地区和潮汕对比?","simplecontent":null,"content":"城市化率，这是3年前的数据，汕头68%＞潮州63%＞揭阳47.31%＞阳江46.81%＞湛江37%＞茂名35%，虽然潮汕地区城市化率60%不及珠三角，但也明显比粤西要高很多。（沿海的浙江、江苏两省城市化率65%左右，剔除直辖市和港澳台，排名在全国第三和第四）\n\n再看看工业和民企。工业用电量一项，汕头一市超过了西安、海口、南昌、长沙一批省会城市。2017年汕头一市企业商标注册数量全国城市排名16。揭阳潮州也进入前40名。三市单列全国排名第九。潮汕地区也是广东民企经济最活跃的地区。\n\n\n潮汕地区毗邻港澳台，广东福建台湾东南沿海三省中心。粤西毗邻广西海南，地理位置也不言而喻。后劲的话，海南自贸区起来粤西肯定也会被带动。粤东方面，深圳市区向东扩容，深汕区上升地位。后劲不容小觑。\n\n\n而粤西地区，毗邻北部湾，与广西接壤，和海南隔海相望，接洽东南亚。近些年来靠着自身的地理优势，以及当地人敢闯敢拼的精神，内外联动，经济发展势头强劲，各市经济增速都保持在省内靠前位置。\n\n这还用说吗，国内的名校都是按地市级去评的，向清华和北大在北京。上海交大和复旦在上海。华南理工华南师范是在广州。自然潮州是三线城市。茂名跟梅州是四线城市。而且潮州还有一个大学韩山师范学院，这个属于省一级本科大学。所以潮州肯定是最好的选择\n\n肯定是潮州好了，潮州八景名闻天下，亲临于韩江边，领略潮人文化，潮人气息！ 谢谢采纳\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:54:34","updateTime":"2021-05-03 03:54:34","isExist":null},{"id":1360,"question":"粤西地区和潮汕人口对比?","simplecontent":null,"content":"我们再看看各市常住人口，茂名800＞湛江724＞揭阳606＞汕头557＞潮州264＞阳江251（单位：万人）\n\n\n这是常住人口数据，潮汕地区人口密度远高于粤西人口，对比户籍人口，粤西流出人口318万。潮汕人口流出108万。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:48:47","updateTime":"2021-05-03 03:48:47","isExist":null},{"id":1359,"question":"粤西地区?","simplecontent":null,"content":"粤西地区，按地理角度来划分，包括湛江，茂名，云浮，阳江四市。但是，从经济角度来划分，一般指湛江，茂名，阳江三市。潮汕地区，一般是指粤东南的潮州，汕头，揭阳三市。但不包括汕尾市。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:46:42","updateTime":"2021-05-03 03:46:42","isExist":null},{"id":1358,"question":"茂名人讲白话?","simplecontent":null,"content":"茂名人讲白话，茂名人很可爱，我喜欢茂名……而你最终的去向还是得取决于你的个人因素，在哪个城市并不重要，重要的是你在那里有没有归宿感！","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:44:33","updateTime":"2021-05-03 03:44:33","isExist":null},{"id":1357,"question":"茂名的三高农业?","simplecontent":null,"content":"变成了荔枝园、龙眼园、香蕉园、养猪场、养鸡鸭场、白鸽场。除了老板之外，不少来自广西、云南的打工仔，带着自己的老婆，兄弟来到这里打工，为茂名市发展“三高”农业作出贡献。\n\n全国水果第一市，成了荔枝、香蕉、龙眼的水果之乡，也得益当年的政府英明决定，大力发展“三高”农业，成就了今日的辉煌。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:43:22","updateTime":"2021-05-03 03:43:23","isExist":null},{"id":1356,"question":"茂名什么行业比较好?","simplecontent":null,"content":"重点抓好石油化工、农副产品加工、矿产资源加工、特色轻工纺织、医药与健康、金属加工及先进装备制造等六大主导产业\n\n养殖业","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:40:21","updateTime":"2021-05-03 03:40:21","isExist":null},{"id":1355,"question":"舔姿的二姐?","simplecontent":null,"content":"大儿子是汉屋\n小女儿是宇桐","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:32:08","updateTime":"2021-05-03 03:32:08","isExist":null},{"id":1354,"question":"舔姿的大姐三个孩子名称?","simplecontent":null,"content":"大女儿 研希\n二儿子 沐希\n三女儿 安研\n\n姐夫是开幼儿园陶瓷\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:30:28","updateTime":"2021-05-03 03:30:28","isExist":null},{"id":1353,"question":"潮州去哪里发展?","simplecontent":null,"content":"我也是啊，双方潮州的，也在广州出生。我想是很多人都去深圳福建那些地方做生意，家乡那边除非是节日什么的，都比较空，也没什么人会注意那里的建设...","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:28:01","updateTime":"2021-05-03 03:28:01","isExist":null},{"id":1352,"question":"潮州管理哪些区?","simplecontent":null,"content":"1991年汕头市分治，分成汕头、潮州、揭阳三市，潮州市成立，管理饶平县、湘桥区和潮安县，2013年潮安县改为潮安区。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:17:27","updateTime":"2021-05-03 03:17:27","isExist":null},{"id":1351,"question":"潮汕地区的特色产业有哪些？","simplecontent":null,"content":"潮州市是中国瓷都、中国晚纱晚礼服名城、国家日用陶瓷特色产业基地、国家重点工艺美术城市。 饶平县黄冈镇的特色产业是水族机电，海产品加工出口。\n\n潮州的陶瓷生产有1300多年历史，是中国最大的工艺美术瓷、日用瓷和卫生洁具生产基地，也是中国最大的工艺瓷和工艺化日用瓷出口基地，潮州市有陶瓷生产厂家10000多家，并形成了完整的产业链条。潮州市依托陶瓷产业优势，正在致力打造陶瓷产品制造中心、研发中心和集散中心。\n\n不锈钢制品产业，彩塘几乎所有的不锈钢企业都拥有自己的品牌，有438个项目申请了专利。不锈钢产品销往中国各地以及欧洲、北美、东南亚及中东等地区，彩塘被誉为名副其实的“不锈钢王国”。\n\n婚纱晚礼服产业在全国乃至全世界都有着巨大的产业优势，成为国内外最大的婚纱、晚礼服生产集聚地和出口基地，产品远销欧美、东南亚、韩国、日本和中东等20多个国家和地区。\n\n汕头市澄海区的特色产业是玩具跟羊毛衫，潮阳区的谷饶镇与潮南区的陈店镇的特色产业是内衣，潮南区峡山镇的特色产业是化妆品跟文具，潮阳区和平镇的特色产业可刻录光盘。\n汕头是全国主要港口城市、中国最早开放的经济特区、海西经济区重要组成部分。汕头港于1860年开埠，素有“岭东门户、华南要冲”、“海滨邹鲁、美食之乡”美称","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:13:42","updateTime":"2021-05-03 03:13:42","isExist":null},{"id":1350,"question":"房子是婚前财产，房子婚后加了女方名字，如果离婚如何判？","simplecontent":null,"content":"一、婚前男方全额购买的房产，房产证上写的是男方名字。婚后房产证所有权人加上女方的名字，这套房产就是夫妻共同财产了，视为男方对女方房产份额的赠与。如果夫妻离婚，房产分割协商解决。如果协商不成，去法院起诉，一般法院会判决夫妻各分得房产份额的二分之一。\n\n2.若房子是一方当事人婚前全款购得，婚后添加另一方名字，视为赠与登记双方名字后认定为夫妻共同财产。\n离婚时，对共同财产分配的方法与原则：　\n《婚姻法》第三十九条规定，离婚时，夫妻的共同财产由双方协议处理；协议不成时，由人民法院根据财产的具体情况，照顾子女和女方权益的原则判决。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 03:02:37","updateTime":"2021-05-03 03:02:37","isExist":null},{"id":1349,"question":"女方要求在她的老家买房算不算上门女婿？","simplecontent":null,"content":"女方要求在他的老家买房子，算不算上门女婿，我觉得这个不叫做上门女婿吧，你又不与他的父母一起住，你们两个人买的房子是在他老家那个城市所购买的，因为这个女方不愿意离开自己的家，不愿意离开自己的父母。他现在并不是说你和他结婚之后住到他爸爸妈妈的家里面去，然后生了孩子跟他姓这样子，才算作是上门女婿呀。\n你们现在两个人结婚，然后买房子在他老家，这种情况是属于很正常的。但是我觉得你心里面有一个借地，认为在女方家生活就是上门女婿。如果说你问你的父母，我觉得你的父母肯定是不会同意你在那边买房子的，你的父母肯定是想让你在他们家附近去买房子，这样子就可以天天见得到你了。\n所以你自己要考虑清楚哟，真的在女方那边买了房子，那么你就不能够孝顺你自己的父母了，毕竟你有自己的家，自己的生活不可能天天回父母家去帮忙吧。\n但是反过来作为女方来说也是如此。传统的习俗，女方要嫁到男方去，从此以后要见自己的父母真的也是非常难的一件事情，将心比心吧。\n我觉得你还是比较介意做上门女婿这件事情的，你们都会觉得做上门女婿是非常不光彩的一件事情，非常丢面子。所以宁可打光棍也不做上门女婿。要是现在都是新时代了嘛，男女平等，女方可以要求你在他那边买房子，你自然可以不同意。那么你也可以要求女方跟随你到家乡去生活，当然他也有拒绝的权利。\n我觉得关键的就是你们两个人坐下来好好的商量以后的婚姻问题，还要住宿问题。\n\n\n这并不算是上门女婿，只是女方不想离开父母太远","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:59:22","updateTime":"2021-05-03 02:59:22","isExist":null},{"id":1348,"question":"丈母娘要是问我打算买房吗我该怎么回答比较好?","simplecontent":null,"content":"打算买，看发展\n等有了孩子再买","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:57:29","updateTime":"2021-05-03 02:57:29","isExist":null},{"id":1347,"question":"蚝烙如何做?","simplecontent":null,"content":"步骤 1\nspace\n纯奶手撕吐司的做法 步骤1\n材料：蚝肉（选用中小型的，如一元硬币大小的）400至500G，鸡蛋1-2个，红薯粉、玉米淀粉各少许，总数120G左右，（比例为4：1，地瓜粉占4，淀粉占1，搅到稍稠点的米浆，自个掌握），葱末，香菜，胡椒粉，鱼露，盐， 适量\n\n步骤 2\nspace\n纯奶手撕吐司的做法 步骤1\n先将蚝肉上沾的杂物挑拣出來，比如粘在肉上的碎壳.\n\n步骤 3\nspace\n纯奶手撕吐司的做法 步骤1\n蚝肉先用盐泡一下\n\n步骤 4\nspace\n纯奶手撕吐司的做法 步骤1\n用盐泡十來分鐘后，可以用两种方式处理，第一是放流动水里冲干净，去掉表面那层粘液即可，然后过滤干一点再搅粉，但因为水分较大可能导致面糊过稀，可以少打一个蛋来平衡量一下。第二种就是烧开一锅水，将蚝过一下开水快速倒出来，依然可以保持蚝的鲜嫩口感。\n\n步骤 5\nspace\n纯奶手撕吐司的做法 步骤1\n用一碗，分别放入红薯粉，淀粉，蚝肉，盐，胡椒粉，鱼露，鸡蛋液一起搅匀，注意要搅到面糊没有颗粒状，再放入葱花搅一下。\n\n步骤 6\nspace\n纯奶手撕吐司的做法 步骤1\n攪成這樣\n\n步骤 7\nspace\n纯奶手撕吐司的做法 步骤1\n开大火热锅，水干后倒入植物油，油量要多一些，我今天放了有几大勺.\n\n步骤 8\nspace\n纯奶手撕吐司的做法 步骤1\n烧得有些许冒烟后，将搅好的面糊倒入锅里，用手把着锅柄转动锅体，让面糊能均匀的平铺在锅体内，火一定是保持大火，由于有了足够的油，，油温能快速的将面糊表皮煎到酥脆，而里面的面糊也由于能因为温度快速定型，一般锅底与锅边的凝固得比较快，中间的需要不停的用手转动锅将面上的液体继续往边沿的流动加速其凝固。\n\n步骤 9\nspace\n纯奶手撕吐司的做法 步骤1\n中大火讓面糊极快的凝固和膨脹至酥\n\n步骤 10\nspace\n纯奶手撕吐司的做法 步骤1\n当九成的面糊都凝固后，将整个饼翻个面，继续中大火的煎，由于之前放了足够的油，所以翻面后面糊也能很快的煎出金黄色，此时就可以出锅啦\n\n步骤 11\nspace\n纯奶手撕吐司的做法 步骤1\n一般来说，后煎那面会更好看，蚝的形状会更完整。所以我是先倒出盘后，再用另一个盘盖在面上再翻过来。然后洒上香菜末，配上泰式辣酱就可以吃喽。\n\n步骤 12\nspace\n纯奶手撕吐司的做法 步骤1\n停不下筷子的節奏呀⋯⋯\n\n蚝烙（蚵仔煎）的小贴士","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:50:28","updateTime":"2021-05-03 02:50:28","isExist":null},{"id":1346,"question":"潮州蚝烙?","simplecontent":null,"content":"我家姨妈，最拿手的就是蚝烙，每次上家里吃饭，我都不用多说，姨妈就知道想要吃她亲手做的蚝烙，这次我copy了姨妈的方法过来，加了点辣椒酱调味，煎熟后的蚝烙呈金黄色，酥而不硬，多汁不软，香而不腻，重要的是一定要配香菜叶，蘸上鱼露食用才最佳。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:48:43","updateTime":"2021-05-03 02:48:43","isExist":null},{"id":1345,"question":"潮州肠粉?","simplecontent":null,"content":"和广州的肠粉不同，潮州的肠粉每一家的调料都各有不同，但主要还是以芝麻酱+沙茶酱混搭为主，譬如白弟水磨肠粉就是众多在外游子和工作人员回潮后品尝家乡味道的首选。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:45:44","updateTime":"2021-05-03 02:45:44","isExist":null},{"id":1344,"question":"潮州甲第巷?","simplecontent":null,"content":"虽然比起大气的牌坊街，这条仅200米的甲第巷，诚然是不起眼。不过即便如此短，但却云集了数十座大大小小的明清宅院，可谓是浓缩了潮州古民居的精华。你想要了解和看到的潮州古民居风格，譬如中国凹式门廊，凹式的大门石框，油漆木门，欧洲巴洛克装饰，潮汕特色装饰嵌瓷等等，这里都能看到。\n\n作者：马且停\n链接：https://www.zhihu.com/question/23773597/answer/865650404\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:43:57","updateTime":"2021-05-03 02:43:57","isExist":null},{"id":1343,"question":"潮州开元寺?","simplecontent":null,"content":"晚上去看，没有开门，收门票，白天去好点会开门","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:40:57","updateTime":"2021-05-03 02:40:57","isExist":null},{"id":1342,"question":"潮汕地区划分?","simplecontent":null,"content":"首先来分享一下小马对于潮汕的理解。查过不少资料，发现潮汕地区主要包括了潮州、揭阳、汕头三地，其中三个地区有分为市区和非市区，潮州包含了潮安县，揭阳包含了揭西和普宁市，汕头包含了朝阳和潮南区。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-03 02:39:59","updateTime":"2021-05-03 02:39:59","isExist":null},{"id":1341,"question":"五一电影靠前?","simplecontent":null,"content":"1.《你的婚礼》1.73亿\n2.《悬崖之上》1.02亿\n3.《秘密访客》9047万","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 16:29:12","updateTime":"2021-05-02 16:29:12","isExist":null},{"id":1340,"question":"小时候玩的游戏?","simplecontent":null,"content":"拳王，植物大战僵尸，超级玛丽，魂斗罗，","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 16:26:17","updateTime":"2021-05-02 16:26:17","isExist":null},{"id":1339,"question":"潮州话题?","simplecontent":null,"content":"都是自建房吗\n有钱人很多吧\n镇里发展听不错，房子多少钱\n养小孩子不容易\n附近小学多吗\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 16:23:21","updateTime":"2021-05-02 16:23:21","isExist":null},{"id":1338,"question":"大梅沙和小梅沙区别?","simplecontent":null,"content":"1/3分步阅读\n首先，大梅沙是免费的，无需门票；相反，小梅沙则需要门票才可以进去。目前，小梅沙的门票价格大概是30元，有需要的游客在一些其他第三方平台购买，门票价格可能会有一定的优惠。\n\n\n2/3\n其次，大梅沙周边的消费水平整体要低于小梅沙。譬如，一件泳衣在大梅沙可能只要二三十元，而在小梅沙同样的一件泳衣则可能需要五十元。与此类似，其他的很多消费，小梅沙都要高于大梅沙。\n\n\n什么牌子的旅游门票好?选择这款旅游门票，点击获取详情\n广告\n3/3\n综上所述，去大梅沙游玩的整体消费会低于小梅沙很多。因此，对于对费用比较介意的游客，或是消费能力比较低的游客，大梅沙可能更适合玩耍。反之，若是不太介意费用的话，小梅沙也是不错的选择。\n\n\n来小红书app，看广东深圳三日游\n广告","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 10:55:10","updateTime":"2021-05-02 10:55:10","isExist":null},{"id":1337,"question":"如何选择小学?","simplecontent":null,"content":"公力还是私人","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:15:47","updateTime":"2021-05-02 07:15:47","isExist":null},{"id":1336,"question":"如何选择小学?","simplecontent":null,"content":"1/6分步阅读\n    孩子上课的班级人数不要过多。\n\n    当班级人数过多，老师就没有精力和时间来根据每个孩子的不同个性和基础来合理教学，班级管理也很难到位。一个班级三四十人比较合适。如果超过六十人就过多了。\n\n\n2/6\n    父母需要看孩子是否适应寄宿生活。\n\n    如果有的小学要求寄宿，家长要仔细考虑自己孩子是否适应寄宿生活。有的孩子比较内向年纪比较小，生活上也没学会完全自理，并不适合寄宿生活，进而影响学习成绩。应该等孩子真正有了寄宿的心理准备和生活能力才能送去寄宿小学。\n\n\n孩子叛逆期怎么管教?父母的忧虑-找麦田教育\n广告\n3/6\n    父母不要光看学校近年的排名，而要看其发展潜质。\n\n    家长都喜欢上排名靠前的重点小学，但是有的重点小学有点固步自封发展缓慢。一个好的学校应该是有活力的，在各方面都有发展的潜质，一个处于上升期的学校也是值得选择的。\n\n\n孩子叛逆期成绩差，千万别打骂!这位妈妈这样教育孩子\n广告\n4/6\n    父母需要仔细考察学校老师的各方面的水平和素质。\n\n    进入学校之前，家长应该考察一下学校老师的教学水平和自身素质怎么样。老师教学水平高，学生才能学到知识。老师的精神素质高，才能真正爱学生，让孩子健康成长。\n\n\n叛逆期的孩子不爱学习怎么办 孩子叛逆期，家长绝望:真的没有办法了嘛?\n广告\n5/6\n    父母可以根据孩子的兴趣发展选择有特色的学校。\n\n    不同的家庭情况，有的家庭对孩子从小就有培养方向，比如以后从事音乐、美术或者武术等专业。家长可以根据孩子的兴趣和天赋来选择有特色的学校。比如一些特色大学的附小等等，老师都会在课余加强对孩子的兴趣培养和指导。\n\n\n6/6\n    父母可根据家庭经济收入","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:15:30","updateTime":"2021-05-02 07:15:30","isExist":null},{"id":1335,"question":"小孩子如何选择小学?","simplecontent":null,"content":"你想去就近小学上学，但是没有学位没有学位，你只能够选择稍微远一点的地方。你不可能把别人的学位挤掉让你进去的。\n\n义务教育期间孩子的入学教育原则就是就近入学。只要你在户籍所在地，你的孩子就近入学那就是当地教育主管部门必须解决的问题。你可以到当地的教育主管部门去反映你的现实情况，让当地主管教育部门帮你解决就近入学的问题。但是如果你不是户籍所在地，只是在外做生意或做其他营生，为了让随同的孩子就近入学，恐怕要解决这个问题，就不是那么容易的了。你首先可以向当地教育主管部门或者学校申请解决孩子入学的问题，如工作地不能解决孩子入学问题，那你只能让你的孩子回到户籍所在地，在户籍地学校进行学习完成小学教育。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:14:08","updateTime":"2021-05-02 07:14:08","isExist":null},{"id":1334,"question":"小孩子哭怎么办?","simplecontent":null,"content":"当孩子有哭闹的时候：\n\n第一，首先要寻找引起孩子哭闹的原因，由于孩子不会用语言表达，只能通过哭闹的方式来表达，首先要看一看是否由于大小便的原因引起的哭闹，及时给孩子更换尿片，保持孩子的小屁屁干燥。\n\n第二，孩子是否有饥饿，喂养间隔时间是否过长，如果饥饿引起的，需要及时给孩子喂养。\n\n第三，是否由病理性的因素引起，比如是否有腹胀，腹痛等等，可以触诊孩子的肚子，了解孩子是否有腹部隆起，腹部张力是否有高，是否有触痛等等，如果是由病理性的原因引起，需要及时祛除病因，才能缓解孩子哭闹。\n\n\n1/5分步阅读\n一：可能是饥饿；由于小宝宝刚开始还不会语言表达，只好用哭来和大人诉说他的问题，如果是饥饿的话，那么要及时给宝宝吃奶，因为宝宝一般来说只是知道吃和睡。\n\n\n2/5\n二：可能无聊；要知道宝宝一个人时候也是很无聊的，需要我们去陪她说说话和她一起逗逗乐来陪伴她，让她感觉到亲人的关怀照顾，这样才会笑起来。\n\n\n3/5\n三：可能身体不舒服；当然这个不舒服或者是由于衣服太紧或者位置放置不当所引起的，所以宝宝一定敖穿戴和放置舒适的场所，这样宝宝才能很好的补充睡眠不吵不闹。\n\n\n4/5\n四：可能需要上厕所；当宝宝一定大的时候会有这个反应的，这个不需要着急，毕竟现在大家都使用尿不湿，但是也要记得勤换洗，这样才能保证舒适的宝宝成长环境。\n\n5/5\n五：可能烦躁，如果环境太吵或者太热引起的话，那么小宝宝也会不舒服会大声哭泣。我们这个时候一定要避免嘈杂的环境来影响宝宝，毕竟宝宝刚出生各个功能不能受到太大的刺激。\n\n注意事项","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:13:12","updateTime":"2021-05-02 07:13:12","isExist":null},{"id":1333,"question":"小孩子吃多少餐?","simplecontent":null,"content":"对宝宝一天该吃多少顿，主要根据孩子的年纪，吃的顿数有所不同。孩子刚出生时一般只吃奶，大部分孩子大概每三个小时吃一顿，一天大概吃八顿。一些纯母乳喂养的孩子一天可以吃到8-12顿，因为母乳在孩子刚出生时分泌还不太稳定，所以吸吮可能会比较频繁，一天吃8-12顿都可以接受。\n随着孩子长大，包括母乳分泌的稳定，或者吃奶粉的孩子，这个时候慢慢就要去增加奶量，逐渐减少进奶的次数，比如当孩子3-4个月的时候，一般就大概四个小时吃一顿，一天可能6-7次左右。随着进一步长大，比如到六个月以后开始添加辅食，可能每天就是吃一顿辅食、五顿奶等等。随着孩子进一步长大，到一岁以后，此时就应该一天正常吃三餐，也就是吃三顿饭，然后再喝2-3顿奶，保证全天500-600mL的奶量。所以，对于孩子一天吃多少顿奶并没有特别严格的要求，能够保证全天的进奶量和进食量，保证有正常的生长发育就可以。\n\n很多小宝宝的饭量很大，把饭吃的光光，而且最后也舔的干干净净。这让很多妈妈非常担心并且说出实情，小宝宝每顿饭都要吃这么多。那么妈妈们到底让宝宝一顿饭吃多少东西才合适呢?吃多了会不会对身体有影响?","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:07:03","updateTime":"2021-05-02 07:07:03","isExist":null},{"id":1332,"question":"房子朝向哪里好?","simplecontent":null,"content":"每个房子都是有着自己的朝向的，而房子如果朝向不好的方位，那么自然是会影响住宅风水，带给住宅人不好的运势以及是不适合健康的一个环境，那么房子应该如何朝向呢？和小编一起去看看风水学中关于房子朝向的风水知识吧。\n\n风水学上房子朝向哪个方位最好\n\n房子风水最好的朝向有如下：\n一、坐北朝南的房子，气场平和，财运减弱，但不至于衰败。宜守成，不宜创业。<详情..>\n\n二、坐东北朝西南的房子，大吉之象。是非常适合办公环境的流年方位。宜创业。多有发财升迁之喜。<详情..>\n\n三、坐东朝西的房子，身体康健、家庭幸福，但事业败落，有志难申。<详情..>\n\n四、坐东南朝西北的房子，不吉之象，尤其不利于中年女人。家庭不和，财运受阻。\n\n五、坐西朝东的房子，生气勃勃。也是一个适合创业的流年方位。但家居这个方位，在流年上不是很……<详情..>\n\n六、坐西南朝东北的房子，这是一个相对吉祥的人居风水方位。内在和美，外在平实，是非常适合家庭居住的流年方位。\n\n七、坐南朝北的房子，衰败之象。多口舌纷争，是非不断，财运平平。\n\n房子最好是不要朝向一些风水不好的地方，比如说寺庙，医院，墓群，这些地方只会给住宅带去不好的风水。\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:03:55","updateTime":"2021-05-02 07:03:55","isExist":null},{"id":1331,"question":"房子风水?","simplecontent":null,"content":"房子选南朝向的户型是最受追捧的，朝南的房屋可以保持充足的阳光，即使在冬天阳光也一样能照射到同样的深处，令人有明亮温暖的感觉，而夏季阳光直射，屋内则受不到强烈日光的照射；其次房屋可以保持良好的通风，保证室内的清新和干燥。\n\n房间也是朝向南好","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 07:01:00","updateTime":"2021-05-02 07:01:00","isExist":null},{"id":1330,"question":"小孩子牙齿掉会疼吗?","simplecontent":null,"content":"病情分析：一般情况下，当小孩子成长到6个月到7个月的时候会长出乳牙，而这个乳牙也是第1波牙齿会一点一点成长，当小孩子在继续长到童年时期的时候，就会出现一个退牙期，在退牙期口腔里面的牙齿是会一点一点的退掉的，再退掉之后才会长出新芽，而这个碎掉的过程是会引起疼痛的，这是因为退掉是一个慢性的过程往往会牙齿自动松动，然后再慢慢的往下掉，这个时期可能会有痒痛的感觉，而如果没有处理好的话，甚至可能会引发发炎，一旦发炎就会更加疼痛。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:59:18","updateTime":"2021-05-02 06:59:18","isExist":null},{"id":1329,"question":"小孩调多少牙齿?","simplecontent":null,"content":"病情分析：你好，孩子出生后六个月左右开始出牙，是乳牙，在六岁左右开始乳牙脱落，生长出新的牙齿，是恒牙，乳牙会全部脱落。换牙清洁要注意口腔卫生，坚持每天刷牙，进食后漱口。补充足量钙剂。\n\n病情分析：孩子大约6.7岁吧，正是乳牙脱落，恒牙萌出的时间，乳牙共20颗，需要全部脱落，恒牙共32颗，在6.7岁时开始逐渐萌出，如果恒牙萌出，乳牙仍未脱落，需要到医院拔除","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:58:17","updateTime":"2021-05-02 06:58:17","isExist":null},{"id":1328,"question":"小孩子什么掉牙?","simplecontent":null,"content":"小孩一般6岁开始换牙，换牙的时候先换下颌的中切牙，也就是下颌乳中切牙先脱落，然后长出恒中切牙，然后再换上颌的中切牙，先乳牙脱落再萌出新的恒牙，在萌出的过程中乳牙就开始慢慢的松动，然后自行脱落。但是现在也有些孩子，乳牙只是松动但是不脱落，或者松动程度不是很严重，在乳牙的舌腭侧长出新的恒牙，就出现了乳牙滞留。如果出现了乳牙滞留，需要到正规医院的口腔科或者大型医院的儿童口腔科、口腔颌面外科将滞留的乳牙拔除。另外要想让乳牙脱落很正常，最好在1-6岁之间多吃点比较硬的食物，可以促进颌骨发育，颌骨发育好了自然就有位置让恒牙萌出，恒牙萌出自然会让乳牙脱落。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:57:19","updateTime":"2021-05-02 06:57:19","isExist":null},{"id":1327,"question":"小孩子学什么课程?","simplecontent":null,"content":"碎碎念\n我是80后超级辣妈，虽然有着高学历，但是，自认为无法驾驭当下的幼儿教育。回想起我小时候，只在六年级时学了一门“作文”，当时是因为作文真的不咋地，老师要求的800字作文，我吭哧半天只能写二三百字，所以，学写作文，算是上学或者考试的一种需求，针对性学习。后来，渐渐大了，在我自己的要求下，学习了书法，以及形体模特。对80后来说，可能我学的这些课程，已经算比较多了。很多80后的朋友们都有体会，改革开放初期，家里的经济条件都不好，吃上一顿饱饭，已经是不错的生活，爸妈都要去上班赚钱，既没有时间，也没有闲钱去额外的学习。但是，在我的孩子出生之后，身边妈妈们开始讨论：哪哪有舞蹈班，哪哪可以学画画？甚至还有妈妈已经放眼小学，看看应该在哪里买个学区房，将来可以让孩子进入理想的小学。天哪！跟她们比起来，我属于那种还活在二十世纪九十年代的人，是如此的落后和不自知啊。\n\n所以，在孩子两岁多的时候，我也开始了给他报班的旅程。\n\n第一站：启蒙教育 -- 早教\n幼儿十种常见兴趣班全分析_新浪众测\n\n其实，早教算是孩子接触社会的第一站。当初报早教的时候，是觉得家里经济条件来得及，而且孩子还没上幼儿园，没有小伙伴，所以，想让他提前感受上课的氛围，也为了让他有机会接触到其他小朋友，有更多的机会走出家门。\n\n【问题】：离不开爸妈，是所有小朋友小时候的通病，或者说，不应该算是“病”，而是小朋友初次离开妈妈怀抱的一种恐惧吧。如何帮助小朋友尽早了解集体生活的意义，如何帮助他们尽快的脱离对妈妈的依赖，是幼儿需要面对，也是妈妈们需要面对的第一课。\n\n【意义】：早教的课程其实真的没有太多的内容，无非是拿着五颜六色的卡片，让孩子去识别颜色、形状，等等。而且，初期的早教是妈妈陪着宝宝一起上课，一般课时在40分钟左右，很多小朋友整节课会腻在妈妈怀里，但是也有很多小朋友会在五颜六色的教室里跑来跑去。小朋友会经过一段时间课程的适应，学习一个学期，一般可以坐的稳稳的，整节课不会到处乱跑了。而且，小朋友可以在五颜六色的玩具中间找到自己的最爱，带动小朋友走出家门，与其他小朋友一起体验在教室里上课的乐趣。\n\n【重点】：刚才说过了，早教的课程并没有太多的重点要点。早教的意义在于接触社会，给小朋友提供更好的娱乐和交友场所。所以，选择早教的重点在于--离家近。就近选择早教，离家近，方便于爸爸妈妈，或者爷爷奶奶带着小朋友去上课，或者在","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:56:22","updateTime":"2021-05-02 06:56:22","isExist":null},{"id":1326,"question":"小孩子学什么课程好?","simplecontent":null,"content":"前一段时间，小区旁边一家英语培训班新开业，做活动，非常便宜，我和孩子爸爸就抱着试试看的心态，给孩子报名了。小孩今年6岁了，周二周四学习钢琴，周六上午学习画画，下午学习英语，周日休息。\n最近孩子又喜欢上了唱歌和武术，每天喊着要我给他报这些课外班，但是时间上确实安排不过来，我希望将周日定为家庭活动日，所以周日全家都休息，就没有给他报这两样课程。\n昨天，他的英语课老师说，这学期的英语课即将结束，问我要不要报下一期？\n我也不知道该不该报，因为不做活动的课程费用还是挺高的。陪孩子上课的过程中，结识了几个家长，他们说自己的孩子基本都报有四五项，男生一般都是跆拳道、钢琴、绘画、写字、英语等，女生一般是舞蹈、钢琴、绘画、英语、音乐等。\n\n看到他们报这么多，我突然有点焦虑感，孩子报这么多名，能够学的会么？时间能够分配过来么？家长能够负担起么？\n\n以前，每逢下午放学或者周末，小区的孩子都非常多，小孩的玩伴也非常多，但是，现在不知什么原因。下午放学后或者周末时间，小区的孩子明显减少了。先生说是因为小区入住率不高，但是我觉得再不高，他那些同学都是这个小区的呀，为啥周末也很少见到？不至于都是外出旅行吧？\n后来，经过了解，发现很多孩子的时间基本都给了辅导班。\n这让一直有焦虑症的我更加焦虑了，都说孩子要赢在起跑线上，才开始，就跟人家差一大截，怎么办？\n为此，我特意请教了幼儿园的育儿心理学老师，我将我的这些焦虑都分享给了老师，老师告诉我，我的做法是正确的。\n1.孩子在报辅导班时，并不是越多越好，而是要看孩子的兴趣，根据孩子的兴趣和特长，选择一两项即可，没必要报那么多，样样学，可能会样样不精。\n2.孩子还是长身体的阶段，过度的辅导班，会压抑孩子的成长。孩子还是更适合在大自然中成长，应该多带孩子出去走走。\n3.画画辅导班可以从3-5岁开始；钢琴兴趣班，女孩可以从4岁开始，男孩可以从5岁开始；三岁以内不建议学习武术、跳舞；古筝兴趣班，可以从5岁开始启蒙，10岁开始系统学习。\n\n\n希望这些知识能够帮助到广大家长，让我们的孩子更加健康快乐的成长～\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:54:29","updateTime":"2021-05-02 06:54:29","isExist":null},{"id":1325,"question":"孩子话题?","simplecontent":null,"content":"子话题有很多，比如说，关于孩子挑食的问题，怎么让孩子健健康康的成长，怎么培养孩子的兴趣爱好，怎么培养孩子良好的学习习惯，还有如何给孩子更高效的陪伴，","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:48:15","updateTime":"2021-05-02 06:48:15","isExist":null},{"id":1324,"question":"小孩子话题?","simplecontent":null,"content":"婴儿期就是关注小孩身长情况，辅食吃什么，用什么尿不湿，什么时候断奶之类的育儿问题；\n\n到两周岁，亲子教育\n\n上幼儿园之后就是要报什么辅导班","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:47:29","updateTime":"2021-05-02 06:47:29","isExist":null},{"id":1323,"question":"小孩子话题?","simplecontent":null,"content":"刚出生：吃母乳还是吃奶粉？有没有新生儿黄疸？夜奶几次？长的快不快？\n\n几个月：会不会翻身？体重多少？身高多少？一天拉几次？什么纸尿裤好用？一天用多少纸尿裤？你家都买什么玩具？\n\n加辅食后：米粉选什么的好？辅食吃啥？水果吃啥？饭量多大？会坐了不？会爬了不？对什么感兴趣？\n\n一岁左右：断奶了么？奶粉吃的哪个？会走了么？你家最近体检咋样？辅食吃的咋样？你家报早教了么？早教选哪个？\n再大一点：你家房子是学区房么？幼儿园上哪个？小学上哪个？\n\n生病时：宝宝用什么药，什么时候用药，发烧怎么办之类的。\n\n打疫苗时：疫苗哪些打免费的好，哪些打自费的好，哪些借钱也要给孩子打。\n\n吐槽月嫂的，吐槽育儿师的，吐槽保姆的，吐槽婆婆的，吐槽老公的，秀恩爱的，我在宝妈群里见证了太多话题，我居然都插不上嘴，害。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:47:03","updateTime":"2021-05-02 06:47:03","isExist":null},{"id":1322,"question":"养小孩胡title?","simplecontent":null,"content":"不容易\n多生几个容易带\n谁带\n这叫什么\n几岁\n喜欢玩什么\n读书学什么\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:45:48","updateTime":"2021-05-02 06:45:48","isExist":null},{"id":1321,"question":"孩子学什么?","simplecontent":null,"content":"音乐，游戏，运动","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 06:36:58","updateTime":"2021-05-02 06:36:58","isExist":null},{"id":1320,"question":"潮州这些美食是什么?","simplecontent":null,"content":"腐乳饼、鸭母捻、笋粿、咸水粿、粿汁等。鸭母捻：鸭母捻皮柔韧，馅软滑，且有多种馅，为便于区分，不同馅的鸭母捻都有自己的记号，如有的形状圆、有的椭圆，有的有红点。笋粿：笋粿中加入猪肉、香菇、虾米，调进盐、味精、胡椒粉、蒜蓉等，然后包在用大米磨成的粉特制的粿皮中，蒸熟即可进食。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:57:02","updateTime":"2021-05-02 03:57:02","isExist":null},{"id":1319,"question":"牌坊街人多不多？","simplecontent":null,"content":"多","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:56:13","updateTime":"2021-05-02 03:56:13","isExist":null},{"id":1318,"question":"潮州水果?","simplecontent":null,"content":"潮州特产水果有潮州柑，柚子，橄榄，酸梅等等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:53:57","updateTime":"2021-05-02 03:53:57","isExist":null},{"id":1317,"question":"茂名水果？","simplecontent":null,"content":"荔枝、龙眼、香蕉、黄皮、杨桃、树菠萝茂名市位于广东省西南部","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:53:04","updateTime":"2021-05-02 03:53:04","isExist":null},{"id":1316,"question":"习近平去潮州玩?","simplecontent":null,"content":"10月12日下午，习近平总书记赴广东考察调研。当天下午，他首先考察了潮州市广济桥、广济楼、牌坊街，察看文物修复保护、非遗文化传承、文旅资源开发等情况。总书记来到潮州古城，看商铺、问物价，同当地群众亲切交流，了解历史文化街区保护和复商复市等情况。总书记所到之处受到当地百姓发自内心的欢迎和拥戴。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:51:27","updateTime":"2021-05-02 03:51:27","isExist":null},{"id":1315,"question":"潮州话?","simplecontent":null,"content":"甜食多\n这边热\n上班","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:21:46","updateTime":"2021-05-02 03:21:47","isExist":null},{"id":1314,"question":"鹅肉为什么好吃?","simplecontent":null,"content":"2、鹅属于大型家禽，吃得多，生长期长。从投资收益角度来看，养的人少；中医认为鹅肉是发物，有某种疾病的时候不能乱吃，多数人不敢吃。可能以上是造成市场上鹅肉少的原因。\n\n3、有人说鹅是发物，吃了容易发病，养鹅的人会觉得不好大规模养殖，因为不能在短期增重，料肉比不高，农户要亏本。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 03:19:10","updateTime":"2021-05-02 03:19:10","isExist":null},{"id":1313,"question":"为什么六合彩违法?","simplecontent":null,"content":"　　二是六合彩、私彩赌博活动。这种赌博活动利用国内正规彩票和香港六合彩的规则，以发售非法彩票的形式进行。国内的六合彩、私彩赌博活动最早出现在1999年，始发地是广东省潮阳市，现已发展蔓延到内地许多地区。这种赌博规则简单，参与方便，参赌者可以当面记单投注，也可以口头投注、异地受注、电话受注，还可以进行现金交易或欠资投注。目前，六合彩、私彩的赌博方式已由最初的“49选6”更新为买特码、连码和买总数单双、特码单双、总数大小、特码大小等数十种，具有很强的吸引力。近年来，在公安机关持续不断的打击下，六合彩、私彩赌博活动由最初的公开、半公开状态转入地下，赌博活动更加隐蔽。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 02:40:32","updateTime":"2021-05-02 02:40:32","isExist":null},{"id":1312,"question":"六合彩怎么玩?","simplecontent":null,"content":"　　“东方6+1”彩票投注区分为基本号码区和生肖码区，每注投注号码由一个6位自然数的基本号码和1个生肖码排列组成。基本号码从六位自然数000000-999999中选择；生肖码从十二个生肖中选择，十二个生肖为鼠、牛、虎、兔、龙、蛇、马、羊、猴、鸡、狗、猪。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 02:30:18","updateTime":"2021-05-02 02:30:18","isExist":null},{"id":1311,"question":"六合彩合法吗?","simplecontent":null,"content":"    \n    小“庄家”20分钟可调钱千万\n\n    据“玩家”介绍，“六合彩”的“庄家”特讲“信誉”，不管输掉多少，肯定会准时付钱。当然，如果有赌徒输了钱不给，他们也会采取“特殊”手段追债。春节前几天，曾有人被“庄家”追债，还差点动了刀，最后勉强将房证押给“庄家”才躲过一劫。\n\n    “玩家”说，他带记者见的只是一个小“庄家”，其收入来源主要是抽取赌资提成，方式有两种：一、从“大庄”处直接拿码报，抽取的提成是“庄家”全部赌资的10%，这笔钱直接从赌资中扣除，赔注由“大庄”承担；二、自己复印码报，抽取的提成是全部赌资的13%。“玩家”还说，他的这位远房亲戚很厉害，只要一个电话，能在20分钟之内叫人将1000万元送到。\n\n    辽宁警方重点打击“六合彩”\n\n    2006年的5月16日，辽宁省公安厅开展新一轮的打击六合彩赌博行动，再掀禁赌风暴。\n\n    此次行动的重点打击对象是境外赌博(博彩)公司在辽宁省境内的代理人、开办者；六合彩赌博活动的组织者；参与六合彩赌博的党员干部、国家公职人员。通过整治行动坚决打掉一批从事六合彩赌博的庄家，查破一批六合彩赌博的大案要案，严惩一批涉赌的违法犯罪分子，有效遏制六合彩赌博活动在辽宁省的蔓延势头。\n\n     详解“六合彩”\n\n    地下“六合彩”的“码”\n\n    据“玩家”介绍，六合彩起源于中国香港，而在内地不少地区蔓延的地下黑庄“六合彩”，只是利用香港六合彩开出的号码进行地下赌博。地下“六合彩”由“庄家”发放码报，要求赌徒在1至49中选出一个数字，如果符合当期香港六合彩开奖的特码，就可获得40倍于所押赌注的奖金，这样的外围博彩方式，在香港本地也是被禁止和打击的。\n\n    这49个数字，分属十二生肖中的不同动物，如1、13、25、37、49代表猴，2、14、26、38代表鸡，3、15、27、39代表狗，依此类推。如果赌徒选择15，就会说“我投注15岁的狗”。\n\n    出租车司机成窝买，就是将代表这个生肖的所有号一并买下。\n\n    地下“六合彩”的流程\n\n    沈阳市的“六合彩”同国内其它城市一样，每次赌博的周期是两天，分为“发报—酌码—下注—开奖—收钱”5个阶段。发报，每周一、三、五下午2时由“庄家”雇用的专门人员向赌徒分发码报；酌码，赌徒拿到码报后可以斟酌到次日(相对应每周二、四、六)晚上8时之前；下注，","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 02:27:54","updateTime":"2021-05-02 02:27:54","isExist":null},{"id":1310,"question":"广济桥历史?","simplecontent":null,"content":"俗称湘子桥。在今广东潮州市东门外，横跨韩江。始建于南宋乾道六年(1170)，宝庆二年(1226)建成，历时57年。东西两端筑石桥墩十八个， 上架石梁作桥面。中间一段，宽约100米，水流湍急，未能架桥，只用小船摆渡。当时取名济川桥。明宣德十年(1435)重修，两端石桥墩增至二十四个，中段用十八只梭形木船连接成浮桥，故称“十八梭船二十四洲”，改称广济桥。是我国较早的一座开关活动式大石桥。清雍正元年(1723)又在浮桥两端石桥墩上置铁牛两只，牛背镌有“镇桥御水”四字，早已不存。1958年由于交通需要，将梭船拆除，改为直通大桥。1980年重铸铁牛一只，置于桥上。1988年定为全国重点文物保护单位。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:35:56","updateTime":"2021-05-02 01:35:56","isExist":null},{"id":1309,"question":"潮州一天旅游攻略?","simplecontent":null,"content":"牌坊街，开元寺，广济桥，江对面有韩愈纪念馆。\n\n在潮汕可以去牌坊街、滨江长廊、湘子桥、韩文公祠、甲第巷这些地方。\n\n\n\n\n\n\n一、牌坊街\n\n\n\n\n牌坊街基本都是所有游客都会来到的一个地方，一整条街都是一座座各色各异的牌坊，没有两个完全相同的。周边都得是非常具有广东特色的碉楼，上面是住宅下面是商店，有很多店家都在卖着潮州特产。\n\n\n牌坊街有一个最有特色的是在“兵马司林”附近的“榜眼”牌坊，这个是牌坊街中唯一一个具有色彩的牌坊，大家可以去看看。\n\n\n\n\n\n二、滨江长廊\n\n\n\n\n在牌坊街附近，潮州古城外的一条滨江长廊，在这里可以观看到潮州的母亲河——韩江。长廊绕着古城墙从南到北，途中会经历上水门、广济门、竹木门、下水门这四个城楼，特别是广济门，接连着广济桥，也就是湘子桥。\n\n\n滨江长廊的绿化很好，是一条非常合适散步运动的长廊，每天早晨都会有很多老年人在这里晨练或者散步，慢悠悠地，还可以欣赏着韩江对岸的美景。\n\n\n如果到了晚上，人就更多了，茶余饭后，大家也都会出来逛逛街散散步，更有许多人会夜跑，吹着江风，别是一番滋味。\n\n\n三、湘子桥\n\n\n\n湘子桥也被叫做广济桥，和广济楼相呼应的，就在广济门外。横跨韩江，联结东西两岸，为古代广东通向闽浙交通要津，是潮州八景之一。湘子桥是非常具有特色的一座桥梁，与河北的赵州桥、福建的洛阳桥、北京的卢沟桥并称中国四大古桥。\n\n\n潮州湘桥好风流十八梭船廿四洲廿四楼台廿四样二只鉎牛一只溜\n\n\n这首童谣基本伴随着潮州人长大的，一代又一代的传下去，也不知道是从什么时候开始出现的。湘子桥有二十四个故居特色的亭台楼阁，中间还是可以启闭的十八艘梭船，每天都会定时闭合给予韩江两岸的行人通过，一般到了晚上都会开启，给予船只同行，是世界上最早的启闭式桥梁。\n\n\n\n\n四、韩文公祠\n\n\n\n\n潮州韩文公祠是为纪念唐代文学家、思想家韩愈而建。这里依山傍水，一进门就是一条直梯直上主殿，祠内记载着韩问公祠的历史和韩愈治潮业绩以及颂扬韩祠的诗文。除此之外，登上最顶峰的侍郎阁还可一览潮州美景。\n\n韩愈在潮州刺史任上不到八个月，在这期间驱恶除弊，扶持农桑，赎放奴婢，兴办教育，为潮州的发展做出了杰出贡献，是每一个潮州人尊敬的伟人。也因此潮州人感恩韩愈“功不在禹下”的伟业，改恶溪为韩江，改笔架山为韩山，“一片江山尽姓韩”。\n\n\n五、甲第巷\n\n位于潮州古城区南部，具有潮汕地区各类典型的民居建筑风格。在建筑技术与艺术方面均有大的特色。民居建筑山墙上的彩色嵌瓷，屋檐和柱头上的精制的木雕和石雕，山墙屋脊的形式则根据房屋的朝向与布局有“ 金、木、水、火、土”五种。\n\n“义兴甲三巷历史街区”中的传统民居内存许多古井和古木，现存古井143口，几乎每座民居中都有一口古井，有些还在使用，在义井巷的东巷口还留有宋代古井“ 义井”，同时还植有树木40棵。 近年，甲第巷古民居由市政府拨资修复，现已成为潮州又一旅游观光胜地。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:35:07","updateTime":"2021-05-02 01:35:07","isExist":null},{"id":1308,"question":"牌坊街离广济桥有多远，步行需要多长时间？","simplecontent":null,"content":"挨着在呢，牌坊街前头是广济门城楼，穿过城楼就是广济桥了\n\n牌坊街右边的东门街巷子走到底（5分钟），可见到广济楼，过城门，可见广济桥（过马路小心，司机不让行人的），门票20元，学生10元，现役军人免费。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:32:41","updateTime":"2021-05-02 01:32:41","isExist":null},{"id":1307,"question":"潮州旅游攻略?","simplecontent":null,"content":"潮州偏历史古迹，广济桥、广济楼、开元寺、牌坊街、韩文公祠等。 \n\n潮州两天一夜： 下午逛牌坊街、广济楼、广济桥、开元寺。\n\n此外牌坊街两侧诸多古巷子也很有意思牌坊街上的春卷、鸭母捻、腐乳饼、肠粉等小吃。晚饭可以吃老迹牛肉火锅或官塘锋记鱼生，也可试下莲华素食馆，然后看广济桥灯光秀。住宿可选特色客栈，推荐渔人小筑、府城客栈、载阳客栈，都挨着牌坊街。第二天可参观韩愈纪念馆，还有许驸马府、己略黄公祠等潮汕传统建筑。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:28:14","updateTime":"2021-05-02 01:28:14","isExist":null},{"id":1306,"question":"潮州，汕头，揭阳那座城市好玩点？","simplecontent":null,"content":"潮州》汕头》揭阳。潮州有很多景点，汕头有南澳岛什么的，揭阳额，真心没什么地方好玩的","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:25:58","updateTime":"2021-05-02 01:25:58","isExist":null},{"id":1305,"question":"汕头好玩?","simplecontent":null,"content":"其实我觉得汕头没什么好玩，最好玩的就是南澳岛了。 我2016年暑假去了，告诉你行程。 1、下午5点到汕头的酒店（住的是市中心的连锁酒店锦江之星，性价比可以），马上去百合里海记吃鲜牛肉，这家总店在一条小巷里，可以百度地图去，建议早点去，超多人呢。 过了这桥，就进入汕头市区了。\n\n\n广东汕头是潮汕人重要的祖籍地，中国优秀旅游城市，今天我们就来了解一下，汕头旅游必去的六个旅游景点，汕头好玩旅游景点推荐。\n\n一：中山公园（汕头市金平区月眉路5号），公园里的境景点很多， 公园中的牌楼、假山、九曲桥三处园林建筑被誉为园中“三绝”， 公园里的植物郁郁葱葱，花团锦簇，小叶榕、芒果、木棉、大王椰子、假槟榔、罗汉松、苏铁等构成了极具活力的南国风光，其中，荷花是公园水面的点睛之笔。\n\n二：和平大峰风景区（汕头市潮阳区和平镇），山清水秀，很多人来大峰风景区都是为了纪念宋代高僧大峰祖师，潮汕地区的知名风景区，来祭拜大峰祖师更是人气爆棚，香火旺盛，动物很多，老虎、狮子、黑熊都看到了，还有蟒蛇真很大，可以买东西喂猴子，地方也蛮大的。\n\n三：礐石风景名胜区（汕头市濠江区礐石海旁路），环境还是不错的，特别是石洞别有洞天，风景也不错，隔壁是金中，汕头最好的一所中学，不想爬山的可以坐缆车上去，平时锻炼身体爬爬山呼吸新鲜空气，远离城市的喧嚣还是很不错的，玉兰树及参天古树很多，散发出阵阵纯净的香木气味，泌人心肺，到处花香弥漫，空气特别清新，让人神清气爽、鸟儿的欢唱让我心旷神怡。\n\n四：莲花峰风景区（汕头市潮阳区海门镇），就来了莲花峰这边的，水真的好清澈，没有一点漂浮物，很干净的地方，沙滩上好多贝壳碎，很美，很不错的景点，恒温泳池，海边海鲜和茶座，还有海门蚝仔烙等特色小吃，重点推荐望仙，之前有缘真能在石缝里看到观音菩萨。\n\n五：南澳岛生态旅游区（汕头市南澳县粤东海面），景色很不错，吹吹海风，看看海景，心情很舒畅，海滩比较多，风景水质都不错，最主要的是人少，旺季也没多少人，岛很大，可以在岛上住个几天，好好玩玩水，南澳岛非常的漂亮，那里的大海也很蓝。\n\n六：前美古村侨文化旅游区(汕头市澄海区隆都镇前美村),野生水墨疯光村庄有点特色，有深厚的历史文化底蕴，是潮汕地区著名的古村落，海外华侨众多，也是潮汕华侨文化的缩影和见证，成为澄海一个旅游景点。前美村，古朴典雅，规模宏伟。村内岭南第一侨宅——陈慈黉故居，建筑风格中西合璧。\n以上是关于广东汕头旅游必去的六个景点介绍，大家还知道汕头有哪些好玩的地方，欢迎在下方评论留言，让我们一起打卡汕头美丽景点。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:25:15","updateTime":"2021-05-02 01:25:15","isExist":null},{"id":1304,"question":"牌坊街历史?","simplecontent":null,"content":"牌坊街位于潮州老城区内，沿街保留有众多骑楼建筑，街上立有22座牌坊，诉说了历史上众多潮州英杰的丰功伟绩，每一座牌坊背后都有一个故事，耐人寻味。当然，街上众多的潮州美食更是不容错过。\n据说街道上最早的牌坊是出现于明正德十二年（1517年）的“柱史”牌坊，历史上这里曾有39座牌坊之多，后来由于种种原因被损坏，如今复建的有22座，它们跨街而立，古韵悠悠。牌坊大多为进士、状元、尚书等设立，记录了他们的丰功伟绩，也彰显了潮州的地杰人灵。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-02 01:23:36","updateTime":"2021-05-02 01:23:36","isExist":null},{"id":1303,"question":"纠正牙齿?","simplecontent":null,"content":"小孩牙齿长歪了，如果是乳牙长的不齐，可以先不进行治疗，但是需要观察判断是骨骼发育畸形，还是只有牙齿紊乱。通常情况下，骨骼发育畸形需要尽早的进行干预治疗，如果仅仅是牙齿出现扭转，那么乳牙不需要进行治疗。如果孩子已经进入替牙期，达到12周岁，这个时候乳牙已经完全替换掉，恒牙完全萌出，牙齿还是出现紊乱的情况，要及时进行正畸治疗，通过配戴口内的托槽和弓丝矫正牙齿排列不齐。如果本身还有骨骼发育畸形，也可以配合使用外部的多功能矫治器，纠正骨骼发育畸形，这个时间最好选在9-12周岁，一旦错过最佳的矫治年龄以后，骨骼发育畸形就没有办法矫治好。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-01 04:56:13","updateTime":"2021-05-01 04:56:13","isExist":null},{"id":1302,"question":"小孩子怎么拔牙?","simplecontent":null,"content":"在小孩子乳牙和恒牙交替的时候，正常乳牙牙根会被恒牙顶着吸收，牙根吸收以后乳牙会出现松动，松动到一定时候乳牙就会自行脱落。如果乳牙已经接近脱落，孩子比较着急，大人也可以帮助把乳牙拔除，但是需要好好的进行消毒，消毒以后再用消毒的器械把乳牙拔除，然后咬上小棉球或者小纱布帮助止血。如果牙根吸收的不够完全，牙齿松动的不够明显，要想拔除就建议到正规医院的口腔科或者大型医院的儿童牙病科，或者口腔颌面外科，由医生在局麻下进行拔除，防止残余牙根折断。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-01 04:53:29","updateTime":"2021-05-01 04:53:29","isExist":null},{"id":1301,"question":"为什么吃菊花更容易长痘?","simplecontent":null,"content":"内分泌失调引起的。长痘痘常见于血气方刚之人，也是血分热毒之人，菊花茶是有清热解毒的作用，不过力量稍差一些了，所以你是可选择内服中药来治疗，按我的经验来说，效果还是很不错的哦。肥皂香皂硫磺皂洗面奶不要应用，避免搔抓刺激和日晒。","filterContent":null,"type":"语言","status":0,"createTime":"2021-05-01 03:11:01","updateTime":"2021-05-01 03:11:01","isExist":null},{"id":1300,"question":"摩托车驾照?","simplecontent":null,"content":"根据相关规定驾驶人持有任何类型的汽车驾驶证，都是不能驾驶摩托车的，任何一种汽车驾驶中的准驾车型都是不包含摩托车车型的，所以要是需要驾驶摩托车的，要另外考摩托车驾驶证。另外，驾驶与驾驶证准驾车型不符合的机动车，在性质上应当属于无证驾驶；在适用处罚上，依据过罚相当的原则，可以按照未取得驾驶证而驾驶机动车的处罚规定适当从轻处罚。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:46:57","updateTime":"2021-04-30 23:46:57","isExist":null},{"id":1299,"question":"跟小孩子聊什么话题?","simplecontent":null,"content":"1.“你几岁？”是关键问题。虽然听起来很普通，但小朋友超爱这个问题，讲出自己几岁都会有种莫名的骄傲感～\n\n2.“你最喜欢什么颜色？”问喜好准没错。\n\n3. 天气。好啦这个听起来蛮烂的，不过至少不是只说他们的外表可爱。\n\n4. 聊他们熟悉的附近环境。\n\n5.“你最喜欢哪一本书？”小朋友正在沈迷故事书的时候，问这个就对了！\n\n6. 聊时事。比如说最近股市走势 (误)，当然是聊聊《动物方城市》 或是《功夫熊猫3》！\n\n7.“你现在在学校学了些什么？”就像神秘咒语一样，一问小朋友的话匣子就会立刻被开启，他不但会告诉你他学了什么、还会告诉你哪一科的老师他最喜欢～话题如涛涛江水而来！\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:37:01","updateTime":"2021-04-30 23:37:01","isExist":null},{"id":1298,"question":"丈母娘对工作和家庭规划?","simplecontent":null,"content":"单位，职业，收入，努力\n买房，买车，生小孩，结婚\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:28:15","updateTime":"2021-04-30 23:28:15","isExist":null},{"id":1297,"question":"丈母娘问你对我女儿什么长大?","simplecontent":null,"content":"请二位放心，我一定会对他好的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:23:22","updateTime":"2021-04-30 23:23:22","isExist":null},{"id":1296,"question":"见丈母娘男生如何做?","simplecontent":null,"content":"有时拖小手，注意女友需要，递水手机","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:21:34","updateTime":"2021-04-30 23:21:34","isExist":null},{"id":1295,"question":"丈母娘会问什么问题?","simplecontent":null,"content":"一 做啥工作 收入\n二 房子 车\n三 家庭成员\n四 个人未来计划","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:17:33","updateTime":"2021-04-30 23:17:33","isExist":null},{"id":1294,"question":"你喜欢我什么?","simplecontent":null,"content":"这就要问你了，你了解你女朋友什么，为什么爱上她你不知道吗，比如你女朋友的温柔，善良，性格什么呀\n\n你要是一天到晚被异性盯着放电，你也会受不了喜欢她的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:11:53","updateTime":"2021-04-30 23:11:53","isExist":null},{"id":1293,"question":"什么时候结婚?","simplecontent":null,"content":"你好，如果对方是你喜欢的女孩问的，你就说你什么时候嫁给我，我就什么时候结婚\n如果对方是男的或者普通朋友，你就回答，时机到了就结婚（前提是你有女朋友），没有女朋友的话\n就说我的女朋友还在丈母娘那的，还没有让我去领回来\n希望采纳","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 23:09:44","updateTime":"2021-04-30 23:09:44","isExist":null},{"id":1291,"question":"龟头为什么那么臭?","simplecontent":null,"content":"病情分析：龟头出现臭，一般是因为龟头比较肮脏，并且下体没有及时的清洗，或是接触了污染衣物以及内衣裤没有经常换洗，或是机体免疫力比较差等原因导致的。因此当患者出现这样的情况，建议需要及时的到医院去做相关检查和面诊检查。假如有红斑、红点或者瘙痒与疼痛的临床症状，那么需要考虑是龟头炎以及包皮炎的可能性。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 20:54:38","updateTime":"2021-04-30 20:54:38","isExist":null},{"id":1290,"question":"试用期多久可以离职?","simplecontent":null,"content":"在试用期内，劳动者可以随时可以辞职，但是需要提前三天通知用人单位。劳动者在试用期内提前三日通知用人单位，可以解除劳动合同，用人单位无需向劳动者支付经济补偿金。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 20:53:18","updateTime":"2021-04-30 20:53:18","isExist":null},{"id":1288,"question":"中国名酒?","simplecontent":null,"content":"中国八大名酒是茅台酒、五粮液、古井贡酒、剑南春、泸州老窖特曲、汾酒、西凤酒、董酒。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 13:01:19","updateTime":"2021-04-30 13:01:20","isExist":null},{"id":1289,"question":"五粮液价格?","simplecontent":null,"content":"几十到几百都有，比茅台便宜很多","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 13:01:19","updateTime":"2021-04-30 13:01:19","isExist":null},{"id":1286,"question":"深圳公务员薪资?","simplecontent":null,"content":"事业单位工资制度，是针对在不同类型的事业单位不同人员所建立的有别于国家机关的工资制度。目前事业单位的分类主要有三大类：公益性、准公益性、经营性。2018年深圳事业单位工资有哪些调整?本文小编收集了一些关于深圳事业单位工资相关政策，包括深圳事业单位最新工资待遇，深圳事业单位工资标准及调整表。由于政策随时调整，所以本文内容仅供参考！\n\n工资从7000元到1.5万元不等，房补从2400元到4600元不等，还有数千元车补，这是目前深圳各级公务员的现有工资水平。国家要调整公务员和事业单位工作人员基本工资消息公布后，深圳市人社局表示将按国家和省的规定执行。\n\n￼\n\n公务员工资7年未涨\n人社部副部长胡晓义近日对外证实，备受关注的机关事业单位基本工资调整已经开始实施。\n\n国务院办公厅为此转发了三个实施方案，一是公务员基本工资的调整，二是事业单位工作人员基本工资的调整，三是机关事业单位离退休人员待遇的调整。全国公务员基本工资标准近十年来一直未作调整，因此，此次调整将是2006年以来，我国机关事业单位工作人员基本工资首次进行调整。\n\n对此，深圳市人社局表示，将遵照国家和省的规定进行公务员工资的调整。目前，公务员的工资主要由基本工资+津贴补贴组成，其中，基本工资包括职务工资和级别工资，标准全国统一。实际上，深圳公务员在2008年涨过一次工资，此后基本上没涨过工资，公务员也有诉求。深圳市人社局曾表示，此前公务员涨工资时都尽可能地拉低雇员间的差距。\n\n公务员工资：7000元—15000元不等\n据介绍，深圳公务员管理分为综合管理类、专业技术类、行政执法类三大类。行政执法类设7个职级，依次为一级执法员至七级执法员。在部分职组、职系的七级执法员之下增设助理执法员、见习执法员职级。薪酬方面则实行与职级挂钩的薪级工资制度，每一职级对应若干薪级，每一薪级确定一个工资标准。\n\n记者在调查中了解到，从见习执法员到一级执法员，工资最低从7000元至15720元不等，而七级执法员相当于科员，一级执法员则相当于正局，也就是从科员到正局级的工资在7000元至15720元不等。\n\n此外，记者从市区街道三级公务员工资调查中发现，市区街道同级别公务员工资差别不大，但其他待遇会有些区别，但区别不大。比如，某市直机关副科级公务员薪资(含房补、车补)为12400元，罗湖区某科级干部薪资为13000多元，沙井街道副科级公务员工作","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 12:56:30","updateTime":"2021-04-30 12:56:31","isExist":null},{"id":1285,"question":"飞天茅台价格?","simplecontent":null,"content":"最后结论：一瓶市场价2500多元，厂商指导价1499元，出厂价969元的飞天茅台酒，成本费用合计每瓶155.96元，按照1499元的价格来算，每瓶茅台酒贵州茅台需要付出成本费用占售价的10%。\n\n由于本次五一假期长达五天，中国白酒市场再度火热起来，涨价声不绝于耳。1499元一瓶的茅台酒维持供一瓶难求状态，据最新数据显示，当年散瓶飞天茅台酒2560一瓶，前一年的原箱售卖价高达3260一瓶，酒质相同包装不同的当年牛年茅台酒更是高达近5000元一瓶。\n\n飞天茅台，果然飞天。\n\n此前不少媒体、网帖都分析过一瓶飞天茅台酒的成本价，有说10元的、有说60元的……根据最新披露的贵州茅台年报显示，茅台酒毛利率高达93.99%，此前60元成本的说法好像更为接近。但任何一家制造企业卖出一件产品，整个环节肯定不是仅仅局限于生产环节，流通、销售、存储、研发等等都起到决定性作用，成本与费用是两个既有血缘关系又存在重大区别的会计概念。\n\n1、直接材料（瓶）：38.32元\n\n2019年7月26日，时任茅台集团董事长李保芳深入簸箕坝村有机高粱标准化示范园，实地了解园区建设、高粱种植和脱贫攻坚等情况。李保芳指出，茅台两年时间两次价，从7.2元/公斤提高到9.2元/公斤。\n\n这里所指的高粱就是直接材料的主要构成之一，按照酱香型白酒传统工艺，高粱花费应该达到46元。这个数据好像与38.32元有近10块钱的差距，当然五斤粮食出一斤酒的传统说法可能在技术不断发展后效能得到了大幅提高。\n\n2、直接人工（瓶）：22.74元\n\n此前网友指出茅台酒人工踩曲的方式不卫生，甚至担心脚臭的问题，更有甚者传出踩曲制曲只用女工。后来在《贵州日报》回应称，在茅台制曲车间的踩曲岗位，也有不少男工在工作。茅台七个制曲车间、四千多员工，男工占比超过百分之十三。虽然是女性占绝对优势，但是，并不意味着没有男性员工的工作机会。\n\n此外，踩曲是一个技术活，首先需要先把原料浸湿，然后人站在上面反复用脚踩，慢慢把里面的浆水踩出来，最后的成品内松外紧，呈现为中间高、四边略低、松紧适宜的龟背形。\n\n不管如何，从实际单瓶成本数据来看，直接人工成本22.74元至少占总成本的比例仅次于直接材料，而且占比很高。\n\n3、制造费用（瓶）：4.79元\n\n顾名思义，这项费用是在制造过程中所发生的物料消耗、","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 12:22:52","updateTime":"2021-04-30 12:22:52","isExist":null},{"id":1131,"question":"review单词英文是啥?","simplecontent":null,"content":"检查，审查","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:57:02","updateTime":"2021-04-30 11:57:02","isExist":null},{"id":1141,"question":"小车考什么驾校?","simplecontent":null,"content":"手动挡的需要C1，自动挡的需要C2或C1，C1照对应的准驾车型是小型汽车，C2对应的准驾车型是小型自动挡汽车，准驾车型及代号如下：开小车，可以考C1的驾照就能开手动和自动挡的小客车。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:56:52","updateTime":"2021-04-30 11:56:53","isExist":null},{"id":1280,"question":"潮汕在哪里多人?","simplecontent":null,"content":"这不经让许多人想到了香港的另外一个富豪李嘉诚。许多人都知道李嘉诚是广东潮汕人。潮汕人被誉为东方犹太人，最近100年潮汕人出了太多的企业家，除了李嘉诚外，还有杨受成、刘銮雄、谢国民、苏旭明、庄世平、庄静庵等等。目前中国知名的富豪中至少两三成都是潮汕人。李嘉诚自然也是当之无愧的潮商代表人物跟潮商领袖。香港700万人至少就有三四成的潮汕人，在商界潮汕人的影响力更是巨大。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:56:15","updateTime":"2021-04-30 11:56:15","isExist":null},{"id":1284,"question":"秋刀鱼坏处?","simplecontent":null,"content":"秋刀鱼虽然是一种营养价值特别高的水产食材，但是这种鱼的鱼肉中含有微量毒素，如果人们过量食用，这些毒素就会在人体内部堆积，会危害人体内脏器官的健康，时间长了就会让多种疾病高发，对人类身体健康不利。\n\n秋刀鱼除了含有微量毒素以外，它并没有其它副作用存在，大多数人群都可以适量食用，只是那些患有肝硬化或者其他肝病的人群不适合食用秋刀鱼，不然会加重肝脏负担，不利于病情恢复。\n\n秋刀鱼是一道大众食品，一般人群都可以食用秋刀鱼，不过，孕妇的话就要注意不能吃秋刀鱼了。因为秋刀鱼中含有微量的毒素，孕妇如果食用秋刀鱼，会影响到胎儿。\n\n另外要注意的是，肝硬化的病人也是不适合吃秋刀鱼的。因为秋刀鱼中有廿碳五烯酸，廿碳五烯酸的代谢产物之一是前列环素，该物质能够抑制血小板聚集，而肝硬化病人因为凝血因子生成障碍，血小板数量本来就较低，若进食含廿碳五烯酸多的鱼后，血小板凝聚作用再次被减低，就很容易引起出血，且难以止住。因此，具有出血倾向的肝硬化患者不宜食用秋刀鱼。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:38:55","updateTime":"2021-04-30 11:38:55","isExist":null},{"id":1283,"question":"秋刀鱼的功效?","simplecontent":null,"content":"秋刀鱼分布于北太平洋区，包括日本海、阿拉斯加、白令海、加利福尼亚州、墨西哥等海域。含有丰富的蛋白质、脂肪酸，尤其是含有人体不可缺少的EPA、DHA等不饱和脂肪酸，食用秋刀鱼有抑制高血压、心肌梗塞、动脉硬化的作用。\n1.抑制高血压\n因为秋刀鱼中的廿碳五烯酸(EPA)、廿二碳六烯酸(DHA)等不饱和脂肪酸，有明显的抑制高血压、心肌梗塞、动脉硬化的作用。\n2.促进脑部发育\n同时DHA还被人们称之谓脑黄金，是人类大脑和中枢神经系统发育必需的营养素，有利于婴幼儿的脑部发育。\n3.预防夜盲症\n秋刀鱼还能预防夜盲症，秋刀鱼中含有丰富的维生素A，而维生素A的主要功能之一就是维持正常的视觉功能，这也是为什么多吃秋刀鱼可以预防夜盲症的原因。\n4.预防衰老\n秋刀鱼能抗衰老，这是因为秋刀鱼中含有丰富的维生素E，同时蛋白质含量也非常丰富，维生素E能减缓细胞衰老，能减少皱纹，蛋白质则是构成人体细胞的主要物质之一，滋润与滋补同时进行，防衰老的效果就得以体现了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:37:56","updateTime":"2021-04-30 11:37:56","isExist":null},{"id":1282,"question":"深圳公积金贷款额度是多少啊？?","simplecontent":null,"content":"深圳住房公积金贷款额度一般为贷款人公积金账户余额的14倍。职工个人申请单套住房的公积金贷款最高额度为50万元；申请人与共同申请人一并申请，且共同申请人参与额度计算的，单套住房的公积金贷款最高额度为90万元。深圳申请公积金贷款，需贷款人每月偿还按等额本息计算的贷款本息合计不超过申请人及共同申请人住房公积金合计缴存基数的50%，且住房公积金贷款额度不高于购房总价款与首付款的差额。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:36:42","updateTime":"2021-04-30 11:36:42","isExist":null},{"id":1281,"question":"李嘉诚的长江集团是干什么的?","simplecontent":null,"content":"长江集团是一家建基香港的跨国企业，在全球四十个国家经营五项核心业务，包括：港口及有关服务、电讯、地产及酒店、零售及制造、与能源及基建。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:34:18","updateTime":"2021-04-30 11:34:18","isExist":null},{"id":1279,"question":"李嘉诚是哪里的?","simplecontent":null,"content":"李嘉诚的家乡在广东省潮州市潮安县。\n\n李嘉诚，1928年7月29日出生于广东潮州潮安县，祖籍广东潮汕地区，长江和记实业有限公司及长江实业集团有限公司资深顾问。连续21年蝉联香港首富，1999年始连续15年华人首富。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:30:34","updateTime":"2021-04-30 11:30:34","isExist":null},{"id":1278,"question":"送老人礼物?","simplecontent":null,"content":"想爷爷奶奶送一份实用的礼物又不知道有什么好的选择，您一定要参考这份送爷爷奶奶的实用礼物清单，包含有健康茶枕、足疗机、电子血压计、老人水杯、按摩仪等。如果你想着回家看看他们，千万别忘记带给他们一些实用的礼物。\n\n1\n茶枕礼盒\n茶叶的功效非常多，除了我们平时饮茶品茶，天然茶叶还有助于提升睡眠质量，重阳节孝敬老人，送他一对茶枕礼盒，送去一夜好眠，很贴心哦。\n\n决明子茶香枕头\n\n决明子茶香枕头\n￥179.00\n去淘宝购买\n2\n足疗机\n想要送礼物给年事已高的爷爷奶奶，健康实用应该摆在首位，足疗机只能通过人体脚上的穴位按摩，缓解疲劳，改善身体机能，全智能操作不必担心老人们不会使用。\n\n脚底按摩足疗机\n\n脚底按摩足疗机\n￥669.00\n去淘宝购买\n南极人足疗按摩足浴盆\n\n南极人足疗按摩足浴盆\n￥58.00￥148.00\n去淘宝购买\n领券购买更优惠\n优惠券：¥90\n使用期限：2021.04.26 - 2021.05.03\n去淘宝领券\n3\n老人唱戏机\n爷爷奶奶的兴趣爱好多是听听戏曲，可是年事已高，眼神听力就会有所下降，不如送他们一个专属的收音机，简单操作声音清晰，功能多样，完全满足长辈的需要。\n\n老人音乐播放器收音机\n\n老人音乐播放器收音机\n￥89.00\n去淘宝购买\n4\n紫砂杯\n喝茶可以修身养性，可有助于健康，如果你的爷爷奶奶真好也喜欢喝茶，那么紫砂茶杯你一定不能错过，而且你还可以根据老人姓氏制定专属的姓氏，绝对的私人订制哦\n\n百家姓姓氏紫砂杯\n\n百家姓姓氏紫砂杯\n￥178.00\n去淘宝购买\n功夫茶茶具套装\n\n功夫茶茶具套装\n￥93.00￥98.00\n去淘宝购买\n领券购买更优惠\n优惠券：¥5\n使用期限：2021.04.01 - 2021.05.29\n去淘宝领券\n5\n电子血压计\n采用智能技术，精准测算血压指数，操作简单易懂，重阳节送礼物，这是一款不可不考虑的选择，有了它，长辈们可以时刻关注自身健康状况，提高生活品质。\n\n鱼跃家用电子血压计\n\n鱼跃家用电子血压计\n￥189.00￥219.00\n去淘宝购买\n领券购买更优惠\n优惠券：¥30\n使用期限：2021.04.30 - 2021.05.05\n去淘宝领券\n手腕式电子血压计\n手腕式电子血压计\n￥178.00\n去淘宝购买\n6\n按摩靠垫\n采用全智能技术，高科技为依托，推拿+揉捏按摩手法，颈、背、肩部多处同时可接受按摩，全方位接受按摩，对于爷爷奶奶来说，什么健康比什么都重要，这样的礼物可是非常实用哦。\n\n家用全身按摩靠垫\n\n家用全身按摩靠垫\n￥118.00\n去淘宝购买\n多功能全身按摩靠垫\n\n多功能全身按摩靠垫\n￥285.00￥385.00\n去淘宝购买\n领券购买更优惠\n优惠券：¥100\n使用期限：2021.03.29 - 2021.05.27\n去淘宝领券\n7\n老人冬日实用礼物\n老人最畏寒，一冷就会出现很多不适的情况，冬季更应该注意保暖。推荐冬日实用的礼物送给爷爷奶奶。帽子和围巾就是不错的选择，可以给两个人一人准备一套。给爷爷的帽子可以选择鸭舌帽，时尚有保暖。奶奶可以选择优雅的毛线帽，凸显优雅的姿态。围巾更推荐选择纯羊毛材质亲肤又保暖。\n\n中老年女士毛线帽\n中老年女士毛线帽\n￥29.90\n去淘宝购买\n中老年洋气鸭舌帽\n\n中老年洋气鸭舌帽\n￥49.00\n去淘宝购买\n男士老人保暖围巾\n男士老人保暖围巾\n￥49.00\n去淘宝购买\n恒源祥刺绣羊毛围巾\n恒源祥刺绣羊毛围巾\n￥248.00￥288.00\n去淘宝购买\n领券购买更优惠\n优惠券：¥40\n使用期限：2021.04.28 - 2021.05.04\n去淘宝领券\n8\n老人气动腿部按摩仪\n老人到了冬天之后腿部就可能出现各种不适，尤其是老寒腿反复更是受罪，推荐送给爷爷奶奶这款气动腿部按摩仪，操作简单，老人也能轻松学会。这款气动按摩仪是通过气泵对多气囊反复充气，而达到挤压按摩的效果，随着按摩时间的增加热量也不断上升，有效缓解受寒之后的疼痛。\n\n老人气动腿部按摩仪\n\n老人气动腿部按摩仪\n￥550.00￥580.00\n去淘宝购买\n领券购买更优惠\n优惠券：¥30\n使用期限：2021.03.12 - 2021.05.10\n去淘宝领券\n9\n多功能鱼缸\n这个礼物老少皆宜，可以当台灯，看日历，最重要的是，浴缸中饲养几条金鱼，可以给爷爷奶奶的晚年生活增添几分情趣，可以说是一件功能齐全又实用的礼物。\n\n多功能鱼缸台灯笔筒\n多功能鱼缸台灯笔筒\n￥128.00\n去淘宝购买\n10\n老人逍遥摇椅\n爷爷奶奶的年纪是到了好好休息享乐的时候了，如果要考虑送他们一个礼物，当然也要从这个方向考虑。小编给你推荐一款休闲摇椅，放置在家中阳台，在午后的阳光下，让你的爷爷奶奶躺在摇椅上慢慢摇。\n\n老人可折叠逍遥摇椅\n\n老人可折叠逍遥摇椅\n￥1568.00\n去淘宝购买\n想发现更多有意思的「爷爷礼物」「奶奶礼物」，推荐阅读：\n\n爷爷礼物\n爷爷礼物\n爷爷礼物\n57个推荐\n南极人足疗按摩足浴盆男士老人保暖围巾百家姓姓氏紫砂杯\n奶奶礼物\n奶奶礼物\n奶奶礼物\n63个推荐\n南极人足疗按摩足浴盆鹅卵石按摩保健走毯香薰蜡烛套装礼盒","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:27:38","updateTime":"2021-04-30 11:27:38","isExist":null},{"id":1277,"question":"吃甜食为什么会长痘？","simplecontent":null,"content":"病情分析：吃完甜食之后会导致胰岛素失衡，也会导致内分泌失调，所以也是引发长痘的一个重要原因，所以平时如果在长痘的期间都应该注意做好忌口工作，不要过分的吃甜食，也不要喝奶茶，这样都可以防止导致微量元素的变化，也可以防止引发痘痘加重。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:22:17","updateTime":"2021-04-30 11:22:17","isExist":null},{"id":1276,"question":"脸部出油多的原因?","simplecontent":null,"content":"1、脸上爱出油主要是由于水油不平衡，脸上缺水，皮肤就会分泌多多余的油脂来保护皮肤，所以除了控油以外还需要补水；也可能因为清洁不到位。\n\n2、因为体内的湿气太重了，湿气太重的人，会导致内分泌失调，多余的油脂没有办法正常排出来，就会从脸上冒出来的。\n\n3、青春期由于皮下油脂活力旺盛，分泌油脂多，皮肤纹理粗，毛孔粗大，肤质厚硬，易长暗疮生粉刺，多黑头，化妆后容易脱妆，油脂外溢，脸上带油光。\n\n4、内分泌失调或神经精神疾患及某些疾病的影响，皮脂腺功能紊乱，皮脂分泌过多，头发及面部会像涂上一层油。头皮多，汗毛孔开大，还常常有皮脂堆积，这种现象称为“油性脂溢”\n\n\n\n扩展资料：\n\n1、做好肌肤清洁工作\n\n不宜使用太过清洁性的产品，如果皮肤本身的油脂被清掉了，肌肤自卫机能就会再分泌更多的油脂，导致油腻及痘痘更加猖獗。\n\n2、 做好补水工作\n\n皮肤本身只能分泌油脂，而不能提供肌肤所需的水分，因此需要外界为肌肤注入水分，选择适合自己的补水护肤品，每天早晚洁面之后补水，保持肌肤表层水油平衡。\n\n3、定期去角质\n\n分泌过盛的油脂会堵塞毛孔，而毛孔的出口又被角质覆盖，其中的细菌容易引发炎症，形成痤疮，利用酸性物质去除皮肤表面的角质层，能减少毛孔不畅诱发的痤疮，不过去角质不能过于频繁，一般每周1-2次即可。\n\n4、注意防晒\n\n防晒是很容易被男性忽视的大事，而且男性经常进行户外运动，由于男性不在乎美白防晒，所以大多不会采取防晒措施。但是强烈的日照也是造成面部油腻的原因，紫外线对皮肤的伤害会导致油脂的大量分泌，所以想要有效控油，还是要注意防晒的。\n\n参考资料来源：百度百科-油性皮肤\n\n参考资料来源：人民网-天热皮肤爱出油 男士控油5个小方法赶走油腻\n\n 2","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:21:25","updateTime":"2021-04-30 11:21:25","isExist":null},{"id":1240,"question":"(68)String存储在哪里？","simplecontent":null,"content":"java的String是一个很神奇的数据类型，因为它有两种声明方法：","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 11:19:29","updateTime":"2021-04-30 11:19:29","isExist":null},{"id":1239,"question":"(67)栈堆存储什么数据？全局、局部","simplecontent":null,"content":"《堆存储全局变量、栈存储局部变量》\n他们各自有各自的存储位置，方法内的引用存在方法栈，类内的引用存在堆，类存储在堆上，方法中的局部基本变量存于栈但是类字段的基本变量存在堆上（方法区内）。\n值得一提的是方法区（又叫静态区），其存储值常量、字符串常量、方法、静态字段、.class文件，等只用一个备份的数据。\n栈和方法区都有共享数据的功能。\n因此使用简化方法构造String类的时候，在方法内和类内会将字符串存于栈/方法区，这无关紧要，重要的是，\n使用这种构造方法，如果没有所构造的字符串常量存在于内存中，那么会在栈/方法区中存上一份，然后再堆中新建一个String类，把String类的char[]引用指向在栈/方法区中的字符串常量；\n如果所构造的字符串常量已经存在于内存中，那么则会检索关联与之对应的堆中String实例，并直接使用这个String类实例。\n只有使用简化方法构造才能被栈/方法区记录下来，如果使用new则不行，这也是为什么上例即使先new，再使用简化构造相同字符串也不会引用相同。\n因为new出来的String实例的字符串常量存储在堆上，和栈/方法区无关。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 11:19:28","updateTime":"2021-04-30 11:19:28","isExist":null},{"id":1275,"question":"小黄鱼和秋刀鱼那个口感好?","simplecontent":null,"content":"关键看你选择哪种做法。\n一般来说，秋刀鱼比较鲜嫩，而小黄鱼肉质比较劲道。\n比较酿的预感，小黄鱼就比秋刀鱼好吃。\n\n秋刀鱼很腥","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:19:04","updateTime":"2021-04-30 11:19:05","isExist":null},{"id":1274,"question":"罗非鱼如何?","simplecontent":null,"content":"1，罗非鱼，非洲公民公认第一好鱼，煎炒炖炸，各种做法都是杠杠滴，这里自己公开引荐豆酱小葱清蒸好吃到置疑人生。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 11:17:36","updateTime":"2021-04-30 11:17:36","isExist":null},{"id":1273,"question":"(100)int超过数值范围会怎样？轮回圈","simplecontent":null,"content":"轮回到父数据","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:32:09","updateTime":"2021-04-30 10:32:09","isExist":null},{"id":1272,"question":"(99)for (;;) 作用？循环","simplecontent":null,"content":"无限循环","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:32:02","updateTime":"2021-04-30 10:32:02","isExist":null},{"id":1271,"question":"(98)为什么使用float不使用double？内存少4字节","simplecontent":null,"content":"占内存少，4个字节\n因为float占的内存比double的小，不过实际开发一般用double的。\n因为小数默认是double类型，float要在值后加;\nf前者占8个字节17位有效数字，后者占4个字节8位有效数字","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:57","updateTime":"2021-04-30 10:31:57","isExist":null},{"id":1270,"question":"(97)小数默认是float还是double？double","simplecontent":null,"content":"double\n默认小数为 double 类型，后面也可以加 D 或 d，但这纯属多此一举,如：1.0d，但因为是默认所以可以不加直接写出1.0\n小数,如果要指明是float,须在后面加f ，如：1.0f","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:48","updateTime":"2021-04-30 10:31:48","isExist":null},{"id":1269,"question":"Double加d和不加的区别？没","simplecontent":null,"content":"没有，d是默认的","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:41","updateTime":"2021-04-30 10:31:41","isExist":null},{"id":1268,"question":"(95)统计字符串中中文，英文，数字，空格，特殊字符的个数用什么方法？转成字符char tmp = str.charAt(i) 、然后判断字符是否在A-Z、0-9、’’ 等","simplecontent":null,"content":" str.Split(\" \").length   str.charAt(i);\n\npublic void count(String str) {\n　　　　if(str.equals(\"\") || str==null){\n　　　　　　System.out.println(\"字符串为空\");\n　　　　  return;\n　　  }\n　　　　for (int i = 0; i < str.length(); i++) {\n　　　　　　char tmp = str.charAt(i);\n　　　　　　if ((tmp >= 'A' && tmp <= 'Z') || (tmp >= 'a' && tmp <= 'z')) {\n　　　　　　　　enCharacter ++;\n　　　　　　　　sb2.append(tmp+\" \");\n　　　　　　} else if ((tmp >= '0') && (tmp <= '9')) {\n　　　　　　　　numberCharacter ++;\n　　　　　　　　sb3.append(tmp +\" \");\n　　　　　　} else if (tmp ==' ') {\n　　　　　　　　spaceCharacter ++;\n　　　　　　} else if (isChinese(tmp)) {\n　　　　　　　　chCharacter ++;\n　　　　　　　　sb1.append(tmp+\" \");\n　　　　　　} else {\n　　　　　　　　otherCharacter ++;\n　　　　　　　　sb4.append(tmp +\" \");\n　　　　　　}\n　　　　}\n　　　　　　System.out.println(\"字符串:\" + str + \" \\r\\n\");\n　　　　　　System.out.println(\"中文字符有:\" + chCharacter +\"个 (\"+sb1.toString()+\")\");\n　　　　　　System.out.println(\"英文字符有:\" + enCharacter +\"个 (\"+sb2.toString()+\")\");\n　　　　　　System.out.println(\"数字有:\" + numberCharacter+\"个 (\"+sb3.toString()+\")\");\n　　　　　　System.out.println(\"空格有:\" + spaceCharacter+\"个\");\n　　　　　　System.out.println(\"其他字符有:\" + otherCharacter+\"个 (\"+sb4.toString()+\")\");\n　　　　}\nprivate boolean isChinese(char ch) {\n　　　　　　Character.UnicodeBlock ub = Character.UnicodeBlock.of(ch);\n　　　\n if (ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS \n|| ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A \n|| ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B \n|| ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION \n|| ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS \n || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION) {\n　　　　　　System.out.println(ch + \" 是中文\");\n　　　　　　return true;\n　　　　}\n　　　　return false;\n 　　}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:33","updateTime":"2021-04-30 10:31:33","isExist":null},{"id":1267,"question":"(94)字符串转字节方法？charAt","simplecontent":null,"content":"str.charAt(i);","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:15","updateTime":"2021-04-30 10:31:15","isExist":null},{"id":1266,"question":"(93)10%3*2是多少？2","simplecontent":null,"content":"2\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:08","updateTime":"2021-04-30 10:31:08","isExist":null},{"id":1265,"question":"(92)float 和 double 的区别是什么？8-18位,4-8字节","simplecontent":null,"content":"8和18十进制，4和8字节》\nfloat 最多可以存储 8 位的十进制数，并在内存中占 4 字节。\ndouble 最可可以存储 16 位的十进制数，并在内存中占 8 字节。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:31:02","updateTime":"2021-04-30 10:31:02","isExist":null},{"id":1264,"question":"用过什么算法？直接插、冒泡、希尔、快速、二分","simplecontent":null,"content":"排序算法，二分查找\n\t《排序算法（直接插入，快速排序、冒泡、希尔、直接选择），二分查找》","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:30:53","updateTime":"2021-04-30 10:30:53","isExist":null},{"id":1263,"question":"(90)String.format使用?","simplecontent":null,"content":"转换符\t详细说明\t示例\n%s\t字符串类型\t“喜欢请收藏”\n%c\t字符类型\t‘m’\n%b\t布尔类型\ttrue\n%d\t整数类型（十进制）\t88\n%x\t整数类型（十六进制）\tFF\n%o\t整数类型（八进制）\t77\n%f\t浮点类型\t8.888\n%a\t十六进制浮点类型\tFF.35AE\n%e\t指数类型\t9.38e+5\n%g\t通用浮点类型（f和e类型中较短的）\t不举例(基本用不到)\n%h\t散列码\t不举例(基本用不到)\n%%\t分比类型\t％(%特殊字符%%才能显示%)\n%n\t换行符\t不举例(基本用不到)\n%tx\t日期与时间类型（x代表不同的日期与时间转换符)\t不举例(基本用不到)","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:30:45","updateTime":"2021-04-30 10:30:45","isExist":null},{"id":1262,"question":"(89)三位数不足补0？Format，103 %￥d","simplecontent":null,"content":"《String.format，\"%1$03d\"》\n\nString dayFmt = String.format(\"%1$03d\", day); // 0补位操作 必须满足三位\nString hourFmt = String.format(\"%1$02d\", hour);  // 0补位操作 必须满足2位","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:30:38","updateTime":"2021-04-30 10:30:38","isExist":null},{"id":1261,"question":"父子静态方法，父子构造块和父子构造方法的执行顺序？","simplecontent":null,"content":"静态方法>构造块>构造方法\n《先加载父类静态语句快-->子类静态语句块-->父类构造快-->父类构造-->子类构造块-->子类构造 》\npublic class A {\n    static {\n        System.out.println(\"输出静态方法===A\");\n    }\n \n    public A() {\n        System.out.println(\"输出构造方法===A\");\n    }\n \n    {\n        System.out.println(\"输出非静态方法===A\");\n    }\n}\n\npublic class B extends A {\n    static {\n        System.out.println(\"输出静态方法===B\");\n    }\n \n    public B() {\n        System.out.println(\"输出构造方法===B\");\n    }\n \n    {\n        System.out.println(\"输出非静态方法===B\");\n    }\n}\n\npublic class C {\n    public static void main(String[] args) {\n        B b = new B();\n    }\n}\n\n输出静态方法===A\n输出静态方法===B\n输出非静态方法===A\n输出构造方法===A\n输出非静态方法===B\n输出构造方法===B\n先输出父类静态方法，在输出子类静态方法，在输出父类非静态方法和构造方法，随之又输出子类非静态方法和构造方法。\n静态方法/静态变量>构造快>构造方法\n1.静态（先父后子）\n2.父构造快>父构造方法>子构造快>子构造方法","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:30:16","updateTime":"2021-04-30 10:30:16","isExist":null},{"id":1260,"question":"(87)isEmptyString使用判断？","simplecontent":null,"content":"str==null，length==0","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:29:59","updateTime":"2021-04-30 10:29:59","isExist":null},{"id":1259,"question":"(86)lambda表达式?","simplecontent":null,"content":"List<Person> list = getPersonList();\nlist.forEach(person -> System.out.println(person.getName()));\nliu\nzhao","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:29:48","updateTime":"2021-04-30 10:29:48","isExist":null},{"id":1258,"question":"反序列化是怎么样?","simplecontent":null,"content":"《字符串转化成实体》\n  public static void serialize(String fileName){   \n    try \n    {   \n      //创建一个对象输出流，讲对象输出到文件   \n      ObjectOutputStream out=new ObjectOutputStream(new FileOutputStream(fileName));   \n\n      UserInfo user=new UserInfo(\"renyanwei\",\"888888\",20);   \n      out.writeObject(user); //序列化一个会员对象   \n\n      out.close();   \n    }   \n    catch (Exception x)   \n    {   \n      System.out.println(x.toString());   \n    }   \n\n  }   \n\n//从文件反序列化到对象   \n  public static void deserialize(String fileName){   \n    try \n    {   \n      //创建一个对象输入流，从文件读取对象   \n      ObjectInputStream in=new ObjectInputStream(new FileInputStream(fileName));   \n\n      //读取UserInfo对象并调用它的toString()方法   \n      UserInfo user=(UserInfo)(in.readObject());        \n      System.out.println(user.toString());   \n\n      in.close();   \n    }   \n    catch (Exception x)   \n    {   \n      System.out.println(x.toString());   \n    }   \n\n  }   ","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:29:34","updateTime":"2021-04-30 10:29:34","isExist":null},{"id":1257,"question":"(85)创建一个类的实例都有哪些办法？new，反射，克隆，反序","simplecontent":null,"content":"《new，反射，对象克隆，反序列化》\n（1）用new 语句创建对象，这是最常用的创建对象方法。 \n（2）运用反射手段，调用Java.lang.Class或者java.lang.reflect.Constructor类的newInstance()实例方法。 \n（3）调用对象的clone()方法 \n（4）运用反序列化手段，调用java.io.ObjectInputStream对象的readObject()方法。 \n反射：\nClass c = Class.forName(subClassName);\n\n（1）java.lang.Class.newInstance()\n\nUser user = (User)c.newInstance();// 不带参数\n\n（2）java.lang.reflect.Constructor类的newInstance()\n\n  Constructor con = c.getConstructor(String.class);\nUser user = (User) con.newInstance(\"name\");\n\npublic Object getNewObject(String className) throws ClassNotFoundException, InstantiationException, IllegalAccessException { \n    //class.forName（类的全路径）、实例对象.class(属性)、实例对象getClass(),这三种方式都能得到class \n    Class tClass=Class.forName(className); \n    Object tObject=tClass.newInstance(); \n    return tObject; \n        } \n\n克隆：第一个实体声明，第二个实体强制转化\nUser user1 = new User(1,\"dan\");\n  User user2 = null;\n  user2 = (User) user1.clone();\n\n序列化：\n //序列化对象到文件","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:29:17","updateTime":"2021-04-30 10:29:17","isExist":null},{"id":1256,"question":"(84)int,long,double占多少字节？488","simplecontent":null,"content":"4，8，8\n一个字符两个字节，int 4 , long double 8 ","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:28:58","updateTime":"2021-04-30 10:28:58","isExist":null},{"id":1255,"question":"(83)Java中一个字符占多少个字节？2","simplecontent":null,"content":"2","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:28:51","updateTime":"2021-04-30 10:28:51","isExist":null},{"id":1254,"question":"交集是怎样、并集是怎样的数据是怎么样？共有、全部不重复","simplecontent":null,"content":"交集是2个仅有，并集是所有不重复","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:28:44","updateTime":"2021-04-30 10:28:44","isExist":null},{"id":1253,"question":"(81)静态方法、静态变量、普通方法、普通变量可以相互调用吗？静态变量只能访问静态变量和静态方法，而普通方法可以调用所用","simplecontent":null,"content":"","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:28:33","updateTime":"2021-04-30 10:28:33","isExist":null},{"id":1252,"question":"(80)静态方法会存在线程安全问题？静态方法不操作静态成员，只在方法内部使用实例字段，不会引起安全性","simplecontent":null,"content":"在多线程中使用同一个静态方法时，每个线程使用各自的实例字段(instance field)的副本，而共享一个静态字段(static field)。所以说，如果该静态方法不去操作一个静态成员，只在方法内部使用实例字段(instance field)，不会引起安全性问题。但是，如果该静态方法操作了一个静态字段，则需要静态方法中采用互斥访问的方式进行安全处理。\n\npublic class Test\n{\n   public static String hello(String str)\n   {\n       String tmp = \"\";\n       tmp = tmp + str;\n       return tmp;\n   }\n}静态方法如果没有使用静态变量，则没有线程安全问题\n\n因为静态方法内声明的变量，每个线程调用时，都会新创建一份，而不会共用一个存储单元。比如这里的tmp,每个线程都会创建自己的一份，因此不会有线程安全问题。\n注意:静态变量，由于是在类加载时占用一个存储区，每个线程都是共用这个存储区的，所以如果在静态方法里使用了静态变量，这就会有线程安全问题！","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:28:23","updateTime":"2021-04-30 10:28:23","isExist":null},{"id":1251,"question":"(79)静态变量初始化步骤是什么?","simplecontent":null,"content":"连接阶段又可以分为三个子步骤：验证、准备和解析。\n\n验证就是要确保java类型数据格式 的正确性，并适于JVM使用。\n\n准备阶段，JVM为静态变量分配内存空间，并设置默认值；注意，这里是设置默认值，比如说int型的变量会被赋予默认值0 。在这个阶段，JVM可能还会为一些数据结构分配内存，目的 是提高运行程序的性能，比如说方法表。\n\n解析过程就是在类型的常量池中寻找类、接口、字段和方法的符号引用，把这些符号引用替换成直接引用。这个阶段可以被推迟到初始化之后，当程序运行的过程中真正使用某个符号引用的时候 再去解析它。\n\n类会在首次被“主动使用”时执行初始化，为类（静态）变量赋予正确的初始值。\n\n在Java代码中，一个正确的初始值是通过类变量初始化语句或者静态初始化块给出的。而我们这里所说的主动使用 包括：\n1. 创建类的实例\n2. 调用类的静态方法\n3. 使用类的非常量静态字段\n4. 调用Java API中的某些反射方法\n5. 初始化某个类的子类\n6. 含有main()方法的类启动时\n\n初始化一个类包括两个步骤：\n1、 如果类存在直接父类的话，且直接父类还没有被初始化，则先初始化其直接父类\n2、 如果类存在一个初始化方法，就执行此方法\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:28:08","updateTime":"2021-04-30 10:28:08","isExist":null},{"id":1250,"question":"(78)静态变量是什么时候初始化的？启动","simplecontent":null,"content":"项目启动时候","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:27:53","updateTime":"2021-04-30 10:27:53","isExist":null},{"id":1249,"question":"(77)static局部变量和普通局部变量有什么区别 ？","simplecontent":null,"content":"《启动初始化一次、实例化时初始化》\n 　　把局部变量改变为静态变量后是改变了它的存储方式即改变了它的生存期。把全局变量改变为静态变量后是改变了它的作用域，限制了它的使用范围。  \n　　static局部变量只被初始化一次，下一次依据上一次结果值； 　 ","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:27:44","updateTime":"2021-04-30 10:27:44","isExist":null},{"id":1248,"question":"(76)static全局变量与普通的全局变量存储方式是什么？静态","simplecontent":null,"content":"全局变量是静态存储， 静态全局变量也是静态存储\n　　全局变量(外部变量)的说明之前再冠以static 就构成了静态的全局变量。\n　　全局变量本身就是静态存储方式， 静态全局变量当然也是静态存储方式。 这两者在存储方式上并无不同。\n　　这两者的区别在于非静态全局变量的作用域是整个源程序， 当一个源程序由多个源文件组成时，非静态的全局变量在各个源文件中都是有效的。 而静态全局变量则限制了其作用域， 即只在定义该变量的源文件内有效， 在同一源程序的其它源文件中不能使用它。由于静态全局变量的作用域局限于一个源文件内，只能为该源文件内的函数公用，因此可以避免在其它源文件中引起错误。 \n　　static全局变量只初使化一次，防止在其他文件单元中被引用; 　 ","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:27:26","updateTime":"2021-04-30 10:27:26","isExist":null},{"id":1247,"question":"(75)中文字符有哪些？Utf8、gbk","simplecontent":null,"content":"Utf-8，gbk，gb2312》{gbk、utf8}\n  贵宾卡\ngbk、utf、gb","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:27:16","updateTime":"2021-04-30 10:27:16","isExist":null},{"id":1246,"question":"(74)jdk1.8放在存储在哪里 ？元","simplecontent":null,"content":"元空间里面，和堆相独立元{元}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:27:08","updateTime":"2021-04-30 10:27:08","isExist":null},{"id":1245,"question":"jdk1.7常量池放存储在哪里 ？堆","simplecontent":null,"content":"在堆内存堆{堆}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:27:00","updateTime":"2021-04-30 10:27:00","isExist":null},{"id":1244,"question":"jdk1,6常量池存储在哪里？方法","simplecontent":null,"content":"放在方法区方法区{方法}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:26:53","updateTime":"2021-04-30 10:26:53","isExist":null},{"id":1243,"question":"(71)String的常量池位于哪里呢？","simplecontent":null,"content":"java的String池是位于方法区的。那么怎么来验证String池是不是真的属于这个区？\n\n我们可以构建一个函数来不停地向String池里面加入，直到溢出，根据异常来检查所在区域。\n\n测试部分可以参考http://zangxt.iteye.com/blog/472236的实验代码。\n\n构建好使String池溢出的方法后，异常信息告诉我们PermGen 满了。字符串常量池在PermGen位置，PermGen就是jvm规范中所谓的方法区。\n需要看你的JVM的版本，不同的JVM版本常量池的位置是不同的！","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:26:45","updateTime":"2021-04-30 10:26:45","isExist":null},{"id":1242,"question":"String b = new String(\"abc\")存储在哪里？堆","simplecontent":null,"content":"堆\n\n这两种声明方法得到的String是不一样的，第一种声明方法得到的String是存储在String常量池里面的，而第二种方式的声明很明显是正常的创建一个对象的使用方法，所以存储在堆中。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:22:48","updateTime":"2021-04-30 10:22:48","isExist":null},{"id":1241,"question":"(69)String a = “abc”存储在哪里？常","simplecontent":null,"content":"常量池","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 10:22:41","updateTime":"2021-04-30 10:22:41","isExist":null},{"id":925,"question":"十大肿瘤原因?","simplecontent":"","content":"近日，中华医学会第十四次全国放射肿瘤学学术年会上，中国医学科学院肿瘤医院院长、国家癌症中心主任、中国科学院郝捷院士发布了“我国最新癌症现状和趋势”。\n\n癌症1.jpg\n\n国家癌症中心主任 赫捷\n\n2017《中国肿瘤的现状和趋势》报告显示，不论城市还是农村，肿瘤都是中国居民的主要死亡原因。\n\n我国男性发病前10位的癌症依次分别是：肺癌、胃癌、肝癌、食管癌、结肠癌、胰腺癌、脑癌、淋巴癌、血癌、前列腺癌；\n\n我国女性发病前10位的癌症依次分别是：肺癌、胃癌、食管癌、肝癌、结直肠癌、乳腺癌、胰腺癌、宫颈癌、脑癌、卵巢癌。\n\n癌症2.jpg\n\n合并统计后，我国目前肿瘤发病居前10位的癌症依次为：肺癌、胃癌、肝癌、食管癌、结直肠癌、胰腺癌、乳腺癌、脑癌、白血病（血癌）、淋巴癌。\n\n癌症3.jpg\n\n10大高发癌症怎么预防？\n\n肺癌——防“五气”\n\n胸外科专家介绍，“肺癌是一个被“气”出来的病”，重点防好“五气”！\n\n1. 烟草烟气污染：吸烟已经是全球公认的肺癌高发因素，防肺远离一手烟、二手烟和三手烟。\n\n2. 室外大气污染：室外空气质量不好时，大家外出最好佩戴口罩。\n\n3. 厨房油烟污染：很多人都不知道，烹饪过程中燃烧产生释放出的有害气体也是肺癌高发的‘元凶，所以烹饪时应全过程打开抽烟机，并保持室内通风。\n\n4. 装修材料污染：房屋装修完产生的氡、苯和甲醛等有害气体都是肺癌高发的因素。\n\n5. 常常爱生闷气：有种性格叫作“癌性格”，这样的人性格内向孤僻、不擅于与人交流，常常爱生闷气，也容易患上肺癌。\n\n胃癌——忌辣忌咸\n\n消化专家介绍，胃癌主要是“吃出来”的，尤其是过分吃辣、过多食盐对胃部伤害很大。\n\n吃盐过多会损伤胃黏膜，使胃壁上的细胞萎缩，而加工肉制品（如腌肉）和腌制类食品（如酸菜）等都含较多食盐，制作过程中还会产生大量亚硝酸盐，过多摄入会对肠胃造成损伤，甚至诱发癌前病变。\n\n另外，很多人爱吃辣，没有辣椒、辣酱就觉得饭菜不香。然而，麻辣小龙虾、水煮鱼等辛辣食品都会刺激、破坏胃肠道黏膜，长期反复刺激，就会造成胃部细胞癌变。\n\n防肝癌——“四不吃”\n\n1. 不吃发霉食物——黄曲霉素。发霉食品中的黄曲霉毒素为致肝癌物质，黄曲霉毒性是砒霜的68倍。因此食物应妥为存放，一旦发霉就应立即丢弃，尤其是黄豆、花生、红薯、甘蔗等，切不可再食用。\n\n2. 不吃或少吃腌菜——亚硝胺。酸菜、咸菜、咸鱼等腌菜爽口开胃，接下来天气热了，食欲不好，许多人更喜欢以腌菜下饭。但腌菜中含有较多量的亚硝胺，实验证明与肝癌的发生有关，最好不吃或少吃。\n\n3. 不饮酒或少饮酒——酒精肝。\n\n长期饮酒会引起酒精性肝炎，导致酒精性肝硬化，最终引发肝癌。“肝炎——肝硬化——肝癌”，是肝癌三部曲。\n\n4. 动、植物油变质后不宜食用——丙二醛。陈腐油类中均含有丙二醛这种化学成分，它能生成聚合物并与人体肝脏内的蛋白质和脱氧核糖核酸发生反应，使蛋白质的结构变异，导致变异蛋白质的细胞失去正常功能并向初期癌细胞转化。\n\n食管癌——别“趁热吃”\n\n消化道专家介绍，食管癌主要是一些饮食习惯导致的，比如“趁热吃”。“趁热吃、趁热喝”虽然一时觉得很舒服，但是过高的温度会导致食道黏膜出现烧伤现象，长此以往反复刺激，就会引起食管黏膜上皮细胞变性或造成破损、溃烂等，诱发癌变。\n\n结直肠癌——一减两加\n\n肛肠科专家介绍，预防肠癌要做好“一减两加”：\n\n一减：减少摄入双高食物。双高食物是指高动物蛋白、高脂肪的食品，研究表明，长期吃高脂肪、高蛋白、低纤维素食物是诱发结肠癌的原因之一。《自然》杂志上一项研究显示，高脂肪饮食会改变肠道中的微生物群，从而刺激肠道肿瘤的生长\n\n两加：增加蔬果粗粮和运动。果蔬中的膳食纤维能够促进肠道蠕动，减少废物在肠道内堆积。另外，尽量保持每周3次30分钟以上运动。运动可以显著降低肠癌危险，可以使容易癌变的肠道息肉减少1/3。\n\n胰腺癌——少吃甜食\n\n胰腺肿瘤外科专家介绍，虽然目前胰腺癌高发的具体原因还不十分清楚，但它属于生活方式病，高脂肪饮食摄入过量，食物纤维摄入不足，以及体育运动减少都与该病有关。\n\n尤其是过量摄入甜食会增加胰腺癌发病风险的说法已得到公认。因为吃糖过多会导致胰岛素大量分泌，使胰岛功能受到损伤，进而增加糖尿病风险，而流行病学资料表明糖尿病与胰腺癌有密切关系。一般来说，下每天如果摄入超过50克的甜食，就可能埋下胰腺癌的潜在隐患。\n\n乳腺癌——记住三个一\n\n乳腺外科专家介绍，预防记住 “3个1”，即1年1次专科检查，1月1次自我检查，1天1次乳房清洁。\n\n1年1次专科检查：每年要到医院由专科医生，根据身体情况进行超声或是X线检查，有条件者还可进行核磁共振检查。其中，超声和X线检查相结合可使乳腺癌诊断的准确率达到98%，可以说是黄金组合。\n\n1月1次自我检查：每个月都要对乳房进行自我检查，最好固定在月经后3~7天，如果自查时摸到乳房内有孤立、无痛，很硬的肿块，应尽早到医院排查是否患有乳腺癌。\n\n1天1次乳房清洁：每天临睡前最好对乳房进行清洁和保养，但要避免使用含有激素的丰胸产品。\n\n脑癌——远离电子辐射\n\n很多人都将脑癌和长期使用手机等电子产品联系起来，那么手机和脑癌的密切程度到底有多大呢？\n\n瑞典国家工作生命研究院曾经对905名恶性脑肿瘤患者的手机使用模式进行研究后指出，85人是手机的常用者，特别是那些20岁前已经开始使用手机或无线电话的病人，更是患病高危人群。该研究同时发现，常使用手机的头部一边，患脑肿瘤的几率比另一边高。常在头部一侧使用手机超过2000小时的人，患恶性脑肿瘤的风险将提高2.4倍。\n\n不过这类研究，也遭到了一些无线通信行业组织的质疑。专家建议，虽然目前为止还没有手机辐射会直接导致脑癌的证据，但是，电子产品的广泛使用，和脑癌的增长趋势有一定的重合。所以，在手机使用上，我们建议不要离大脑太近。\n\n白血病——少染发\n\n白血病是造血系统的恶性肿瘤，俗称“血癌”，是国内十大高发恶性肿瘤之一。致癌因素包括过多接触有机溶剂染料，最常见的就是染发剂、烫发剂，或者居住或工作在残留着大量有毒有害化学物质的新装修房屋内。\n\n尤其是苯及其衍生物，这些化学药物可以诱发突变，导致细胞恶性增殖，发展为白血病。苯及其衍生物常存在于一些日常生活用品中，如塑料等白色垃圾，此外在油漆、涂料、粘合剂等也含有苯的衍生物，应尽量少接触上述物质。\n\n淋巴癌——会减压\n\n专家介绍，淋巴瘤的发病与人体免疫功能有很大关系。如果人长期工作压力过大，导致精神紧张、心理压力大、生活作息不规律，使人很劳累，造成人体抵抗力下降，就会诱发淋巴瘤。\n\n另外，免疫功能缺陷也是导致淋巴癌发生的一个常见原因，一般情况下，人体的免疫系统有免疫监视的功能，而如果免疫出现障碍就很容易会导致病毒感染，进而引发淋巴癌，对此大家一定要引以为鉴，平时多加注意了。\n\n原标题：国家癌症中心发布排名前10的癌症！这些恶性肿瘤怎么预防，一篇文章告诉你！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 09:56:17","updateTime":"2021-04-30 09:56:18","isExist":null},{"id":1234,"question":"(63)BigDecimal.valueOf使用什么情况？Long和string，转成bigdecimal","simplecontent":null,"content":"Long和string，转成bigdecimal\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:53:37","updateTime":"2021-04-30 09:53:38","isExist":null},{"id":1231,"question":"(60)构造方法,代码块,静态代码块什么时候加载？全部是启动时加载","simplecontent":null,"content":"全部是启动时加载\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:53:30","updateTime":"2021-04-30 09:53:31","isExist":null},{"id":1236,"question":"(65)去掉左右空格，中间空格不掉？str.trim();","simplecontent":null,"content":"str.trim();\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:53:25","updateTime":"2021-04-30 09:53:26","isExist":null},{"id":1238,"question":"(66)Boolean占几个字节？114","simplecontent":null,"content":"o1个bit(1位)\no1个Byte(1字节，8位)\no4个Byte(4字节，32位)\n\n1、1个bit\n理由是boolean类型的值只有true和false两种逻辑值，在编译后会使用1和0来表示，这两个数在内存中只需要1位（bit）即可存储，位是计算机最小的存储单位。\n2、1个字节\n理由是虽然编译后1和0只需占用1位空间，但计算机处理数据的最小单位是1个字节，1个字节等于8位，实际存储的空间是：用1个字节的最低位存储，其他7位用0填补，如果值是true的话则存储的二进制为：0000 0001，如果是false的话则存储的二进制为：0000 0000。\n3、4个字节\n理由来源是《Java虚拟机规范》一书中的描述：“虽然定义了boolean这种数据类型，但是只对它提供了非常有限的支持。在Java虚拟机中没有任何供boolean值专用的字节码指令，Java语言表达式所操作的boolean值，在编译之后都使用Java虚拟机中的int数据类型来代替，而boolean数组将会被编码成Java虚拟机的byte数组，每个元素boolean元素占8位”。这样我们可以得出boolean类型占了单独使用是4个字节，在数组中又是1个字节。\n显然第三条是更准确的说法，那虚拟机为什么要用int来代替boolean呢？为什么不用byte或short，这样不是更节省内存空间吗。大多数人都会很自然的这样去想，我同样也有这个疑问，经过查阅资料发现，使用int的原因是，对于当下32位的处理器（CPU）来说，一次处理数据是32位（这里不是指的是32/64位系统，而是指CPU硬件层面），具有高效存取的特点。\n最后的总结：\n根据http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html官方文档的描述：\nboolean: The boolean data type has only two possible values: true and false. Use this data type for simple flags that track true/false conditions. This data type represents one bit of information, but its \"size\" isn't something that's precisely defined.\n布尔类型：布尔数据类型只有两个可能的值：真和假。使用此数据类型为跟踪真/假条件的简单标记。这种数据类型就表示这一点信息，但是它的“大小”并不是精确定义的。\n可以看出，boolean类型没有给出精确的定义，《Java虚拟机规范》给出了4个字节，和boolean数组1个字节的定义，具体还要看虚拟机实现是否按照规范来，所以1个字节、4个字节都是有可能的。这其实是运算效率和存储空间之间的博弈，两者都非常的重要。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:01:30","updateTime":"2021-04-30 09:01:31","isExist":null},{"id":1237,"question":"(66)Boolean占几个字节？114","simplecontent":null,"content":"1字符、1字节、4字节{1,1,4}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:01:02","updateTime":"2021-04-30 09:01:02","isExist":null},{"id":1235,"question":"(64)BigDecimal如何防止精度丢失？先转成字符串，再使用new BigDecimal","simplecontent":null,"content":"BigDecimal b = new BigDecimal(0.005);精度丢失\nBigDecimal b = new BigDecimal(\"0.005\");精度不丢失","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:00:48","updateTime":"2021-04-30 09:00:48","isExist":null},{"id":1233,"question":"(62)断言方法？Objects.requireNonNull(null);","simplecontent":null,"content":"如果为null抛出空指针异常","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:00:35","updateTime":"2021-04-30 09:00:35","isExist":null},{"id":1232,"question":"(61)集合或数组数组转成通过逗号隔开的字符串？StringUtils.join","simplecontent":null,"content":"String aa = StringUtils.join(list3, \",\");\nString aa1 = StringUtils.join(myStrArray, \",\");\nSystem.out.println(\"一般情况输出：\" + StringUtils.join(myStrArray, \",\"));","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:00:28","updateTime":"2021-04-30 09:00:28","isExist":null},{"id":1230,"question":"(59)构造方法,代码块,静态代码块执行顺序？静态方法、代码快、构造快","simplecontent":null,"content":"父类静态代码块——>子类静态代码块——>父类代码块——>父类构造方法——>子类代码块——>子类构造方法\n\npublic class testOne extends TestTwo{\n    public testOne(){\n        System.out.println(\"子类构造方法\");\n    }\n    {\n        System.out.println(\"子类代码块\");\n    }\n    static {\n        System.out.println(\"子类静态代码块\");\n    }\n\n    public static void main(String[] args) {\n        new testOne();\n    }\n\n}\nclass  TestTwo{\n    public TestTwo(){\n        System.out.println(\"父类构造方法\");\n    }\n    {\n        System.out.println(\"父类代码块\");\n    }\n    static {\n        System.out.println(\"父类静态代码块\");\n    }\n    public static void find(){\n        System.out.println(\"静态方法\");\n    }\n}\n\n父类静态代码块\n子类静态代码块\n静态变量=3\n父类代码块\n父类构造方法\n子类代码块\n子类构造方法\n\npublic class StaticTest {\n    int age1 = 2;\n    static int age = 1;\n\n    static {\n        System.out.println(\"这是静态代码块\");\n    }\n    {\n        System.out.println(\"这是普通代码块\" + age1);\n    }\n\n    public StaticTest() {\n        System.out.println(\"这是构造方法\");\n    }\n\n    public static void show() {\n        System.out.println(\"这是静态方法\");\n    }\n\n    public void fun() {\n        System.out.println(\"这是普通方法\");\n    }\n\n    public static void main(String[] args) {\n        System.out.println(age);\n        StaticTest t = new StaticTest();\n        StaticTest.show();\n        t.fun();\n        System.out.println(t.age1);\n        String a = Boolean.toString(true);\n        System.out.println(a);\n    }\n}\n这是静态代码块\n1\n这是普通代码块2\n这是构造方法\n这是静态方法\n这是普通方法\n2\ntrue","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 09:00:16","updateTime":"2021-04-30 09:00:16","isExist":null},{"id":1229,"question":"(58)静态常量，静态变量， 静态方法 ，还有就是静态代码块执行顺序？静态构造快比静态变量先执行，执行是会根据代码编写的顺序来决定的。","simplecontent":null,"content":"当一个类中 有多个静态代码块的时候，是按照代码编写的上下顺序先后执行的\n不管是否有在静态代码块中使用 静态变量， 都应当把静态变量写在 静态代码块的上方。\n静态方法没有调用不会展示出来，而静态代码快启动会调用\n父类的（静态变量、静态初始化块）=> 子类的（静态变量、静态初始化块）=> 父类的（变量、初始化块、构造器）=> 子类的（变量、初始化块、构造器）","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:59:45","updateTime":"2021-04-30 08:59:45","isExist":null},{"id":1228,"question":"枚举的使用？enum 声明类","simplecontent":null,"content":"public static void main(String[] args) {\n    System.out.println(Result.SUCCESS.index);//单个\n    System.out.println(Result.getName(\"11\"));//查询\n}\npublic enum Result{\n    SUCCESS(\"11\",\"111\"),\n    DEPOSIT_NOT_ENOUGH(\"22\",\"222\"),\n    FAILED(\"33\",\"333\"),\n    ;\n\n    private String name;\n    private String index;\n\n    Result(String index, String name) {\n        this.index = index; this.name = name;\n    }\n    public static String getName(String index) {\n        for (Result c : Result.values()) {\n            if (c.getIndex() == index) {\n                return c.name;\n            }\n        }\n        return null;\n    }\n    public String getName() {\n        return name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n    public String getIndex() {\n        return index;\n    }\n    public void setIndex(String index) {\n        this.index = index;\n    }\n}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:59:35","updateTime":"2021-04-30 08:59:35","isExist":null},{"id":1227,"question":"(56)枚举快速定义？直接声明enum 类，使用大写定义常量","simplecontent":null,"content":"public enum Size{ SMALL, MEDIUM, LARGE, EXTRA_LARGE };","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:59:24","updateTime":"2021-04-30 08:59:24","isExist":null},{"id":1226,"question":"(55)命名常见的词语？文件夹命名、操作命名","simplecontent":null,"content":"额外搭配词语：\nSql  list   one  get   details   syn I  sync  Create \n\n文件夹命名：\nDao impl service controller manager config feign  entity（数据库）  vo（入参） dto（出参）\nClient admin enums fallback job  mapper  model\nRunner util  Constant common component\n \n常用中缀：\nStatus  id  user  \n\n功能命名：\ncancel import export Progress print log retry overtime push\nModel下面有dto entity vo \nCommon下面有config enums utils  response\n\n\n命名长度：\n至少三个单词 至少一个物品词语 不可以使用软件词语\n\n操作命名：\nService/DAO 层方法命名规约\n          1） 获取单个对象的方法用 get 做前缀。\n          2） 获取多个对象的方法用 list/find/findPage 做前缀，复数形式结尾如：listObjects。\n          3） 获取统计值的方法用 count 做前缀。\n          4） 插入的方法用 save/insert 做前缀。\n          5） 删除的方法用 remove/delete 做前缀。\n          6） 修改的方法用 update 做前缀。\n\n        B) 领域模型命名规约\n          1） 数据对象：xxxDO，xxx 即为数据表名。\n          2） 数据传输对象：xxxDTO，xxx 为业务领域相关的名称。\n          3） 展示对象：xxxVO，xxx 一般为网页名称。\n          4） POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:59:16","updateTime":"2021-04-30 08:59:16","isExist":null},{"id":1225,"question":"(54)不确定返回类型如何使用泛型？Class<？> clazz","simplecontent":null,"content":"Set<T> 表示 集合里 是   T类的实例 \nList<E> 表示  集合里 是  E类的实例 \nList<?> 表示 集合里的对象类型不确定，未指定 \nList 同 List<?> 是一样的。 \npublic static void ff(){\n    List<?> list=new ArrayList<>();\n}\n\npublic static void main(String[] args) {\n    ff();\n}","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:59:04","updateTime":"2021-04-30 08:59:04","isExist":null},{"id":1224,"question":"(53)如何使用 T修饰？<T> ,Class<T> clazz,前面2个是一起用的","simplecontent":null,"content":"泛型的声明，必须在方法的修饰符（public,static,final,abstract等）之后，返回值声明之前。\npublic static <T> T request2Bean(HttpServletRequest request,Class<T> clazz){}\n\npublic static <T> void ff(T t){\n    List<T> list=new ArrayList<T>();\n}\n\npublic static void main(String[] args) {\n    ff(String.class);\n}\n没有<T>会报错\n\npublic static <E> void ff(E t){\n    List<E> list=new ArrayList<E>();\n}\n\npublic static void main(String[] args) {\n    ff(User.class);\n}\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:58:54","updateTime":"2021-04-30 08:58:54","isExist":null},{"id":1223,"question":"(52)E、T、问号 分别用在什么场景？集合、java类、不确定","simplecontent":null,"content":"E - Element (在集合中使用，因为集合中存放的是元素)\n T - Type（Java 类）\n K - Key（键）\n V - Value（值）\n N - Number（数值类型）\n ? -  表示不确定的java类型","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:58:44","updateTime":"2021-04-30 08:58:44","isExist":null},{"id":1222,"question":"class<T>和 class<?>类型 有什么区别？T需要定义好具体类型，？不用具体类型","simplecontent":null,"content":"？ 表示不确定的java类型。 \nT  表示java类型。 \nK V 分别代表java键值中的Key Value。 \nE 代表Element。 \n能知道返回的是哪种类型（父类），就用T行了？如果完全不知道的就用？用T的得到的对象就不需要类型","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:58:35","updateTime":"2021-04-30 08:58:35","isExist":null},{"id":1221,"question":"(49)iso-8859-1、utf-8和gb2312的区别？Iso是欧洲单字节编码，GB2312》GBK》GB18030","simplecontent":null,"content":"1、gb2312：是字符编码名称，属简体中bai文编码的一种du。\n\n2、utf-8：是针对zhiUnicode的一种可变长度字符编码。\n\n3、iso-8859-1：是单字节编码，向下兼容ASCII，其编码范围是0x00-0xFF，0x00-0x7F之间完全和ASCII一致。\n4、ISO-8859-1编码是单字节编码，向下兼容ASCII，是许多欧洲国家使用的编码标准。其编码范围是0x00-0xFF，0x00-0x7F之间完全和ASCII一致，0x80-0x9F之间是控制字符，0xA0-0xFF之间是文字符号。\n5、GB2312是国家制定的汉字编码标准，使用双子节进行编码，共收入6763个汉字和682个非汉字图形字符。GBK即对国标编码的扩展，在GB2312的基础上进行扩展形成的，使用双子节编码方式，共收入21003个汉字，从而大大满足了汉字使用的需要。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:58:15","updateTime":"2021-04-30 08:58:15","isExist":null},{"id":1220,"question":"(48)ASCII是什么?二进制表示字符","simplecontent":null,"content":"在计算机中，所有的数据在存储和运算时都要使用二进制数，计算机用高电平表示1，低电平表示0，所以那些字符a,b,c,d.....和数字0,1,2,3,......也要用二进制数来表示 ，要是每个人都用自己的方式去定义谁代表a，谁代表b,想法会不一样的，大家也就没法交流了，于是美国就统一规定了上述常用符号用那些二进制数来表示。\n\n字母A的ASCII码为1000001","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:58:05","updateTime":"2021-04-30 08:58:05","isExist":null},{"id":1219,"question":"(47)instanceof 关键字的作用?判断对象的类型","simplecontent":null,"content":"boolean result = obj instanceof Class","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:56","updateTime":"2021-04-30 08:57:56","isExist":null},{"id":1218,"question":"(46)100==100、200==200结果如何？True和flse","simplecontent":null,"content":"ublic class Main {\npublic static void main(String[] args) {\nInteger i1 = 100;\n Integer i2 = 100;\n Integer i3 = 200;\n Integer i4 = 200;\nSystem.out.println(i1==i2); \nSystem.out.println(i3==i4);\n}\n}\nTrue\n false\n输出结果表明i1和i2指向的是同一个对象，而i3和i4指向的是不同的对象。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:48","updateTime":"2021-04-30 08:57:48","isExist":null},{"id":1217,"question":"(45)ascii码有多少个？共有128个","simplecontent":null,"content":"ASCII码使用指定bai的7位或8位二进制数组合来表示128或256种可能du的字符zhi。\n一般是128个（0-127），后来有人给扩展到256个（0-255）了，但要支持扩展版就必须有扩展板的字库，其实128个就足够用了。大小写英文＋阿拉伯数字＋简单标点符号都有了，要还嫌不够，那就直接上GB2312好了。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:41","updateTime":"2021-04-30 08:57:41","isExist":null},{"id":1216,"question":"(44)你在项目中哪些地方用到了XML？数据交换和信息配置","simplecontent":null,"content":"XML 的主要作用有两个方面：数据交换和信息配置。在做数据交换时，XML 将数据用标签组装成起来， 然后压缩打包加密后通过网络传送给接收者， 接收解密与解压缩后再从 XML 文件中还原相关信息进行处理，XML 曾经是异构系统间交换数据的事实标准， 但此项功能几乎已经被 JSON（ JavaScript Object Notation） 取而代之。当然，目前很多软件仍然使用 XML 来存储配置信息，我们在很多项目中通常也会将作为配置信息的硬代码写在 XML 文件中，Java 的很多框架也是这么做的， 而且这些框架都选择了 dom4j 作为处理 XML 的工具， 因为 Sun 公司的官方API 实在不怎么好用。\n\n补充： 现在有很多时髦的软件（ 如 Sublime） 已经开始将配置文件书写成 JSON 格式， 我们已经强烈的感受到 XML 的另一项功能也将逐渐被业界抛弃。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:33","updateTime":"2021-04-30 08:57:33","isExist":null},{"id":1215,"question":"(43)Java 中怎样将 bytes 转换为 long 类型？","simplecontent":null,"content":"","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:25","updateTime":"2021-04-30 08:57:25","isExist":null},{"id":1214,"question":"(42)怎么将 byte 转换为 String？GetBytes、new String 字母和数字转是1个字符，而一个中文是三个字符","simplecontent":null,"content":"可以使用 String 接收 byte[] 参数的构造器来进行转换，需要注意的点是要使用的正确的编码， 否则会使用平台默认编码， 这个编码可能跟原来的编码相同， 也可能不同。\nString str = \"abcd\";\nbyte[] bs = str.getBytes();\n\n\t\tString str = \"abcd\";\n\t\tbyte[] bs = str.getBytes();\n\t\tSystem.out.println(JSON.toJSONString(bs));\n\t\tfor (byte b : bs) {\n\t\t\tSystem.out.println(\"---------\"+b);\n\t\t}\n\t\t\"YWJjZA==\"\n\t\t---------97\n\t\t---------98\n\t\t---------99\n\t\t---------100\n\n\nString str = \"a中国\";\nbyte[] bs = str.getBytes();\nSystem.out.println(JSON.toJSONString(bs));\nfor (byte b : bs) {\n   System.out.println(\"---------\"+b);\n}\n\"YeS4reWbvQ==\"\n---------97\n----------28\n----------72\n----------83\n----------27\n----------101\n----------67\n\n\t\tString str = \"12\";\n\t\tbyte[] bs = str.getBytes();\n\t\tSystem.out.println(JSON.toJSONString(bs));\n\t\tfor (byte b : bs) {\n\t\t\tSystem.out.println(\"---------\"+b);\n\t\t}\n\t\t\"MTI=\"\n\t\t---------49\n\t\t---------50\n\n/*String str1 = \"abcd\";\nbyte[] bs1 = str1.getBytes();*/\nbyte[] srtbyte = {97,98,98};\nString res = new String(srtbyte,\"UTF-8\");\t","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:20","updateTime":"2021-04-30 08:57:20","isExist":null},{"id":1213,"question":"(41)如果该值大于 byte 类型的范围，将会出现什么现象？int 类型的高 24 位将会被丢弃","simplecontent":null,"content":"byte c1 = 46;\n byte c2 = 95;\n byte c3 = (byte)(c1 + c2);\n System.out.println(\"c3=\" + c3);\nc3=-115\n\nint是4个字节 而把int转换成byte会截取最后一个字节\n比如你说的135 转为2进制应该有4个字节 然后仅仅要最后一个字节\n最后一个字节的第一位被作为符号位135转换2进制后为10000111\n然后按照 补码 计算规则看一下\n把除了符号位之外 取反加1 变成11111001 这结果是-121","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:10","updateTime":"2021-04-30 08:57:10","isExist":null},{"id":1212,"question":"(40)将 int 强制转换为 byte 类型的变量吗？可以","simplecontent":null,"content":"是的，我们可以做强制转换，但是 Java 中 int  是  32  位的，而  byte  是  8  位的，所以，如果强制转化是，int 类型的高 24 位将会被丢弃，byte 类型的范围是从  -128  到  128。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:57:00","updateTime":"2021-04-30 08:57:00","isExist":null},{"id":1195,"question":"多态的作用？解藕","simplecontent":null,"content":"简单来说：解藕。详细点就是，多态是设计模式的基础(既然是基础，那么一些设计模式中肯定有多态的下面三个条件)","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:55:20","updateTime":"2021-04-30 08:55:21","isExist":null},{"id":1211,"question":"byte类型取值范围为什么是127到-128？一个byte只有8位","simplecontent":null,"content":"一个byte由八个位组成，如00000000，其中，前7位表示数值，第8位是符号位（0为正，1为负）。这样+1就是00000001，-1就是10000001。最大的正数就是0 1111111，即2^0+2^1+……+2^6=127；最小的负数，同理，为1 1111111，即-127。   \n\n到这里应该是许多人不明白的地方，为什么负数会到-128。\n\n上述的描述会出现一个问题，就是0，会出现一个+0和一个-0。印度人他们规定-0为-128，这样就与计算机的补码（程序都是按补码运行的）完美的结合在一起。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:54:08","updateTime":"2021-04-30 08:54:08","isExist":null},{"id":1210,"question":"(38)实体转换方法有那些？","simplecontent":null,"content":"1.BeanUtils.copyProperties  简单的实体类之间的转换，不能copy Date类型，利用java反射的原理来进行属性的复制。如果两个实体的类的里面嵌套实体类的类型不一样，copy后实体类的变为原实体类的类型，当在此使用目标实体类的时候会发生类型的转化异常。\n2.先转换成字符串，在转换成实体\nJSONObject.parse(JSON.toString(),实体),","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:53:58","updateTime":"2021-04-30 08:53:58","isExist":null},{"id":1209,"question":"队列和栈的区别？队列先进先出，栈先进后出；一端和两端","simplecontent":null,"content":"1、队列先进先出，栈先进后出。\n\n2、对插入和删除操作的\"限定zhi\"不同。\n\n栈是限定只能在表dao的一端进行插入和删除操作的线性表。     \n\n队列是限定只能在表的一端进行插入和在另一端进行删除操作的线性表。  \n\n3、遍历数据速度不同。\n\n栈只能从头部取数据，也就最先放入的需要遍历整个栈最后才能取出来，而且在遍历数据的时候还得为数据开辟临时空间，保持数据在遍历前的一致性。\n\n队列则不同，它基于地址指针进行遍历，而且可以从头或尾部开始遍历，但不能同时遍历，无需开辟临时空间，因为在遍历的过程中不影像数据结构，速度要快的多","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:53:46","updateTime":"2021-04-30 08:53:46","isExist":null},{"id":1208,"question":"内存溢出的解决方案？内存参数、错误日志、内存工具检查、是否有批量操作","simplecontent":null,"content":"第一步，修改JVM启动参数，直接增加内存。(-Xms，-Xmx参数一定不要忘记加。)\n第二步，检查错误日志，查看“OutOfMemory”错误前是否有其它异常或错误。\n第三步，对代码进行走查和分析，找出可能发生内存溢出的位置。\n重点排查以下几点：\n　　1.检查对数据库查询中，是否有一次获得全部数据的查询。一般来说，如果一次取十万条记录到内存，就可能引起内存溢出。这个问题比较隐蔽，在上线前，数据库中数据较少，不容易出问题，上线后，数据库中数据多了，一次查询就有可能引起内存溢出。因此对于数据库查询尽量采用分页的方式查询。\n　　2.检查代码中是否有死循环或递归调用。 \n　　3.检查是否有大循环重复产生新对象实体。 \n　　4.检查对数据库查询中，是否有一次获得全部数据的查询。一般来说，如果一次取十万条记录到内存，就可能引起内存溢出。这个问题比较隐蔽，在上线前，数据库中   数据较少，不容易出问题，上线后，数据库中数据多了，一次查询就有可能引起内存溢出。因此对于数据库查询尽量采用分页的方式查询。 \n　　5.检查List、MAP等集合对象是否有使用完后，未清除的问题。List、MAP等集合对象会始终存有对对象的引用，使得这些对象不能被GC回收。\n　　第四步，使用内存查看工具动态查看内存使用情况\n从内存溢出看Java 环境中的内存结构","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:53:36","updateTime":"2021-04-30 08:53:36","isExist":null},{"id":1207,"question":"(36)内存溢出的原因?内存、集合、循环new、内存参数","simplecontent":null,"content":"1.内存中加载的数据量过于庞大，如一次从数据库取出过多数据；\n　　2.集合类中有对对象的引用，使用完后未清空，使得JVM不能回收；\n　　3.代码中存在死循环或循环产生过多重复的对象实体；\n　　4.使用的第三方软件中的BUG；\n　　5.启动参数内存值设定的过小；","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:53:22","updateTime":"2021-04-30 08:53:22","isExist":null},{"id":1206,"question":"java日志级别有哪些?优先级由高到低:OFF>FATAL>ERROR>WARN>INFO>DEBUG>ALL","simplecontent":null,"content":" java中日志级别有7 个级别：severe、Warning、info、config、fine、finer、finest。默认情况只记录前三个级别。另外可以使用Level.ALL开启所有的级别记录。或者使用Level.OFF关闭所有的级别记录。\n    log4j中日志级别有8种：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL。\nALL 最低等级的，用于打开所有日志记录。\nTRACE designates finer-grained informational events than the DEBUG.Since:1.2.12，很低的日志级别，一般不会使用。\nDEBUG 指出细粒度信息事件对调试应用程序是非常有帮助的，主要用于开发过程中打印一些运行信息。\nINFO 消息在粗粒度级别上突出强调应用程序的运行过程。打印一些你感兴趣的或者重要的信息，这个可以用于生产环境中输出程序运行的一些重要信息，但是不能滥用，避免打印过多的日志。\nWARN 表明会出现潜在错误的情形，有些信息不是错误信息，但是也要给程序员的一些提示。\nERROR 指出虽然发生错误事件，但仍然不影响系统的继续运行。打印错误和异常信息，如果不想输出太多的日志，可以使用这个级别。\nFATAL 指出每个严重的错误事件将会导致应用程序的退出。这个级别比较高了。重大错误，这种级别你可以直接停止程序了。\nOFF 最高等级的，用于关闭所有日志记录。\n如果将log level设置在某一个级别上，那么比此级别优先级高的log都能打印出来。例如，如果设置优先级为WARN，那么OFF、FATAL、ERROR、WARN 4个级别的log能正常输出，而INFO、DEBUG、TRACE、 ALL级别的log则会被忽略。Log4j建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG。\nlog4j默认的优先级为ERROR或者WARN（实际上是ERROR）","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:53:13","updateTime":"2021-04-30 08:53:13","isExist":null},{"id":1205,"question":"java线程安全日期？jdk低于1.7用 ThreadLocal<DateFormat>，jdk1.8用","simplecontent":null,"content":"(34)LocalDateTime、DateTimeFormatter \n如果是jdk低于1.7用： ThreadLocal<DateFormat>\nprivate static threadLocal = new ThreadLocal<DateFormat>() {\n    @Override\n    protected DateFormat initialValue() {\n        return new SimpleDateFormat(DATE_TIME_PATTERN);\n    }\n}\njava8 通过 DateTimeFormatter 进行处理\nprivate static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\nLocalDateTime\nDateTimeFormatter\n即时刷新当前时间\n\npublic static void ldtDemo(){\n\t//根据时间数值初始化LocalDateTime\n\tLocalDateTime t1 = LocalDateTime.of(2020,5,18,5,13,0,0);\n\t\n\t//将LocalDateTime转换为指定格式的字符串\n\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n\tString st1 = dtf.format(t1);\n\tSystem.out.println(st1);\n\t\n\t//将字符串解析为LocalDatetTime\n\tLocalDateTime t2 = LocalDateTime.parse(st1,dtf);\n\tSystem.out.println(t2);\n}\nLocalDateTime loca1 = LocalDateTime.parse(\"2020-04-24T15:14:05\");\nSystem.out.println(loca1);","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:53:02","updateTime":"2021-04-30 08:53:02","isExist":null},{"id":1204,"question":"(33)Java 中 java.util.Date 与 java.sql.Date 有什么区别？Sql无时间","simplecontent":null,"content":"java.util.Date 就是在除了SQL语句的情况下面使用\njava.sql.Date 是针对SQL语句使用的，它只包含日期而没有时间部分\n它都有getTime方法返回毫秒数，自然就可以直接构建\njava.util.Date d = new java.util.Date(sqlDate.getTime());\n...\n\n--------------------------------------------------------------------------------\njava.util.Date 是 java.sql.Date 的父类（注意拼写）\n前者是常用的表示时间的类，我们通常格式化或者得到当前时间都是用他\n后者之后在读写数据库的时候用他，因为PreparedStament的setDate()的第2参数和ResultSet的getDate()方法的第2个参数都是java.sql.Date \n转换是\njava.sql.Date date=new Java.sql.Date();\njava.util.Date d=new java.util.Date (date.getTime());\n反过来是一样的\n\n--------------------------------------------------------------------------------\n继承关系：java.lang.Object --》 java.util.Date --》 java.sql.Date\n具体的转换关系就是java.util.Date d=new java.util.Date (new Java.sql.Date());\n\n--------------------------------------------------------------------------------\nsql.date,一般是在数据库的时间字段,util.date一般是日常日期字段\n\n--------------------------------------------------------------------------------\njava.sql.Date主要是用于sql中的！\n而java.util.Date用语一般的环境下都行！\n\n--------------------------------------------------------------------------------\n\nSimpleDateFormat f=new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n       java.util.Date utilDate=new Date();      \n       java.sql.Date sqlDate=new java.sql.Date(utilDate.getTime());        \n       java.sql.Time sTime=new java.sql.Time(utilDate.getTime());   \n       java.sql.Timestamp stp=new java.sql.Timestamp(utilDate.getTime());\n      System.out.println(utilDate.getYear());\n\n这里所有时间日期都可以被SimpleDateFormat格式化format()\n\nf.format(stp);f.format(sTime);f.format(sqlDate);f.format(utilDate)\n\njava.sql.Date sqlDate=java.sql.Date.valueOf(\"2005-12-12\");\n      \n       utilDate=new java.util.Date(sqlDate.getTime());","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:52:48","updateTime":"2021-04-30 08:52:48","isExist":null},{"id":1203,"question":"(32)Java 中，如何计算两个日期之间的差距？转成时间戳计算，如果是某个日使用Calendar 转时间戳","simplecontent":null,"content":"public static int daysBetween(Date smdate,Date bdate) throws ParseException \n{ \nSimpleDateFormat sdf=new SimpleDateFormat(\"yyyy-MM-dd\"); \nsmdate=sdf.parse(sdf.format(smdate)); \nbdate=sdf.parse(sdf.format(bdate)); \nCalendar cal = Calendar.getInstance(); \ncal.setTime(smdate); \nlong time1 = cal.getTimeInMillis(); \ncal.setTime(bdate); \nlong time2 = cal.getTimeInMillis(); \nlong between_days=(time2-time1)/(1000*3600*24); \n\nreturn Integer.parseInt(String.valueOf(between_days)); \n} ","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:52:26","updateTime":"2021-04-30 08:52:26","isExist":null},{"id":1202,"question":"内存泄漏和内存溢出区别？泄漏是拿了内存却无法返回、而漏出申请大于内存足够的","simplecontent":null,"content":"1、内存泄漏memory leak :是指程序在申请内存后，无法释放已申请的内存空间，一次内存泄漏似乎不会有大的影响，但内存泄漏堆积后的后果就是内存溢出。 \n2、内存溢出 out of memory :指程序申请内存时，没有足够的内存供申请者使用，或者说，给了你一块存储int类型数据的存储空间，但是你却存储long类型的数据，那么结果就是内存不够用，此时就会报错OOM,即所谓的内存溢出。 ","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:52:17","updateTime":"2021-04-30 08:52:17","isExist":null},{"id":1201,"question":"(30)java里写语句查看线程状态？thread.getState","simplecontent":null,"content":"//第一个类 ThreadState\n public class ThreadState implements Runnable {\n\tpublic synchronized void waitForASecond() throws InterruptedException {\n\t\twait(500); // 使当前线程等待0.5秒或其他线程调用notify()或notifyAll()方法\n\t}\n\n\tpublic synchronized void waitForYears() throws InterruptedException {\n\t\twait(); // 使当前线程永久等待，直到其他线程调用notify()或notifyAll()方法\n\t}\n\n\tpublic synchronized void notifyNow() throws InterruptedException {\n\t\tnotify(); // 唤醒由调用wait()方法进入等待状态的线程\n\t}\n\n\tpublic void run() {\n\t\ttry {\n\t\t\twaitForASecond(); // 在新线程中运行waitForASecond方法\n\t\t\twaitForYears(); // 在新线程中运行waitForYears()方法\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\n\n    public static void main(String[] args) throws InterruptedException {\n        ThreadState state = new ThreadState(); // 创建State对象\n        Thread thread = new Thread(state); // 利用State对象创建Thread对象\n       System.out.println(\"新建线程： \" + thread.getState()); // 输出线程状态\n        thread.start(); // 调用thread对象的start()方法，启动新线程\n       System.out.println(\"启动线程：\" + thread.getState()); // 输出线程状态\n        Thread.sleep(100); // 当前线程休眠0.1秒，使新线程运行waitForASecond（）方法、\n       System.out.println(\"计时等待： \" + thread.getState()); // 输出线程状态\n        Thread.sleep(1000);// 当前线程休眠1秒，使新线程运行waitForYears()方法\n       System.out.println(\"等待线程：\" + thread.getState()); // 输出线程状态\n        state.notifyNow(); // 调用state的notifyNow()方法\n       System.out.println(\"唤醒线程： \" + thread.getState()); // 输出线程状态\n        Thread.sleep(1000); // 当前线程休眠1秒，使线程结束\n       System.out.println(\"终止线程: \" + thread.getState()); // 输出线程状态\n    }\n\t\n新建线程： NEW\n启动线程：RUNNABLE\n计时等待： TIMED_WAITING\n等待线程：WAITING\n唤醒线程： BLOCKED\n终止线程: TERMINATED\n\n1、 创建状态\n在线程类使用new关键字实例化之后且在调用start()方法之前，线程处于创建状态。处于创建状态的线程仅仅分配了内存空间，属于生命周期的初始状态。\n\n2、 就绪状态\n在线程调用了start（）方法后即处于就绪状态。处于就绪状态的线程具备了除CPU之外所有运行所需的资源。就绪状态线程排队等待CPU，由系统调度为其分配。\n\n3、运行状态\n处于就绪状态的线程获得CPU之后即处于运行状态。处于运行状态的线程才开始真正执行线程run()方法的内容\n\n4、阻塞/等待状态\n处于运行状态的线程如果因为某种原因不能继续执行，则进入阻塞状态。 阻塞状态与就绪状态的不同是：就绪状态只是因为缺少CPU而不能执行，而阻塞状态是由于各种原因引起线程不能执行，不仅仅是缺少CPU。引起阻塞的原因解除以后，线程再次转为就绪状态，等待分配CPU运行\n\n5、死亡状态\n当线程执行完run()方法的内容或被强制终止时，线程处于死亡状态，线程的整个生命周期结束。线程在整个生命周期中始终处于某种状态，从一种状态到另一种状态的转换由线程调度方法实现。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:52:07","updateTime":"2021-04-30 08:52:07","isExist":null},{"id":1200,"question":"(29)java是如何管理内存的？程序员通过new方法来申请内存的，new出的对象会放在堆中，但是对象的清楚是由GC来执行的","simplecontent":null,"content":"程序员通过new方法来申请内存的，new出的对象会放在堆中，但是对象的清楚是由GC来执行的，结论：对象的创建是由程序创建的，但是回收是通过GC来得到的，这减少了程序员的工作，也加重了JVM的负担，这也是 Java 程序运行速度较慢的原因之一。因为为了保证GC能够正确的释放对象，我们必须对每一个对象的运行状态进行监控，包括对象的申请、引用、被引用、赋值等，\n\n总结： 监视对象为了GC能够准确及时的回收对象，而释放的原则就是该对象不在被引用。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:51:48","updateTime":"2021-04-30 08:51:48","isExist":null},{"id":1199,"question":"(28)3*0.1==0.3返回值是什么？","simplecontent":null,"content":"false,因为有些浮点数不能完全精确的表示出来.","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:51:37","updateTime":"2021-04-30 08:51:37","isExist":null},{"id":1198,"question":"多态的分类？","simplecontent":null,"content":"编译时多态，方法的重载\n　　运行时多态，方法的重写\n7.分析多态问题的几条原则\n　　比如有一个父类Father,有一个子类Children\n　　（1）向上转型是自动的。Father f=new Children()是自动的，不需要强转\n　　（2）向下转型要强转。即Children c=new Father()是无法编译通过的，必须要Children c=(Children)new Father(),让父类知道它要转成具体哪个子类\n　　（3）父类引用指向子类对象，子类重写了父类的方法，调用父类的方法，实际调用的是子类重写了父类的该方法。\n　　即 Father f=new Children(),f.toString()实际上调用的是Children中的toString()方法","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:51:28","updateTime":"2021-04-30 08:51:28","isExist":null},{"id":1197,"question":"没办法表现出多态的特性？","simplecontent":null,"content":"　因为多态存在必须要有“子类重写父类方法”这个条件，那么下面三种类型的方法没办法表现出多态的特性(因为不能被重写)\n　　static方法：static修饰的方法是属于类的，而不属于实例\n　　final方法：因为被final修饰的方法无法被子类重写\n　　private方法：被private修饰的发那个法对子类不可见，\n　　protected方法：被protected修饰的方法可以被子类见到，也可以被重写，但无法被外部所引用，无法引用，就没有多态","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:51:11","updateTime":"2021-04-30 08:51:11","isExist":null},{"id":1196,"question":"多态存在的三个条件？","simplecontent":null,"content":"有继承关系\n　　子类重写了父类方法\n　　父类引用指向子类对象","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:51:01","updateTime":"2021-04-30 08:51:01","isExist":null},{"id":1194,"question":"什么是多态？不同类的对象对同一消息作出不同的响应","simplecontent":null,"content":"不同类的对象对同一消息作出不同的响应叫做多态","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:50:21","updateTime":"2021-04-30 08:50:21","isExist":null},{"id":1193,"question":"多态和其它关系？","simplecontent":null,"content":"抽象，封装，继承是多态的基础。多态是抽象，封装，继承的表现。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:50:13","updateTime":"2021-04-30 08:50:13","isExist":null},{"id":1192,"question":"面向对象四大基本特性？抽象，封装，继承，多态","simplecontent":null,"content":"抽象，封装，继承，多态\n","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:50:04","updateTime":"2021-04-30 08:50:04","isExist":null},{"id":1191,"question":"(27)OOP是什么？面向对象编程","simplecontent":null,"content":"oop 是面向对象编程,面向对象编程是一种计算机编程架构,OOP 的一条基本原则是计算机程序是由单个能够起到子程序作用的单元或对象组、合而成。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:49:55","updateTime":"2021-04-30 08:49:55","isExist":null},{"id":1190,"question":"(26)OOP有什么特性？没有抽象","simplecontent":null,"content":"1、封装性：也称为信息隐藏，就是将一个类的使用和实现分开，只保留部分接口和方法与外部联系，或者说只公开了一些供开发人员使用的方法。于是开发人员只 需要关注这个类如何使用，而不用去关心其具体的实现过程，这样就能实现 MVC 分工合作，也能有效避免程序间相互依赖，实现代码模块间松藕合。\n 2、继承性：就是子类自动继承其父级类中的属性和方法，并可以添加新的属性和方法或者对部分属性和方法进行重写。继承增加了代码的可重用性。PHP 只支持单继承，也就是说一个子类只能有一个父类。\n 3、多态性：子类继承了来自父级类中的属性和方法，并对其中部分方法进行重写。于是多个子类中虽然都具有同一个方法，但是这些子类实例化的对象调用这些相同的方法后却可以获得完全不同的结果，这种技术就是多态性。多态性增强了软件的灵活性。","filterContent":null,"type":"java基础","status":0,"createTime":"2021-04-30 08:49:42","updateTime":"2021-04-30 08:49:42","isExist":null},{"id":1189,"question":"喝酒不能吃什么药?","simplecontent":null,"content":"很多药物在饮酒以后都是不能口服的，因为口服以后可能会由于酒精的因素，造成过敏、呼吸困难甚至是休克的表现。常见的药物有抗生素比如青霉素、头孢菌素等，或者止疼药比如止痛片、去痛片等，以及抗过敏药物比如马来酸氯苯那敏片、氯雷他定等。所以如果患者由于身体状况需要口服上述药物，建议患者需要严格的戒酒。若患者在饮酒以后，至少1-2周以内不允许口服上述药物，若已经服用上述药物并出现不良症状，建议患者应立即前往医院就诊。\n\n病情分析：喝酒不能吃的药物有头孢菌素类、神经递质类、降血糖类、降压类、解热镇痛类、感冒类等药物。头孢菌素类易发生双唑仑样反应，严重时可危及生命。服用中枢神经药物时饮酒，可加速中枢神经系统的抑制。服用解热镇痛药是指饮酒会加重头晕或发烧症状。所以不要在喝酒之后吃药。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 06:10:07","updateTime":"2021-04-30 06:10:07","isExist":null},{"id":1188,"question":"遗传疾病？","simplecontent":null,"content":"病情分析：你好，遗传病有很多，但也不是所有都会遗传给孩子。常见的高遗传病有糖尿病，心脏病，高血压高血脂，近视，色盲，肥胖，羊角风等等，建议准备要孩子前夫妻双方应到医院做孕前检查！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 06:06:52","updateTime":"2021-04-30 06:06:52","isExist":null},{"id":1187,"question":"什么疾病会遗传？","simplecontent":null,"content":"病情分析：会遗传的东西多了，有的疾病都会遗传，比如说糖尿病或者是高血压以及先天性肾脏疾病，这些都有可能会存在一些遗传因素，还有很多人的智力先天性有问题，也会遗传给后一代，而制定问题以及头脑发育，这些都是会遗传给孩子的，还有就是人的样貌以及品德。\n\n我觉得出現遗传层面的病症还是挺多的，例如较为普遍的遗传性疾病，有血友病，也有就是说红绿色盲，并且缺铁性贫血也是可能会出現遗传，也有就是说白化病舞蹈症，也可能会由于遗传的原因，造成唐氏症或是是内分泌系统层面的病症，常有可能会出現遗传，如果发觉人体有病症的那时候，应当立即的开展查验医治。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-30 06:06:14","updateTime":"2021-04-30 06:06:14","isExist":null},{"id":1186,"question":"门前有三树，富贵？银杏，柿子，石榴","simplecontent":null,"content":"银杏，柿子，石榴","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 22:36:54","updateTime":"2021-04-29 22:36:54","isExist":null},{"id":1185,"question":"陈水扁和蔡英文是同一个党派吗?","simplecontent":null,"content":"陈水扁属于民主进步党，马英九属于国民党。\n\n他们同属民主进步党，蔡英文是现任民进党主席。刚刚赢得台湾地区2016年选举，成为台湾地区领导人。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 20:00:38","updateTime":"2021-04-29 20:00:38","isExist":null},{"id":1176,"question":"姓朱女生起名?","simplecontent":null,"content":"朱佳颖 朱梓瑄 朱思怡 朱晓玲 朱楚涵 ","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:58:53","updateTime":"2021-04-29 19:58:53","isExist":null},{"id":1184,"question":"台湾陈水扁为什么坐牢？","simplecontent":null,"content":"2008年5月20日，陈水扁卸任台湾地区领导人一职后，台检方特别侦查组分案侦办公务机要费案，将其列为被告；11月12日，陈水扁被依贪污、洗钱等罪嫌向法院声请收押禁见获准，成为台湾首位遭收押的卸任前领导人。\n\n　　2013年2月22日，台湾高等法院裁定，陈水扁所涉龙潭购地弊案、二次金改案、陈敏熏人事案、南港展览馆弊案、元大并复华案等经过三审定谳，合并执行刑期，陈水扁获有期徒刑20年，并被科罚金2.5亿元。(完)","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:58:27","updateTime":"2021-04-29 19:58:28","isExist":null},{"id":838,"question":"长辈叫什么好？\n张老师，小张，张儿","simplecontent":"","content":"张老师，小张，张儿\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:39:46","updateTime":"2021-04-29 19:39:47","isExist":null},{"id":872,"question":"对公司有什么建议？","simplecontent":"","content":"团建活动\n硬件设备不行\n团队缺少产品，人员不够\n管理开发不合适，需求不清晰，文档缺失，人员无法更进，信息同步不及时\n环境卫生不好，垃圾桶蟑螂，厕所不够\n需求改动太大，流程怎么跟进","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:39:34","updateTime":"2021-04-29 19:39:34","isExist":null},{"id":1183,"question":"台湾亲民党?","simplecontent":null,"content":"亲民党成立后，即成为仅次于国民党、民进党的台湾第三大党。该党主要利用“立法院”舞台，扮演在野制衡角色，曾在“核四”厂的停建与否问题上，与国民党、新党等在野党组成“在野联盟”，成功地迫使民进党当局让步 \n\n2005年5月5日—5月13日，宋楚瑜及亲民党人员访问了中国大陆的西安、上海、南京、长沙和北京。\n2006年12月9日，宋楚瑜参加台北市长选举，得票数却不如预期，因此召开记者会，宣布自此退出政坛，但随后中国国民党籍的台当局立法机构王金平表示，“宋楚瑜愿考虑暂不退出政坛”，因此动向尚未确认明朗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:21:21","updateTime":"2021-04-29 19:21:21","isExist":null},{"id":1182,"question":"台湾什么党派支持大陆?","simplecontent":null,"content":"台湾蓝营：国民党、亲民党、新党；绿营：民进党。从统一的角度来看，当然是偏向于大陆的新党执政最好，可惜其实力是四大党最弱，目前两岸合作的格局是由国民党、亲民党起主导作用的，亲民党较之国民党作风更显民主化。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:11:40","updateTime":"2021-04-29 19:11:40","isExist":null},{"id":1181,"question":"马英九什么党派台湾?","simplecontent":null,"content":"国民党","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:09:19","updateTime":"2021-04-29 19:09:19","isExist":null},{"id":1180,"question":"蔡英文是台湾什么党派?","simplecontent":null,"content":"民进党","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:07:13","updateTime":"2021-04-29 19:07:13","isExist":null},{"id":370,"question":"台湾有哪些政权?","simplecontent":"","content":"台湾的党派有：\n\n1、中国国民党\n\n中国国民党成立于1894年，自1949年迁台后，一直以“执政党”身份掌控台湾政局。在2000年3月的台湾地区领导人选举中，因国民党本身分裂导致票源分散，而丧失“执政权”，沦为在野党。\n\n直至2008年3月22日，台湾地区领导人选举，中国国民党籍候选人马英九\\萧万长获胜,国民党重新执政。\n\n2、民进党\n\n1986年9月28日，反对国民党专制独裁、追求“民主自由”、主张“台湾独立”的各股“党外”势力合组建成“民主进步党”，打破了国民党长期“一党专制”的局面。\n\n民进党成立后，一直稳步发展，并在2000年3月的台湾地区领导人选举中，因国民党阵营的分裂而渔翁得利，一夕之间成为“执政党”。在2008年台湾地区领导人选举中败选，再次沦为在野党。\n\n\n\n3、台湾民众党\n\n台湾民众党2019年08月06日开创党大会，大会之前的会前会，应到110人、实到72人，过半党员出席并通过章程，柯文哲以63票担任首任党主席。根据章程，党主席任期4年，得连选连任。\n\n4、亲民党\n\n2000年3月31日，独立参选人宋楚瑜凭借在2000年台湾地区领导人选举选举中所赢取的466万票，正式宣布成立以“人民第一”为宗旨的亲民党，并逐步发展为国民党、民进党之外的台湾第3大党。\n\n5、新党\n\n1993年8月10日，赵少康、王建煊等7名国民党中生代“立委”因不满李登辉日益偏离“九二共识”，推行“台独”分裂路线而另组新党。认同孙中山先生的理念，追求民族统一、政治民主、民生均富的目标。\n\n参考资料来源：百度百科—台湾党派\n\n参考资料来源：百度百科—中国国民党\n\n参考资料来源：百度百科—民进党\n\n参考资料来源：百度百科—台湾民众党\n\n参考资料来源：百度百科—亲民党\n\n参考资料来源：百度百科—新党","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:03:34","updateTime":"2021-04-29 19:03:34","isExist":null},{"id":371,"question":"台湾经济靠什么?","simplecontent":"","content":"台湾经济于1960年代开始发展成为资本主义的出口导向型经济体系，现今当局逐步减少对投资和对外贸易的干预，一些大型“国有银行”和“国营企业”陆续被私有化。国际贸易和工业是台湾的经济的主要支撑。\n\n台湾电子信息产业在全球产业链中地位举足轻重，全球大多数电脑电子零组件都在台湾生产。高新技术产业已取代劳动密集型产业，农业占GDP的比重从1952年的35%降至2%，服务业与高新技术产业合计比例过半。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 19:01:49","updateTime":"2021-04-29 19:01:49","isExist":null},{"id":417,"question":"哪些菜可以生吃？","simplecontent":"","content":"1.生菜。生菜脆甜清香爽口，有清血、降血糖、利尿通便的功效。此外，生菜中含有抗癌、抗病毒感染的干扰素诱生剂，它可作用于正常细胞的干扰素基因，产生干扰素和抗病毒物质。但这种干扰素诱生剂在100摄氏度高温下即被破坏。\n\n2.黄瓜。黄瓜富含维生素C、B族维生素和多种微量元素，高温加热，容易破坏这些营养物质。生吃口感干凉清脆，有助于清热解渴、通水利尿等。但黄瓜性属寒凉，生吃时一次不宜吃多。脾胃虚寒和肠胃不适、腹痛的人，不建议生吃黄瓜。\n\n3.莴笋。莴笋是种营养丰富又爽口的蔬菜。它含有多种维生素和矿物质，具有调节神经系统功能的作用。为防止维生素流失，莴笋最好生吃，因为莴笋中含有大量的水溶性维生素和无机盐，且草酸含量极少，如果用开水焯了以后再吃会损失不少营养。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:57:53","updateTime":"2021-04-29 18:57:53","isExist":null},{"id":422,"question":"萝卜鸡汤危害？","simplecontent":"","content":"萝卜鸡汤的危害主要有萝卜属于顺气、下气的一种食品，放在鸡汤中，可能会导致体内出现紊乱的状况，从而出现胃痛，胃胀等一系列的不良反应，也有可能会出现腹痛，腹胀、恶心，呕吐等一系列的症状，也不利于营养成分的吸收，对人的肠胃也会造成一定程度的影响。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:57:43","updateTime":"2021-04-29 18:57:44","isExist":null},{"id":431,"question":"如何验证发票的真伪?","simplecontent":"","content":"查询发票真伪可登录全国增值税发票查验平台，对新系统开具的增值税专用发票、增值税普通发票、机动车销售统一发票和增值税电子普通发票的发票信息进行查验。单位和个人通过网页浏览器首次登录平台时，应下载安装根目录证书文件，查看平台提供的发票查验操作说明。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:57:33","updateTime":"2021-04-29 18:57:34","isExist":null},{"id":555,"question":"点外卖技巧？","simplecontent":"","content":"你还在老老实实用原价和5元会员券点外卖吗？？？\n\n其实饿了么、美团有超多大额红包都被隐藏了！官方都是看不到的！\n\n今天来手把手教你们怎样白嫖外卖平台，每天点外卖只花几块钱。\n\n看了那么多推荐，感觉这个简单粗暴的，适合懒人，只要动动手指就可以！！\n\n关注下面这个外卖公众号，每天都能领30-88元的大额红包，领完就能直接点低价外卖！\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:48:24","updateTime":"2021-04-29 18:48:25","isExist":null},{"id":581,"question":"艾滋病如何感染的？","simplecontent":"","content":"艾滋病病毒感染者虽然外表和正常人一样，但他们的血液、精液、阴道分泌物、皮肤粘膜破损或炎症溃疡的渗出液里都含有大量艾滋病病毒，具有很强的传染性；乳汁也含病毒，有传染性。\n指导意见：\n唾液、泪水、汗液和尿液中也能发现病毒，但含病毒很少，传染性不大。初次感染HIV后2-4周左右。临床主要表现为发热、咽痛、盗汗、恶心、呕吐、腹泻、皮疹、关节痛、淋巴结肿大及神经系统症状。多数患者临床症状轻微，持续1-3周后缓解。你可以观察下或者去医院检查\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:48:07","updateTime":"2021-04-29 18:48:07","isExist":null},{"id":637,"question":"经常吃生蚝好处和坏处？","simplecontent":"","content":"病情分析：生蚝本身属于一种海产品，营养价值比较丰富，其中含有大量的蛋白质、氨基酸、钙离子，适量的吃一些生蚝可以有效的补充身体所需要的能量，并且可以起到一定的补钙作用，增强骨骼的强度。但是因为生蚝本身属于一种发物，吃多之后容易产生过敏现象，而且生蚝属于寒凉性质的食物，吃多之后容易形成腹泻，所以建议不要吃的特别多。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:47:14","updateTime":"2021-04-29 18:47:15","isExist":null},{"id":638,"question":"一颗生蚝可以补多少精子？","simplecontent":"","content":"一颗生蚝可以补精子的数量是因人而异的，其实生活中含有的锌元素比较多，也含有丰富的营养价值，具有壮阳补肾的功效，可以促进精子的生成，可以提高精子的活力，但是具体可以，让精子的数量增加多少是因人而异的，并且也需要坚持使用一段时间才有显著的效果，并不能达到立竿见影的速度。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:47:10","updateTime":"2021-04-29 18:47:10","isExist":null},{"id":643,"question":"美女最多的城市？","simplecontent":"","content":"第一实至名归：\n第10位：杭州\n第9位：哈尔滨\n第8位：南京\n第7位：上海\n第6位：大连\n第5位：武汉\n第4位：苏州\n第3位：长沙\n第2位：成都\n第1位：重庆\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:46:54","updateTime":"2021-04-29 18:46:54","isExist":null},{"id":661,"question":"为什么线下衣服网上找不到？","simplecontent":"","content":"因为有的品牌不给在网上卖,怕价格太低了导致实体店没生意呀~就是限制住了呀~~有时候在网上看到了某品牌的衣服,如果是不给在网上卖他还出现的话就有可能是假的哦!\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:46:44","updateTime":"2021-04-29 18:46:44","isExist":null},{"id":666,"question":"周大福成长史？","simplecontent":"","content":"周大福是最早成立的。1929年，一位来自广东顺德的小伙周至元在广州开了一家叫周大福的金店，此后十几年，虽然在周至元的手中，这家金店没有壮大起来，但也经营得不错。\n\n直到1943年，这家金店一个叫郑裕彤的学徒娶了周至元的女儿周翠英，开始接手金店生意，才不断发展起来的，名声才开始不断显露，最终使这家金店成为了国内现在最大的珠宝首饰企业之一。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:46:38","updateTime":"2021-04-29 18:46:38","isExist":null},{"id":682,"question":"深圳什么东西贵？","simplecontent":"","content":"深圳除了房租贵、房子贵，其他的消费跟其他地方差不了多少\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:43:14","updateTime":"2021-04-29 18:43:14","isExist":null},{"id":683,"question":"深圳的升学率如何？","simplecontent":"","content":"高中升学率不足50%，小学高中学位严重短缺\n畸形深圳，小学高中学位严重短缺，高中升学率不足50%。高房价高租金，阻碍了企业发展。\n","filterContent":null,"type":"读书","status":0,"createTime":"2021-04-29 18:42:54","updateTime":"2021-04-29 18:42:54","isExist":null},{"id":692,"question":"鸡尾酒的价格如何？","simplecontent":null,"content":"10元，38元\n金汤力：混合饮10元，伏特加（要看什么牌子的）一般的10元净饮，龙舌兰日出：算是鸡尾酒35元，长岛冰茶：鸡尾酒5元，蓝色玛格丽特：38元，粉红佳人：38元，莫吉托：38元（但是有好几种做法），今夜不回家：50元\n","filterContent":null,"type":"酒","status":0,"createTime":"2021-04-29 18:42:50","updateTime":"2021-04-29 18:42:51","isExist":null},{"id":685,"question":"现在的诈骗方式有哪些？","simplecontent":"","content":"线上诈骗+线下取钱\n检察官介绍，升级后的诈骗，主要采用“线上诈骗+线下取钱”模式\n","filterContent":null,"type":"诈骗","status":0,"createTime":"2021-04-29 18:42:46","updateTime":"2021-04-29 18:42:46","isExist":null},{"id":778,"question":"凤梨需要多少盐？","simplecontent":"","content":"盐水比例一般是500g水加50g盐左右，泡一个菠萝的水，舀上2—3勺盐就可以了。浸泡30分钟左右。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:42:17","updateTime":"2021-04-29 18:42:17","isExist":null},{"id":790,"question":"海底捞为什么这么好？","simplecontent":"","content":"毛巾洗手，汤料有肉菜，手机包包盖住，主动倒茶，价格偏贵，肉可以半价买\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:42:09","updateTime":"2021-04-29 18:42:10","isExist":null},{"id":793,"question":"深圳附近城市哪里买房好？","simplecontent":"","content":"不是临深，是临坪山，说准了别打擦边球，在坪山工作可以考虑大亚湾、惠阳，在深圳南山、宝安、福田、罗湖可行吗？用脑子想想再说吧，别忽悠了。\n惠州的房子本身不差，我看了一下，很多搂盘设计非常大气环境绿化也不错，比我深圳的房子强多了，唯一不足就是太远了，即使离14、16号线近，坐地铁几十个站到罗湖福田上班也要几个小时，开车来回跑也非常累，所以身体不好很难扛得住。\n\n我身边深圳上班惠州买房的没有一个不后悔的\n\n如果炒房的肯定后悔，自住的有什么后悔的\n\n、交通方面\n\n目前，惠州市区往深圳仅有高速公路才是最方便的，但惠阳大亚湾现在就有高铁可以通行\n\n至于在市区上班的，则可以选择坐动车到北站或福田转车，也比较方便，我不少同事就是这样上班的。。\n\n当前，沟通惠州市区与深圳的赣深高铁正在建设中，预计2020年建成运营，届时，惠州深圳仅需30分钟。\n\n很多人关注的深惠轨道交通如地铁城轨等也都在规划中，譬如暂时受挫的深圳地铁14号线惠州段，但是未来还是可期的。\n\n为什么最方便深惠同城生活的是大亚湾和惠阳，有最大升值空间的也是惠阳和大亚湾 ？\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:42:02","updateTime":"2021-04-29 18:42:03","isExist":null},{"id":804,"question":"跳绳坚持不了怎么办？","simplecontent":"","content":"可能跳绳不适合你，跳绳时候周围没有风景看，听歌时间长了也觉得很枯燥，你可以试试其他的运动，我能坚持每天跳个四十几分钟到现在五个月了，经历了听歌~跟着唱~看综艺节目~看电视剧~看电影~一边跳一边计数~倒着计数~大脑一片空白~胡思乱想~各种编剧情的胡思乱想，最近半个月都靠内心戏在坚持\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:41:58","updateTime":"2021-04-29 18:41:59","isExist":null},{"id":1179,"question":"补办身份证要多久?","simplecontent":null,"content":"补办身份证时间需要60天以内，有加急的，加急的最快可以七天。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:41:47","updateTime":"2021-04-29 18:41:47","isExist":null},{"id":815,"question":"房子限购的城市？","simplecontent":"","content":"深圳、广州、东莞、佛山、中山、珠海、惠州和江门等8个城市都出台了限购政策外，其他城市暂未公布限购政策，所以广东不限购的城市还是挺多的。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:34:39","updateTime":"2021-04-29 18:34:39","isExist":null},{"id":816,"question":"惠州买房条件？","simplecontent":"","content":"一、买房条件\n\n　　1、年满18周岁具有完全民事行为能力的自然人;\n\n　　2、贷款到期时男士年不超过60岁，女士年龄不超过55岁;\n\n　　3、有稳定合法的职业和收入来源，有还本付息能。\n\n　　注意：不限户籍、不限购\n\n　　外地人购房不需要惠州社保和纳税;港澳台客户住宅限买一套;大亚湾一次性购房三套及以上暂缓网签;购买3套及以上限制性网签，需查明资金来源，是否属于投机炒房行为。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:34:36","updateTime":"2021-04-29 18:34:37","isExist":null},{"id":817,"question":"佛山买房条件？","simplecontent":"","content":"1、佛山户籍：限购2套，无其他条件\n\n2、非佛山户籍：需提供2年内累计1年以上的社保或个税证明。购房人不得伪造、假冒税务或社保证明以骗取购房资格，规避限购。\n\n3、非佛山户籍人才：\n\n4、优粤佛山卡A卡、B卡、C卡、T卡的人才，享受我市户籍人口购房政策(限购2套)。\n\n5、在佛山市工作、具有本科及以上学历或中级工及以上职业资格的人才，首套购房不受户籍和个税、社保缴存限制。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:34:32","updateTime":"2021-04-29 18:34:32","isExist":null},{"id":828,"question":"现在找女朋友是长相重要还是性格重要？","simplecontent":"","content":"找个性格相像的，其实更容易做朋友，不一定好做恋人。大互补，小相同。\n我觉得应该更看重性格，因为外貌只能是一时的性格才能长久。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:33:50","updateTime":"2021-04-29 18:33:51","isExist":null},{"id":1178,"question":"这书辛苦吗?","simplecontent":null,"content":"通过写书这件事情，让我学会了坚持，想做一件事情很简单，但想把这件事情做成却没那么容易。\n通过写书我重新对轻量级 Java Web 框架做更深层次的理解，一个好的框架不是看功能有多强大，而在于它的扩展性有多好。毕竟功能是做不完的，需要有一个“微内核 + 多插件”的思想，核心是非常小的，它仅提供了整个框架的必备功能以及相关的扩展点，然后需要将不同的功能封装在不同的插件中，并为更多其他的开发者提供统一的扩展方式。\n我希望这本书不再是教会读者如何去使用开源框架，而是让读者学会如何从零开始去编写开源框架，并鼓励读者发挥自己的力量，一起投身到开源社区中。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 18:23:41","updateTime":"2021-04-29 18:23:41","isExist":null},{"id":860,"question":"运动前做什么热身？","simplecontent":"","content":"30秒的手腕十指扣左右转动，再30秒的反手十字扣来回转动，肩部360度转动热身肩部，再30秒的俯身转体运动，30秒的弓步压腿，每五秒换一个方向，接着是30秒的大腿内侧拉伸，同样是每五秒换一个方向，接着是30秒的开合跳以及15秒的原地高抬腿。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 17:58:03","updateTime":"2021-04-29 17:58:04","isExist":null},{"id":71,"question":"广东吃的最多就是鸡肉有哪些？饮茶，滑鸡，冬菇鸡，酱油鸡，手撕鸡，椰子鸡，猪肚鸡，鲍鱼鸡煲","simplecontent":"","content":"饮茶，滑鸡，冬菇鸡，酱油鸡，手撕鸡，椰子鸡，猪肚鸡，鲍鱼鸡煲\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:40:51","updateTime":"2021-04-29 10:40:51","isExist":null},{"id":56,"question":"检查费和医疗费哪些更贵\n?","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:39:53","updateTime":"2021-04-29 10:39:53","isExist":null},{"id":58,"question":"广州和深圳的社保区别?","simplecontent":"","content":"深圳社保好，深圳毕竟是一线城市，以后退休工资也比广州高一些。\n\n2021年起，社保缴费省统一，没有区别了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:39:44","updateTime":"2021-04-29 10:39:44","isExist":null},{"id":60,"question":"一楼如何防蚊子?","simplecontent":"","content":"家住一楼防蚊灭蚊的方法有：\n\n1、蚊子喜欢繁殖在龌龊的静水里，并在这些地方产卵孵化成幼虫，因此清除房前屋后及室内积水,等于端了它的\"温床\"。所以要及时清理垃圾，不要留死水。\n\n蚊子还喜欢闻到像甜酒之类的气味，或到诸如牛奶瓶瓶底留有奶渍的地方逗留，所以用留有残渍的甜酒瓶或牛奶瓶作\"陷阱\"，往往能粘死蚊子。\n\n2、蚊子害怕一些花卉以及清凉油，风油精之类挥发的气味，卧室里摆放一两盆盛开的玫瑰,薄荷，米兰、茉莉花等花卉，或放置几盒揭盖的清凉油、风油精，蚊子就会晕头转向，继而逃之夭夭。\n\n蚊子还害怕桔红色光线，夏日在室内安装桔红色的灯泡，或用透光的桔红色纸套在灯泡上，蚊子会敬而远之。\n\n3、还可以使用灭蚊窗纱涂剂、蚊香、电蚊香、喷雾杀虫剂、防蚊液、驱蚊花露水等工具。\n\n电蚊香的驱蚊原理是将除虫菊等吸入蚊香片中,加热后蒸发,达到灭蚊效果.如果滴上几滴风油精效果更好,一般可维持6-8小时.液体电蚊香是利用毛吸管原理,持续加热释放杀虫剂,使用最为方便.一瓶蚊香液可连续使用30天,免除了每天更换电蚊香片的麻烦.\n\n喷雾杀虫剂，其主要化学成分是一种叫丙炔菊脂的杀虫剂.将杀虫剂喷洒在楼梯间,水槽下,阴沟,浴厕,橱柜,桌脚下可有效地杀灭蚊虫.杀虫剂不需要太多,多了不仅浪费,而且污染环境,掌握灭蚊的时间,地点和用量才是关键.\n\n防蚊液，又称驱蚊剂.防蚊液的主要成分是避蚊胺.涂抹合格的防蚊液可以在6-8小时内阻止99.9%的蚊子叮咬.其原理是药物直接作用在蚊子的触觉器官及化学感受器,达到驱赶蚊虫的目的.\n\n驱蚊花露水，内含仿生驱避原料,能使蚊子产生错觉,失去叮人的欲望.每次时效可达5小时.有些驱蚊花露水还含有名贵中草药成分,具有清凉,去痱,避暑等功能,可谓是一物多用.\n\n4、也可以使用蚊帐等工具。既能避蚊又防风，还可吸附飘落的尘埃，过滤空气。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:36:51","updateTime":"2021-04-29 10:36:52","isExist":null},{"id":57,"question":"检查费能报销吗？可以","simplecontent":"","content":"病情分析：检查费绝大部分是可以报销的，但是也有自费项目的。一般来讲做各个系统的彩超或ct或磁共振都可以报销。查肝肾功能，凝血常规，血型，白带常规，尿常规，肝炎标志物，丙型肝炎抗体，艾滋病和梅毒抗体，免疫系统的抽血化验的，循环系统的化验项目等都可以报销的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:34:25","updateTime":"2021-04-29 10:34:25","isExist":null},{"id":61,"question":"花露水的效果可以持续多久?3-4小时","simplecontent":"","content":"3-4小时","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:33:29","updateTime":"2021-04-29 10:33:29","isExist":null},{"id":1168,"question":"普通话考试有用吗?","simplecontent":null,"content":"普通话越来越普及，现在很多行业必须要求有普通话等级证的。\n\n1、师范系统的教师和毕业生，普通话水平不得低于二级，其中普通话语音课教师和口语课教师必。\n\n2、非师范类高等院校的教师以及与口语表达密切相关专业的毕业生，普通话水平不得低于二级。\n\n3、广播电视教学的教师，普通话水平不得低于二级。\n\n4、报考教师资格的人员，普通话水平不得低于二级。\n\n5、国家级和省级广播电台、电视台的播音员和节目主持人，普通话水平必须达到一级甲等，其余广播电台、电视台的播音员和节目主持人的达标要求由广播电影电视部另行规定。\n\n6、电影、话剧、广播剧、电视剧等表演、配音人员，播音、主持人专业和电影、话剧表演专业的教师和毕业生，普通话水平必须达到一级。\n\n\n\n扩展资料\n\n普通话水平测试等级证书是证明应试人普通话水平有效凭证，证书由国家语言文字工作委员会统一印制。\n\n有效的普通话水平测试等级证书全国通用。根据国家及有关部委的要求，现阶段各类人员的普通话水平应达到的等级标准如下：播音员、节目主持人、影视话剧演员为一级以上水平；教师和大学生为二级以上水平；公务员和社会公共服务行业从业人员为三级以上水平。\n\n参考资料：普通话水平测试等级证书_百度百科  ","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:31:53","updateTime":"2021-04-29 10:31:53","isExist":null},{"id":803,"question":"跳绳会导致腿部有肌肉吗？","simplecontent":"","content":"一般来说跳绳确实会使得小腿的肌肉变得更加结实，不过若是在运动之前，松一下小腿，倒是能够让小腿看起来显得比较小。而且坚持跳绳，还能起到减肥的作用。\n\n不会长，只要正确跳绳是不会让小腿变粗的，也不会长肌肉。如果你循序渐进，懂得如何科学跳绳还会在这个过程中，让小腿变得圆润修长，消除皮下脂肪，有瘦腿减肥的作用。\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:15:00","updateTime":"2021-04-29 10:15:01","isExist":null},{"id":784,"question":"腹泻吃什么好？","simplecontent":"","content":"可以缓解腹泻的食物有白粥，面食，苹果，酸石榴，豆制品等。对于腹泻的患者平时饮食方面要以清淡易消化为主，白粥是不错的选择，患者还可以在白粥里面加入少许的食盐，可以补充因腹泻而流失的钠元素。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:14:16","updateTime":"2021-04-29 10:14:16","isExist":null},{"id":788,"question":"口臭的原因？\n扁桃体结石，就是长在扁桃体上的结石，大部分是扁桃体长期慢性炎性反应的结果。","simplecontent":"","content":"扁桃体结石，就是长在扁桃体上的结石，大部分是扁桃体长期慢性炎性反应的结果。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:13:48","updateTime":"2021-04-29 10:13:49","isExist":null},{"id":794,"question":"反复分手有必要在一起吗？","simplecontent":"","content":"分手两次关键要看什么事，有些人打打闹闹一辈子也过来了，生活中总有解不开的小疙瘩，更像一团麻....只要不是原则问题别动不动就说分手，分分合合习惯了假的也成真的了。如果三观不合，即使在一起，感觉也是很淡然的，感情更是脆弱的......\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:13:44","updateTime":"2021-04-29 10:13:44","isExist":null},{"id":812,"question":"什么动物的模仿能力最强？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:13:26","updateTime":"2021-04-29 10:13:27","isExist":null},{"id":802,"question":"如何快速学习？1专注度 2时间管理 3负能量不影响 4立即行动","simplecontent":"","content":"在他学习是要有安静的环境，并规定时间，不要让他关门写作业，周围不要有小物件，小心孩子玩过火。\n\n1专注度 2时间管理 3负能量不影响 4立即行动\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:13:20","updateTime":"2021-04-29 10:13:21","isExist":null},{"id":813,"question":"女朋友不粘人怎么办？","simplecontent":"","content":"我前女友也是，和我同班，情况和你差不多吧，真的是因为不够喜欢。但既然和你谈了就还是感觉楼主还不错的，楼主可以试着往她喜欢的方向发展，变的再好一点，应该会好一点的\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:12:50","updateTime":"2021-04-29 10:12:50","isExist":null},{"id":820,"question":"深圳中学费用？\n常住：767元\n暂住：一千多元（差距呀！~~）\n我是常住的，暂住的只知道一千多，这是公办学校。私人的N贵！一年几万元！（包住宿）","simplecontent":"","content":"常住：767元\n暂住：一千多元（差距呀！~~）\n我是常住的，暂住的只知道一千多，这是公办学校。私人的N贵！一年几万元！（包住宿）\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:12:35","updateTime":"2021-04-29 10:12:36","isExist":null},{"id":821,"question":"布吉中学为什么那么差？","simplecontent":"","content":"如果你不在乎这些就去读，读完3年有的你哭鼻子的了，整个高中部，基本考上专科99.7%，本科上线率是0.03%,也就是重点班里面你要前三名。\n\n深圳布吉中学他的初中部还可以，但是高中部他高考的本科上线率是很低的。基本都是培养大家去读大专，因为他录取入学了分数很低。所以他老师的教学方法只能按照低分的人来教学。到最终只能大部分去大专。\n\n高中不好，初中一般般。总体来说高考如果你要读本科，要上好学校就不建议去这个学校，不然你以后会哭鼻子好受的。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:12:28","updateTime":"2021-04-29 10:12:28","isExist":null},{"id":822,"question":"深圳最差的学校是哪些？","simplecontent":"","content":"按照中考录取分数的排行，深圳最差公立普高TOP3是：龙华中学，沙井中学，布吉中学。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:12:00","updateTime":"2021-04-29 10:12:00","isExist":null},{"id":839,"question":"研究生的作用？\n就是给导师打工","simplecontent":"","content":"就是给导师打工\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:11:48","updateTime":"2021-04-29 10:11:48","isExist":null},{"id":1177,"question":"姓朱男生起名?","simplecontent":null,"content":"朱雨辰  朱天瑜 朱锦轩 朱鹏海","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 10:11:27","updateTime":"2021-04-29 10:11:27","isExist":null},{"id":806,"question":"熬夜补觉有用吗？","simplecontent":"","content":"晚睡白天再睡是不能补回来的,因为晚睡会损害人体健康,而睡眠却没有叠加功能,一但错过了最佳睡眠时间,即使睡得再多也补不回来,而补觉只能适度地缓解病人的疲劳状态。此外,长期熬夜会导致人体免疫力低下,出现失眠、烦躁、焦虑、记忆力减退等症状,还容易患上心脑血管病,或高血压等慢性疾病。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:56:45","updateTime":"2021-04-29 09:56:45","isExist":null},{"id":809,"question":"开会你来讲两句？","simplecontent":"","content":"如果你每次开会前都做好讲两句的准备，或者开会时认真思考和讨论，其实这都是露脸的机会。如果你开会经常摸鱼和走神，那就是领导故意坑你，给你难堪。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:56:25","updateTime":"2021-04-29 09:56:26","isExist":null},{"id":818,"question":"肇庆买房条件？","simplecontent":"","content":"外省人在肇庆买房没有条件限制，只要有钱就能买，而且没有套数限制，而且贷款政策外省人和本地人是一样的。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:56:13","updateTime":"2021-04-29 09:56:13","isExist":null},{"id":826,"question":"现在宠物领养都这么离谱吗？\n需要押金，每个月回访","simplecontent":"","content":"需要押金，每个月回访\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:56:00","updateTime":"2021-04-29 09:56:01","isExist":null},{"id":824,"question":"王子文到底什么情况？有个儿子，儿子他爸是谁也不知道。真人秀还跟别人在亲嘴。","simplecontent":"","content":"有个儿子，儿子他爸是谁也不知道。真人秀还跟别人在亲嘴。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:55:51","updateTime":"2021-04-29 09:55:52","isExist":null},{"id":837,"question":"结过婚的男士对未婚男生有什么建议？","simplecontent":"","content":"一定要找三观合的来的事少的，不要光看外表，性格和贤惠比外表重要一万倍！！！否则婚后又累又惨！\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:55:40","updateTime":"2021-04-29 09:55:40","isExist":null},{"id":843,"question":"女生175的身高让我回头率爆棚？","simplecontent":"","content":"\n南方的175的女生真的不是这么多见\n\n走在路上真的好多人明里暗里讨论我的身高\n\n一般都是好高啊什么的\n\n有些不那么友好就会说找不到男朋友\n\n像根竹竿云云\n\n真诚发问男生真的不喜欢高的吗\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:55:19","updateTime":"2021-04-29 09:55:19","isExist":null},{"id":845,"question":"是不是因为这些杀人犯和很多的罪犯身上都有纹身，所以大家对纹身的人有偏见？","simplecontent":"","content":"纹身大多都没钱，有钱就是追求个性 没钱的就是黑社会小混混不是叛逆 是没什么素养 谁没叛逆过 叛逆多了就是恶\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:55:00","updateTime":"2021-04-29 09:55:00","isExist":null},{"id":1052,"question":"一边听歌一边学习的话会影响学习吗？会，注意力不集中，最好不要有歌词","simplecontent":null,"content":"会，注意力不集中，最好不要有歌词\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:54:31","updateTime":"2021-04-29 09:54:32","isExist":null},{"id":869,"question":"女生理发和男生理发的区别?女生耳朵没理，男生理耳朵","simplecontent":"","content":"女生耳朵没理，男生理耳朵\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:54:24","updateTime":"2021-04-29 09:54:24","isExist":null},{"id":880,"question":"深圳到厦门的跟团游费用，和景点，时间？1500左右，13个景点，5天时间","simplecontent":"","content":"1500左右，13个景点，5天时间\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:54:21","updateTime":"2021-04-29 09:54:21","isExist":null},{"id":881,"question":"厦门好玩的地方？厦门大学，鼓浪屿，南普陀","simplecontent":"","content":"厦门大学，鼓浪屿，南普陀\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:54:17","updateTime":"2021-04-29 09:54:17","isExist":null},{"id":884,"question":"主播加的微信是本人的吗?不是，都是男生销售微信","simplecontent":"","content":"不是，都是男生销售微信\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:54:02","updateTime":"2021-04-29 09:54:02","isExist":null},{"id":1021,"question":"有没有打算让父母过来深圳玩？","simplecontent":null,"content":"他们想来才过来\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 09:53:51","updateTime":"2021-04-29 09:53:51","isExist":null},{"id":1020,"question":"五一买不到票怎么办？睡觉","simplecontent":null,"content":"睡觉\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 08:24:58","updateTime":"2021-04-29 08:24:58","isExist":null},{"id":1063,"question":"厦门是哪个省的省会？厦门市位于福建省，福建省省会为福州市。","simplecontent":null,"content":"厦门市位于福建省，福建省省会为福州市。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 08:24:43","updateTime":"2021-04-29 08:24:43","isExist":null},{"id":1065,"question":"深圳无域科技技术有限公司创立时间？2016年12月06日成立","simplecontent":null,"content":"2016年12月06日成立\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 08:24:33","updateTime":"2021-04-29 08:24:34","isExist":null},{"id":1069,"question":"“密室逃脱”已经慢慢成为色狼的乐园？比如密室逃脱店的老板成为性骚扰的帮凶，和性骚扰者们进行“钱色交易”。","simplecontent":null,"content":"比如密室逃脱店的老板成为性骚扰的帮凶，和性骚扰者们进行“钱色交易”。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 08:24:15","updateTime":"2021-04-29 08:24:15","isExist":null},{"id":1175,"question":"100平方装修费用?","simplecontent":null,"content":"100平米房子简装费用：6--8万元左右；中档装修费用：8--10万元左右；高档装修费用：15万元左右。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 05:04:48","updateTime":"2021-04-29 05:04:48","isExist":null},{"id":1174,"question":"100平方装修费用多少钱？","simplecontent":null,"content":"100平方房子装修大概需要10万元吧，不会很贵，具体的装修价格如下：\n1、拆墙(含清理)：45元/平方米；水电改造：按平方米或米计算人工费，但一般以米计价，电改造12元/\n米、水改造16-17元/米；原墙面基层铲除(含恢复)：7元/平方米。\n2、木作工人人工费：石膏板吊顶35-40元/平方米、做衣柜等120-150元/平方米。\n3、刷漆工人人工费：乳胶漆14-16元/平方米；油漆中的透明漆30元/平方米、白瓷漆40-50元/平方米、有\n色漆50-70元/平方米。\n4、贴墙地砖的人工费收取，一般按照砖的大小和铺贴形状不同采取不同的收费。瓷砖规格大于等于\n300×300的，按30元/平方米计价；小于等于200×200  的，则要80-90元/平方米；若大于800×800\n一般按照70-80元/平方米收取人工费；如果铺设的形状非常规，比如一些菱形铺设，则按照  30-40\n元/平方米收取。\n5、墙砖的腰线以15元/米计人工费，脚线以10元/米收费;甚至连厨卫地砖铺设到下水管处，需要封下水管\n都明确收取人工费60元/根。\n6、安装开关插座、吊灯时，电工会按照不同的收费标准进行安装。具体的人工费用行情为：开关插座5元/\n个、筒灯射灯5元/个、一般家庭用灯20-30元/盏，一些特别大的水晶吊灯起价50元/盏。\n以上价格来源于网络，仅供参考，具体价格以购买时为准。\n\n以下是一百平的房子装修报价查询\n100平方房子简单装修需要5~7万元左右吧，不会很贵，现在市面上的装修报价如下：                        \n现代简约风格：全包：650元——680元/㎡    半包：350元——380元/㎡；  　　\n现代时尚风格：全包：730元——760元/㎡    半包：380元——410元/㎡；  　　\n北欧风情风格：全包：820元——860元/㎡    半包：400元——440元/㎡；  　　\n中式风格：    全包：890元——930元/㎡    半包：450元——500元/㎡；  　　\n地中海风格：全包：1060元——1100元/㎡    半包：500元——550元/㎡；  　　\n东南亚风格：全包：1200元——1300元/㎡    半包：600元——680元/㎡。  \n以上价格来源于网络，仅供参考，具体价格以购买时为准。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 05:04:19","updateTime":"2021-04-29 05:04:19","isExist":null},{"id":1173,"question":"三个房间买多少平方？","simplecontent":null,"content":"三口之家买房子从能够生活的角度来说，和从能够宽敞享受型的生活角度来说是不一样的，因为能够生活可能60平米80平米你好好装修一下，2室1厅，1厨1卫都没问题，但是说你想要客厅更宽敞，想要有树房这类的地方，那可能就要100乃至120了。\n\n3室1厅1厨1卫，如果说把另外一个房间变成一个书房，这还是没有什么问题的，基本上生活的功能一应俱全，这种房子的平米大概就是在100，起了100平米以上，不同的地方房价不一样，如果说是普通的县城或者三线城市，可能总价格就是80万到100万，如果说是二线城市可能就要150万乃至200万，在北上广这些地区，那就已经不能单纯用经济去衡量了，\n\n90~110平米均可配置三房一厅。希望我的解答能帮到你\n大概110左右\n最少120吧\n现在一般80多平的也可做成三房","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 05:01:41","updateTime":"2021-04-29 05:01:41","isExist":null},{"id":1172,"question":"房间多少个好?","simplecontent":null,"content":"看需求。一、自住。如果住的人数不多，比如夫妻2个，那做2房，舒服。如果3人，比如夫妻加小孩，那做2房，厅大点不错。做3房，多一个空间可以接待客人，父母过来可以住。如果4人及以上，建议做3房。\n二、投资。2房、3房一般考虑出租问题，如果考虑出租，建议做3房，一般房间多，租金高，且可以分租3户，租金更高。租客一般经济条件弱，不会追求较高的居住条件，大的客厅或阳台，不会增加多少租金，反而增加一间房间受欢迎。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 04:58:33","updateTime":"2021-04-29 04:58:33","isExist":null},{"id":1171,"question":"实习期辞退会赔偿吗?","simplecontent":null,"content":"赔偿金额支付标准：具体的赔偿金额要根据劳动法的规定来执行，员工在试用期期间工作时长不够六个月的，用人单位要支付半个月的工资作为赔偿金;工作时长在六个月以上但不够一年的按照一年来执行，需支付一个月的工资作为赔偿金。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 04:34:30","updateTime":"2021-04-29 04:34:30","isExist":null},{"id":1170,"question":"公司拖欠工资证据如何找？","simplecontent":null,"content":"对于用人单位拖欠工资，劳动者在维权前应该注意要收集的证据主要有：\n\n1、能证明存在劳动关系的证据。\n\n华律网\n\n2、能证明在单位上班的证据。\n\n这些证据主要有劳动合同、单位的工作证、上岗证、考勤记录、工友的证明、以前单位支付工资的工资单或银行交易记录、与老板的电话录音等。\n\n如果能设法由单位直接出具结欠工资的证明或欠条，则最好.\n\n拖欠工资找哪个部门\n\n(一)当面临用人单位拖欠工资时，劳动者可以到劳动部门举报并要求用人单位给予50%--100%的补偿(参见《劳动合同法》85条);\n\n(二)劳动者也可以向劳动保障行政部门投诉，请求干预并查处;\n\n(三)或者直接向劳动争议仲裁委员会提出仲裁申请。\n\n以上就是关于这方面的法律知识，希望能对您有所帮助。如果您不幸遇到一些比较棘手的法律问题，而您又有委托律师的想法，我们华律网有许多律师可以给你提供服务，并且我们华律还支持线上指定地区筛选律师，并且都有相关律师的详细资料。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 04:29:54","updateTime":"2021-04-29 04:29:54","isExist":null},{"id":1169,"question":"美国FBI是什么？","simplecontent":null,"content":"美国联邦调查局（Federal Bureau of Investigation，简写为FBI）是世界著名的美国最重要的情报机构之一，隶属于美国司法部。“FBI”不仅是美国联邦调查局的缩写，还代表着该局坚持贯彻的信条——忠诚（Fidelity）、勇敢（Bravery）和正直（Integrity)，象征联邦警察。\n\nFBI的任务是调查反联邦法罪犯，支持法律，保护美国，调查来自于外国的情报和恐怖活动，在领导阶层和法律方面执行。对联邦、州、当地和国际机构提供帮助，同时在响应公众需要和忠实于美国宪法的前提下履行职责。五大影响社会的方面享有最高优先权：反暴行，毒品/有组织犯罪，外国反间谍活动，暴力犯罪和白领阶层犯罪等方面享有最高优先权。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 04:12:45","updateTime":"2021-04-29 04:12:45","isExist":null},{"id":1167,"question":"潮汕茶叶?","simplecontent":null,"content":"先纠正你一个语误：潮汕工夫茶非潮汕功夫茶。\n传统的潮汕工夫茶叶多为乌龙茶，主要有铁观音、大红袍、凤凰单丛（枞）等。\n这几年受外来茶叶的影响，也有不少人开始喝普洱和红茶，但相对来说，还是属于小茶种。\n大红袍：主产于福建武夷岩，乌龙茶类，此外还有铁罗汉、白鸡冠、水金龟并称“四大名枞”；\n铁观音：主产于福建安溪县，乌龙茶类，半发酵；\n凤凰单丛：主产于广东潮州市凤凰山，乌龙茶类，为潮汕本地产名茶。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 04:02:23","updateTime":"2021-04-29 04:02:23","isExist":null},{"id":1166,"question":"潮汕有什么好吃?","simplecontent":null,"content":"加上潮汕美食名声在外。无论卤水、粿制品、牛肉火锅、各种打冷等平民美食，还是鲍鱼、花胶、海参、老鹅头这种需要花些钱才能吃到的食材，在当地都能吃到最好的。\n\n牛肉火锅；白粥；粿类小吃；网红店；早茶；砂锅粥；功夫茶；","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 04:00:00","updateTime":"2021-04-29 04:00:00","isExist":null},{"id":1165,"question":"毒品有哪些?","simplecontent":null,"content":"吸食毒品的方式多种多样，都是吸毒者为达到吸毒最大的快感所使用，一般主要有三大类吸毒方法，下面我们来详细介绍下。\n\n一、通过呼吸道吸入毒品：\n\n如海洛因、大烟、阿片、大麻、可卡因、料子等。\n\n1、烫吸：将毒品粉末倒在锡纸（铝箔纸）上，用打火机点燃，在纸下加热使毒品产生烟雾，然后用嘴与鼻子吸入烟气，也有使用吸管来吸烟。\n\n2、与香烟同吸：将毒品卷入香烟内（有的是特制含毒香烟），使毒品随着香烟烟雾一起吸入呼吸道。\n\n3、烟枪吸毒：将毒品装上专用烟枪，在灯火上点燃，吸其烟雾。\n\n二、吞食毒品：\n\n将毒品直接吞入口中，通过胃肠道吸收，进入血液循环。，如毒品摇头丸，神仙水等。也K粉（氯胺酮）直接用鼻腔吸入粉末，被鼻腔粘膜所吸收。\n\n三、注射毒品：海洛因、可卡因、吗啡、杜冷丁、镇静剂等。网页链接\n\n1、静脉注射：杯（或瓶）中倒入适量毒品粉末，加水溶解。注射部分皮肤消毒后，用注射器抽取毒品 溶解液，从静脉注入。\n\n2、动脉注射：其方法与静脉注射法相同，所不同的是从动脉注入。\n\n3、其他注射法：皮下注射、肌肉注射、指甲下注射，这些注射方法与静脉、动脉注射法相同。\n\n最后，请远离毒品","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:56:19","updateTime":"2021-04-29 03:56:19","isExist":null},{"id":1164,"question":"皮肤油脂过多怎么办?","simplecontent":null,"content":"1、多吃蔬菜水果\n\n在饮食方面，平时要少吃辛辣刺激性、油腻的食物，多喝水，不要熬夜，要做到早睡，一定要注意不能晚睡，保持良好的生活习惯和饮食习惯。\n\n2、洗脸方面\n\n我们要先在手上将洗面奶或者手工皂揉出一些泡泡，然后在脸上分区域进行仔细地清洗，这是因为皮肤表面其实并不光滑，因此在进行清洗的时候，最好是在脸上画圈圈进行清洗。但是需要注意的是，清洁产品在脸上的时间最好不要超过半分钟，那样会让脸上的皮肤过于干燥。\n\n3、选择护肤品\n\n护肤品不要使用油性过大的产品，可以多使用一些柔肤水或者化妆水，一定要注意泼水。脸上的皮脂分泌过多，其实是由于皮肤水油不平衡而导致，这个时候首先应该要补水，在补水的基础上，乳液最好选择清爽类型，不要太油腻。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:54:17","updateTime":"2021-04-29 03:54:17","isExist":null},{"id":1163,"question":"植发和戴假发哪个好?","simplecontent":null,"content":"病情分析：种植头发当然是比较好的，如果说比较成功的情况下，相对来说还是比较自然的，而且也可以减少很多的事情，戴假发的话肯定会出现不舒服的这个情况，所以说如果可以进行头发种植的情况下，最好还是要种植头发，这个要根据综合的因素来决定，因为这个治疗的收费标准是比较高的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:52:23","updateTime":"2021-04-29 03:52:23","isExist":null},{"id":1162,"question":"植发效果是永久吗?","simplecontent":null,"content":"病情分析：一般来讲到正规的植发机构做了植发手术后，如果手术成功，毛囊成活，那么植发手术的效果是永久的，因为移植的毛囊是具有不受雄性激素刺激的特性，只要手术成功，效果非常理想。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:50:22","updateTime":"2021-04-29 03:50:22","isExist":null},{"id":1161,"question":"额头植发费用?","simplecontent":null,"content":"额头两边植发，基本上算是两个部位，它比起单个部位的植发难度要大，所以治疗费用就会高一些。其次就是使用低价的植发材料，那么费用肯定不会太高，一般只需要几千元左右。但高档的材料，价格肯定高一些。最后就是一定要去国家正规医院做植发。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:49:12","updateTime":"2021-04-29 03:49:12","isExist":null},{"id":1160,"question":"毛囊植发多少钱?","simplecontent":null,"content":"植发手术是按毛囊单位计算费用的，正常每毛囊单位需要10元左右，根据各地消费水平不同医院鸡皮不同会有一定的浮动的，所移植的毛囊越多所产生的费用就会越高，术后做好护理，适当抗炎治疗，防止感染炎症，保持局部清洁卫生，戒烟戒酒，不要吃刺激性的食物，不要抓揉头发，防止导致手术失败。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:46:08","updateTime":"2021-04-29 03:46:08","isExist":null},{"id":1159,"question":"脂溢性脱发如何治疗","simplecontent":null,"content":"病情分析：脂溢性脱发的治疗须首先应注重头发的保健和护理，饮食以清淡为主，忌食高热量或刺激性食物（如煎炸食品、辣椒、烟、酒、咖啡），生活作息应规律、睡眠充足、减少心理压力。局部用药以去除油脂、减少皮屑、消炎止痒，以具有去头皮屑成分的洗发水洗发可以减少脱发，促进毛发再生。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:44:19","updateTime":"2021-04-29 03:44:19","isExist":null},{"id":1158,"question":"治疗皮炎?","simplecontent":null,"content":"以溶解脂质、角质剥脱、消炎止痒为主，常用药物：硫磺、煤焦油、水杨酸、硫化硒，可按不同部位、不同皮损选择不同剂型。\n中、强效糖皮质激素溶液制剂，可短期用于炎症较重皮损，弱效激素可用于婴幼儿；\n钙调磷酸酶抑制剂，如他克莫司\n乳膏或吡美莫司乳膏，适用于中至重度糖皮质激素治疗无效者；\n抗真菌制剂：特别是咪唑类药物有较好疗效，通常含有酮康唑\n、益康唑、克霉唑\n、咪康唑等，抗真菌药除抗真菌外，还有抗炎、抗菌和抑制细胞壁脂质形成等多种作用；\n硫化硒洗剂具有杀真菌和抑制细菌生长的作用；\n硫磺、水杨酸制剂，具有抑菌、除屑作用","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:41:58","updateTime":"2021-04-29 03:41:58","isExist":null},{"id":1157,"question":"印度强奸判刑多久？","simplecontent":null,"content":"7年以上有期徒刑，严重情节无期。\n印度强奸事件高频发生时因为法律执行力度不够，到现在有4000多起案件都没有审判，大多数强奸犯找些理由关押2-3年就出狱了。还有一定的男女社会地位问题。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:36:01","updateTime":"2021-04-29 03:36:01","isExist":null},{"id":842,"question":"很遗憾，跟老丈人爆发严重冲突，该怎么办？让妻子先沟通，然后再去道歉","simplecontent":"","content":"家庭矛盾重在沟通交流，只有通过沟通，让你丈人释然就没事了，毕竟一家人不可能记恨一辈子的。\n现在可以让你妻子去沟通，等沟通好了，你再赔礼道歉就是了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:07:08","updateTime":"2021-04-29 03:07:09","isExist":null},{"id":846,"question":"英语4级没过如何说？\n低情商:没过四级\n高情商:英语接近四级水平","simplecontent":"","content":"低情商:没过四级\n高情商:英语接近四级水平","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:05:40","updateTime":"2021-04-29 03:05:41","isExist":null},{"id":853,"question":"什么行业女孩子多？","simplecontent":"","content":"1.空姐2.助理3.人事专员4.公关5.事业单位6.前台\n\n1 空姐：无需脑力，工作体面，环境舒适，收入最高，接触到的男性都是人中龙，他们的薪水比空姐还高！\n2 助理：无需脑力，每天穿着光鲜的衣服，提着笔记本，端着手机，为上司忙一下杂七杂八的事情。既不用干活，又让人觉得有技术含量、层次高，女白领当中的最理想职业。\n收入中等，关键是可以与中上层建立良好的人际关系。\n3 人事专员：无需脑力，这个部门是工作轻松（不是工作量，而是性质简单），一年加不了几天班，收入中等，典型的白领女孩愿意从事的工作。简单地说一切同“助理”，但由于不接触领导，每天坐在那里，施展空间有限，不过对于女孩足够了。\n4 公关：为什么排到第四，因为公关小姐不想助理或者人事专员那样干点白痴的活就完事了，他需要你英语好，脑子反应快，且注重礼仪，能言善辩。会碰到接待外宾和其他公司贵宾的任务，不是所有女孩都能具备的，收入中等。\n5 事业单位：女警察、政府机关办公室、国企办公室，虽然没有女白领OL的光环，其实除了不用打扮得像白领一样且名称不响亮，其他的都很不错，真的不用干活！！收入中上等！要名声还是实惠，自己看吧。\n6 前台：假白领，大专生就可以干，每天往台后一坐，拿打印纸，更新电话表什么的，和助理有点类似，是真正的白痴工作，无需脑力。收入女孩的现实职业：\n1 火车乘务员：接触人群素质不太高，全国各地跑，因为是大众交通工具，所以火车乘务员不可能像空姐一样清闲，昼夜打乱，收入中下，无需脑力。\n2 导游：导游最好的现状就是带领团队到各个地方，然后交给当地导游去解说，自己不用费力喊话和背诵知识，只在旅行前习惯性地和大家交代一下。不过也免不了每天等着风吹日晒跟着旅游团跑来跑去。无需脑力，收入+提成还可以。\n3 销售：需要脑力，计算成本，推销产品，人情冷暖，世态炎凉，你都要微笑，而且性格要好，脸皮要厚一点。收入+提成中上。这的确是辛苦活，而且看淡季、旺季。\n4 教师：需要脑力，更需要耐心，最大的好处就是国家待遇和每年放两个长假。但辛苦也是可想而知的，收入中下。\n5 翻译：需要脑力，这个职业其实比较好，但要命的一点就是你过硬的外语功底。\n如果说女孩子最多那就是制衣厂。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:05:23","updateTime":"2021-04-29 03:05:24","isExist":null},{"id":857,"question":"蛋白粉真的有用吗","simplecontent":"","content":"如果你已进入了中级的增肌行列，在这时你已经完全知道了人体中所有的肌肉的训练方法，每周都能对人体的肌肉进行一个完整的循环训练的时候。那么你对蛋白质的需求量就会大大的增加，平常从食物中获取的蛋白质已经远远的不够了，那么你就需要一些外助的营养补剂来获取得蛋白质，因为一个正常的健身爱好者不可能每天都吃掉几十个鸡蛋，也不可能吃掉几斤的鸡肉。因为这些的食物不全是由蛋白质组成的，所以人体根本就受不了这种超负荷的吃法。\n\n蛋白粉的重要组成部分主要为乳清蛋白，也是人体的机体利用率能达到最高的蛋白。它能迅速的补充人体内对蛋白质的需要，从而达到相对更好的增肌效果。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:03:42","updateTime":"2021-04-29 03:03:43","isExist":null},{"id":1012,"question":"高色域真的好用吗？感觉视觉没有以前好用，太亮","simplecontent":null,"content":"感觉视觉没有以前好用，太亮","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:01:38","updateTime":"2021-04-29 03:01:38","isExist":null},{"id":1035,"question":"城镇宅基地是否可以买卖？不可","simplecontent":null,"content":"不可","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:01:23","updateTime":"2021-04-29 03:01:23","isExist":null},{"id":1058,"question":"献血使用可以减免多少钱？400元左右","simplecontent":null,"content":"400","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 03:01:15","updateTime":"2021-04-29 03:01:16","isExist":null},{"id":1156,"question":"借呗和还呗哪个好?","simplecontent":null,"content":"还呗和省呗都是提供信用卡账单还款的手机APP金融服务产品，还呗主要是提供贷款给客户，让客户通过贷款额度去还款；而省呗则是给客户体提供一个省呗额度让客户用省呗额度去还信用卡账单。两种贷款产品都是通过正规的金融机构联合运营的，都是比较靠谱的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 02:59:39","updateTime":"2021-04-29 02:59:39","isExist":null},{"id":1155,"question":"高利贷的厉率是多少?","simplecontent":null,"content":"省呗的年化利率最低可以做到银行18.25%的6折，而高利贷的定义是年利率高于24%的，所以省呗不是高利贷。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-29 02:56:41","updateTime":"2021-04-29 02:56:41","isExist":null},{"id":1154,"question":"黑猫投诉平台有用吗","simplecontent":null,"content":"首先说黑猫投诉，就是“尽个人事”而已，管用吗？我个人投反对票。\n\n黑猫，新浪建投诉平台不假，给你投诉渠道和分配投诉问题给商家，也不假；但问题是，根本没有争议处理机制，没有跟进，甚至我觉得，在分配问题在判断回复是否有效的时候，根本用的就是人工智能而并非工作人员真实判断，并且所谓邀请帮帮官也完全得不到响应和回复，因此，中肯的评价，黑猫就是尽个人事而已。依据如下：\n\n\n\n\n本人投诉的问题是电商平台给你自动生成待付款订单的“侵权”问题，为什么说侵权，是因为你的实际操作是返回，是退出，结果平台自动给你生成一个待付款订单！！！还争辩说是“核实你有购买意向”……这种侵权很可怕的！\n\n但，黑猫，在投诉2h后就处理了问题，而且仅仅只做了这一次处理，后面就再也没有然后了……遇到拼多多平台客服和专员，轮番跟我争辩，我也不学法，再说一个个人拿什么跟诺大电商平台争？于是……又邀请了帮帮官，希望提供法律援助，这么多天了，又是投石入海杳无音信……\n\n总结一下就是，黑猫平台就是尽个人事而已……管用吗？我投反对票。\n\n\n\n至于12315，我提交投诉后，第六天才开始处理问题，好像也是分配给了商家，好像当天拼多多也是有个专员给打了个电话，争辩了一番，最后不了了之……当然问题也没结，这个处理速度我也不好说后面会怎样，效率低得有够低的反正，国家机构嘛……管用吗？只能呵呵一下……","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 22:56:52","updateTime":"2021-04-28 22:56:52","isExist":null},{"id":1153,"question":"近视不戴眼镜会如何？","simplecontent":null,"content":"近视不佩戴眼镜，可能会导致近视的度数有所增长，因为近视的临床表现是视物不清、畏光、眼睛干涩。如果患有近视，不佩戴眼镜的话，在看东西的时候，眼睛会眯成一条线，使劲看清楚眼睛的前方的东西，那样会加重眼睛的屈光度的增加，从而使眼睛的度数会更加增高。尤其对于青少年患者来说，都处在一种学习比较紧张的状态，经常的近距离的看书或者是看电脑，这样会导致眼睛的疲劳，从而使眼睛的度数增长的也会更快，所以佩戴进视眼镜是对矫正近视眼所必要的手段。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 21:28:11","updateTime":"2021-04-28 21:28:11","isExist":null},{"id":1152,"question":"蚊子是喜欢血型吗","simplecontent":null,"content":"视频内容：\n\n很多患者认为蚊子偏爱某种血型，这是不科学的。蚊子之所以叮咬人，是因为蚊子喜欢含糖比较高的物质。\n\n像胆固醇以及维生素B12等成分比较高的人群和人体部位，就会比较容易受到蚊虫叮咬。因为这类人群的血液可以促进蚊卵的繁殖和发育。另外，经常容易出汗的人群由于体表会遗留乳酸等物质，也容易引起蚊子的叮咬。因此，蚊子并没有特别偏好的血型。\n\n专家提示：\n\n蚊子并没有特别偏好的血型。蚊子之所以叮咬人，是因为它喜欢含糖较高的物质。另外，胆固醇和维生素B12等成分较高的人群比较容易受到蚊虫叮咬，因为这些物质可以促进蚊卵的发育。经常出汗的人群由于体表会遗留乳酸等物质，也容易引起蚊子的叮咬。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 21:27:15","updateTime":"2021-04-28 21:27:15","isExist":null},{"id":1151,"question":"、跳绳有哪些好处?","simplecontent":null,"content":"1、燃脂快！数据显示，跳10分钟，每分钟跳140次的热量消耗相当于慢跑半小时，燃脂效率远高于普通的有氧运动。\n\n2、效果全！跳绳不但燃脂快，还可以让你的呼吸系统、心脏、心血管系统得到充分的锻炼\n\n3、损伤小！跳绳对膝盖的冲击力量只有跑步的1/7到1/2，对膝盖损伤更低，自然更能长期坚持。（试过跑步减肥的朋友应该都懂跑多了有多难受...）\n4、门槛低！在家，在宿舍，在操场，在哪都能开始运动，占地面积小，灵活方便，一根绳子开干\n\n\n5、功能多！更好的提高身体在运动中手脚配合的能力，并提高足踝柔韧性","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 21:24:57","updateTime":"2021-04-28 21:24:57","isExist":null},{"id":1150,"question":"假期哪些涨价？","simplecontent":null,"content":"机票，酒店","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 21:17:42","updateTime":"2021-04-28 21:17:42","isExist":null},{"id":1149,"question":".b站到底是什么?","simplecontent":null,"content":"是一个弹幕视频网站，全名bilibili。\n\n全称为哔哩哔哩弹幕网，亦称哔哩哔哩、bilibili弹幕网，或简称为B站，是中国一个ACG（二次元）相关的弹幕视频分享网站，其前身为视频分享网站Mikufans。\n\n\n\n扩展资料：\n\nB站的特色是悬浮于视频上方的实时评论功能，爱好者称其为“弹幕”，这种独特的视频体验让基于互联网的弹幕能够超越时空限制，构建出一种奇妙的共时性的关系，形成一种虚拟的部落式观影氛围，让B站成为极具互动分享和二次创造的文化社区。B站目前也是众多网络热门词汇的发源地之一。\n\n哔哩哔哩的视频区主要分为bilibili直播、动画、番剧、音乐、舞蹈、游戏、科技、广告、娱乐、鬼畜、影视、放映厅、时尚，除此之外，首页有直播、排行榜、画室、游戏中心（特指由哔哩哔哩代理登陆接口的游戏发布平台）、周边、RSS订阅链接等\n\n参考资料：百度百科-哔哩哔哩","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 21:06:27","updateTime":"2021-04-28 21:06:27","isExist":null},{"id":1148,"question":"如何不看B站?卸载，离开圈子","simplecontent":null,"content":"方案一.卸载B站\n\n方案二.脱离现在使你困扰的圈子, 加入新的没有那么多智障的信息茧房\n\n方案三.提升自己的抗压能力","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:57:36","updateTime":"2021-04-28 20:57:36","isExist":null},{"id":1147,"question":"21岁男生骨骺线闭合了还能再长高吗？","simplecontent":null,"content":"如果真的骨骼闭合了是不能长高的不能听信卖产品的人说可以的可以的 是不行的\n\n那得靠脊柱，多跳高，再长个一两厘米问题不大，大长不可能了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:51:55","updateTime":"2021-04-28 20:51:55","isExist":null},{"id":1146,"question":"五一结婚，有哪些度蜜月的好地方推荐","simplecontent":null,"content":"这个季节去厦门不错。鼓浪屿，厦大，集美大学…\n\n鼓浪屿上有大学生兼职的导游，不贵，带你玩一天。\n\n想三亚 青海 厦门 大理 丽江都挺适合度蜜月的 一边玩一边拍照 两不误哦","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:50:57","updateTime":"2021-04-28 20:50:57","isExist":null},{"id":1145,"question":"驾照考试例子？","simplecontent":null,"content":"个人认为科目二最难，因为练的时间最长。绝大部分人科目二时都是第一次摸车，对车的零部件不熟悉，手脚配合不熟悉，油门离合配合不熟悉。只要掌握了那几个点，考过还是没问题的。\n\n科目一到四都是一次性通过的，科目一考了好像是98分，科目二80分，科三一百分，科四94分。科目二时上坡起步熄火一次，扣十分，离边沿大于五十厘米扣十分。我觉得驾考技术，心态和运气各占三分之一，保持良好的心态很关键。\n\n\n\n我56岁时学车，5个月内的时间考完科目一至科目四，都是一次性过的，学车在我看来只要识字，理论上科目一和科目四一般都没问题，科目二关键在于勤练习，不要左右不分，特别是倒车入库时，宁愿早点打方向盘也别晚打，早打了还有机会校正，晚打就一点机会就没了，科目三主要是直线行走，手握方向盘时不要太僵硬，方向跑偏时不要太大动作调整，应把跑偏那个方向的手从方向盘上松开点就行了，这可能是你握方向盘太紧了，两只手用的力度不一样造成的。\n\n\n\n科一科四就不说了，简单，科二考两次，第一次第一遍，直角车速快压线了，第二遍档把掉了，第二次第一遍倒车镜是放大镜倒库看花眼了，第二遍靠感觉过了，科三第一次第一遍被后车撞掉了倒车镜，第二遍靠边停车（下大雨路还不平）时掉水坑了。。第二次第一遍跑了一圈回来断网了，第二遍顺利通过。。我就是想问问还有谁？\n\n最难的应该是科二。一和四就是背题，都原题，没有技术难度。科三就是马路上开，也不要求你开多快，考试场地也都比较偏僻，车也少，考试科目虽然说起来好几十项，真正考验的就那么十几项。科三好好练最容易过，我练车之前完全没碰过车，练习科三是第一次真正开车上路，练了几圈就考试了，一把过。反而科二，蠕动着练了小半个月\n\n\n\n 0","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:43:07","updateTime":"2021-04-28 20:43:07","isExist":null},{"id":1144,"question":"驾照最难的科目？","simplecontent":null,"content":"科目一和科目四是简单的，只要看下书就基本可以过了，科目二比较难些，这点得平时多练了，科目三是路跑，这个得看自己的应变能力了，也要看当时考你的考官了，有些好说话的一点小问题他也放你过，有的你关门重点都说你不合格的也有，我觉得还是看各个地方的吧","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:42:08","updateTime":"2021-04-28 20:42:08","isExist":null},{"id":1143,"question":"驾照哪科最难？","simplecontent":null,"content":"考驾照4个科目，每一个科目都有一定的难度，具体难度大小是因人而异的。科目一和科目四只考理论知识，所以对于年轻人来说，科目一和科目四是最简单的，而科目二跟科目三要考实际操作，尤其是科目三，上路行驶会让很多年轻人非常紧张。\n\n对于中年人来说，情况则完全相反，中年人已经远离学校很多年，想要再学习理论知识是非常困难的，并且中年人普遍生活压力比较大，他们忙于工作，根本就没有时间来学习科目一科目二。\n\n所以科目一跟科目四不通过的通常都是年龄比较大的人。很多中年人在考驾照之前就已经接触过汽车，因此上路行驶就很简单，所以科目二科目三的实际操作对于他们来说更容易通过。\n\n\n\n扩展资料\n\n科目一考试注意的地方\n\n1、一定要下载一个软件，推荐驾校一点通；\n\n2、一定要细心，认真看题，多读几遍题目，不要掉到坑里了；\n\n3、一定要多做模拟题，然后预估自己的考试分数；\n\n4、一定要多训练错题，经常错的题目回去再看看为什么错了；\n\n科目二考试需要注意的地方\n\n1、科目二考试有五项，包括倒车入库、侧方停车、坡道、曲线行驶、直角，这五项里最难的是倒车入库，最简单的是直角转弯和曲线行驶。\n\n2、一般学习时间分配是一周的时间练习倒车入库，一周时间练习其他项目，剩下一周时间所有项目一起练习。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:41:44","updateTime":"2021-04-28 20:41:44","isExist":null},{"id":1142,"question":"深圳驾照考试流程？","simplecontent":null,"content":"在深圳学车积压情况、个人练车情况等都会影响拿证时间。不过在各科目都无积压，学车又快的情形下，3-4个月可以拿证。\n1、报名：1天\n驾校：确定驾校后，备齐相关资料，包括：身份证（本地户口）、体检表、照片（12张小一寸白底）以及数码回执。\n2、提交资料：3-7天\n驾校：驾校填写申请表，上交委网站提交，待通过审核，由驾校上网查询对方受理结果，再将资料递交给车管所。\n3、上理论课：1天\n驾校：收到车管所回执后，学员会被安排上理论课，学习文科理论，学员可选择自己有空的时间，听课时间是一整天。\n4、科目一考试：1个月左右\n深圳已全面放开自主约考，所以呢，科目一到科目四的考试，亲们都可以登录网上车管所自己预约。预约科目一，需要等待一周的时间才能知道是否预约成功，不过现在深圳科目一几乎木有积压，只要上网约，都能约上的。预约成功之后，考试时间排在二周后，亲们可以利用这段时间多多做题，模拟考试，科目一考过问题不大。如果第一次没通过，还可以现场补考一次的。\n5、科目二培训及考试：1-2个月左右\n驾校：科目一考完了，驾校就会给你安排教练，咱们就可以上路培训了。科目二练得差不多的时候，教练会告诉你可以去网上约考啦，约考的周期跟科目一是一样滴，一周后得知预约结果，二周后考试，不过目前，深圳科目二虽然说有9万人在等待，但大部分都是“睡眠学员”，几乎不需要排队。万一考试没通过的话，咱再多练练，10天后又可以重新预约。\n6、考科目三培训及考试：4个月以上\n同样，长训回来，就接着上路练科目三了，科目三练得差不多，就可以网上预约，目前深圳科目三积压比较多，所以成功预约大概需要4-8个月。不同地方积压情况不同，所以等候时间也就不尽相同了，没积压就可以直接约考了。\n7、科目四：2-3天\n考完科目三，2-3天后就可以直接考科目三安全文明考试（即科目四），科目四也是理论考试，在考试前要多多做题练习。\n8、拿证：1-15天\n在深圳科目四考试合格后，当天或者第二天就能拿证了，可以直接去车管所拿或者委托快递公司邮寄给你。\n派学车一对一教学，为学员提供个性化的培训服务，提升学员学车效率。自主约车的方式让学员实现“时间、教练、地点”自由，即到即练，练完即走，无需等待，快速拿证。\n\n\n一键获取收费明细 特惠","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:39:38","updateTime":"2021-04-28 20:39:38","isExist":null},{"id":1081,"question":"牛奶会长痘吗？会，胰岛素增多，雄激素增多","simplecontent":null,"content":"半脂/低脂/脱脂会好一点～我亲身体会\n主要是通过三个方面影响痤疮的发生：\n一、牛奶和乳制品（尤其是含有乳清蛋白的）会提高胰岛素的水平；\n二、牛奶和乳制品（特别是含有乳酪蛋白的）会提高IGF-1的水平。胰岛素和IGF-1协同工作，刺激雄激素受体的活化；\n三、牛奶和乳制品含有许多生长因子，主要是多肽和合成代谢的类固醇激素（睾酮及其前体）。\n雄激素与活化的雄激素受体结合，类似于汽车钥匙（雄激素）插入钥匙孔（雄激素受体）打火启动发动机的过程，会引发一系列事件，导致代谢活动增强，通过刺激痤疮发病核心的角质形成细胞过度增殖，产生痤疮。\n牛奶及其乳制品是痤疮发生的重要的外源性致病因素。出于临床治疗的需要，痤疮患者最好禁食所有乳制品（包括独立包装或作为某种食物的主要成分），这意味着应该禁食任何来源的牛奶、奶油，禁食黄油、奶酪、酸奶、冰淇淋、羊奶等等，以及来源于牛奶的任何食物和其它哺乳动物来源的乳制品。经过加工的乳制品，特别是含有乳清蛋白和酪蛋白的产品应尽量避免。还有健身教练推荐的蛋白粉。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:34:03","updateTime":"2021-04-28 20:34:03","isExist":null},{"id":374,"question":"晚上喝牛奶好吗?","simplecontent":"","content":"晚上睡觉之前喝上一杯牛奶时有好处的，因为临睡前喝上牛奶有助于改善睡眠质量，牛奶当中含有一种成分叫色氨酸，还有微量的咖啡类的物质，这些物质都有镇静催眠的作用。另外喝牛奶有利于钙的吸收，在睡觉前人体吸收利用钙会非常的高；而且白天钙的含量较高，到晚上的时候血液当中的钙会逐渐的降低，所以临睡之前喝一杯牛奶，还有利于预防骨质疏松。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:32:35","updateTime":"2021-04-28 20:32:36","isExist":null},{"id":444,"question":"牛为什么对红色敏感","simplecontent":"","content":" 牛其实对于红色并不敏感，因为它和很多的哺乳动物都差不多，它是色盲，并不能很好的分辨红色。而牛之所以会变得很冲动，这是因为它的脾气是十分暴躁的，如果说斗牛士拿着红布来回晃动的话，它就会因为受到刺激而冲到红布上面，所以很多人们就会误认为牛对于红色很敏感。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:25:03","updateTime":"2021-04-28 20:25:04","isExist":null},{"id":689,"question":"东门是哪家奶茶店出名？深圳茶颜悦色、文和友\n绝了，据说今天「深圳茶颜悦色」、文和友开业，凌晨4点就有黄牛在排队了，目前排到5W多号，其中代排队买一杯奶茶费用高达200元（实际售价20左右），也就是说如果自己排队的话可能得排几个钟头。 比较好奇，\n\n￼\n￼\n￼\n\n4","simplecontent":"","content":"深圳茶颜悦色、文和友\n绝了，据说今天「深圳茶颜悦色」、文和友开业，凌晨4点就有黄牛在排队了，目前排到5W多号，其中代排队买一杯奶茶费用高达200元（实际售价20左右），也就是说如果自己排队的话可能得排几个钟头。 比较好奇，\n\n￼\n￼\n￼\n\n4","filterContent":null,"type":"喝","status":0,"createTime":"2021-04-28 20:24:13","updateTime":"2021-04-28 20:24:13","isExist":null},{"id":434,"question":"蒙牛和伊利哪个好","simplecontent":"","content":"伊利口味好","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:16:51","updateTime":"2021-04-28 20:16:51","isExist":null},{"id":1140,"question":"水蛇有毒吗?","simplecontent":null,"content":"中国水蛇别称中华水蛇、泥蛇等\n\n中国水蛇有微毒。中国水蛇属于后毒牙毒蛇，但毒性很低，被其咬伤只要消毒伤口，就并无大碍，有的人对毒性敏感，会有点红肿和出血教多的现象，不致命。\n\n中国水蛇长年生活于水中，栖息于稻田、沟渠或池圹等水域及其附近，喜好深淤环境，能在恶劣水质中生长，食性杂，以小鱼虾、蛙类为食，白天及晚上均见活动，2年性成熟，卵胎生，产仔期在4-7月份，8-9月产仔蛇3-13条，初生仔蛇全长100-150毫米。\n\n其实大部分的水蛇都是没有什么毒的水蛇，一般来说喜欢在水里面活动来活动去，其实还是蛮漂亮的。至于说想要区分它们到底有没有毒，还是比较简单的，一般来说那种颜色比较鲜艳一点的，还有就是它的头型看起来比较怪异的，这样的往往都是有毒的，尽量不要去碰它，碰到的话要稍微隔得远一点儿，如果是那种颜色比较暗淡，呈现出灰色之类的，这样的往往是没有毒的，不过也尽量的不要被它给咬到。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:07:56","updateTime":"2021-04-28 20:07:56","isExist":null},{"id":1139,"question":"常见有毒的蛇？","simplecontent":null,"content":"1/11分步阅读\n竹叶青蛇：头三角形，颈细，剧毒。\n\n以蛙、晰蝎、小鸟、鼠类动物为食。攻击性强，全身翠绿，眼睛多数为黄色或者红色，瞳孔呈垂直的一条线，尾巴焦红色，常见于竹树林中。\n\n\n查看剩余1张图\n2/11\n烙铁头蛇：因为头部酷似三角型的烙铁而得名，有台湾烙铁头；湖南莽山烙铁头。剧毒。\n\n\n查看剩余1张图\n3/11\n眼镜蛇：头椭圆，颈背面有眼镜似圆状斑纹，体黑褐色，间黄白横斑，剧毒。\n\n\n查看剩余1张图\n4/11\n长吻海蛇：体长一般50-70厘米，最长1米。头狭长，吻长，躯干尾部侧扁。背深棕色和黑色，腹黄色，尾部有黄斑，剧毒。\n\n\n5/11\n青环蛇：\n\n青环蛇身上有细白色环与黑色相间，体长为1米，最长2米。\n\n剧毒。主分布于印度半岛、巴基斯坦、斯里兰卡等。\n\n\n家里放一物绝对没蟑螂_3个步骤教你怎么消灭_只需一招_非常好用...\n广告\n6/11\n五步蛇：\n\n体长多为120-150厘米，头大呈三角状，\n\n背面棕黑色，头侧土黄色，全身见三角方块，剧毒。\n\n\n扁平疣原因-长了疣?怎么回事?\n广告\n7/11\n蝮蛇：\n\n蝮蛇通常为60~70厘米，头略显三角形，颈细，全身黑色小圆斑\n\n尾尖黑色，剧毒。\n\n\n查看剩余1张图\n8/11\n蝰蛇：全长1米，头呈大三角形，背为棕灰色，腹部为灰白色，全身有斑纹，布满鳞甲，剧毒。\n\n\n白花蛇蛇草-淘宝八方美味，一站购齐!\n广告\n9/11\n眼镜王蛇：\n\n眼镜王蛇为大型蛇类，最长可达5.58米。\n\n体背黑褐色，颈背无眼镜形纹斑，躯干有黑条纹，腹部灰褐色，有黑色线状斑纹，剧毒。\n\n\n查看剩余1张图\n10/11\n银环蛇：背有白环和黑环，尾细长，体长1-2米。背黑色或蓝黑，头背黑褐色，剧毒。\n\n\n查看剩余1张图\n11/11\n金环蛇：金环蛇全长1-2米，通身黑色，有较宽的金黄色环纹，黑黄二色宽度约相等，头背黑褐色，剧毒。\n\n\n查看剩余1张图","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:05:43","updateTime":"2021-04-28 20:05:43","isExist":null},{"id":1138,"question":"如何判断蛇有毒？头是三角还是椭圆","simplecontent":null,"content":"判断蛇是否有毒，可以通过头型来判断，头部呈三角型的是有毒的，椭圆的是无毒的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 20:02:30","updateTime":"2021-04-28 20:02:30","isExist":null},{"id":1137,"question":"postman设置json为变量方式？","simplecontent":null,"content":"在json的某个字段设置{{number}},然后用runuer导入文本txt，txt用数组[{\"number\":\"666\"}]","filterContent":null,"type":"java","status":0,"createTime":"2021-04-28 19:58:51","updateTime":"2021-04-28 19:58:51","isExist":null},{"id":1136,"question":"postman 全局变量和环境变量区别?","simplecontent":null,"content":"全局只可以一组，环境变量可以多组","filterContent":null,"type":"java","status":0,"createTime":"2021-04-28 19:10:16","updateTime":"2021-04-28 19:10:16","isExist":null},{"id":1135,"question":"postman-语法？","simplecontent":null,"content":"1.postman对变量的赋值和取值的函数用法：\n1、设置全局变量：pm.globals.set(\"variable_key\", \"variable_value\");\n2、设置环境变量：pm.environment.set(\"variable_key\", \"variable_value\");\n3、获取全局变量：pm.globals.get(\"variable_key\");\n4、获取环境变量：pm.environment.get(\"variable_key\");\n\n\n2.postman 常用脚本命令：\n1 、清除一个全局变量 ：pm.globals.unset(“variable_key”);\n\n2 、清除一个环境变量： pm.environment.unset(“variable_key”);\n\n3 、获取一个全局变量 ：pm.globals.get(“variable_key”);\n\n4 、获取一个变量该函数在全局变量和活动环境中搜索变量： pm.variables.get(“variable_key”);\n\n5 、获得一个环境变量 ：pm.environment.get(“variable_key”);\n\n6、 检查响应主体是否包含字： pm.test(“Body matches string”, function () { pm.expect(pm.response.text()).to.include(“string_you_want_to_search”);});\n\n7 、将XML主体转换为JSON对象： var jsonObject = xml2Json(responseBody);\n\n8 、检查响应体是否等于字符串：pm.test(“Body is correct”, function () { pm.response.to.have.body(“response_body_string”);});\n\n9 、检查JSON值： pm.test(“Your test name”, function () { var jsonData = pm.response.json(); pm.expect(jsonData.value).to.eql(100);});\n\n10、Content-Type 存在： pm.test(“Content-Type is pre","filterContent":null,"type":"java","status":0,"createTime":"2021-04-28 19:06:51","updateTime":"2021-04-28 19:06:51","isExist":null},{"id":1134,"question":"postman断言?","simplecontent":null,"content":"//判断响应码\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n//判断每次搜索的关键字的结果是否正确，比如搜索“test”，判断响应体中有返回“test”，搜索“guimo”，判断响应体中有返回“guimo。\npm.test(\"响应数据中包含搜索关键字\", function () {\n    pm.expect(pm.response.text()).to.include(data.keyword);\n});\n\n//打印每次搜索的关键字，（由于目前还不知道怎么实现把参数写入测试的结果中，以此来判断每次是按要求搜索关键字）\nconsole.log(data.keyword);\n","filterContent":null,"type":"java","status":0,"createTime":"2021-04-28 19:03:44","updateTime":"2021-04-28 19:03:44","isExist":null},{"id":1133,"question":"postman断言作用?","simplecontent":null,"content":"我们如何做验证点（断言）？\n1、可以根据页面上的字符串是否存在可以判断\n\n2、判断状态码是否为200\n\n在tests写代码","filterContent":null,"type":"java","status":0,"createTime":"2021-04-28 18:10:19","updateTime":"2021-04-28 18:10:19","isExist":null},{"id":1132,"question":"在韩国女生叫男生欧巴，男生对女生怎么亲密称呼？","simplecontent":null,"content":"女神是：여신 (摇信)\n\n1.热恋中：\n자기야 亲爱的 ca gi ya\n자기야, 내일 봐. 亲爱的，明天见。\n자기야, 보고 싶어. 亲爱的，想你。\n2.比较稳定，撒娇\n여보 老婆 yao bao\n注意：老公叫老婆也会这么叫\n3.其他叫法：\n애기야 宝宝 ai gi ya\n或者其他称呼，比如一些可爱的动物。\n或者우리后面加名字。\n\n韩语中妹妹是 哟东桑，但一般情况下年纪大的人习惯直呼年纪小的人的名字，基本不叫女生妹妹，都是直接叫名字的。〈24零4零零27三4〉\n\n男的叫姐姐noona，也就是怒那；叫哥哥hyung。女的叫姐姐eonnie，欧尼。女的叫哥哥oppa，欧巴。弟弟妹妹叫Dongsaeng，同生。同龄朋友叫chingu，亲故。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:59:51","updateTime":"2021-04-28 17:59:51","isExist":null},{"id":863,"question":"如何热场？","simplecontent":"","content":"强化焦点:你这个态度没毛病  今天课堂氛围不错，连外面的人都在听课\n挑起矛盾:你今天表现这么好，是不是做了坏事\n你今天这么积极，穿的这么帅，是不是要给谁看的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:52:03","updateTime":"2021-04-28 17:52:04","isExist":null},{"id":993,"question":"深圳车牌摇号成功要给多少钱？摇到号之后，不用交钱哦，竞价才需要交车牌的钱哦。\n\n　　指标有效期：\n\n　　6个月。","simplecontent":null,"content":"摇到号之后，不用交钱哦，竞价才需要交车牌的钱哦。\n\n　　指标有效期：\n\n　　6个月。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:42:18","updateTime":"2021-04-28 17:42:19","isExist":null},{"id":1130,"question":"深圳值得去的景点?","simplecontent":null,"content":"世界之窗、东门老街、红树林、仙湖植物园、锦绣中华、小梅沙、梧桐山、深圳欢乐谷、西涌、东部华侨城","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:38:52","updateTime":"2021-04-28 17:38:52","isExist":null},{"id":1031,"question":"借款10.6万到手8.9万！“砍头息”要不要还？不用","simplecontent":null,"content":"不用，法律不合法","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:34:41","updateTime":"2021-04-28 17:34:41","isExist":null},{"id":1075,"question":"伤残1到10级哪个重？10","simplecontent":null,"content":"10","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:34:21","updateTime":"2021-04-28 17:34:21","isExist":null},{"id":1040,"question":"现在的年轻人为了能多挣点钱到底可以有多拼？投资基金","simplecontent":null,"content":"投资基金","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:34:07","updateTime":"2021-04-28 17:34:08","isExist":null},{"id":1044,"question":"顺产剖腹产到底哪个好？看产道够大不，下面不松，疼痛","simplecontent":null,"content":"脑袋给驴子踢了吧，靠，咩野","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:33:56","updateTime":"2021-04-28 17:33:56","isExist":null},{"id":1049,"question":"南方的口头禅？脑袋给驴子踢了吧，靠，咩野","simplecontent":null,"content":"脑袋给驴子踢了吧，靠，咩野","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:33:46","updateTime":"2021-04-28 17:33:46","isExist":null},{"id":1068,"question":"长期戴口罩对皮肤的影响到底有多大？皮肤就会变得尤为干裂、红肿，","simplecontent":null,"content":"18岁，骨龄基本不长，根据手部和腕部的骨头判断","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:33:36","updateTime":"2021-04-28 17:33:36","isExist":null},{"id":1077,"question":"男生多少岁不在长高？18岁，骨龄基本不长，根据手部和腕部的骨头判断","simplecontent":null,"content":"18岁，骨龄基本不长，根据手部和腕部的骨头判断","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:33:12","updateTime":"2021-04-28 17:33:13","isExist":null},{"id":1129,"question":"社保公积金2200基数一共多少钱？","simplecontent":null,"content":"计算结果\n缴纳项目\t缴纳基数\t基数×个人比例 = 个人缴纳\t基数×企业比例 = 企业缴纳\n养老保险\t2200\t2200×8%\t￥176\t2200×14%\t￥308\n医疗保险\t10646\t10646×0.2%\t￥21.29\t10646×0.6%\t￥63.88\n失业保险\t2200\t2200×0.3%\t￥6.6\t2200×0.7%\t￥15.4\n工伤保险\t2200\t-\t￥0\t2200×0.112%\t￥2.46\n生育保险\t2200\t-\t￥0\t2200×0.45%\t￥9.9\n残疾人保障金\t10646\t-\t￥0\t10646×0.4%\t￥42.58\n社保合计：\t￥646.11\t个人共缴交：\t￥203.89\t企业共缴交：\t￥442.22\n公积金\t2200\t2200×5%\t￥110\t2200×5%\t￥110\n\n总计共缴纳：\t￥866.11\t\n个人共缴交￥313.89 企业共缴交：￥552.22\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:28:13","updateTime":"2021-04-28 17:28:13","isExist":null},{"id":1128,"question":"社保计数器链接？","simplecontent":null,"content":"https://www.shebaotong.com/shebaotong/calculator","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:26:16","updateTime":"2021-04-28 17:26:16","isExist":null},{"id":1095,"question":"印度疫情失控，会影响到中国吗？","simplecontent":null,"content":"影响印度本地的中国企业","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:12:58","updateTime":"2021-04-28 17:12:58","isExist":null},{"id":1127,"question":"离职怎么算薪资，其中包含国家法定节假日？","simplecontent":null,"content":"劳动者辞职最后1个月工资按实际出勤天数来计算。计算公式为：月工资÷21.75×出勤天数，","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:11:27","updateTime":"2021-04-28 17:11:27","isExist":null},{"id":1126,"question":"深圳公积金最少缴纳多少？","simplecontent":null,"content":"深圳的住房公积金最少是单位与个人各交5%","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:03:52","updateTime":"2021-04-28 17:03:52","isExist":null},{"id":1125,"question":"深圳社保一档二档三档有什么区别？任意机构，社康","simplecontent":null,"content":"就医原则\n\n一档参保人：市内任一定点医疗机构就医\n\n二档参保人：门诊在绑定社康中心就医，住院在市内任一定点医疗机构就医，门诊大病在规定医疗机构就医。\n\n三档参保人：门诊在绑定社康中心就医，住院及门诊大病在规定医疗机构就医。\n\n普通门诊待遇\n\n一档参保：人个人账户用于支付参保人普通门诊医保目录范围内的医疗费用。社康中心的基本医疗费用，70%由个人账户支付，30%由统筹基金按规定支付。\n\n二档参保人/三档参保人：\n\n1、属于甲类药品和乙类药品的，分别由社区门诊统筹基金按80%和60%的比例支付;\n\n2、属于医保目录的单项诊疗或医用材料的，由社区门诊统筹基金支付90%，但最高支付金额不超过120元;\n\n3、社区门诊统筹基金支付给每位二档、三挡参保人的门诊医疗费用在一个医疗保险年度总额不超过1000元。\n\n\n个人账户家庭共济\n\n一档参保人：\n\n1、个 人账户积累额超过本市上年度在岗职工平均工资的5%，超过的部分可以到定点药店购买医保目录范围的非处方药;\n\n2、可以为本人及其已参加本市基本医疗保险的配偶 和直系亲属支付其在定点医疗机构就诊时自付的基本医疗费用、地方补充医疗费用;\n\n3、可以为本人及其已参加本市基本医疗保险的配偶和直系亲属的健康体检、预防接 种费用。\n\n二档参保人/三档参保人：无\n\n个人账户不足支付\n\n一档参保人：一档参保人连续参保满一年，在同一个医保年度内自付的门诊基本医疗费用和地补医疗费用超市在岗职工平均工资5%的，超过部分由统筹基金按规定支付70%(年满70周岁以上支付80%)。\n\n二档参保人/三档参保人：无\n\n\n门诊大型设备检查和治疗所发生的费用\n\n一档参保人：由统筹基金按规定支付80%\n\n二档参保人/三档参保人：按普通诊疗项目单价最高不超过120元支付\n\n普通门诊输血费用\n\n一档参保人：由统筹基金按规定支付90%\n\n二档参保人/三档参保人：由统筹基金按规定支付70%\n\n门诊大病待遇\n\n一档参保人/二档参保人/三档参保人：根据连续参保时间长短由统筹基金按规定支付60%-90%\n\n\n体检补助\n\n一档参保人：退休时一次性500元，每人每月20元(满70周岁为每人每月40元)\n\n二档参保人/三档参保人：无\n\n住院待遇\n\n一档参保人：住院发生的基本医疗费用和地方补充医疗费用起付线以上","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 17:03:06","updateTime":"2021-04-28 17:03:06","isExist":null},{"id":1124,"question":"跑步腿部会粗吗?","simplecontent":null,"content":"患者长时间进行跑步就会导致腿部的肌肉越来越发达，会引起腿部变粗的情况，这属于正常，患者不需要过于担心。如果患者感觉自己的腿部变粗的比较明显可能是由于疾病引起来的，比如局部肌疝而导致肌肉向外突出，从而引起腿部变粗的情况，应该及时的进行B超检查，明确诊断之后积极的应用手术进行治疗。如果变粗的比较缓慢而且左右两条腿现象都基本相同，可能就是因为跑步时导致腿部肌肉发达而引起的腿粗现象，患者可以通过将脚尖垫高，用力下蹲拉伸局部的肌肉，可以有效缓解跑步导致腿部变粗的情况，也可以将一条腿抬高在单杠上，另一只脚着地，将身体倾向于单杠侧的腿部，可以有效拉伸该侧腿部的肌肉，也可以缓解跑步时腿粗的现象。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:50:59","updateTime":"2021-04-28 16:50:59","isExist":null},{"id":1123,"question":"正常人一天吃多少热量？","simplecontent":null,"content":"病情分析：一般来说正常人每天会消耗2000到两千四百千卡的热量，所以一个人想要维持目前的体重，每天每公斤体重必须吃进30到三十五千卡的热量，也就是说每天至少需要摄入2000到2400卡热量。热量才合适，而且如有如果是运动量过大的话，还要过多的摄入一些热量。\n\n病情分析：一个人一天摄入多少热量才合适呢，这取决于我们的运动程度。将你的现有体重乘以11，便可得知你所需的热量数。例如，你的体重为55公斤，那么你每天所需的热量约为1320卡路里。即使你的身高不足1.6米，你每天摄入的热量也不得低于1200卡。调查结果表明，每日热量低于1200卡会使静止代谢率下降达45%。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:50:13","updateTime":"2021-04-28 16:50:13","isExist":null},{"id":1122,"question":"一天吃多少脂肪不长痘?","simplecontent":null,"content":"指导意见：高血压患者一定要注意减少脂肪的摄取量。建议多吃植物油，限制动物脂肪摄入，脂肪供给40~50g/日，胆固醇应在300~400mg/日。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:48:50","updateTime":"2021-04-28 16:48:50","isExist":null},{"id":1121,"question":"长痘原因？","simplecontent":null,"content":"激素，皮脂，毛孔角化\n诱因:激素，饮食，高温，熬夜","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:44:43","updateTime":"2021-04-28 16:44:43","isExist":null},{"id":1120,"question":"长痘危险三角区？","simplecontent":null,"content":"危险三角区”，就是位于鼻根及两侧，口角之间的三角形区域，简单来说，就是面部两条法令纹与嘴唇形成的三角形部分。这部分之所以危险，是因为这个区域内的血液供应特别丰富，而且与脑部直接沟通，当这个区域内发生感染，哪怕是长了一个小小的疖肿，也有可能感染到脑部，引起整个面部甚至全身的大面积感染。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:42:44","updateTime":"2021-04-28 16:42:44","isExist":null},{"id":1119,"question":"内分泌失调是什么原因导致的引起的?","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:42:27","updateTime":"2021-04-28 16:42:27","isExist":null},{"id":1118,"question":"治疗闭口的方法?维A酸","simplecontent":null,"content":"治疗闭口粉刺，最有效的方法还是使用维A酸类的药物内服、外用。闭口粉刺属于痤疮的一种皮损类型，形成的原因主要是由于毛囊皮脂腺的开口角化堵塞，皮脂内容物无法排除，这样在毛囊内逐渐蓄积而成粉刺。治疗闭口粉刺比较有效的方法是外用维A酸乳膏或者阿达帕林凝胶等等，这一类药物能够使闭塞的毛囊口角化重新的开放，皮脂内容物逐渐的排出，另外还可以抑制皮脂的过度分泌，所以对于闭口粉刺是有明显效果的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 16:38:05","updateTime":"2021-04-28 16:38:05","isExist":null},{"id":823,"question":"买房要注意什么？\n附近学校是否很好，不好读书很难。\n附近有地铁。\n楼层是否够好。\n二手房老化程度如何，还能用多少年。\n户型是否支持更改。","simplecontent":"","content":"附近学校是否很好，不好读书很难。\n附近有地铁。\n楼层是否够好。\n二手房老化程度如何，还能用多少年。\n户型是否支持更改。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 08:52:46","updateTime":"2021-04-28 08:52:47","isExist":null},{"id":829,"question":"白酒一下子喝完如何？\n白酒上劲儿没那么快，一口气喝完不难，但是过阵子会醉是真的","simplecontent":"","content":"白酒上劲儿没那么快，一口气喝完不难，但是过阵子会醉是真的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 08:52:24","updateTime":"2021-04-28 08:52:25","isExist":null},{"id":1117,"question":"闭口粉刺内原和外因？","simplecontent":null,"content":"\n— 内因 —\n\n维生素摄入量不足\n\n这种情况常常出现在无肉不欢同时不爱吃蔬菜的食肉系仙女身上。蔬菜本身含有多种维生素，这些维生素对我们皮肤的新陈代谢起到非常重要的作用。蔬菜、水果能够加快皮肤细胞的新陈代谢，让皮肤更加光滑。\n\n\n\n睡眠不足\n\n充足的睡眠对我们维持美美的皮肤真的是非常重要！晚睡对身体的排毒起到一个很大的阻碍作用。晚睡更容易长痘长闭口就无需多言了~\n\n\n\n体内“湿气重”\n\n湿气重的妹纸容易长湿疹还有痘痘。除此之外，爱吃辛辣刺激性的食物也会促使闭口爆发。\n\n\n\n— 外因 —\n\n水油不平衡\n\n皮肤干燥会导致皮肤新陈代谢速度变慢，老废的角质持续积聚在皮肤表层。所以皮肤干燥的小仙女也是会长闭口的。而皮肤出油旺盛则是因为出油量过大，毛孔不疏通而导致闭口。\n\n所以小仙女们要注意了，没有一成不变的好皮肤，不好好护理，都可能遭遇闭口的毒手！\n\n\n\n角质层过厚\n\n过厚的角质层会让皮肤看起来粗糙，且容易形成角质堵塞。\n\n造成角质层变厚的原因有很多。常见的包括不注意防晒，皮肤为了自我保护，角质层变厚等原因。\n\n\n\n底妆以及护肤品过于厚重油腻\n\n质地过于厚重的产品，由于分子大，直接上脸皮肤吸收不了，抹开后就停留在皮肤表面，或是皮肤不能透气，一直“捂着”，于是就“捂”出闭口了。\n\n\n\n清洁不到位，毛孔堵塞\n\n卸妆清洁不到位，彩妆和空气中的污垢残留在脸上，容易导致闭口。另外，卸妆产品或者清洁产品没用水清洗彻底，这些产品长时间停留在脸上也会导致毛孔堵塞爆出闭口","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 08:51:08","updateTime":"2021-04-28 08:51:09","isExist":null},{"id":1116,"question":"闭口粉刺原因?","simplecontent":null,"content":"闭口性粉刺实际上是老百姓俗称的白头粉刺，与黑头粉刺或者开放性粉刺截然不同。但是原因都差不多，是由于毛囊皮脂腺导管开口，在机体内分泌因素异常，尤其是体内雄激素作用下使毛囊皮脂腺导管的开口堵塞，产生的皮脂不能正常、顺畅排出，日久就形成了所谓的闭口性粉刺。所以治疗时要调整内分泌、改善角化，可以用粉刺针挑治等方法进行治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 08:48:03","updateTime":"2021-04-28 08:48:03","isExist":null},{"id":412,"question":"脸上的痘痘开始出脓什么时候刺破比较好","simplecontent":"","content":"是后的`\n因为化脓之前都是红红肿肿`\n碰到就很痛`\n切忌用手或者其它施力`\n要是散毒`就惨啦`\n等痘痘长熟了以后，就是已经不痛了`而且很明显的黄色脓已经看得见了`\n用针`当然是消过毒的`把痘痘刺破`再用棉签把脓挤干净``\n一定要挤干净`然后它很快就结疤了`就不用管它了`\n但是以上都是针对一颗吧两颗大的喔`\n象是容易出痘痘的肤质，还是把肤质调理好才行`\n平时洗脸手要特别轻`注重补水和收紧毛孔`当然不要刺激性的保养品拉`恩`同时`饮食清淡也很重要喔","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:29:37","updateTime":"2021-04-28 07:29:37","isExist":null},{"id":1115,"question":"“父母都走了之后，兄弟姐妹就散了”基本不来往了，是真的吗？","simplecontent":null,"content":"是真的，但绝不是因为亲情散了，而是没有“主心骨”了，向心力差了，父母是兄弟姐妹都聚在一起的中心，是纽带和桥梁，当父母走了以后，孩子们的内心是觉得没有依靠了，很多事情只能靠自己。\n\n基本不来往有点夸张，但是各忙各的事是真的，各自的孩子和工作够忙的了，哪有时间经常坐坐，只能逢年过节一起玩玩了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:26:29","updateTime":"2021-04-28 07:26:29","isExist":null},{"id":1114,"question":"玫瑰泡水上火吗?","simplecontent":null,"content":"玫瑰花茶是不会上火的，常饮玫瑰花茶能除油腻、消火、平神解闷、清热解毒、解渴等功效。同时，玫瑰花茶叶中含有大量茶多酚，具有较强的抗氧化和生理活性，能清除人体自由基，有利于人体健康。生产过程中保留了玫瑰花的天然成分，所以喝茶后可以食用茶叶，更有利于茶叶的使用。\n\n玫瑰花泡水喝可能会上火。玫瑰花药性较温，具有疏肝理气的作用，如果平时喝的比较多，就可能会导致上火，尤其是肝火旺的人喝了比较容易上火，除此之外，如果女性处于月经期间，建议不要喝玫瑰花茶，以免导致血气不足，从而引起痘痘。玫瑰花是常见的一种花茶，具有多方面的功效，比如能够清热养肝、温养血脉、温胃养胃等，平时喝些对身体是比较有益处的，不过不要喝得过多。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:19:48","updateTime":"2021-04-28 07:19:48","isExist":null},{"id":1113,"question":"不同部位长痘原因？","simplecontent":null,"content":"额头痘：肝脏毒素过多，长时间熬夜，生活不规律鼻翼痘:胃火大，消化不良\n\n发际线痘：卸妆没卸干净，角质层太厚,毛孔堵塞唇周痘:便秘，体内毒素太多\n\n下巴痘：内分泌失调，多为姨妈痘\n\n双眉间痘：心悸，胸闷，心脏活力减弱\n\n左脸颊痘：血液排毒能力不好，肝火旺\n\n右脸颊痘：肺火旺，痰多，咳嗽\n\n腮边痘：淋巴排毒不畅，肝脏负担加重\n\n太阳穴痘：食品油脂太多，胆囊负担太重\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:18:10","updateTime":"2021-04-28 07:18:10","isExist":null},{"id":1112,"question":"长痘喝什么茶？","simplecontent":null,"content":"病情分析：长痘痘可以喝菊花茶。菊花是一种植物，也是一种中药。菊花经晒干烘烤后，可用作清热解毒花茶饮用。\n\n柠檬，金银花，菊花柠檬茶，玫瑰\n\n菊花（散风清热、疏肝理气）\n决明子（清肝明目、排毒养颜）\n牛蒡根（去风热、消除面肿）\n桂花（散寒破结、化痰止咳）\n金银花（清热解毒、降肝火）\n枸杞子（滋补肝肾、增加精气）\n\n赤小豆（健脾益肾、清热解毒）\n熟薏米（利水消肿、退黄祛湿）\n茯苓（利尿消肿、健脾养胃）\n芡实（补脾止泻，除湿止带）","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:17:23","updateTime":"2021-04-28 07:17:23","isExist":null},{"id":1111,"question":"五一实际放多少天假？","simplecontent":null,"content":"一天，补假2天，2是正常的假期","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:12:02","updateTime":"2021-04-28 07:12:02","isExist":null},{"id":1110,"question":"来深圳一定要打卡的50个活动？","simplecontent":null,"content":"1、深圳湾公园骑单车吹海风；\n\n2、东西冲穿越；\n\n3、逛东门老街、吃美食；\n4、坐公交车从头到尾；\n\n5、深大湖边看书发呆；\n\n\n6、荷兰花卉小镇买自己喜欢的鲜花、鱼鸟；\n\n7、莲花山公园放风筝；\n\n8、爬深圳最高山梧桐山；\n9、蛇口市场或者南山市场买海鲜；\n\n10、东部华侨城坐小火车；\n\n\n11、海岸城3楼溜旱冰；\n\n12、欢乐港湾坐摩天轮；\n\n13、赤湾华英路樱花公园坐樱花列车；\n\n14、华侨城创业园拍照喝咖啡；\n\n15、深圳音乐厅听一场免费的音乐会；\n\n\n16、大芬油画村画一幅油画带回家；\n\n17、民俗文化村体验全球文化；\n\n18、百度大厦的24H南山书房预约看书；\n\n19、咸鱼上买一个需要的二手物品，同城交易；\n\n20、南油服装城买几件舒服高质量的衣服；\n\n\n21、蛇口设计互联文化馆看展览；\n\n22、何香凝/关月山美术馆看展览；\n\n23、华强北买电子数码产品；\n\n24、海上世界看音乐喷泉；\n\n25、光明农场摘草莓；\n\n\n26、鹿鸣山庄坐游艇；\n\n27、福田站坐高铁去香港九龙；\n\n28、打卡网红美食；\n\n29、登顶平安大厦看深圳夜景\n\n30、深圳湾体育馆看演唱会\n\n31、深圳动物园看各种动物；\n\n32、仙湖植物园了解万千美丽植物；\n\n33、蛇口港坐游轮出海；\n\n34、11号地铁线看露天海景\n\n35、公园野餐；\n\n\n36、大顶岭绿道徒步；\n\n37、南头古城看历史现代变迁；\n\n39、学府路吃美食；\n\n40、人才公园跑步；\n\n41、大梅沙小梅沙游泳烧烤；\n\n42、做一天深圳志愿者\n\n43、马术中心骑马；\n\n44、蛇口玩真人跑丁车；\n\n45、自拍体验馆自拍；\n\n46、健身房健身；\n\n47、中潜潜水世界潜水；\n\n48、体验水疗、spa、采耳、剧情杀、密室逃脱、私人影院、KTV等；\n\n49、去宠物咖啡厅撸猫舔狗；\n\n50、去欢乐谷、世界之窗玩机动游戏","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:09:58","updateTime":"2021-04-28 07:09:58","isExist":null},{"id":1109,"question":"保研的都是学硕吗","simplecontent":null,"content":"是的，专硕找工作存在一定局限性，学硕通吃，至于如果是好学校的专硕比差学校的学硕这种对比，看你自己怎么想了，如果不是绝对优势的差距，还是建议学硕，核心不难发，况且大多数学校不要求核心。在校期间的五点区别\n\n1、三助申请的岗位有区别，专硕的比较少；\n\n2、奖学金，同样有 A、B类。学术型的每个人都有奖学金，而专硕型，有的学校每个人都有，有的学校只有部分人有，也就是说可能会有一部分人要自己出全部学费。\n\n3、专硕研二要外出实习半年。这是必修的课程。（但是如果导师有项目就不要出去了，可以跟着导师做）；\n\n4、毕业论文，专硕既可以做学术型的论文，也可以做工程实例型的；\n\n5、专硕不能直博，考博正常。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:06:48","updateTime":"2021-04-28 07:06:48","isExist":null},{"id":1108,"question":"欧元英镑美元哪个值钱","simplecontent":null,"content":"根据银行汇率显示，1英镑等于8.7595人民币\n\n1欧元等于7.5351人民币\n\n1美元等于6.7164人民币\n\n综合比较可知，英镑最贵，欧元次之。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:03:14","updateTime":"2021-04-28 07:03:14","isExist":null},{"id":1107,"question":"为什么英镑那么值钱？","simplecontent":null,"content":"英镑值钱的原因：由于英国是世界最早实行工业化的国家，曾在国际金融业中占统治地位，英镑曾是国际结算业务中的计价结算使用最广泛的货币。一战和二战以后，英国经济地位不断下降，但由于历史的原因，英国金融业还很发达，英镑在外汇交易结算中还占有非常高的地位。\n\n英镑作为英国的本位货币单位，由成立于1694年的英格兰银行（Bank of England）发行。辅币单位原为先令和便士，1英镑等于20先令，1先令等于12便士，1971年2月15日，英格兰银行实行新的货币进位制，辅币单位改为新便士，1英镑等于100新便士。流通中的纸币有5、10、20和50面额的英镑，另有1、2、5、10、20、50新便士及1英镑的铸币。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:01:01","updateTime":"2021-04-28 07:01:01","isExist":null},{"id":1106,"question":"世界上最值钱的钞票？","simplecontent":null,"content":"英镑、美元，欧元","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 07:00:21","updateTime":"2021-04-28 07:00:21","isExist":null},{"id":1105,"question":"英镑和人民币汇率？","simplecontent":null,"content":"1英镑=9.0117 人民币","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:59:03","updateTime":"2021-04-28 06:59:03","isExist":null},{"id":1104,"question":"小米总市值？","simplecontent":null,"content":"6300多亿，每股26元港币","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:58:06","updateTime":"2021-04-28 06:58:06","isExist":null},{"id":1103,"question":"谷歌退出中国原因？","simplecontent":null,"content":"谷歌退出中国大陆是因为在解决公司面临的问题时没有走正常的商业运作渠道，而选择了与中国政府“水平碰撞”的方式，要求不接受审查地运营在华业务。\n\n\n\n从Google宣布退出后，中国官方回应就可看出\"外国公司在中国经营必须遵守中国法律。谷歌公司违背进入中国市场时作出的书面承诺......\"。官方要求对搜索服务进行过滤、审查，而Google坚持所谓的西方价值观，没有配合官方行为。\n\n市场上受到本土企业百度的压制，自身产品发展阻滞等一系列问题。它最擅长的搜索在国内占有率也不过30%左右（个人觉得google在中文搜索方面确实比不上百度，但外文搜索还不得不依靠它，至今一直用它）。退出之前中国在清理se情网站时，也曾牵涉到谷歌的某些业务，谷歌被央视曝光涉黄，谷歌图书馆计划遭遇版权危机被起诉，并且又被政府相关部门也出面指责谷歌。\n\n另外李开复的离开，让谷歌一时难找到合适的领军者，使谷歌雪上加霜。\n\n综合各种因素，政策干涉和业务进展不顺，离开也是必然的。但中国的市场蛋糕大的惊人，实在诱惑，它最终还是要进来分一块的，在今天巨大的市场前，它低头也就乐意了，如同今天的英国。当年的退出更是为了将来的进来，这也是以退为进的一步棋。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:55:37","updateTime":"2021-04-28 06:55:37","isExist":null},{"id":1102,"question":"为什么谷歌退出中国？","simplecontent":null,"content":"因为微软不涉及敏感信息。谷歌搜索什么都能搜的到，一定程度上导致一些境外势力渗透，对国家安全有危害，而且谷歌的产品基本都有替代品，没有什么影响。而微软必应搜索则严格遵守我国防火墙的规定，无论是国内版还是国际版，被墙的内容绝对不显示，而且微软的office就如adobe全家桶一样，可替代但不可超越。总之，微软是家符合中国市场环境的良心公司，而谷歌则是典型的资本主义产物。我看到有些网友回答是因为windows，但我觉得国产的优麒麟，UOS和深度都不错，也的确有很多软件已经出了替代品，所以如果美国要求微软停止中国服务的话我们大可不必担心，也不必把华为奉为圭臬，我国早就有国产操作系统，无需把筹码押在华为身上。即使linux系统不能推广，国企计算机产业也可以研制新的系统\n\n作者：依旧是天狼\n链接：https://www.zhihu.com/question/55267643/answer/1398691206\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:54:10","updateTime":"2021-04-28 06:54:10","isExist":null},{"id":1101,"question":"google什么时候退出大陆?","simplecontent":null,"content":"2010年3月23日，宣布停止对谷歌中国搜索服务的“过滤审查”，并将搜索服务由中国内地转至香港。 2010年4月3日，名称“谷歌”废弃使用，“谷歌”改回“Google中国”。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:52:42","updateTime":"2021-04-28 06:52:42","isExist":null},{"id":1100,"question":"韶关在哪里?","simplecontent":null,"content":"广西和广东之间的城市","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:51:04","updateTime":"2021-04-28 06:51:04","isExist":null},{"id":1099,"question":"广东客家人是哪里人?","simplecontent":null,"content":"广东客家人主要分布在深圳，韶关，惠州，梅州，河原，英德也有一部分讲客家话的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:49:46","updateTime":"2021-04-28 06:49:46","isExist":null},{"id":1098,"question":"客家菜有哪些？","simplecontent":null,"content":"客家十大名菜有：酿豆腐、盐焗鸡、生鱼脍 、煎春角、凤投胎、酿苦瓜 、鱼丸煲 、搏丸烩 、红焖肉 、炒大肠。\n\n传统的客家招牌菜是：盐焗鸡、酿豆腐和红烧肉。河源市区的客家菜除有传统的盐焗鸡、酿豆腐和红烧肉这些“老三篇”外，比较具特色的有：","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:46:51","updateTime":"2021-04-28 06:46:51","isExist":null},{"id":1097,"question":"为什么现在聚餐大多数都是吃的火锅而不是炒菜？","simplecontent":null,"content":"穷学生，吃炒菜又吃不起，也就吃吃火锅这种，才可以维持生活。\n\n基本上火锅一次就是八九个菜，几个饮料，大家围坐在一起，几大份肉几份菜，吃吃就没了。不够还可以再点，基本剩不下啥。汤底可以选各种，清汤麻辣番茄乃至清水。小料也可以随心选择，自己控制味道。最大的好处就是上菜快，而且满锅里划拉也没人说你个不好。\n\n你要是炒菜，你得点个六菜一汤吧？得顾及所有人口味吧？要有辣的有不辣的，有甜的有咸的，有荤菜有素菜，最后还得来个主食吧？然后吃到最后一般会剩一堆，如果点的特别不好吃还可能一筷子都没人动。有的菜半天上不来，别的菜都吃完了这个菜还在做。你吃起来比较拘束，比如说你点了一道菜是虾仁青豆炒鸡蛋，你喜欢里面的虾仁，但是你面前偏偏没两个虾仁，这时候你就不能跑到别人面前夹虾仁。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:45:24","updateTime":"2021-04-28 06:45:24","isExist":null},{"id":1096,"question":"如何看待郑爽涉嫌阴阳合同、天价片酬、偷逃税被调查？","simplecontent":null,"content":"两份合同，阳合同是给别人看，实际以阴合同","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:42:42","updateTime":"2021-04-28 06:42:42","isExist":null},{"id":1094,"question":"和女生聊天的5w聊天法","simplecontent":null,"content":"俗称 5w1H聊天法。5w是哪五个？即what where who when why，1H是how。举个例子你们就明白了。\n\n假如女生朋友圈全是关于运动健身的的或者在聊天中提到自己喜欢运动，你就可以这么问。\n\nwho：你平时和谁一起健身啊？是自己一个人还是和闺蜜或者是小哥哥？要是自己一个人你不害怕遇到坏人吗？下次可以叫上我，我给你当个保镖。\n\nwhen：你一般选择在什么时候出去运动啊？早上还是晚上？你一周运动几次啊？你从什么时候开始坚持运动的啊？\n\nwhy：你为啥喜欢运动呢，一般女生好像都对运动没兴趣，你好特别啊！\n\nhow：你运动的效果怎样啊？是因为运动才让你保持这么好的身材吗？我也挺喜欢运动的，下周一起去打羽毛球啊，咱俩切磋一下？\n\nwhat：你最喜欢的运动项目是？你最擅长的运动项目是什么啊？\n\nwnere：你平时都去哪里健身啊？是更喜欢在健身房还是户外呢？\n\n\n一、聊一些近期热点话题，记住要接地气，最好是大家耳熟能详的，有意思的事情。聊时事政治类的话题，不要一直围绕政治聊，要从这个话题深入到生活。\n\n1、 你打新冠疫苗了吗？有什么不良反应吗？\n\n2、你五一准备去哪玩啊？\n\n3、你看电影《我的姐姐》了吗？\n\n4、你双十一给马云贡献了多少？\n\n\n\n二、聊他的兴趣爱好，这个即便是相识初期也不会差（不知道她的兴趣爱好可以问她？也可以聊女生感兴趣的综艺、美食、八卦、旅行、电影、音乐、减肥等）\n\n1、没事的时候，你喜欢做什么？\n\n2、你喜欢旅游吗？都去过哪些地方？\n\n3、你有没有很想去的地方？\n\n4、你有喜欢的男明星吗？你追过星吗？\n\n5、你最近在看什么综艺节目？\n\n6、你追剧吗？喜欢看什么类型的电影，可以推荐给我吗？\n\n6、看你每天晒美食，你怎么不胖啊？\n\n7、看你身材不错，平时是怎么保持的？\n\n8、你上网一般都做什么？\n\n9、你唱歌咋样啊？喜欢什么风格的音乐？\n\n10、最近娱乐圈的瓜好大啊，你关注了吗？\n\n11、你平时都去哪里逛街啊？\n\n12、你最喜欢吃什么菜系啊？你会做菜吗？\n\n\n\n三、如果对方是学生，可以先从她的专业/学校入手，慢慢了解她，但是要提前做一些功课噢\n\n1、你喜欢你的专业吗？你大学时最想读的是什么专业啊？为什么\n\n2、你们专业以后都做什么啊？\n\n3、你们专业女生多男生多？\n\n4、学你们这个专业的是不是口才都特别好/脑袋聪明/数学好/逻辑强？以此类推\n\n5、你们学校什么时候放暑假啊\n\n6、你们学校漂亮吗？有没有照片？\n\n7、你喜欢你的学校吗？\n\n8、你们学校帅哥多不多啊？\n\n9、你们学校男生多女生多啊？\n\n10、你们学校的校花/校草是谁？有没有照片啊\n\n11、你们学校周围有没有什么好玩的地方？\n\n\n\n四、聊工作，但是不要问她太复杂的问题，目的仅仅是让他她在工作之余得到宣泄，毕竟工作占据了她很多生活。\n\n1、你在这个单位工作多久了？\n\n2、你平时活多不，累不累啊？\n\n3、你几点下班？平时会不会加班？\n\n4、你单位工作氛围咋样啊\n\n5、你觉得工作薪水高和做着开心哪个更重要啊？\n\n6、你喜欢你现在的工作吗？\n\n7、你工作的时候有没有遇到很奇葩的客户啊\n\n8、工作这几年让你最有成就感的事情是什么\n\n9、你最理想的职业是？\n\n10、你有没有过想辞职的冲动啊？\n\n\n\n五、聊她的闺蜜/室友/，记住不要主动说她们的坏话，除非她先跟你","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:37:46","updateTime":"2021-04-28 06:37:46","isExist":null},{"id":970,"question":"2021五一电影预测","simplecontent":null,"content":"　　2021年五一电影档期\n\n　　经历春节电影档的片荒之后，中国内地观众将在2021五一档迎来一顿丰盛的“满汉全席”。截至目前，已有10部影片定档五一，而且名导名角扎堆，竞争激烈程度不亚于春节档。既有张译、郭富城、古天乐、周迅等戏骨演员，也会看到易烊千玺、张子枫等新生代的优秀力量。不论你喜欢喜剧搞笑题材，还是悬疑奇幻，都可一并满足。\n\n　　《古董局中局》\n\n　　\n\n\n　　导演: 郭子健\n\n　　主演: 雷佳音 / 李现 / 辛芷蕾 / 葛优 / 王庆祥 / 咏梅 / 阿如那 / 秦焰 / 佐藤丽 / 纪焕博 / 郭涛\n\n　　类型: 剧情 / 悬疑 / 冒险\n\n　　上映日期: 2021-04-30(中国大陆)\n\n　　剧情简介：\n\n　　来自日本的木户小姐即将向中国归还一尊唐代武则天明堂佛头，却指明要文物界权威组织“五脉”旗下白字门许家后人出面接收。而许家后人——许愿，虽有一身鉴古天赋，却胸无大志。佛头的出现打乱了他的生活，五脉掌门孙女黄烟烟的委托、父亲的离奇死亡、五脉天才药不然的逼迫、祖父故交付贵的追随与神秘人老朝奉的追击，许愿必须在各方势力的纠缠之下，查明佛头真相……\n\n　　《悬崖之上》\n\n　　导演: 张艺谋\n\n　　主演: 张译 / 于和伟 / 秦海璐 / 朱亚文 / 刘浩存 / 倪大红 / 李乃文 / 余皑磊 / 周晓凡 / 雷佳音 / 沙溢\n\n　　类型: 剧情 / 动作 / 悬疑\n\n　　上映日期: 2021-04-30(中国大陆)\n\n　　剧情简介：\n\n　　上世纪三十年代，四位曾在苏联接受特训的共产党特工组成任务小队，回国执行代号为“乌特拉”的秘密行动。由于叛徒的出卖，他们从跳伞降落的第一刻起，就已置身于敌人布下的罗网之中。同志能否脱身，任务能否完成，雪一直下，立于“悬崖之上”的行动小组面临严峻考验。\n\n　　《世间有她》\n\n　　\n\n\n　　导演: 张艾嘉 / 李少红 / 陈冲\n\n　　主演: 周迅 / 郑秀文 / 易烊千玺 / 许娣 / 冯德伦 / 白客 / 黄米依 / 鲍起静 / 朱雅芬 / 苏小明 / 巴图 / 马昕墨\n\n　　类型: 剧情 / 爱情\n\n　　上映日期: 2021-04-30(中国大陆)\n\n　　剧情简介：\n\n　　电影的故事背景设定在2020年：一场突如其来的灾难，打乱了所有人的生活。当工作面临失业，当家庭分崩离析，当爱人分隔两地，当死亡悄然逼近，当平静的生活突然遭遇毫无征兆的变故，这时候的女性会怎样应对?张艾嘉、李少红、陈冲三位导演用各自独特的女性视角，探索并展现了特殊时期人们在家庭、事业、爱情中的困境与挣扎，用最细腻的视听语言带给观众深层次的思考与启发。影片将镜头对准充满烟火气的平凡生活，通过几对人物的情感和故事映射出社会中万千普通人在2020年的生存现状，值得全社会体悟与思考，也必将引起观众的共鸣与共情。\n\n　　《真·三国无双》\n\n　　\n\n\n　　导演: 周显扬\n\n　　主演: 王凯 / 古天乐 / 吕良伟 / 杨祐宁 / 刘嘉玲 / 韩庚 / 古力娜扎 / 林雪 / 姜皓文 / 张建声 / 张兆辉\n\n　　类型: 动作 / 爱情 / 战争\n\n　　上映日期: 2021-04-30(中国大陆)\n\n　　剧情简介：\n\n　　电影根据同名游戏改编，讲述动荡的东汉末年，汉室摇摇欲坠，董卓入京霸占朝野，引起天下动荡，身怀绝世武艺的吕布、曹操、关羽、刘备、张飞等各路英雄豪杰纷纷崛起，一场群雄逐鹿的大混战正式拉开序幕。在乱世中，到底谁才是真正的无双英雄……\n\n　　《秘密访客》\n\n　　\n\n\n　　导演: 陈正道\n\n　　主演: 郭富城 / 段奕宏 / 张子枫 / 许玮甯 / 荣梓杉 / 王圣迪\n\n　　类型: 剧情 / 悬疑\n\n　　上映日期: 2021-05-01(中国大陆)\n\n　　剧情简介：\n\n　　校车司机于困樵(段奕宏 饰)因失职酿成了一起重大的校车车祸，困樵拼死救出了似与车祸背后真相息息相关的汪楚祺(荣梓杉饰)，校车上的其他学生无人生还。得知此事家境显赫的汪父(郭富城饰)为了隐藏这个秘密，不得不把困樵藏在自己家的地下室里长达三年，却处处暗示困樵何时自首。随着访客的到来，这个原本温馨和睦的四口之家变得越来越诡异，母亲(许玮甯饰)整日惴惴不安，姐姐(张子枫 饰)举止一反常态，家人个个心怀鬼胎，怪事频出，这个家背后不可告人的秘密似乎即将浮出水面……\n\n　　《阳光劫匪》\n\n　　\n\n\n　　导演: 李玉\n\n　　主演: 马丽 / 宋佳 / 张海宇 / 谢锐韬 / 曾志伟 / 沙溢 / 杨迪 / 詹瑞文\n\n　　类型: 剧情 / 喜剧 / 奇幻\n\n　　上映日期: 2021-05-01(中国大陆)\n\n　　剧情简介：\n\n　　阳光(马丽 饰)经营着一家寻宠事务所，接受委托帮忙寻找丢失的宠物。有天，晓雪(宋佳饰)找到了阳光，请她找回自己相依为命的女儿娜娜。阳光被晓雪感动，决定出手相助，但没想到“娜娜”竟然是一只五岁的大老虎，一行人开始了一场令人捧腹又惊心动魄的欢乐劫虎之旅。\n\n　　《追虎擒龙》\n\n　　\n\n\n　　导演: 王晶 / 许悦铭\n\n　　主演: 古天乐 / 梁家辉 / 吴镇宇 / 林家栋 / 姜皓文 / 胡然 / 郑则仕 / 蔡洁 / 林子善 / 刘浩龙\n\n　　类型: 剧情 / 动作 / 犯罪\n\n　　上映日期: 2021-05-01(中国大陆)\n\n　　剧情简介：\n\n　　故事讲述 1973 年香港警黑勾结， 在英国人指使下贪污巨利，荼毒市民。港督成立廉政公署，最先两位检察官为黑白双煞 (古天乐、林家栋饰)历尽千辛万苦调查权倾黑白两道的总华探长徐乐(吴镇宇 饰)及跛豪(梁家辉 饰)，终把二人绳之以法的故事。\n\n　　《寻汉计》\n\n　　\n\n\n　　导演: 唐大年\n\n　　主演: 任素汐 / 李保田 / 王子川 / 张本煜 / 李勤勤 / 董博 / 仁龙 / 李诞 / 史航 / 柳小海 / 刘丹 / 曹征\n\n　　类型: 喜剧 / 剧情\n\n　　制片国家/地区: 中国大陆\n\n　　上映日期: 2021-05-01(中国大陆)\n\n　　剧情简介：\n\n　　大龄女青年王招(任素汐 饰)，离婚后发现怀了前夫的孩子，怕再不能生育，想留下这个孩子，结果把身边的男人们都吓跑了。姥爷(李保田饰)洞悉后，想帮助自己的外孙女，却闹出了一系列笑中带泪的故事。最终，祖孙俩收获了人间最朴素的温暖。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:34:09","updateTime":"2021-04-28 06:34:09","isExist":null},{"id":1093,"question":"因果式表达和递进式表达","simplecontent":null,"content":"1）因果式表达。\n\n因果很简单，就是“你做了什么，然后发生了什么事”、“因为什么，结果什么样”，这是我们最常用，也最简单的一种表达方式。\n\n但是，能用好的人却很少。比如你跟私企老板汇报业绩下降的原因：\n\n“因为公司最近方向错误，所以造成业绩下降。”\n\n“这个月业绩下降，是因为公司最近决策失误。”\n这两种都属于因果表达，却犯了同样的错误，把原因直接指向了汇报对象，这在沟通交流中是大忌，经常是矛盾的导火索。\n\n由于因果式表达很容易起到误导作用，一定要看对象和事实说话，你不能直接说就是对方的决策造成的，可以间接一点，比如：\n\n“因为大环境的变化，造成我们公司方向的失误，所以业绩有所下降；但是，我相信通过合理的方向调整，一定会有效改善这个局面。“\n2）递进式表达。\n\n所谓递进，就是说话循序渐进，让对方渐入佳境。\n\n递进最大的作用，是能使交流对象保持专注的倾听，具有引导效应。就像讲故事，从出生讲到死亡，一步步升级打怪，失败又成功，成功又失败，不断勾起你的好奇。\n\n比如下面的经典故事，即使看到前两句是循环的，你也会坚持看到最后：\n\n从前有座山，山上有座庙，庙里有个老和尚，老和尚在给小和尚讲故事，故事讲的是从前有座山，山上有座庙，庙里有个老和尚，老和尚在给小和尚讲故事，故事讲的是从前有座山，山上有座庙，庙里有个老和尚......\n递进式表达就是这么神奇，不仅能让你听下去，还可以让你说清楚来龙去脉，理清时间节点，是一套有逻辑引导的表达方式。\n\n比如你去跟路上美女要微信，一般人会说：\n\n”你好，小姐姐，我想加下你的微信可以吗？“\n而递进可以是这样的：\n\n”你好，小姐姐/小哥哥，我在这里丢了一封信，你可以帮我找找吗？“\n”怎么找，没看到这里有信啊“\n”打开你的手机，加个微信吧“\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:28:59","updateTime":"2021-04-28 06:28:59","isExist":null},{"id":1092,"question":"循序渐进聊天法","simplecontent":null,"content":"第一步：收集信息。从自我介绍开始，在相互不了解的情境下，确实没有什么话题好聊，正是这样，你才有理由问她的职业、爱好或城市印象。比如：\n\n”你觉得深圳怎么样？“\n”挺好的，大家都很拼搏，就是生活节奏有点快“\n”是啊，我毕业后就来了，从计算机转了媒体，你是哪毕业的？怎么会想到来深圳“\n”我从XX音乐学院刚毕业，听说这儿薪资高，就跑过来了“\n第二步：顺藤摸瓜。根据已经获得的信息，继续套出更多的信息。\n\n”你说你进了音乐学院，是不是很擅长玩乐器？“\n”吉他会一点，不过我更喜欢弹琴“\n第三步：搬出目的。当获得足够信息，对方愿意配合的时候，直接引出目的。\n\n”原来你也喜欢弹琴啊，我也正在学，有机会一起玩玩？“\n”可以啊“\n”那我们留个电话下次联系？“\n”好“","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:25:49","updateTime":"2021-04-28 06:25:49","isExist":null},{"id":1091,"question":"能改变我们是什么？","simplecontent":null,"content":"不是技巧和工具，而是习惯，习惯来源于尊重现实","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:23:06","updateTime":"2021-04-28 06:23:06","isExist":null},{"id":1089,"question":"武汉大学和华中科技大学对比","simplecontent":null,"content":"“武汉双雄”就是大家所熟知的武汉大学和华中科技大学的总称，这两所大学都是位于湖北武汉，而且都是属于综合性大学，实力不分上下。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-28 06:06:51","updateTime":"2021-04-28 06:06:51","isExist":null},{"id":1088,"question":"华中科技大学如何","simplecontent":null,"content":"华中科技大学位于湖北省武汉市洪山区珞喻路1037号，位于“九省通衢”的武汉市，于喻家山麓，东湖之畔，中科技大学是国家教育部直属重点综合性大学，由原华中理工大学、同济医科大学、武汉城市建设学院于2000年5月26日合并成立。\n\n华中科技大学是国家“211工程”重点建设和“985工程”建设高校之一，是首批“双一流”建设高校。华中大是中华人民共和国教育部直属的综合性全国重点大学，中央直管副部级高校。学校学科齐全、结构合理，基本构建起综合性、研究型大学的学科体系。拥有哲学、经济学、法学、教育学、文学、理学、工学、医学、管理学、艺术学等10大学科门类。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 22:14:45","updateTime":"2021-04-27 22:14:45","isExist":null},{"id":1087,"question":"萨摩耶数科公司如何","simplecontent":null,"content":"萨摩耶数科（全称“深圳萨摩耶数字科技有限公司”）成立于2015年5月，作为一家以AI为驱动的金融数字科技公司，萨摩耶数科致力于通过F.I.R.S.T战略构成一个有机的整体，基于自主研发的人工智能、云计算等现代互联网新兴技术，为金融机构提供全方位、专业的数字金融科技服务，助力金融行业实现线上化、智能化的数字化转型。\n所属公司:深圳萨摩耶数字科技有限公司\n法定代表人:林建明\n注册时间:2015-05-26","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 22:12:46","updateTime":"2021-04-27 22:12:46","isExist":null},{"id":1086,"question":"低价的品牌衣服？美特斯班委，太平鸟，森马","simplecontent":null,"content":"买过19块9的美特斯邦威衬衫，49块的太平鸟西服啊79的森马牛仔衫啊，等等，还有好多","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 15:05:49","updateTime":"2021-04-27 15:05:49","isExist":null},{"id":1080,"question":"如何才能做到早睡呢？不玩手机，养成习惯","simplecontent":null,"content":"早起，养成固定的生物钟（每天坚持）。每晚吃晚饭吃的早一点，晚上饿，就逼自己早点睡呀……\n不要玩手机，或者做其他要专心做的事情。把手机放远一点。物理监督自己。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 07:19:14","updateTime":"2021-04-27 07:19:14","isExist":null},{"id":1085,"question":"摸奶会导致乳腺癌？无关，与淋巴血块相关1","simplecontent":null,"content":"乳腺癌和所有的恶性肿瘤一样，是可以通过血行，淋巴和种植转移的，但具体的病因都是不是很明确的， 对女性的健康危害是很大的，所以上述情况是和乳腺癌没有必然的联系的，适度的良好的性生活是促进夫妻双方感情和缓解生活压力是有很大的好处的，无需紧张的\n如果你经常吸允乳头对你有好处的，防止腺管堵塞，但是必须及时清洗，不然有感染的可能性。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 07:17:35","updateTime":"2021-04-27 07:17:35","isExist":null},{"id":152,"question":"怡宝和农夫山泉那个好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 07:17:11","updateTime":"2021-04-27 07:17:11","isExist":null},{"id":1084,"question":"乳腺癌的原因？绝经，高龄产妇，脂肪饮食","simplecontent":null,"content":"1 年龄：在女性中，发病率随着年龄的增长而上升，在月经初潮前罕见，20岁前亦少见，但20岁以后发病率迅速上升，45～50岁较高，但呈相对的平坦，绝经后发病率继续上升，到70岁左右达最高峰。死亡率也随年龄而上升，在25岁以后死亡率逐步上升，直到老年时始终保持上升趋势。\n　　2 遗传因素：家族的妇女有第一级直亲家族的乳腺癌史者，其乳腺癌的危险性是正常人群的2～3倍。\n　　3 其他乳房疾病。\n　　4 月经初潮年龄：初潮年龄早于13岁者发病的危险性为年龄大于17岁者的2.2倍。\n　　5 绝经年龄：绝经年龄大于55岁者比小于45岁的危险性增加。\n　　6 第一次怀孕年龄：危险性随着初产年龄的推迟而逐渐增高，初产年龄在35岁以后者的危险性高于无生育史者。\n　　7 绝经后补充雌激素：在更年期长期服用雌激素可能增加乳腺癌的危险性。\n　　8 口服避孕药。\n　　9 食物：尤其是脂肪饮食，可以增加乳腺癌的危险性。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:57:33","updateTime":"2021-04-27 05:57:33","isExist":null},{"id":1083,"question":"豆浆会长痘吗？不会，糖会，氧化剂、矿物质和维生素","simplecontent":null,"content":"长痘和你喝豆浆应该是没有关系的，长痘是和内分泌有关。\n相反，豆浆是具有光滑滋润面部皮肤的功能的，豆浆内含丰富的氧化剂、矿物质和维生素，其中维生素还能防止皱纹的出现和预防浮肿。还含有一种牛奶所没有的植物雌激素“黄豆苷原“，很多痘痘就是因为激素分泌不平衡，雌激素分泌量少才长痘的。而豆浆正好可以治疗这种情况，调节女性内分泌系统的功能，改善女性心态和身体素质，延缓皮肤衰老，减少青少年女性面部青春痘、暗疮的发生,使皮肤白皙润泽。\n我以前也是额头上长痘，后来吃得清淡些，还每天坚持喝豆浆，现在是彻底不长痘痘，皮肤明显好了好多。\n下面我给你推荐几款平时经常喝的豆浆吧: 黄豆、黑豆、核桃、芝麻（这些都是随便搭配，多喝粗粮对身体好）如果懒得打豆浆喝点永和的豆浆粉也是差不多的，他们家有几款粗纤维的豆浆粉，效果和自己打的豆浆差不多。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:57:22","updateTime":"2021-04-27 05:57:22","isExist":null},{"id":1082,"question":"喝牛奶长痘的情况？每天一杯是灭有喝的1.24倍","simplecontent":null,"content":"如果每周喝1杯以下牛奶，长痘几率是不喝牛奶的1.24倍；\n如果一周喝2~6杯，长痘几率是不喝牛奶的1.41倍；\n如果每天喝2杯以上，长痘几率就是不喝牛奶的1.43倍了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:57:11","updateTime":"2021-04-27 05:57:11","isExist":null},{"id":1079,"question":"你们上班路上都是花多久时间？很长","simplecontent":null,"content":"现在上班骑电动车大约十分钟，如果再加接送孩子上幼儿园的时间的话，一共需要15分钟。\n对于生活在三线城市的我来说，花一个小时去上班的确是挺久的。我刚毕业的时候曾经有过一份距离我家25公里的工作，而且还要经过一座大桥和外环。通常来说，不堵车的话需要四十分钟左右，但是堵车的话，往往是需要一个半小时以上。记得最堵的一次是一个冬日的雪后天，早上七点半出门，到公司的时候已经要吃中午饭了，堵到最后已经感觉无欲无求了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:56:46","updateTime":"2021-04-27 05:56:46","isExist":null},{"id":1078,"question":"不同年龄的长高？12,15,18","simplecontent":null,"content":"我大概明显的发育了4次\n第一次是12岁初一的暑假，从169cm长到了178cm。\n第二次是15岁高一的暑假，从178cm长到了183cm。\n第三次是18岁大学的时候，从183cm长到了189cm。\n现在的话，190多cm的样子，具体没有再去量过了","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:56:39","updateTime":"2021-04-27 05:56:39","isExist":null},{"id":1076,"question":"长高钙片真的有用吗，微商别来？运动，牛奶","simplecontent":null,"content":"只能起一个辅助作用\n真正的长高秘诀，是大量的运动，再配合和牛奶钙片的辅助\n别问我是怎么知道的…","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:56:18","updateTime":"2021-04-27 05:56:18","isExist":null},{"id":1074,"question":"伤残1到10级赔偿标准？个人工资*7-个人工资*27","simplecontent":null,"content":"一级伤残：本人工资×27；二级伤残：本人工资×25；三级伤残：本人工资×23；四级伤残：本人工资×21；五级伤残：本人工资×18；六级伤残：本人工资×16；七级伤残：本人工资×13；八级伤残：本人工资×11；九级伤残：本人工资×9；十级伤残：本人工资×7。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:56:07","updateTime":"2021-04-27 05:56:07","isExist":null},{"id":1073,"question":"盗窃金额的起点？1000,5000,3000","simplecontent":null,"content":"第三条盗窃公私财物“数额较大”、“数额巨大”、“数额特别巨大”的标准如下：\n（一）个人盗窃公私财物价值人民币五百元至二千元以上的，为“数额较大”。\n（二）个人盗窃公私财物价值人民币五千元至二万元以上的，为“数额巨大”。\n（三）个人盗窃公私财物价值人民币三万元至十万元以上的，为“数额特别巨大”。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:55:58","updateTime":"2021-04-27 05:55:58","isExist":null},{"id":1072,"question":"常见数额型犯罪量刑标准？","simplecontent":null,"content":"1、盗窃罪\n\n一千至三千，3—6个月；\n\n三万至十万，3—4年；\n\n三十万至五十万，10—12年。\n\n2、诈骗罪\n\n三千至一万3—6个月；\n\n三万至十万3—4年；\n\n五十万以上10—12年。\n\n3、合同诈骗罪\n\n五千到一万，6个月以下；\n\n三万不满五万，3到10年；\n\n五万以上，10年以上。\n\n4、信用卡诈骗罪\n\n一万至十万，5年以下；\n\n十万到一百万，5到10年；\n\n一百万以上，10年以上。\n\n5、集资诈骗罪\n\n十万元至贰拾万元，5年以下；\n\n二十万至一百万，5—10年；\n\n6、贷款诈骗罪\n\n贰万至五万，5年以下；\n\n五万至二十万，5—10年。\n\n7、票据诈骗罪\n\n五千至五万，5年以下；\n\n五万至十万，5—10年。\n\n8、保险诈骗罪\n\n一万至五万，5年以下；\n\n五万至二十万，5—10年。\n\n9、逃税罪\n\n五万、百分之十，3年以下；\n\n巨大、百分之三十，3—7年。\n\n10、侵占罪\n\n五千至贰万，2年以下；\n\n十万以上，2—5年。\n\n11、职务侵占罪\n\n五千至一万，3个月至1年；\n\n一万至十万，5年以下。\n\n\n\n12、敲诈勒索罪\n\n贰仟至五千，3—6个月；\n\n三万至十万，3—4年；\n\n三十万至五十万，10年以上。\n\n13、拒不支付劳动报酬罪\n\n(1人、3个月)五千至贰万，10人累计三万至十万3年以下\n\n盗窃多少钱可以立刑事案？地区相关，500-2000\n一般盗窃数额较大，即个人盗窃公私财物价值人民币五百元至二千元以上的，即可立刑事案件。但根据各地区经济发展状况，并考虑社会治安状况，立刑事案件的“数额较大”标准可能不同。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:55:46","updateTime":"2021-04-27 05:55:46","isExist":null},{"id":1071,"question":"车前草有啥珍贵？清热利尿","simplecontent":null,"content":"车前草在临床上主要还是用于利尿通淋，利尿效果显著的同时清热，可用于湿热水肿，由于车前草味甘，性质比较平和，所以它也可以治疗一些虚证的水肿。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:55:32","updateTime":"2021-04-27 05:55:32","isExist":null},{"id":1070,"question":"鼻屎黄是什么原因呢？鼻前庭炎，鼻窦炎，流脓涕或鼻涕倒流","simplecontent":null,"content":"鼻屎黄，提示鼻腔有炎症可能，如鼻前庭炎，鼻窦炎，前者多会有长鼻毛处瘙痒或红肿疼痛，后者可以流脓涕或鼻涕倒流，建议耳鼻喉科就诊检查明确。对因治疗，如果是鼻前庭炎，局部生理盐水清洗后涂红霉素软膏或复方木芙蓉鼻涂膏。如果是后者，鼻喷生理盐水冲洗清洁，鼻喷鼻用激素，口服鼻炎颗粒及黏液促排剂\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:55:25","updateTime":"2021-04-27 05:55:25","isExist":null},{"id":1067,"question":"如何立马上手？高效时间，拖沓减少，找到合适资源，及时解决","simplecontent":null,"content":"1、高效利用时间，学会时间管理，从学习经历中消灭假用功，是学习至关重要的第一步。建议在做功课或者学习前，花5分钟列好清单和计划。\n2、设法限制拖沓。即使这些学习高手，他们也承认拖沓是无法战胜的，我们所能做的只能是设法限制拖沓。我们可以学习这些高手的是如果更加有效地执行学习计划。\n3、时间尽可能安排早一些，越早越好，甚至可以提前。很多人经常习惯任务放在晚上，其实晚间时段并不像我们想象那么长，一旦没有完成学习任务，就很容易产生拖到后一天完成的坏习惯。\n4、多做笔记。将一些复杂的问题以及自己认为棘手的问题进行总结归纳。\n5、懂得整理学习资源。整理有用的学习材料，包括自己平时做的笔记。当自己需要什么资料时，都能够轻松找到。\n6、遇到问题及时解决。在学习过程中会遇到源源不断的问题，养成及时解决问题的好习惯非常重要。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:54:53","updateTime":"2021-04-27 05:54:53","isExist":null},{"id":1066,"question":"天眼查能查什么？来源国家工商总局，企业背景调查","simplecontent":null,"content":"目前绝大部分的工商数据都是从国家工商总局的公示数据中提取、整理、更新来的。公示数据不提供官方接口，所有很多数据分析的工作无法直接进行，要汇总整理编辑再利用。\n从数据的应用场景上看：\n主要在TO B 企业服务公司，产业链上下游公司，企业背景调查，企业客户获取。\n财税服务，知识产权服务，外贸企业，货物批发等等众多场景。\n\n从数据获取的API方面：\n中科银谷可以提供。历史全量数据+增量，1.6亿工商注册数据，每周更新一次。可以按照CSV，Jason等API交付，同时提供数据库交付+独立部署，时现与现有系统平台、APP、内部系统进行集成与数据交换。全网最低。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:54:45","updateTime":"2021-04-27 05:54:45","isExist":null},{"id":1064,"question":"深圳无域科技技术有限公司？技术服务","simplecontent":null,"content":"计算机软件、信息系统软件的开发、销售；信息系统设计、集成、运行维护；信息技术咨询；集成电路设计、研发。 网络技术开发、技术转让、技术咨询、技术服务：计算机系统集成及运行维护；征信评级系统的设计与技术研发（不含个人征信查询）；计算机软硬件的技术开发与销售；市场调查；会议服务；展览展示策划；数据处理及存储服务；从事广告业务；电子商务软件的技术开发；经营电子商务；投资兴办实业；（具体项目另行申报）；计算机网络技术开发；计算机信息系统、云存储、云计算、物联网的技术研发、技术咨询、技术转让与技术服务；数据库服务；科技产品的技术开发与销售；从事担保业务（不含融资性担保寄其他限制项目）。信息咨询（不含限制项目）；信息传输、软件和信息技术服务。，许可经营项目是：经营电信业务；增值电信业务","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:54:28","updateTime":"2021-04-27 05:54:28","isExist":null},{"id":1062,"question":"长痘期间可以多吃的？","simplecontent":null,"content":"1. 多吃蛋白质食物：豆浆、牛肉、坚果、黄豆、黑豆等。\n因为蛋白质可以维持皮肤毛囊通畅、毛孔不堵塞。\n2. 多吃膳食纤维食物:麦麸。玉米、糙米大豆、燕麦、荞麦、菱白、芹菜、冬瓜、黄瓜、苦瓜等蔬菜粗粮。\n因为膳食纤维能减少身体吸收脂肪，对痘痘起到缓解。\n3. 多吃含锌食物：鸡肉（去皮）鸭肉（去皮）生蚝（清蒸）马肉，驴肉、豆腐皮、干豆、麦片等。\n因为维生素A可以促进身体正常代谢。\n4. 多饮用养生茶：\n百香果柠檬茶（美白）\n仰甘蒲公英草茶（祛痘）枸杞山茶\n玫瑰花茶（抗衰老）冬瓜荷叶茶（通便排毒）\n5. 多吃维他命C水果：\n苹果、番茄、梨、葡萄、柠檬、西瓜、柚子、香蕉等。\n因为水果中含有多种维生素及矿物质对皮肤有很大的益处。\n最后，祝还在祛痘路上的宝宝们，一定要坚持住！！耐心恒心还有愉悦的心情也是祛痘的一大关键，千万别让痘这个家伙给得逞，加油！必胜！！\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:54:15","updateTime":"2021-04-27 05:54:15","isExist":null},{"id":1061,"question":"长痘痘忌口？","simplecontent":null,"content":"1. 远离油腻食物：油条、炸鸡、薯条、鸡排、肥肉等。\n因为暗疮源于过食肥甘\n2. 远离辛辣食物：麻辣烫、火锅、辣椒、桂皮、胡椒等。\n因为辛辣温热，引起暗疮复发增长。\n3. 远离咖啡、酒、长痘本身的内分泌就不平衡，酒和咖啡对内分泌有极大影响。\n4. 远离高糖食物：奶茶、蜂蜜、蛋糕、甜品等\n因为甜食会刺激内分泌。\n5．远离高脂食物：核桃、芝麻、花生、油炸食品等，\n因为高脂会加重内热，导致痘痘不消。\n5. 远离冷冻食物：雪糕、冰糕、冰饮等\n因为会刺激内分泌，痘痘不停长。\n7.远离腥发食物：海鳗、海虾、海蟹、带鱼、动物血、牛羊肉等。\n因为这些容易引起皮肤过敏，导致痘痘加重。\n8.远离上火水果：荔枝、芒果、龙眼、大枣、榴莲等。\n这些水果温热容易上火长痘最好不要吃。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:54:04","updateTime":"2021-04-27 05:54:04","isExist":null},{"id":1060,"question":"学历和能力，拥有哪个能笑到最后?","simplecontent":null,"content":"学历决定你的起点，能力决定你的高度，学历能力相辅相成","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:53:54","updateTime":"2021-04-27 05:53:54","isExist":null},{"id":1059,"question":"玩游戏好的人，是否也可以学习学的好？自控力相关","simplecontent":null,"content":"玩游戏受欢迎是因为游戏结果反馈的很快。而且现在主流的游戏都是竞技性的，需要操作，反应，策略，沟通。在很多方面其实是在锻炼人的综合能力的。当然，也有很多人纯粹是为了获得低质量的快感而沉迷游戏，逃避现实。 \n总的来说玩游戏是不影响学习的，只是把消遣选项换了而已。自控力不行的人，就算不玩游戏，也会玩手机，追剧，想办法消磨时间逃避的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:53:46","updateTime":"2021-04-27 05:53:46","isExist":null},{"id":1057,"question":"开了淘宝店做出的一款爆款产品被人抄袭，是不是侵犯了知识产权了，应该怎么维权？外观专利，淘宝维权","simplecontent":null,"content":"外观专利必须做吧，没有，人家觉得好，做也正常\n\n尽快申请外观专利保护，并同时在淘宝平台申请维权。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:53:34","updateTime":"2021-04-27 05:53:34","isExist":null},{"id":1056,"question":"女生大学一个月生活费1500多不？护肤品，去玩，衣服（贵些），生活费","simplecontent":null,"content":"我是女生，现在在云南上大学，正常情况下一个月两千（但我妈偶尔会发一两百的红包且住宿费学费疫苗钱之类的还有往返的机票都是我爸妈出钱），开学第一个月还有双十一，六一八两个月我爸会给我两千五。一个月会出去玩两三次，要买护肤品（大部分还是我妈赞助的）化妆品（上了大学以后不爱化妆了所以除了偶尔买口红以外这部分没啥开销），有时候会买衣服（大学以后扣好多也不咋用生活费买衣服，这学期开学到现在两个月了也就花二百多买了个短袖），我感觉我的钱也就将将够花。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:53:19","updateTime":"2021-04-27 05:53:19","isExist":null},{"id":1055,"question":"是不是现在年轻人不喜欢旅游了?穷，费时间坐车，家人，景点一般","simplecontent":null,"content":"我要是有钱，我也经常去旅游啊，坐飞机，住星级酒店，吃大餐。\n你想告诉我穷游也可以，坐十个小时以上的绿皮火车，住青旅。对不起，这种旅行方式真是太折磨人了，我宁愿不出去旅游。\n况且，年轻人压力大，天天加班工作，好不容易有时间还不如拿来睡觉，去旅游还劳心劳力，不值得。\n我现在只想搞钱，买车买房，以后退休了再到处去旅游。\n第三个原因，家人。如果是单身一人而且很年轻，那么可以说走就走，但是等到年龄大了之后，大多数人都成家立业了，这个时候就要考虑到家人的感受。如果家里人不愿意出去旅行，难道还能自己一个人出去玩吗？想必更多的人还是会选择陪伴在家人身边，这比旅游令人愉悦多了。\n最后一个原因，旅游过的地方太多。旅游就是要观赏没有看过的风景，但是等到观赏过多之后，就发现没有多少值得去的地方了。如果还有其它因素困扰，可能就会放弃出门旅行，毕竟旅游也是要看心情的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:53:09","updateTime":"2021-04-27 05:53:09","isExist":null},{"id":1054,"question":"每天平均使用手机 9 小时会对健康造成什么影响？疲劳，近视","simplecontent":null,"content":"时常对着手机，是现代人习以为常的事情。他们手机不离手，喜欢用手机看小说、玩游戏、刷朋友圈等等。可是您知道吗?这个看起来很潮的智能手机会让您的眼睛离健康越来越远。那么，长时间用手机，对眼睛有一定的危害具体表现如下：\n　　1、玩游戏易得干眼症 　玩游戏时，屏幕上不断闪烁的光影会对眼睛造成持续的刺激，当眼睛不停地捕捉这些光影时，就会使眼睛感到特别疲劳。注意力太过集中，自然眨眼次数大大减少，对眼球表面的泪膜层造成损害，从而加剧眼睛的疲劳和干涩、刺痒等感觉，甚至出现眼睛刺痛、流泪、畏光等不适症状，发生干眼症。\n　　2、易致视疲劳　长时间用眼本身就容易造成视疲劳，聚精会神地盯着手机屏幕时，屏幕上不断变换的光影又会对眼睛造成持续的刺激，当眼睛不停地捕捉这些光影时，就会使眼睛特别疲劳。尤其当周围环境暗，而手机屏幕亮时，对眼的损害尤其大，常次以往就会导致视力下降，近视度数加深等问题。\n　　3、引起眼睛干涩、刺痒　　智能手机一般屏幕大、亮度高，屏幕上集中了太多的资讯，聚精会神地盯着屏幕时，屏幕上不断变换的光影会对眼睛造成持续的刺激，当眼睛不停地捕捉这些光影时，就会对眼球表面的泪膜层造成损害，从而加剧眼睛的疲劳、干涩、刺痒等感觉，甚至使眼睛有刺痛、流泪、畏光等症状出现。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:52:58","updateTime":"2021-04-27 05:52:58","isExist":null},{"id":1053,"question":"女生卸妆要多久？5分钟","simplecontent":null,"content":"卸妆产品不易在皮肤停留太久，建议五分钟内搞定\n第一，看化妆的浓厚程度吧，如果淡妆的话肯定比浓妆时间要短，大概一分钟就搞定了，如果是浓妆，那就要仔细一点，比如眼线，眼影，这些都要卸干净，大概用时也要五分钟的样子吧，而且卸妆棉最好敷在脸部一分钟左右卸妆效果才好，也不是乱擦就可以，所以卸妆是考虑技巧的，最好就是湿敷一下，然后再擦干净，针对不同部位需要不同的卸妆手法。\n第二，看自己用什么产品卸妆，如果用卸妆水的话比较快一点，直接上卸妆棉然后沾上卸妆水湿敷几分钟擦干净，其二就是用卸妆油，需要等卸妆油溶解点妆面再洗掉，用时会长一些，大概7.8分钟的样子。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:52:48","updateTime":"2021-04-27 05:52:48","isExist":null},{"id":1051,"question":"相亲软件推荐下？牵手，珍爱网，百合网","simplecontent":null,"content":"多数都是坑人的，骗子特别多，自行对比。平台有一伴，牵手，珍爱网，百合网","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:52:31","updateTime":"2021-04-27 05:52:31","isExist":null},{"id":1050,"question":"晕车时做什么最有用？吃少，左前面靠窗，闭上眼睛，晕车药","simplecontent":null,"content":"1、别吃得太饱\n乘车前不宜吃得太饱或食用不易消化的食物，可适当吃一些清淡的饮食，避免辛辣、油腻的食物，不要饮酒。行车途中可将新鲜的橘皮放在鼻子下，内折橘皮，吸入其散发出来的油雾，有助于缓解晕车。\n2、选择合适的位置\n容易晕车的人乘坐汽车时尽量选前排位置，如果是双层巴士，最好坐底层。如果是乘坐飞机，尽量选靠近机翼并且靠窗的位置，或尽量靠前的窗边；乘船也宜选择靠前或中间的临水位置。\n3、闭上眼睛，避免低头\n容易晕车的人在乘车时，闭上眼睛或戴上眼罩能减少视觉感受器向小脑传递信息，从而减少感知冲突，避免晕车。也可佩戴视觉辅助设备，如某些眼镜，调查显示，超过90%佩戴类似设备的人认为晕车情况有显著好转。\n此外，还应避免低头看书、玩手机等，保持头部静靠在椅背上，不要随意转动脖子。可以戴上耳机听音乐，这样也能削弱视觉感官，配合闭眼或戴眼罩效果更好。\n4保持空气流通\n调节车内，尤其是靠近自己的通风旋钮，增加面部周围的气流，有助于预防晕车。如果条件允许，也可适当开窗。\n5、转移注意力\n乘车时不要总想着自己会晕车这件事，可以多和周围的人聊聊天，避免心理暗示。\n6、服用晕车药\n旅程较长时，可以科学服用晕车片。\n7、锻炼平衡感\n相比前面的几种方法，锻炼平衡感更有助于从根本上避免晕车的问题，但这只适合日常坚持，不适合临时预防晕车。平时可以适当多做一些荡秋千、沿着地上的细绳走、单双杠、滑冰、游泳、摇头操等运动，在出现严重反应前即停止锻炼。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:52:24","updateTime":"2021-04-27 05:52:24","isExist":null},{"id":1048,"question":"深陷网贷，欠了13万，该怎么办？","simplecontent":null,"content":"1、逾期之后需要承担高额逾期费用。对于逾期费用，很多贷款平台收费的标准各有不同，而且它们的收费标准都是非常高的，有的贷款平台是利滚利，逾期时间越长，罚息就会越多，等你想要还的时候已经还不上了，许多在众鑫玩卡上靠撸口子维生的老哥，可能最开始借的也不多，但逾期不还就让利率翻得很高。2、承受平台的花式催收。贷款平台的催收方式要分这几种阶段进行，首先是在你逾期之后的一周内是以短信或者是邮件比较温柔的方式来催收;对于逾期有一段时间之后，欠款不多的用户就会采取电话催收，等催收没有结果之后，就会针对借款金额大，长期不管的用户采用，该上征信的上征信，然后接着就是对恶意欠款的人，贷款平台会向法院起诉，如果不还不仅会没收个人财产，将失信行为公众与众，说不定以后将会无法再次借款了。3、面临信用危机。很多人可能对网上的一些贷款不是很了解，认为所有网上的贷款是不会上征信的，虽然大部分网贷没有对接央行征信，但是却对接了第三方征信平台，比如芝麻信用，腾讯信用等之类的。这就意味者，如果你在一家平台有逾期的话，第三方平台就会留下你的逾期污点，所以想要后续申请贷款，80%的概率会被拒贷，要是情况严重的话，最后还会成为网贷的黑户老懒。4、逾期严重会被告上法庭。借贷之后长期逾期或者说是故意不还，说不定有被网贷平台告上法庭的危险，一旦法院判定贷款平台的胜诉，那么你除了需要支付还款项之外，还要支付双方诉讼费用和巨额罚款，甚至还要面临牢狱之灾。\n网贷一定违法吗，法院申诉支持吗？可能，使用服务费规避高利息率\n网贷之所以说常见违法主要涉及以下几点违法：第一：利息年化率超过36%。第二：暴力催收违法 第三：信息非法纰漏\n\n网贷本身并不全面违法，国家民法是允许私人借贷存在！所以小编聊下违法的三点情况。\n\n第一：目前很多网贷公司在之前放贷过程中，一般明确利息36%都没有超过，而是另外很大一部分写的是 服务费，信息审核费，风险费，类似其他费用，合同未标明是利息。这就是网贷公司的聪明之处。\n\n第二：暴力催收违法，这就是涉及法律范畴：a、禁止侮辱诽谤客户—《刑法》第二百四十六条规定以暴力或者其他方法公然侮辱他人或者捏造事实诽谤他人，情节严重的，处三年以下有期徒刑、拘役、管制或者剥夺政治权利。根据法律规定，若发生在公然侮辱或者暴力行为是会触犯法律的。若发生捏造的事实也会触犯法律。\n一、要根据合同上的还款，当借了网贷的钱最好是根据合同上还款，不要看APP上的还款金额，这种金额往往是另外加的还款，扣除服务费，算清楚年化借款率是最好的，这是对于网贷平台最大的保障，一直以来借款人不看APP上的还款明细，只知道金额，所以多还款是必然的，不想多还款就要学会！\n二、不要轻信于网贷催收的起诉，根据了解许多催收人员会伪造起诉的信息甚至冒充律师和法官诱导借款人还款，其实这未必是真实存在的情况，当借款人收到信息时而不是要和网贷催收留下的信息进行验证，而是去立案的法院致电了解真实的情况！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:52:05","updateTime":"2021-04-27 05:52:05","isExist":null},{"id":1047,"question":"不想花太多力气打扫屋子了，有没有偷懒的办法？洗碗机，微波炉，扫地机器人","simplecontent":null,"content":"1：洗碗机 （3分）\n2：洗衣机+烘干机 （4.5分）\n3：微波炉 （4.8分）\n4：扫地机器人。（4.2分）","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:51:44","updateTime":"2021-04-27 05:51:44","isExist":null},{"id":1046,"question":"出去旅游，你喜欢独自旅行还是结伴旅行？安全，意见容易一致，出谋划策减压","simplecontent":null,"content":"我觉得旅游最重要的一点就是安全，如果在保证安全的情况下，无论是一个人还是两个人，我觉得都无所谓，只开心就好。一个人有一个人的自由，两个人有两个人的快乐。 你只要和出行的人志同道合，三观相同，我觉得不会有什么大问题，遇着问题大家都互相礼让一下，不要太自私，这样就会避免矛盾。尤其是在花钱方面，一定要平均，哪怕是很少的钱，也要平均，这样会让对方感觉到舒服。\n\n我印象最深的旅行，竟然是一个人去青岛的一次旅行。没有负担，不需要提前规划路线，不需要照顾谁的情绪，也不需要担心自己选的景点别人喜不喜欢，我自己喜欢就好。有手机支架，不担心没人给自己拍照，遇到喜欢的景色可以多呆一会。累了，随时随地的就歇一歇，不用着急忙慌的赶时间。早上可以睡到自然醒，没有人唠叨。吃饭的时候不用照顾别人的口味，我自己特意去吃了海底捞一人火锅，果然小姐姐问需不需要玩偶陪伴，被我婉拒了。\n如果一个人旅行的话，还是要到人员相对密集的城市比较好，会少去很多麻烦。如果是资深旅行者的话，那大佬，求出书哈哈哈。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:51:32","updateTime":"2021-04-27 05:51:32","isExist":null},{"id":1045,"question":"为什么谈恋爱时间长的就越不容易结婚，同居以后还会对结婚有期待吗？没感觉，矛盾积累","simplecontent":null,"content":"其实我也不知道，只是我有时候也会想这个问题，为什么会有七年之痒的说法，为什么谈的越久也不容易结婚，我感觉是由于对对方太过熟悉了，在生活中的矛盾积累，旧事重提等等，会逐渐发现自己对对方的包容性越小，可能换个人就不会因为同样的事情生气，觉得太过于熟悉怎么还会这样呢，其实归根到底是自己的原因，是因为自己对对方要求变高了，或者说容忍度更小了，一件很普通的小事，如果放在当初才谈恋爱那会，根本不是问题，然而现在，谈了五六年了会发现因为一个小问题纠结，生闷气不想理对方，将来还有好多好多事，现在一个小问题就足以让你筋疲力竭，你说对以后还有什么幻想呢？另外，到了该结婚的时候却还在拖着，十有八九都不会结婚，这是听别人讲的，感觉也挺对的，物质基础都有了，没有什么担忧的了，却不想结婚，也没有年轻时候的那个冲动劲，想想就觉得可怕，这样的感情结了婚又会变成什么样了呢？","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:51:19","updateTime":"2021-04-27 05:51:19","isExist":null},{"id":1043,"question":"你们认同「旅游趁年轻」吗？（年轻体力好）","simplecontent":null,"content":"我觉得旅游就好像读书一样，什么时候都不晚，什么时候都不早。\n年轻时候会有更好的体力，更大的胆量，更多的空闲时间；年纪稍长之后会有更好的财富积累，更成熟的旅游资源，甚至更加契合的旅行伙伴。\n在不同的年龄，去相同的地方，也可能有完全不同的感受和收获，所以想玩就去玩呗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:50:51","updateTime":"2021-04-27 05:50:51","isExist":null},{"id":1042,"question":"一个27岁没文凭，想去努力自学编程，有机会成为程序员吗？学习web前端更容易，先外包学习下","simplecontent":null,"content":"如果有一个好的平台，付你一把，应该会好很多。\n去各大教育视频网站，白嫖基础的视频，这些视频大多数都是免费的，在看之前先看看这个老师的知名度，找一些反馈好的教师的课程听，然后，跟着做题目，做项目。注意，这个阶段是最重要的，因为，这是基础，基础打好了，后面学习就会简单一些。\n关注各大招聘网站，看下近期什么职位需求是最多的，从基础的开始找，别好高鹜远。总结分析招聘需求，查漏补缺。\n投递简历，海投，然后，找一份适合自己的工作。锻炼个两年年的，在这之中确定好未来的发展路线，不断的给自己充电。\n下面是我个人的一些学习大数据的总结，对于学习大数据的可以一起交流学习\n27岁，没文凭，才开始学编程，没有任何优势，如果实在要学，那我建议你直接选择web前端\n前端市场鱼龙混杂，学到什么程度都能有相应的工作岗位\n你只会htmlcssjs你也能找到小公司的开发岗，（前提是学到能开发网页）\n三大框架vue React Angular，你会一个，那找工作应该没问题了，唯一的问题可能就是根据能力薪资的高低而已\n实在不行，你学点html基础，钻进小程序里，把小程序玩6了，也可以在一家外包公司长期稳定的工作\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:50:41","updateTime":"2021-04-27 05:50:41","isExist":null},{"id":1041,"question":"在一个大城市里没有朋友是一种什么样的体验?生活时间不同朋友就少","simplecontent":null,"content":"在一个自己不熟的城市，朋友应该会有，但是交心的朋友真的难遇。志同道合更是难上加难。\n因为进入社会之后再也不会像在学校一样，大家的生活作息时间几乎都是同步的。可以吃饭一起，学习一起，回家一起，出去玩一起。在大城市里，毕业之后脱离了学校。你可能连一个一起吃饭的人都找不到。因为你不忙的时候别人未必会有空。有时候可能你想请别人吃饭，还要等他下班。这其实都是很现实的事情，因为俩人的生活早就不同步了。\n而且进入社会后，会遇到形形色色的人。有时候你想真心对她，但是人家未必会真心对你。确实这个世界上，只有你爸妈才是真心对你好，也是真心希望你好的人。当然也不排除会有内心特别善良的人。\n人慢慢长大后，很多东西都看淡了。再也不会像小时候，跟好朋友吵架，心里都会难受好几天。总是怕失去这个好朋友。现在真的再也不会了。\n你来，不管多远我都会去接你。你走，我也不会卑躬屈膝的挽留你。这大概是现在很多年轻人的内心独白吧。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:50:28","updateTime":"2021-04-27 05:50:28","isExist":null},{"id":1039,"question":"不看手机可以干什么?休息，学习，逛街","simplecontent":null,"content":"不看手机可以干很多的事情，反倒是因为看手机，导致了人干不了很多事。玩手机真的会叫人上瘾，是人沉迷其中，难以自拔。哪怕不玩游戏，拿起手机也会这里看看，那里点点。根本停不下来，时间一下子就被浪费，而该做的事情却被耽搁了\n\n不看手机的话其实可以干很多事情的，比如选一个阳光不错的午后，在自己所在的城市，徒步或者骑一下自行车，随便走走或者骑骑车，不要以为自己所在的城市很了解了，就是随意随心的走你就会发现这座城市其实没有你自己想的那么熟悉；\n想走哪里就走哪里，不设目地的，不设时间，会看到很多以前没有看到的东西，累了就在旁边休息，感觉休息好了继续走，留心观察生活观察路人观察环境慢慢你发现会特别有意思，会发现原来自己忽略了这么多生活的美好。\n下班之后不玩手机，坐车的时候可以在车上休息一下，也可以看看周围的景色，生活中的美在于发现。也可以去适当运动，打打球，或者慢跑一下（慢跑的时候是大脑思路活跃的时候，可以思考平常思考不到的）毕竟健康也很重要，如果累了，泡杯茶或者咖啡，坐着看看书，自己感兴趣的或者觉得有趣的书都可以啦，饿了路上变走变找吃的，发现路上的乐趣。经常低头看手机很容易忽略其他的，也对自己安全还有身体健康不利，最主要的是你体验不到时间的流逝。其实这样也是充实的一天，也是我个人的一个生活习惯，希望能分享给你并帮助到你。不管怎么样，开心最重要。1，可以去运动运动，比玩手机要健康，起码不伤眼睛，还对身体有好处，但是要注意空气质量，空气污染严重的情况下不推荐运动。2，可以去看些书，多读书能丰富自己的内心，有利于调整自己的心态，以及改变对一些事物的看法，了解更多的人生哲理。3，可以约朋友出去玩玩，特别是老朋友，长久的友谊是要不断联系才能维持的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:50:04","updateTime":"2021-04-27 05:50:04","isExist":null},{"id":1038,"question":"献血有什么好处？（亲属可以免费用，小礼品）","simplecontent":null,"content":"我妈妈就在血液中心工作。 献血以后会发给你一个献血证，上面有你的血型，还是献血量（毫升）。还会给你一些记念品。 献血对身体很好的。鼓励你去。而且如果以后你或者你的直系亲属需要用血，你可以凭你的献血证免费用一定量的血液。如你献了200cc那么你可以免费使用200cc的血。能节约差不多四百多块吧。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:49:51","updateTime":"2021-04-27 05:49:51","isExist":null},{"id":1037,"question":"城市里买地皮可以吗？不可以了，买的只是房子，不是土地","simplecontent":null,"content":"在在城市里面，已经不允许个人购买地皮了。\n土地的出让必须遵循“招标，拍卖，挂牌”的程序，如果你想自己买地建造住房，可以去竞争购买土地的使用权。然后审批建房许可证，到城建、规划部门审批备案。\n\n城市的土地属于国家所有，国家拥有的是所有权，你在城市买的房子属于使用权，一般属于70年使用权。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:49:27","updateTime":"2021-04-27 05:49:27","isExist":null},{"id":1036,"question":"农村宅基地的买卖是否可以？","simplecontent":null,"content":"我国农村宅基地的买卖是被允许的，但又有诸多的限制条件\n\n1、宅基地使用权不得单独转让，有下列转让情况之一，应认定无效：\n（1）城镇居民购买；\n（2）法人或其他组织购买；\n（3）转让人未经集体组织批准；\n（4）向集体组织成员以外的人转让；\n（5）受让人已有住房，不符合宅基地分配条件。\n\n2、宅基地使用权的转让必须同时具备以下条件：\n（1）转让人拥有二处以上的农村住房（含宅基地）；\n（2）同一集体经济组织内部成员转让；\n（3）受让人没有住房和宅基地，符合宅基地使用权分配条件；\n（4）转让行为征得集体组织同意；\n（5）宅基地使用权不得单独转让，地随房一并转让。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:46:31","updateTime":"2021-04-27 05:46:31","isExist":null},{"id":1034,"question":"城镇宅基地和农村宅基地有什么本质区别","simplecontent":null,"content":"没有什么本质区别。作用都是用建房子的，如果没有宅基地，你任意在一块地上建房子，有关部门可以说你违建，想拆就拆，无无门可诉。在宅基地上建房子，可以交易的，其他就不能，宅基地相当于你拥有这块地建房子的使用权。\n区别（不是本质区别）就是：城镇宅基地卖的价很高，而农村的宅基地卖不出价格。城市1000一个平方，农村可能只有几十一个平方。 你没有给分","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:44:46","updateTime":"2021-04-27 05:44:46","isExist":null},{"id":1033,"question":"农村的宅基地没有建房，拆迁会补贴吗？（超过2年被收回，不会补贴）","simplecontent":null,"content":"宅基地都是免费给的，但是必须有房子，如果宅基地上面没有房子，超过两年自然就被收回村集体","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:43:24","updateTime":"2021-04-27 05:43:24","isExist":null},{"id":1032,"question":"年纪大了没有遇到真爱会结婚吗？（稳定真爱，合得来，避免被说）","simplecontent":null,"content":"1.稳定干净的性伴侣。\n2.对于合得来的人，即使没有爱情也可以拥有一份稳定且舒适的男女友谊。\n当闺蜜有了家庭，当哥们有了老婆，你会知道有这样一份“绑定级”男女情谊是多么难得。\n3.减少一个人吃火锅，一个人看电影，最重要是一个人去医院的看病的几率。\n4.让你活得像这个世界所有平常人一样，不用忍受七大姑八大姨邻居同事们一轮又一轮的猜测和讨论。\n例如：\n女生不结婚，他们可能会说你眼光太挑，心比天高。\n男生不结婚，他们可能会认为你那方面不行，是不是喜欢男的？\n5.半夜被噩梦惊醒的时候，你不会再脑补另一个卧室住着“阿飘”。\n6.因为不爱，所以没有期待，因为没有期待也就不会有落差和难过。\n7.如果可以，想哭的时候不用打10086。\n8.如果可以，可以要个小孩。\n“我没体会过爱情，却仍愿给你所有其他形式的爱。”\n9.如果分开了，也不会哭的吧。\n10.父母总跟我们说前半句“人总要结婚的”，但他们忘了告诉我们后半句：“没有爱情也可以”。\n人们总是一边把爱情捧上圣洁的神坛，一边把爱情贬低得随处可见。\n我们多数人可以在恋爱里享受短暂的“爱情”，却无法在岁月的消磨中获得长久的真爱。\n有人一出场就喜获一生一世一双人，有人一开口一见面就是注孤生。\n有人跌跌撞撞寻找谈了无数次恋爱、落下几公斤眼泪，才发现找到的都不是爱情。\n不过是性、依赖，还有各式各样的贪图。\n有人在祝福里礼炮里鲜花里和喜极而泣的眼泪里结了婚，没过几年才发现你的生活一地鸡毛，你爱的他面目可憎。\n我们最后恍然大悟，原来月老的红线并不多。\n牵到我们身上的不是红线，多数是代表一时情欲的橙红线。\n我们当然可以与一时情欲相恋，但要记得和一个人的性情、人品结婚。\n情欲会消散，激情会褪色，对方的人品性情才决定了下半生的婚姻质量。\n如果真的要结婚，如果对方也同意；\n如果对方性情、人品也不错；\n如果到了35岁遇不上我的真爱，选择这样的生活也不错吧？","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:43:11","updateTime":"2021-04-27 05:43:11","isExist":null},{"id":1030,"question":"公司可以监控员工手机哪些记录？（a:上网记录  b:聊天记录不会）","simplecontent":null,"content":"使用公司WiFi上网是完全可以会被监控的。你的员工账号，用的什么设备，Mac，访问的什么网址这类的都能被监控，但是QQ，微信等聊天记录是不会被监控到的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:42:21","updateTime":"2021-04-27 05:42:21","isExist":null},{"id":1029,"question":"数罪并罚犯罪不超过多少年？25","simplecontent":null,"content":"2、数罪并罚的有期徒刑最高不能超过二十五年。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:42:12","updateTime":"2021-04-27 05:42:12","isExist":null},{"id":1028,"question":"一罪一罚犯罪不超过多少年？六个月以上十五年","simplecontent":null,"content":" 1、一罪一罚的有期徒刑为六个月以上十五年以下。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:42:05","updateTime":"2021-04-27 05:42:05","isExist":null},{"id":1027,"question":"海澜之家的衣服如何？老化","simplecontent":null,"content":"大家对海澜之家的印象还停留在以前的老旧丑阶段，但自从19年开始，海澜之家的款式逐渐年轻化，还请了林更新和周杰伦来代言。现在的海澜之家真的不只是老年化的定位，里面衣服的款式都很齐全，衬衫，西装，基础款T恤，休闲裤都有，身边很多年轻小伙都喜欢买它。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:41:57","updateTime":"2021-04-27 05:41:57","isExist":null},{"id":1026,"question":"嵩山在哪里？河南","simplecontent":null,"content":"海拔1491.71米，位于河南省郑州市登封市","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:41:37","updateTime":"2021-04-27 05:41:37","isExist":null},{"id":1025,"question":"南岳衡山在哪里？湖南","simplecontent":null,"content":"位于湖南省衡阳市南岳区","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:41:10","updateTime":"2021-04-27 05:41:10","isExist":null},{"id":1024,"question":"华山在哪里？陕西","simplecontent":null,"content":"西岳华山（海拔2154.9米，位于陕西省渭南市华阴市）","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:40:52","updateTime":"2021-04-27 05:40:52","isExist":null},{"id":1023,"question":"五岳指的是什么？（泰山，华山，衡山，恒山，嵩山）","simplecontent":null,"content":"指东岳泰山、西岳华山、南岳衡山、北岳恒山和中岳嵩山，是我国历史上的五大名山。\n五岳指：东岳泰山（海拔1545米，位于山东省泰安市泰山区）、西岳华山（海拔2154.9米，位于陕西省渭南市华阴市）、南岳衡山（海拔1300.2米，位于湖南省衡阳市南岳区）。\n北岳恒山（海拔2016.1米，位于山西省大同市浑源县）、中岳嵩山（海拔1491.71米，位于河南省郑州市登封市）。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:40:23","updateTime":"2021-04-27 05:40:23","isExist":null},{"id":1022,"question":"泰山在哪里？山东，五岳之首","simplecontent":null,"content":"泰安位于山东省泰安市，，有“五岳之首”、“五岳之长”、五岳之尊、“天下第一山”之称","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:39:09","updateTime":"2021-04-27 05:39:09","isExist":null},{"id":1019,"question":"深圳网红景点有哪些？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:38:48","updateTime":"2021-04-27 05:38:48","isExist":null},{"id":1018,"question":"深圳五一如何玩？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:38:47","updateTime":"2021-04-27 05:38:47","isExist":null},{"id":1017,"question":"开发程序搞笑的事情？规范代码无法运行","simplecontent":null,"content":"不规范的代码能运行，规范的运行不了","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:38:29","updateTime":"2021-04-27 05:38:29","isExist":null},{"id":1016,"question":"是不是制造困难才更容易激发人去学习？","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:38:20","updateTime":"2021-04-27 05:38:20","isExist":null},{"id":1015,"question":"五一靠前的景点？上海迪士尼，兵马俑，长隆，大熊猫，张家界，鼓浪屿","simplecontent":null,"content":"上海迪士尼度假区、秦始皇帝陵博物院(兵马俑)、广州长隆野生动物世界、珠海长隆海洋王国、成都大熊猫繁育研究基地、北海涠洲岛、洛阳龙门石窟、张家界国家森林公园、鼓浪屿和横店影视城","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:38:13","updateTime":"2021-04-27 05:38:13","isExist":null},{"id":1014,"question":"五一的票什么时候可以买？4月17","simplecontent":null,"content":"4月30日的车票4月16日起开售，“五一”当天的车票则从4月17日起开售。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:37:55","updateTime":"2021-04-27 05:37:55","isExist":null},{"id":1013,"question":"12306抢五一的票却奔溃的哪些现象？付款失败，无法登陆，验证码无法收到","simplecontent":null,"content":"五一火车票今日开抢！12306却“提前”崩溃 网友：我想回家啊！出行人次或达2亿\n12306的App频出状况，存在接收不到验证码、提交订单失败等问题，还有很多用户根本无法登录。\n4月30日的车票4月16日起开售，“五一”当天的车票则从4月17日起开售。\n　　可能由于大量用户访问，4月16日一早，12306网站和App又不出意外双双崩了。“12306崩了”的话题一度冲上热搜。\n有的人刷了半天都加载不出页面，有人侥幸抢到了票但因为系统卡顿无法付款，一加载票就直接没了，还有人想要买候补，页面一直温馨提示“您的请求过于频繁，请稍后再试”。不少人在社交媒体哭诉：回趟家实在太难了！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:37:29","updateTime":"2021-04-27 05:37:29","isExist":null},{"id":1011,"question":"thinkbook14键盘不好用？不好用","simplecontent":null,"content":"垃圾的键盘设计和垃圾的平板功能，打字上下页还需要利用Fn组合键，如果涉及到到3个组合键，你会发现个别情况没法用，少了4个不常用按键，不常用但是也是有需求啊。回车键较烂，距离\\按键距离太近。触摸板左右按键边框不严。平板功能就是一个楦头，实际效果啥用都没有，不是触摸屏幕，你的平板属性能干个鸡毛。\n\n5、电池垃圾，续航能力差，45Whr,续航时间一般为2-3小时。个别联想商家竟然宣传2-5小时，这水分比毛巾被水泡过还大，普通充电模式充电时间长。移动性强的不建议购买。\n\n6、价格对不起这个机型，官方最低售价4399，甚至还不如E系列。客服介绍开个人发票主要部件保修2年，可实际查询保修只有1年。保修时间短。注意保修时间为1年。电子产品各种问题很玄学，白白少1年，到时候你就各种后悔吧。官方客服的各种忽悠，联想的可靠性有待商榷。\n\n7、使用效果一般，综合评价，该机型性价比较低。最高报价官方竟然能到4999，不知道哪来的自信。如果不想上当，该机器除了颜值普通，没有一点优点。谨慎购买，建议选购其他机型。总而言之，不划算，不划算。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:36:49","updateTime":"2021-04-27 05:36:49","isExist":null},{"id":1010,"question":"什么材料容易粘毛？黑色棉质，灯芯绒","simplecontent":null,"content":"黑色裤子粘毛属于正常的现象,比如一般黑色棉质或灯芯绒休闲裤是比较易粘毛的,所以针对 粘毛现象,无法从根本解决,但可以用一些简单易行的小妙招即时解决。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:36:21","updateTime":"2021-04-27 05:36:21","isExist":null},{"id":1009,"question":"为什么裤子容易粘毛？表面有一层细密的绒毛，干燥静电感应","simplecontent":null,"content":"跟材质有关，跟颜色无关。\n表面有绒毛的天然材质是最容易粘毛的，不论棉或者羊毛，它表面的绒毛越细越柔软，越容易粘毛。棉平绒和羊绒都是最容易粘毛的面料。\n所以你的黑裤子应该是表面有一层细密的绒毛，加上秋冬天气干燥，因为静电感应，粘毛是正常的，这种面料就是需要多打理。有专门的去毛刷，也可以图方便，用大号的透明胶带轻轻一粘，就把毛带走了。如果你不打算换裤子的话，这个步骤要经常做，不能省。\n所以不粘毛的黑裤子肯定有，比如秋冬常见的灯芯绒，骑兵斜。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:36:00","updateTime":"2021-04-27 05:36:00","isExist":null},{"id":1008,"question":"裤子容易粘毛怎么处理？胶带，粘毛器，湿润毛巾或海绵","simplecontent":null,"content":"1、宽胶带：将胶带反过来绕一圈，把手套在衣服上面转圈圈，这样衣服上面的毛就会被粘在胶带上面，衣服上的毛就被处理了。\n\n2、粘毛器：超市有专门的粘毛器购买，成滚筒状，价格也只需10元左右，使用起来特别方便。当黑色裤子上粘毛后，只需在裤子粘毛部位，来回滚上两下就焕然如新了。\n\n3、湿润毛巾或海绵：裤子粘上毛和灰层，多是静电吸附引起，这时可以用湿毛巾(以手拧不出水为宜，太湿反而让灰层深入裤子中)轻轻擦拭，这样黑色裤子上的粘毛和灰层，就被尽数吸附到毛巾上了，如果擦后裤子较湿润，再将其凉挂一段时间即可。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-27 05:34:55","updateTime":"2021-04-27 05:34:55","isExist":null},{"id":1007,"question":"蹲厕所太久脚痛原因","simplecontent":null,"content":",这是因为下肢血液循环不畅通造成的。\n主要原因：\n1、由于下蹲时血液流通不好，造成下肢缺氧，引起麻木，而此时由于下蹲使下肢处于紧张状态，神经受到压迫，对麻木不容易察觉，站立后神经恢复敏感从而感知麻木。\n2、下蹲时下肢折叠，阻碍静脉回血，而动脉血压较高，导致静脉处于高压环境之下。这种对神经的刺激时间长了会产生一种滞留现象，就是去除导致刺激的因素后，神经仍然保持对该种刺激的反应，甚至产生反向的过激反应。从而产生麻木。\n大家都知道血液有一个很重要的作用就是输送氧。暗红色的缺氧的血液回到右心房后会到右心室，然后到达肺动脉。血液通过肺动脉进入了肺，肺里面有很多肺泡，肺泡上有许多毛细血管，我们呼吸进去的空气就到了肺泡上，氧气跟血液中的红细胞结合了，血液中的二氧化碳排出到空气里，肺泡里的空气中氧气已经与红细胞结合了，取而代之的是二氧化碳，所以我们吸入氧气呼出二氧化碳。血液中携带了氧气后，随着肺静脉回到了左心房，然后去了左心室，这时因为氧气充足血液已经变成鲜红色的了。富含氧气的血液通过大动脉通往全身各处。如果血液不能充足的到达身体某处，这个部位就会局部缺氧，就会感到发麻。就像我们蹲得太久了，突然站起来，脚会感到很麻，因为下肢血管恢复畅通，这时就像猛然打开了闸门，血液就会大量地往下肢涌去，这样一来头部就显得血不够用了，大脑一时得不到充足的氧气和营养的供应，大部分人会出现头晕、心跳加速的现象，此外，由于头部血液减少，眼球内的供血自然也少一些，这样你就会发生眼花缭乱、金星乱冒的现象。 等身体适应过来后，这种现象又很快会消失。\n而贫血、低血糖会加重此现象。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 23:16:44","updateTime":"2021-04-26 23:16:44","isExist":null},{"id":1006,"question":"虾仁炒蛋如何做","simplecontent":null,"content":"基围虾500克、鸡蛋5个、生姜、小葱\n\n4、先把小葱切末，生姜切片，然后把基围虾从第三节虾节处挑去虾线，再剥去虾壳\n\n5、然后洗干净控干水分，腌制下：先放入两克食盐，再加入姜片、料酒去腥，然后用手抓匀，腌制20分钟，放入淀粉抓匀\n\n6、再把五个鸡蛋打入碗中，再加入两克食盐，搅匀备用\n\n7、然后把腌制好的虾仁挑出。热锅倒油，再放入虾仁翻炒变色，然后放入少许料酒去腥。再倒入鸡蛋液，用锅铲慢慢往锅中间推，尽量不要把鸡蛋液炒碎，等蛋液凝固时马上关火。这样一盘非常鲜美嫩滑的虾仁炒蛋就做好了","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 23:13:49","updateTime":"2021-04-26 23:13:49","isExist":null},{"id":1005,"question":"公司偷偷搞了带薪拉屎榜","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:17:42","updateTime":"2021-04-26 22:17:42","isExist":null},{"id":1004,"question":"2021-4-27印度疫情如何","simplecontent":null,"content":"由于我们国家疫情控制的很好，很多人现在都已经不太关注疫情了，但是就在这个时候，有一个国家的疫情彻底失控了，那就是作为世界人口第二大国的“印度”。如果说美国冬天时的疫情就是人间地狱，那么印度现在的情况就是18层地狱了！\n\n \n一、印度疫情失控到什么程度？\n\n数据显示截至当地时间4月24日，在过去24小时内，印度新增新冠肺炎确诊病例超过了34万例，马上就向35万迈进了。累计确诊病例超过1600万例，单日死亡人数2624例，累计死亡人数将近19万例。\n\n \n这已经是印度连续第三天单日新增确诊病例数超过30万例，同时也再次刷新印度疫情暴发以来单日最高新增纪录和全球单日单个国家新增病例的最高纪录。而且这还是在统计不完整的情况下。\n\n \n由于火葬场里，燃气炉和柴火炉因为运转时间太长，导致金属零件开始熔化，火葬场的火葬炉都烧坏了。死亡人数太多，印度火葬场陷入瘫痪，大规模的尸体面临处理困难，印度则直接扩大了露天火葬场，然而却依然需要排队。所以说：“把印度现在的情况比喻成18层地狱，简直是有过之而无不及”！\n\n \n二、印度疫情是如何发展到今天这个地步的？\n\n印度之前的疫情全是靠隐瞒和盖着的，因为大量的感染者是无症状感染者，所以看起来印度的确诊率和死亡率并不是那么高。然而，经过这一年多的时间，无论是印度还是全世界，新冠病毒都出现了大规模的变异，很可能现在的变异病毒已经有几百上千种了。根据印度现在的情况来看，变异病毒最可怕的是传染性更强，感染后症状更加严重，死亡病例也更多。去年可以装鸵鸟当作看不见，今年装不下去了，所以印度不得不被迫面对。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:14:06","updateTime":"2021-04-26 22:14:06","isExist":null},{"id":1003,"question":"前列腺疾病是如何","simplecontent":null,"content":"病情分析：前列腺疾病是男性群体的高发病之一。最常见的前列腺疾病有：前列腺炎、前列腺增生。前列腺疾病患者多表现为尿频、尿急、尿痛，有些前列腺增生患者，还会出现夜间增多、排尿不畅等症状。\n2020-07-21","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:10:33","updateTime":"2021-04-26 22:10:33","isExist":null},{"id":1002,"question":"前列腺病有什么症状","simplecontent":null,"content":"前列腺疾病主要的症状就可以导致患者出现前列腺部位的疼痛，酸胀等不适症状。其次也可以引起患者出现排尿困难，甚至会导致尿尿后出现尿道口滴白的情况，这些都有可能是由于前列腺疾病而造成的。建议患者一定要及时的到医院进行前列腺的B超检查，必要的时候可以穿刺切取少量的病变组织作病理学的检测，可以明确具体的诊断明确之后，则应该在医生的指导下选择合适的治疗方案进行治疗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:09:57","updateTime":"2021-04-26 22:09:57","isExist":null},{"id":1001,"question":"前列腺在哪里","simplecontent":null,"content":"一般来说，男性前列腺位于尿道后方，上面有射精管的开口，精囊中储存的精液在性冲动的作用下，通过射精管、前列腺部位的开口，进入尿道后射出体外。前列腺有一定的控尿和分泌的功能，其外形酷似栗子，质地韧，横径4厘米，前后径2厘米，垂直径3厘米。中间有一纵行前沟，是中央沟，当前列腺增生时，前列腺中央沟就会变浅消失。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:08:47","updateTime":"2021-04-26 22:08:47","isExist":null},{"id":1000,"question":"特斯拉车问题","simplecontent":null,"content":"最近的上海车展的特斯拉展位现场，一位身穿“刹车失灵”T恤的女士站在特斯拉展车车顶维权，高声呼喊“刹车失灵”。因行为过激，该女士被现场保安“请”走，该事件的影像也迅速在网络上传播。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:06:57","updateTime":"2021-04-26 22:06:57","isExist":null},{"id":999,"question":"特斯拉车","simplecontent":null,"content":"特斯拉是特斯拉（Tesla）牌的汽车。特斯拉（Tesla）是一家美国电动车及能源公司，特斯拉主要生产和销售电动车、太阳能板及储能设备。创始人将公司命名为“特斯拉”，以纪念物理学家尼古拉·特斯拉。2010年6月，特斯拉在纳斯达克上市。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 22:04:47","updateTime":"2021-04-26 22:04:47","isExist":null},{"id":998,"question":"小孩子学弹琴，跳舞有用吗","simplecontent":null,"content":"工作方面不一定用的上，但是可以增加你的气质让人提高自信，气质这东西一旦散发出去让人在生活中很受益，\n\n有用啊 大学课余时间出去教个琴 比普通学生可宽裕多了\n\n学音乐的过程中所锻炼的品质和能力是伴随一生的 比如专注力 毅力 耐心 打磨一个技艺需要的品质可以学习其它技艺 很多学霸都是多才多艺的 这是有原因的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 21:57:23","updateTime":"2021-04-26 21:57:23","isExist":null},{"id":997,"question":"男士洗发水","simplecontent":null,"content":"\n口碑好的5款男士洗发水推荐，洗完清爽不油腻，你在用吗？\n头发油腻，头皮发痒有头屑一直困扰着很多人，尤其是到天热的时候，早上洗完头，下午变成大油头，加上头屑，整个人看起来脏兮兮的今天就来分享5款男士洗发水，洗完清爽不油腻，真的超好用！\n\n遇见香芬男士洗发水\n国产洗发水中的黑马，采用的是氨基酸+皂基复配，保证清洁力的同时又不会刺激皮肤。气泡速度很快，洗得也很干净，洗完头发非常的蓬松。重要的是香味很好闻，经典的木质古龙香，闻着超级舒服。去屑成分采用的是最新的乙眯定，温和无刺激，可以有效地杀灭对头皮有害的真菌（如马拉色菌）。适合头屑较多、头比较油的人群使用。\n\n资生堂洗护\n含有蜂王浆的一款产品，可以深入渗透至损伤发丝补水保湿，PCA成分可以很好的修护头皮，不是那种工业香，也不会很油腻。蓝色的大瓶子装我感觉还是很清新的，价格也很便宜大碗，完全不用担心费洗发水。\n\n潘婷排浊赋能洗发水\n潘婷的这款排浊赋能洗发水是专门针对头皮油、头发塌人群定制的，很适合夏天啦，先把头皮内的浊质排出，再滋养头发，营养秒吸收配方温和，主打无硅油，适合发质较软的油头使用。\n\n欧莱雅男士去屑洗发水\n去屑、止痒、清爽，样样都还凑活。对一些功效没有太高要求的可以入。闻着味道非常不错。但即便有明星代言的加持，各项宣称的功能却都表现中等。可以说是班级的中等生了。而且含有水杨酸，宣传说是为抗真菌而设计，但不具有明显的抗真菌功效。\n\n阿迪达斯男士控油劲爽去屑洗发露\n可深层进入毛囊，达到彻底清除污垢的效果，使得油脂与头皮屑统统被赶走，而且还能抑制油脂的分泌，控制油脂的正常，防止皮脂在毛囊内堆积，从而减轻头皮压力。\n\n欧莱雅男士洗发水炭爽控油去屑无硅油洗发水露套装止痒深层清洁 欧莱雅 男士去屑洗发露(炭爽去油) 200ml\n\n\n\n\n男士用的洗发水品牌很多，但是大多是近年来才开发出的，比较好的就是沙宣。\n　男士头皮和发质和女性不一样，所有在洗发护发产品挑选上同样应该选择针对男士的洗发水，一起来看下哪些洗发水最受欢迎，让你在男士洗发水排行榜中也能找到适合自己的洗发水。\n男士洗发水排行榜1 O LONDON檀香洗发露\n产品特色：古朴的中式木香适合男士使用，内含洁净无污染的流湾海水、盐份特别丰富，具特强的杀菌及洁净功能;檀香、橄榄果油能滋养头皮，修复受损发质。该产品中添加的96种再生矿物质，能活化细胞，有益于肌肤呼吸系统及滋润干燥肌肤，更能镇静受刺激、红棕及干燥肌肤，缓和过敏现象。\n　男士洗发水排行榜2：沙宣专业尊贵养护系列清衡水润洗发露\n产品特色：能彻底清洁秀发，应用全新轻质感平衡清洁配方，其中的超微细乳化清洁粒子，乳化更稳定富含更细腻的泡沫，仿佛秀发的卸妆水，能够高效剥离发丝表面的污垢和造型品残留，是喜欢用定型产品的男生必备的一款洗发水，并且可以长时间包裹发丝，防止污垢再次沉积，让秀发清爽莹润，释放逆重潜力。\n　男士洗发水排行榜3：娜莎迪珍珠洗发水\n产品特色：针对男士容易出油的头发困扰，这款洗发水中的小颗粒含水解大豆蛋白活性成分，可以在按摩过程中被释放，能够有控制和改善皮脂分泌过旺，在彻底清洗头发、头皮的同时能够舒缓头皮发炎的症状。洋甘菊和甘草根有镇静作用，能消炎止痒、稳定油脂的分泌量，平衡油性头皮。\n男士洗发水排行榜4：DHC头皮洁净洗发液\n产品特色：含DHC独有成分，有效抑制瘙痒，护理出健康发质，添加玉米由来的低刺激洗净成分和天然椰油为原料制成的洗净成分。尽可能减少洗发给秀发造成的负担。橘子、酸橙、柠檬等柑橘类与薄荷、桉树等精油，以及玫瑰、铃兰的花香调和在一起，散发出宜人的天然橙香。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 18:57:44","updateTime":"2021-04-26 18:57:44","isExist":null},{"id":996,"question":"如何记住车标","simplecontent":null,"content":"保时捷：名贵的马\n金牌里有个马\n\n老婆：车标是匹马的是啥车？\n老公：法拉利。\n\n老婆：牛呢？\n老公：兰博基尼。\n\n老婆：粪叉子呢？\n老公：玛莎拉蒂。尼玛，看来好车都出自农民兄弟…\n\n老婆：胸罩呢？\n老公：马自达。\n\n本田，\n口诀记忆法：车就是公司的老板H\n速记目标：老板是谁？（知现代识本田）\n\n1/13分步阅读\n奥迪：正如五环是奥运，四环就是奥迪，好记。其实四个环代表其公司是由四家公司合并而来。\n\n\n2/13\n大众：正如“众”字由3个“人”字组成，大众的车标可以认为由3个V字（倒人字）组成，3个V代表“胜利”。\n\n\n\n3/13\n奔驰：奔驰车标其实就是一个三叉星形状的方向盘，有了方向盘才能快速奔驰。\n\n\n4/13\n宝马：BMW就是宝马，看到B（宝）M（马）就应该知道，最多再记住它是蓝白相间，代表蓝天白云和螺旋桨。\n宝马：一个圈四等份，留言“BMW”，代表蓝天，白云；意思是大白天别摸我！小心传出什么绯闻？\n\n\n5/13\n丰田：正如“丰”字有3个横，丰田的车标由3个椭圆组成，中间两个椭圆形成一个T字，代表TOYOTA。\n\n\n6/13\n福特：福特车标就是文字Ford，就是音译的福特。\n\n\n7/13\n沃尔沃：也是音译，VOLVO。\n\n\n8/13\n现代：现代车标是一个H字，是现代公司名的首字母，我们记忆时也可以将它看做是一个X字，就是现（Xian）代的拼音首字母了。\n\n\n9/13\n雪佛兰：雪佛兰车标就是一个“十”字。\n\n\n10/13\n雷克萨斯：车标就是雷克萨斯的首字母——“L”。\n\n\n11/13\n标致：一头长得很标致的狮子。\n\n\n12/13\n马自达：如果您仔细看，马自达车标其实是一个M字，就是指马自达的首字母。\n\n\n13/13\n雪铁龙：学过机械的人可能更了解一些，1900年，安德烈·雪铁龙发明了人字齿轮，所以雪铁龙的车标就是一个典型的人字齿形状。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 18:48:24","updateTime":"2021-04-26 18:48:24","isExist":null},{"id":995,"question":"深圳多久摇车牌","simplecontent":null,"content":"深圳个人车牌摇号每个月摇一次，审核通过后未摇中车牌号，系统会将有效期自动延长至3个月，即个人编码有效期为3个月。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 18:37:40","updateTime":"2021-04-26 18:37:40","isExist":null},{"id":994,"question":"睡觉鼻声大","simplecontent":null,"content":"考虑有鼻炎的鼻甲肥大可能性大","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 18:36:19","updateTime":"2021-04-26 18:36:19","isExist":null},{"id":992,"question":"深圳摇车牌条件","simplecontent":null,"content":"一、外地户口在深圳买车上牌需要条件：\n1.持本市有效的居住证，且已最近连续2年以上在本市缴纳（不含补缴）基本医疗保险的非本市户籍人员；\n2.持有有效的准驾车型为C或以上的机动车驾驶证。\n3.名下没有在本市登记的小汽车，或者名下小汽车在本市全部登记为注销，或者名下仅有一辆在本市正常登记的小汽车且在2014年12月29日18时之前被盗抢的，公安机关立案满6个月仍未追回并已在公安机关车辆管理系统登记为被盗抢状态的。\n4.名下未持有有效的指标或者不具有更新指标申请资格。\n二、深户买车不用社保不用居住证，直接参与摇号或竞拍。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 17:40:01","updateTime":"2021-04-26 17:40:01","isExist":null},{"id":991,"question":"外嫁女可以分遗产吗","simplecontent":null,"content":"您好，很多农村的外嫁女，嫁到夫家之后，由于一些特定的原因，户口并未迁出，这种情况完全有资格继承家里的宅基地，如果村子里刚好面临拆迁，外嫁女同样占有拆迁补偿的份额，除此以外，很多农村地区还会分配拆迁安置房，户口未迁出的外嫁女，同样有资格获得一部分房产。农村的外嫁女，如果结婚之后将自己的户口迁到了婆家，那么她就自动并入了丈夫所在的村集体组织，会享受到跟丈夫一样的权益，那么自户口迁出之日开始，外嫁女就失去了对娘家宅基地的继承权，只能继承地上附着物和房屋。不过也没必要担心，如果自己和丈夫已经跟婆婆和公公分户，那么外嫁女也同样有资格，在新的村集体里面申请到新的宅基地。如果农村外嫁女，在之后的婚姻生活当中并不顺利，遭遇了离婚或者丧偶之痛，那么她的户口会自动打回到原来的村集体，在出嫁之前享受到的所有的权益，都将自动回落到外嫁女身上，其中就包括娘家宅基地的继承权以及拆迁补偿款和拆迁安置房的占有份额。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 17:35:22","updateTime":"2021-04-26 17:35:22","isExist":null},{"id":990,"question":"香肠如何打开","simplecontent":null,"content":"牙签插入，扭一下，然后把一片拉下来","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 17:31:16","updateTime":"2021-04-26 17:31:16","isExist":null},{"id":989,"question":"眼保健操穴位","simplecontent":null,"content":"1/6分步阅读\n第一节：按揉攒竹穴。双手大拇指按于眉心的穴位处，其余指尖轻触前额，拇指按节拍揉圈，做四个八拍。\n\n\n2/6\n第二节：按压睛明穴。用双手食指分别按在两侧眼窝穴位处，按节奏上下按压，做四个八拍。\n\n3/6\n第三节按揉四白穴。用双手食指分别按在两侧穴位处。大拇指抵在下颌凹陷处，其它手指握紧。每拍一圈，做四个八拍。\n\n4/6\n第四节，按揉太阳穴，刮上眼眶。大拇指按于两侧太阳穴上，其它手指自然弯曲，先用大拇指按揉太阳穴，每拍一圈，揉四圈。然后大拇指不动，用双手食指的第二个关节内侧，从眉头刮到眉梢。连刮两次，如此交替做四个八拍。\n\n5/6\n第五节，按揉风池穴，双手食指和中指分别按在两侧颈后的穴位上按揉穴位。每拍一圈，做四个八拍。\n\n6/6\n第六节，揉捏耳垂，脚趾抓地。用大拇指和食指捏住耳垂，揉捏穴位。同时双脚全部脚趾做抓地动作。每拍一次，做四","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 16:35:36","updateTime":"2021-04-26 16:35:36","isExist":null},{"id":988,"question":"按摩可以去掉黑眼圈吗","simplecontent":null,"content":"结构型黑圆圈，按摩是没用的；色素型黑圆圈，短暂的炎症性色素沉着，通过按摩加速血液循环，是有用的；血管型黑眼圈，可以通过按摩或冷敷等，改善眼部的浮肿。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 16:30:15","updateTime":"2021-04-26 16:30:15","isExist":null},{"id":987,"question":"按摩可以去掉黑眼圈吗","simplecontent":null,"content":"黑眼圈成因：黑眼圈是由于眼部疲劳、衰老，静脉血管血流速度过于缓慢，眼部皮肤红血球细胞供氧不足，静脉血管中二氧化碳及代谢废物积累过多，形成慢性缺氧，血液较暗并形成滞流以及造成眼部色素沉着。想要去掉黑眼圈，通过眼部按摩促进血液循环是重点。\n\n眼周穴位按摩法+芸蓉集眼部瑧悦精华霜\n\n1.用无名指取出绿豆大小的眼霜按在眼头位置，再用指腹沿下眼睑轻轻按摩。\n\n2.以轻柔的力度按摩太阳穴位置，然后由太阳穴向内按回眼头位置。重复5-10次。\n\n3.接着将拇指置于眼头位置。\n\n4.以拇指按压下眼角位置，最后如画圆圈般向外移至太阳穴两侧，重复按摩5-10次。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 16:29:10","updateTime":"2021-04-26 16:29:10","isExist":null},{"id":986,"question":"黑眼圈类型","simplecontent":null,"content":"血管型黑眼圈：呈青色，主要是用眼过度、血液循环不畅造成的。睡眠不足、看东西太久、鼻炎、内分泌失调等都可以形成这样的黑眼圈。\n色素型黑眼圈：呈咖啡色，主要是色素沉着造成的。有的人天生自带，卸妆不彻底、防晒不到位、炎症等都可以形成这样的黑眼圈。\n结构型/阴影型黑眼圈：呈黑色，主要是由眼袋、泪沟构成的眼部阴影，在视觉上造成了黑眼圈。脂肪的增加、皮肤的松弛都是成因。\n混合型：同时具备上面的2~3种情况。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 16:26:22","updateTime":"2021-04-26 16:26:22","isExist":null},{"id":985,"question":"如何正确的组织论据，不会被反驳","simplecontent":null,"content":"正确去组织你的论据\n想要提高你话语的说服力，关键在于你提供的论据。\n\n既然一件事的结果，肯定会存在某个原因，那么想要让自己说出来的话经得起推敲，你必须提供一个很好的论据，来说明这个原因，肯定会导致这个结果，构成因果关系。\n\n例如你跟朋友说：好爸爸这家餐厅挺不错。在那里吃饭很划算的，吃满100元就会有八折，而且东西好吃，服务又周到。\n\n你觉得小姨妈餐厅不错，这是一个结果。而你之所以会得出这个结果，就是因为那里吃饭划算，服务又周到。\n\n于是整个论证形式就是：\n\n前提：因为，在好爸爸餐厅吃饭会有八折，而且东西又好吃，服务又不错；\n\n结论：所以，这些因素让我觉得这家餐厅很不错。\n\n这是一种归纳推理的表现形式，你归纳了各种前提的”论据“之后，如”吃饭会有八折，而且东西又好吃，服务又不错“，才得出这个结论的。\n\n而论据，也是由命题组成。只要你的论据经得起推敲，那么最后你得出的结论，也会经得起推敲。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 16:13:23","updateTime":"2021-04-26 16:13:23","isExist":null},{"id":984,"question":"什么是逻辑混乱","simplecontent":null,"content":"现象，原因，解决是逻辑正确\n\n而原因，现象，解决是混乱\n\n最近公司出现一个想象，很多人单卡在5个\n为什么出现呢，原因在于……\n如何去解决呢，我们要……","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 16:09:39","updateTime":"2021-04-26 16:09:39","isExist":null},{"id":983,"question":"如何共情","simplecontent":null,"content":"1. 主动询问对方对某一事件的感受（熟练可省略）\n\n我们往往不能读懂面部表情和肢体语言，或是反应没有那么快。这时候，让对方直接说出自己的情感感受是搞明白对方情感的直接方法。\n\n举例：对方：“我遇到了ex。”你：“这样哦，那你有什么感受/心情怎样？”\n\n\n\n2. 重复对方描述的感受，加上自己的猜想\n\n重复描述可以给对方注意倾听、感同身受的感觉，虽然我们可能不理解为什么会产生这样的情感。在此阶段这个不重要，因为人的情感反应本来就有个体差异，和过去的生活经历也有很大关系。有人见到昆虫吓昏，有人却高兴，就是一样的道理。\n\n\n\n猜想可以是关于情绪的追问，或是关于事件对生活的影响，可以根据对方的回答得到印证或否定。如果省略了第一步，这一步可以就是对因事件产生的情感猜想。\n\n\n\n举例：“你明天要考试，现在是不是很紧张？”\n\n“你说你遇到ex很难过，那是不是你还在意ta？”\n\n\n\n3.根据对方的回答作出\n\na.安慰/表现自己的同情\n\nb.问题解决\n\nab可以只用一个，也可以结合使用\n\n\n\n3a. 动作安慰：拍肩、拥抱（亲密朋友）\n\n语言安慰： 我很抱歉/替你伤心。我很在意你。别担心，会变好的。\n\n\n3b.可以从两方面做1.我可以为你做什么？2.你可以做什么来解决问题\n\n\n其中2还可以用于1方面的替补，比如1被人否决，可以回问对方“那怎么办？”\n\n也可以合并12完成，举例：\n\n“听说你丢了卡，你一定很着急吧。我帮你发寻物启示？”\n\n对方：“我已经发过了，还没人联系我。”你：“别担心，那我还可以怎么帮你？联系失物招领处？”\n\n对方：“没用，失物招领不上班。”你：“那怎么办？我还可以做什么？别着急，我们来想办法。”\n\n\n\n我个人认为问题解决更重要，但是事实是很多人很注重情感安慰。我个人的方法是问题解决为主，但是遇到亲友去世之类的例子一般只需要充分的情感安慰和支持。\n\n\n共情禁忌：\n\n1. 不要谈论自己的观点太多，重心放在对方身上，时刻记得重复对方的语言感受。\n\n2. 不要用“不是很大的问题“这种话，对方会觉得你不重视自己，轻描淡写。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 15:57:58","updateTime":"2021-04-26 15:57:58","isExist":null},{"id":982,"question":"程序员疾病","simplecontent":null,"content":"序员面临2个问题:1是屏幕蓝光的辐照；2是熬夜。抗蓝光，修复保护是程序员的主要护肤分享！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 15:54:11","updateTime":"2021-04-26 15:54:11","isExist":null},{"id":981,"question":"为什么大学不谈恋爱","simplecontent":null,"content":"大学里的爱情真的太浮躁、太快餐式了。\n\n看你长的好看就加了你微信，然后开始撩你，然后不出一个周两个周的就在一起，然后一起吃饭上课取快递上自习在宿舍楼下亲亲抱抱，然后腻了没什么兴趣和新鲜感了，就匆匆分开，然后去准备下一段故事了。\n\n大一甚至大二上的时候也会这样期待，虽然一边嗤之以鼻，但同时又期望一段故事。于是每天花枝招展，像是为别人而穿搭，为别人而好看。\n\n但这个学期，经历了一些以后，心智也逐渐变得成熟。开始有了自己的风格，开始注重自我了，开始为自己开心舒服而打扮或者不打扮。\n\n快餐式的爱情带来一时愉悦，但是蠢不可耐。现在很少会有心动的感觉了，大学的学习与生活方式让我们没有中学时代那样与某一群人朝夕相处，互相熟悉的环境了。在不想去主动了解一个人的时候，我们也很难仅仅因为外表去对一个人心动。所以我们好像很难再真心实意地喜欢一个人。\n\n虽然想谈恋爱了，但是快餐式的爱情真的不要也罢。舒服地做自己爱自己最重要","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 15:37:50","updateTime":"2021-04-26 15:37:50","isExist":null},{"id":980,"question":"学习什么技术好","simplecontent":null,"content":"自己感觉对什么有兴趣？最擅长什么？想好了，就尽快动手学一学，试一试。做了才知道自己行不行。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 15:36:00","updateTime":"2021-04-26 15:36:00","isExist":null},{"id":979,"question":"朋友差距大能交吗","simplecontent":null,"content":"经常说一句话，\n\n朋友的本质就是利益互换，\n\n要么物质，要么精神。\n\n\n\n\n\n而差距过大，只会造成一种结果，\n\n那就是渐行渐远。\n\n\n差距，也无外乎是财富上的差距，认知上的差距。\n\n但往往，财富与认知是绑定在一起的。\n\n也就是说，一旦有了大的差距，便失去了利益互换的可能。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 15:18:57","updateTime":"2021-04-26 15:18:57","isExist":null},{"id":978,"question":"怎么样辨别穷人跟有钱人？","simplecontent":null,"content":"穿着，包，车，气质","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 15:14:09","updateTime":"2021-04-26 15:14:09","isExist":null},{"id":977,"question":"能力不够要不要当负责人？","simplecontent":null,"content":"实战更适合成长，你不必准备好才开始\n\n屁股决定脑袋，这句话是真的。\n\n不做到位置上，以自己的视角花再长的时间也很难真正准备好。就算你以为自己准备好了，也会发现，实际与你准备的有很大不同。\n\n我自己在文化项目中做过一场发布会。一直以来在策划部做，做的都是内容创作，但这一次，老板让我做发布会的负责人，变成了管控流程、安排宾客的角色。把我擅长的内容向创作如先导片、推介稿、主持词让别人去做。\n\n还记得当时收到先导片，我很不满意，我觉得粗制滥造。但一切都很匆忙，没有时间盯着这个 后来修修改改，差一不二也就用了。\n\n而当发布会真的开始，灯光暗下来，播放先导片的时候，我发现现场的反应蛮好，坐在观众席去看没我想象的那么糟糕。这时才明白，换一个视角，原来你以为重要的，其实没必要。看到全局的时候，更知道抓大放小。\n\n当不当负责人也是一样的道理。\n\n没当的时候觉得负责人应该有A、B、C的能力，便开始筹备。结果挪一下屁股，换了角度，或许D才是重要的，而且D完全可以边干边学。\n\n在脑海中模拟负责人需要的能力，准备一年的时间，或许不及在实战中一个月学得多。\n\n所以，面对领导让你做负责人的情况，我的看法是“当然接受”。\n\n每一次超出能力一点点的任务，都是成长的快车道。无论最终得到多少，都是一种收获，不存在失败一说。\n\n当然要接受！\n\n为什么不呢？\n\n全力去做就好啊！\n\n另外，还想提醒你一点。一定要培养一个兴趣，或者有一个发泄的方式。\n\n比如我喜欢画画，喜欢偶尔给自己留一点独处空间，喝杯奶茶，手底下涂涂抹抹，让情绪散去，让头脑安静下来。\n\n\n\n总的说来，题主的问题就是“准备好了才敢做”的学生思维在作祟。初入职场，会发现类似的思维还有很多。\n\n比如将“不与人争论，退一步海阔天空”列为信条的人很难拒绝别人的请求，容易在职场中混成“老好人”，委屈了自己。\n\n比如信奉“努力就能成功，熬过去就好了”的人，会不断逼迫自己，转牛角尖。\n\n对于这些思维，我们都需要有效甄别并及时调整，才能更好的适应社会，抓住机会。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:45:44","updateTime":"2021-04-26 14:45:44","isExist":null},{"id":976,"question":"能力还没有达到可以当负责人的时候，但是领导让做负责人，感觉压力好大是否要接受？","simplecontent":null,"content":"需要考虑负责人能力是否OK的是领导，作为当事人干就完了，完全不用想那么多。举个例子，一名从没做过大型项目的项目经理，如果有机会能够取得管理大型项目的机会，那么不要考虑自己能力是不是匹配，只需要拼尽全力做就好了。最终结果无非两个：如果项目成功了，当事人不但取得了宝贵的项目经验，而且功成名就，升职加薪，大家一起开开心心；如果项目最终砸了，那么公司受到损失，领导用人不当受到批评，但当事人也具备了大型项目的管理经验啊，起码知道这种大型项目的各种坑和问题。最坏最坏的结果无非是不在这家公司做了，另谋高就。真心告诉大家，在市场里，这种有过失败经历的人也一样很吃香。因为在招聘企业看来，相当于上一家公司付学费为自己培养人才了，这种便宜不占白不占。在这种情况下，我觉得唯一的赢家就是这个当事人。\n你已经是他最好的选择了，他都不怕你怕什么\n\n首先，觉得自己能力还没达到，压力很大，说明你是一个有责任心的人。你希望回应别人的期待，不想让给予你信任的人失望。这是好事儿。\n\n但你可能没想过，从领导的角度，他也是有权衡的，选择你绝对不是拍脑门的决定。\n\n领导能选择你，说明你就是最好的选择。\n\n以我自己来说，我能接手自己不了解的广告项目，是因为当时打算组建的新团队出了问题，临时找不到人，而投标在即，老板就找到了我。\n\n实在的说，我也没做过，虽然读过一些相关方面的书，但这无异于纸上谈兵。\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:36:26","updateTime":"2021-04-26 14:36:26","isExist":null},{"id":975,"question":"云吞什么材料好吃","simplecontent":null,"content":"猪肉小白菜香菇馅\n玉米瘦肉馅\n虾仁馅","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:33:40","updateTime":"2021-04-26 14:33:40","isExist":null},{"id":974,"question":"云吞怎么做","simplecontent":null,"content":"首先要选取新鲜的猪肉。肥瘦比例为7：3，用刀剁碎；然后加入葱姜，葱姜能够去掉肉里的腥味；加入一个鸡蛋，用筷子顺一个方向搅拌，增加肉黏性；泡一些花椒水，每次加一到两小勺，然后顺一个方向搅拌肉馅，让肉吸收水分。放适量的盐，然后加入十三香调料。用筷子搅拌均匀。让肉充分吸收调料；最后加适量的油即可。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:31:50","updateTime":"2021-04-26 14:31:50","isExist":null},{"id":973,"question":"云吞怎么煮","simplecontent":null,"content":"1/5分步阅读\n首先，锅内加入适量的水或者大骨汤，大骨汤做成的云吞味美汤浓，水煮的则清淡宜人，各有特点。将水煮开；\n\n\n2/5\n水开后，将20个云吞先后下入锅内，并不断慢慢搅拌。主义搅拌速度不宜过快，避免把混沌弄破；\n\n\n馄饨馅的做法_馄饨馅怎么做好吃_大众点评\n广告\n3/5\n再次将水烧开，水开后转用小火。继续煮3-4分钟，加入少许凉水，再次煮\n4/5\n将香菜末和紫菜放入碗底。适量食盐放入锅内，搅拌均匀就可以出锅了！\n\n5/5\n还可以根据个人口味加入虾皮、香油甚至生菜、油菜、辣椒等等，就看个人喜好了！\n\n\n注意事项","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:31:24","updateTime":"2021-04-26 14:31:24","isExist":null},{"id":972,"question":"中软五一举办活动","simplecontent":null,"content":"4月28跳绳，10人","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:26:30","updateTime":"2021-04-26 14:26:30","isExist":null},{"id":971,"question":"五一好看电影","simplecontent":null,"content":"《悬崖之上》、《古董局中局》、《阳光劫匪》、《真·三国无双》、《秘密访客》、《世间有她》","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:23:08","updateTime":"2021-04-26 14:23:08","isExist":null},{"id":969,"question":"很多名牌包在哪里的","simplecontent":null,"content":"法国","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:03:42","updateTime":"2021-04-26 14:03:42","isExist":null},{"id":968,"question":"名牌包箱详细介绍","simplecontent":null,"content":"1、Louis Vuitton 路易·威登\nLV于1854年在巴黎创立，至今已有165年历史了，LV包包一直以卓越品质、杰出创意和精湛工艺成为时尚旅行艺术与奢华的象征。\n\n作为全球销量最好的奢侈品牌之一，LV一向以自家的包包为傲。毫不夸张的说，很多姐妹买的第一只入门款就是LV，甚至一些时尚人士家中都有无数只LV经典款手袋，其中老花图案、棋盘格更是LV中的经典！\n\n这里要给大家讲一个关于LV创立的品牌故事：\n1821年，LV创始人路易·威登出生在法国的一个木匠家庭，在他14岁那年，他徒步走了四百多公里到巴黎拜师求艺，后来他做了一份专门为王室贵族出游打理行李的工作。1854年，路易·威登在巴黎市中心开设了第一家皮具店，专门制造和出售旅行箱包，并用自己的名字作为店铺名。LV箱包轻便耐用又结实，加上出色的设计和精细的制作工艺，深受王公贵族的喜欢，很快名声就传遍了欧洲。\n\n2、Chanel 香奈儿\nChanel于1910年在法国巴黎创立，创始人是Coco Chanel（加布里埃·可可·香奈儿），至今已有109年历史了。小香家包包以简洁优雅的设计俘获广大女性的心，双C标志、菱形格纹、山茶花是Chanel的三大经典标志！\n\n香奈儿小姐并不是一出身就那么幸运，在她6岁时母亲离世，父亲更丢下她和兄弟姐妹4个，她由姨妈抚养成人。\n这个创立香奈儿的coco小姐一生都没有结婚，她在创造时尚帝国的同时，也在追求自己想要的生活。\n她和英国公爵ETIENNE BALSAN来往，对方资助她开第一家女帽店，而另一位ARTHUR CAPEL则出资开时尚店。\n她与西敏公爵一同出游，启发设计出第一款斜纹软呢料套装。生命中每一个男士都激发她创意的泉源，她不是单靠幸运，而是非常努力认真的工作！\n她倡导女权， 想要赋予女性行动的自由，于是她设计了经典的2.55手袋想用细链条来解放女性拿包的双手。不得不说coco真的是一位新时代女性！\n\n3、Hermes爱马仕\n爱马仕于1837年成立于法国巴黎，至今182年历史，时间比LV还要久。创始人Thierry Hermès，早年以制造马具起家，他家包包从整体到细节以及专卖店，都弥漫着浓郁的马文化，爱马仕包包分为Kelly包和Birkin包两种，根据风格很容易区分！\n\n\n4、Dior迪奥\n迪奥1946年于巴黎创立，创始人是法国时装设计师克里斯汀·迪奥，迪奥包包一直是华丽与高","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:03:27","updateTime":"2021-04-26 14:03:27","isExist":null},{"id":967,"question":"名牌包有哪些","simplecontent":null,"content":"1、LV(路易威登)\n\n成立于1854的lv，目前是奢侈品牌包包中数一数二的品牌。是上流社会的象征。路易·威登品牌一百五十年来一直把崇尚精致、品质、舒适的“旅行哲学”，作为设计的出发点。LV的另一成功秘诀就是力求为尊贵的顾客营造一种“家庭”的感觉。LV箱包品牌的产品可以由祖母传给妈妈，妈妈再传给女儿，可以代代相传，无论什么时候你把 LV 的产品拿来修理养护，LV名包专卖店都是责无旁贷地尽心尽力予以帮助。让一家三代能持续地拥有一个品牌的产品，这对于一个品牌生命力的延续意义非常重大。\n\n2、香奈儿(CHANEL)\n\n香奈儿(CHANEL)是一个有80多年经历的著名品牌，香奈儿时装永远有着高雅、简洁、精美的风格，善于突破传统。Chanel提供了具有解放意义的自由和选择，将服装设计从男性观点为主的潮流转变成表现女性美感的自主舞台。抛弃紧身束腰、鲸骨裙箍，提倡肩背式皮包与织品套装;Coco Chanel一手主导了二十世纪前半叶女人的风格、姿态和生活方式，一种简单舒适的奢华新哲学，正如她生前所说：“华丽的反面不是贫穷，而是庸俗”。如今，放眼新人辈出品牌繁复的流行产业，Chanel依然是时尚界一座永远不灭的活火山。\n\n3、Hermes(爱马仕)\n\n让所有的产品至精至美、无可挑剔，是爱马仕 (Hermes)的一贯宗旨。爱马仕 (Hermes) 品牌所有的产品都选用比较上乘的高级材料，注重工艺装饰，细节精巧，以其优良的质量赢得了良好的信誉。\n\n历经了160多年的风雨沧桑，爱马仕 (Hermes) 家族经过几代人的共同努力使其品牌生名远扬。早在20世纪来临之时，爱马仕 (Hermes) 就已成为法国式奢华消费品的典型代表。20世纪20年代，创立者蒂埃利·爱马仕之孙埃米尔曾这样评价爱马仕品牌：“皮革制品造就运动和优雅之极的传统。”\n\n4、Coach(蔻驰)\n\nCOACH成立之初，是由六位来自皮革世家的皮匠师傅共同经营，是美国历史比较悠久和比较成功的皮革制品公司之一。而时至今日，COACH的皮革工厂仍是由技艺精巧的皮革师傅负责。对每一位COACH的皮匠师傅而言，COACH不仅仅是一个品牌的名称，更是他们心血的结晶和承传。\n\n品牌特征COACH的皮件设计非常简洁，通常只有外型的变化，在皮面上并没有做多余的装饰。COACH也非常符合美国精神，具有越用越好看，便利好搭配的特色。COACH旗下的产品种类已超过百种，手提包、公文包、皮带、皮夹、旅行用品等皆有。\n\n5、Gucci(古奇)\n\n古琦品牌时装一向以高档、豪华、性感而闻名于世，以“身份与财富之象征”品牌形象成为富有的上流社会的消费宠儿，一向被商界人士垂青，时尚之余不失高雅。古琦现在是意大利比较大的时装集团。时装界堪与 LVMH 集团争一日之长短的国际奢侈品集团，可以说只有古琦集团 (GUCCI Group)。\n\n[page]\n\n6、Dior(迪奥)\n\n1947年创始以来，就一直是华贵与高雅的代名词。不论是时装、化妆品或是其他产品，Dior 在时尚殿堂一直雄踞顶端。 Dior 继承着法国高级女装的传统，做工精细，迎合上流社会成熟女性的审美品位，象征着法国时装文化的比较高精神。\n\n7、Prada(普拉达)\n\n意大利比较著名的奢侈品品牌，每年2季的米兰国际时装周上比较令人期待的就是普拉达 (PRADA) 的秀场。普拉达 (PRADA) 风靡全球，日本、台湾等地更是疯狂，满街的人都在背普拉达 (PRADA) 的尼龙包。普拉达 (PRADA) 非常重视产品品质，普拉达 (PRADA) 的所有时装配饰都是在意大利水准比较高的工厂制作的，这也就是为什么穿戴上普拉达 (PRADA) 产品会感到舒适无比的原因。尽管强调品牌风格年轻化，但品质与耐用的水准依旧，特别注重完整的售后服务，这也是以高级皮革制品起家的PRADA，至今仍讲究的传统。\n\n8、Burberry(巴宝莉)\n\nBurberry(巴宝莉)是英国国宝级品牌，由当时只有二十一岁的英伦小伙子Thomas BURBERRY一手创立。100多年来，巴宝莉 (BURBERRY) 成为了一个比较能代表英国气质的品牌。BURBERRY深受亚洲人所喜爱，而日本人对之更为之趋之若鹜。\n\n9、BALENCIAGA巴黎世家\n\n巴黎世家 (Balenciaga) 既是高级时装品牌，又是品牌创始人——著名西班牙裔设计师克里斯托巴尔·巴伦西亚加(Cristóbal Balenciaga) 的姓氏。今天的巴黎世家 (Balenciaga) 隶属于著名的奢侈品集团GUCCI集团，总部设在巴黎。巴黎世家 (Balenciaga) 包括高级女装和高级男装，而其比较为报友所熟知的还是著名的巴黎世家机车包 (Balenciaga Motorcyle Bag) 。巴黎世家机车包 (Balenciaga Motorcyle Bag) 首先是被《Vogue》等杂志推荐，很快就在明星街拍上看到被著名IT Girl妮可·里奇、林赛·罗韩、帕里斯·希尔顿、莎拉·杰西卡·帕克等挽在手臂上，因而巴黎世家机车包 (Balenciaga Motorcyle Bag) 也成为可见度比较高、模仿度比较高的比较著名的IT Bag。\n\n10、Chloe(珂洛艾伊)\n\n珂洛艾伊 (Chloe) 品牌创立于1952年，诞生时只有女装，后来逐渐增加了眼镜、香水和包包手袋、鞋靴系列。珂洛艾伊 (Chloe) 可算是少数不靠自身名气，只以出色设计师作号召的时装品牌。因经历过不同风格的时装师的洗礼，所以珂洛艾伊 (Chloe) 未有建立独家标志风格。想深一层，这可令品牌风格灵活多变，不如其他老品牌般僵化守旧。\n\n以上就是关于世界十大奢侈品牌包的内容介绍了，喜欢奢侈品的朋友们可以参考一下上面介绍的这些品牌哦！\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 14:01:50","updateTime":"2021-04-26 14:01:50","isExist":null},{"id":966,"question":"巴西龟特性","simplecontent":null,"content":"巴西龟的特点有很多，和大多数乌龟相比，它的颜色比较亮丽，头部有红色和淡绿色的花纹，背部则是深绿色的几何图案，腹部有黄、白、黑相间的纹理。而且它还是比较活泼好动的品种，其它的乌龟则懒一些。作为杂食性动物，它更偏爱肉类，一般以鱼虾以及禽畜肉进行投喂。\n\n巴西龟为杂食性动物，但偏食动物性饵料，在人工饲养条件下，以家禽、猪等动物内脏及蝇蛆、面包虫为主。适当搭配瓜果、蔬菜及混合饲料，以增强其体内营养物质。在春、秋季添加维生素E粉、抗生素，以提高龟的怀卵量和增强龟的体质，日常喂食中应做到定时、定点、定质。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 13:57:57","updateTime":"2021-04-26 13:57:57","isExist":null},{"id":965,"question":"宠物龟类型","simplecontent":null,"content":"1、巴西龟:是最常见和容易购买的龟种，价格、外观都是很多新手可以接纳而且喜欢的，此龟种活 泼好动，有晒背的习惯，基本上是不会得病、饲养也相对简单，饲料更是广泛只要是肉类都 是它青睐的对象(生肉)我增经见过有人用火腿肠喂巴西龟这样是不可取的，也有龟粮可是 本人怎么喜欢龟粮，喂食虾类时，要把虾的头部去除，以免虾枪会伤害到龟、巴西龟的饲养 箱内要设有一个陆地，以提供晒背的习性、幼小的龟要细心的照料，身体的抵抗能力还不是 很高，会有一些小小的毛病，这些毛病是因为水质的原因造成，给龟换水最好是陈水，这样 就不容易得一些因水质而患上的疾病。冬天对幼小的龟进行加温饲养温度 24-25 度即可。加 热管最好选择不锈钢可调温的，玻璃加热管安全性比较低。巴西的饲养要有心里准备 因为 巴西龟的成长速度很快不要小的时候看着可爱购买回来，1～2 年后养到成年龟就～～～～ 还有巴西龟是比较凶悍的龟种，养大后会攻击人(除主人) (新手饲养指数 4)\n\n　　2、乌龟 (也就是草龟) 容易饲养，抗病性强，价格低廉，许多养龟人的最爱不止是新手、乌龟背部为棕色或黑 色，背部有 3 条棱，腹甲棕黄色有斑块，头侧面及咽喉部颈部有黄色的斑点，四肢黑色，善 于游泳。适合新手饲养，食物以鱼、肉、虾、菜叶，幼小的龟冬季加温饲养 25 度左右。而 且乌龟也是最聪明的龟种之一很有灵性的龟。和你主人的互动性比较强，也是国产龟(各人 支持，推荐新手饲养) (饲养指数 5)\n\n　　3、黄喉拟水龟 着种龟很像乌龟，抗病性强，外貌清雅脱俗，头侧面眼后有两条浅黄色的横纹，喉部为 黄色、背甲扁平，中间有一道棱、背甲是棕黄色或棕褐色，腹甲是黄色，有大片的黑斑，善 于游泳、食物以鱼、虾、肉为主;水不要太深，幼体冬季加温饲养。 温度在 25 度左右。黄 喉因产地与品像不同，价格也有高有低，但近两年来黄喉的价格一直在飙升(北京地) (饲 养指数 4)\n\n　　4、中华花龟(小幼体商家介绍时会说珍珠龟) 容易饲养，外貌也十分漂亮，适应力也比较强，价格也偏低，背甲为深棕色部有淡黄色 的花纹，腹甲为黄色，有大的黑斑、四肢、颈部上有条纹、活泼好动，食物主要以肉、鱼、 虾、面包虫为主，不怕人饲养时水不要放的太深，幼小的龟冬季要加温，温度 25 度左右。 花龟也是国产龟， 成年龟可冬眠大多数都是购买幼体， 但是花龟的生长速度相比以上龟类算 比较慢的。饲养者要有耐心。 (本人极力推荐“小菜”饲养因从小养会产生感情互动性高大大 提高饲养者的饲养兴趣) (饲养指数 5)\n\n　　5、扁头头颈 是深水龟，饲养比较容易，外貌滑稽可爱，尤其是它的颈部。背甲为棕色，腹甲为浅黄 色，主要食物为鱼、虾、肉，冬季加温饲养，温度在 26 度左右，本人饲养长颈 ，这是为数 不多的适合新手饲养的深水龟，如果饲养空间够大，造景布置的合理，长颈的捕食过程是不 容错过的滑稽惊险片。 但是长颈性格有点多疑。 互动性不高。 价格也是新手考虑的环节。 (饲 养指数 4)\n\n　　6、猪鼻龟(小名叫飞河龟) 也是深水龟， 饲养比较容易 (除对水质有要求外) 猪鼻龟是长相最为奇特的淡水龟之一。 其背甲较圆，呈深灰色，橄榄灰或棕灰色，近边缘处有一排白色的斑点。边缘略带锯齿，头 部大小适中，无法缩入壳内。眼睛的后方有一条灰色的条纹。鼻子丰厚多肉，并且很长，形 同猪鼻。四肢为了适应水生生活而特化为鳍状，尾部偏短。猪鼻龟是十足的杂食动物，而略 微偏向于植食，幼龟则偏向于肉食性。猪鼻龟是高度水栖的淡水龟类，能长期地在深水中生 活，极少上岸，因此是龟类中的游泳高手，泳姿矫健优雅，倒游更是它的绝技。水温，则必 须保持在 26°C 和 30°C 之间。本人也饲养猪鼻其实把猪鼻列入新手饲养确实有点勉强。因 为它对水质的要求的确不低，但是考虑到一些特殊人群(有热带鱼饲养经验者)着就不算什 么了。猪鼻龟饲养必须配备水过滤装置，水稍稍偏酸的水质也可有效抑制微生物的生长。猪 鼻龟是游态最幽雅的可爱的龟。 (本人每天都要看上 10 几分钟) 但是对于没有饲养热带鱼经 验“小菜”来说还是三思为好。 (饲养指数 3)\n\n　　7、大鳄、小鳄： (大鳄)身体强壮，背部有突起的甲，四肢的发达，但不善于游泳，饲养时应注意水不 要太深，此龟胆小喜欢安静、但此龟的攻击性比较强，饲养者要注意拿龟手法，应拿龟的两 侧或龟的尾部，不要从头部拿起后果是很严重的。鳄龟的抗病性强，不易患病，食量也很大 成长速度极快， 。鳄龟的外貌也很酷，饲养简单。饲料主要是活鱼、泥鳅、肉， ，饲养中水不 要换的太勤，最好有个过滤器，以保持水的清洁度，尤其是新购买的龟，经常的挪动和换水 会使其精神十分紧张，冬天加温饲养 25 度左右加热管最好选择不锈钢可调温的。大鳄各人 认为太过于死板，像块沉木，但是有些人喜欢它捕食的样子。它以诱捕的方式来猎取食物， 它会张开双口，口中有一红色酷似红线虫的诱饵扭动吸引小鱼，靠此来捕获食物。但经过训 练也可以从饲养者手中接食。这个么基本应该不太会有人养的对伐~~~","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 13:55:34","updateTime":"2021-04-26 13:55:34","isExist":null},{"id":963,"question":"post数据丢失","simplecontent":null,"content":"使用Ajax传送数据时，当数据中存在加号(+)、连接符(&amp;)或者百分号(%)时，服务器端接收数据时会丢失数据。分析Ajax传送数据的格式与Javascript的语法：\n\n1. \"+\"号：JavaScript解析为字符串连接符，所以服务器端接收数据时\"+\"会丢失变空格。\n\n2. \"&amp;\"号：JavaScript解析为变量连接符，所以服务器端接收数据时&amp;符号以后的数据都会丢失变空格。\n\n解决方法是通过正则表达式进行编码替换(假设postStr是你想通过ajax传送的数据字符串)\n\n1 postStr = postStr.replace(/%/g, \"%25\");  \n2 postStr = postStr.replace(/\\&amp;/g, \"%26\");  \n3 postStr = postStr.replace(/\\+/g, \"%2B\"); \n ","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 13:42:31","updateTime":"2021-04-26 13:42:31","isExist":null},{"id":962,"question":"潮州好玩","simplecontent":null,"content":"有南澳岛、广济桥、潮州古城、崎碌炮台、红海湾等，这些景点都值得一去。\n\n1、南澳岛\n\n南澳岛是南海当中的一个绿洲，生长着茂密的热带植物，还有优质的港湾，是一个美丽的旅游岛，古往今来，南澳岛是东南沿海通商的中转站，附近可开发渔场达5万平方公里。\n\n南澳岛上生长着1400种热带和亚热带植物，并且很多野生动物栖息在此。主岛附近有一个鸟岛，是候鸟自然保护区。\n\n南澳岛有得天独厚的旅游资源、港口资源和水产资源，文物古迹50多处，寺庙30多处，大小港湾66处。\n\n南澳岛出土的距今约8000年前“象山文化”是目前粤东考古发现最早的新石器时代文化遗存。南宋皇帝、南明监国鲁王、航海家郑和、民族英雄戚继光、郑成功、刘永福都来过南澳，留下了古宋井、招兵树、雄镇关等许多历史遗迹。\n\n\n\n2、广济桥\n\n广济桥，即潮州广济桥，古称康济桥、丁侯桥、济川桥，俗称湘子桥，又称潮州湘子桥，位于广东省潮州市古城东门外，横跨韩江，联结东西两岸。\n\n集梁桥、浮桥、拱桥于一体，为古代广东通向闽浙交通要津，是潮州八景之一，是潮汕地区著名文物旅游胜地，中国四大古桥之一，全国重点文物保护单位，国家AAAA级景区，被桥梁专家茅以升誉为“世界上最早的启闭式桥梁”。\n\n广济桥为浮梁结合结构，由东西二段石梁桥和中间一段浮桥组合而成，梁桥由桥墩、石梁和桥亭三部分组成。广济桥全长518米，东边梁桥长283.35米，有桥墩12个和桥台一座，桥孔12个；\n\n西边梁桥长137.3米，有桥墩8个，桥孔7个，石梁宽5米。中间浮桥长97.3米，由十八只木船连接而成。\n\n\n\n3、潮州古城\n\n潮州古城位于广东省潮州市内，是国家历史文化名城。著名景点有：湘桥春涨、韩祠橡木、金山古松、凤凰时雨、龙湫宝塔、鳄渡秋风、西湖鱼筏等。\n\n潮州古城除了美丽的风景外最吸引人的当然是潮州美食。\n\n4、崎碌炮台\n\n崎碌炮台俗称为石炮台。位于广东省汕头市金平区崎碌街道。崎碌是汕头市的古地名，是我国保存较为完好、独立体面积最大的炮台，1989年，被定为第三批省级重点文物保护单位。2013年，被定为“国家重点文物保护单位”。\n\n崎碌炮台于清朝同治13年（1874年）动工，光绪5年（1879年）完工，耗资8万余银元。崎碌炮台兴建至今100多年，整座建筑物尚未发现裂缝和崩塌现象，是清末粤东海防设施的代表作。1991年10月18日对石炮台进行全面修缮，并辟为汕头市石炮台公园。\n\n崎碌炮台独具建筑特色，环圆状带形墙体的城堡，墙体以贝灰、沙、煮烂糯米粥及红糖调和夯筑，配以花岗岩石料，台面跑道用贝灰和糯米浆混合夯筑，炮台底层坑道与十字交叉拱窟窿全部用非风化花岗岩规格石砌筑，垛口炮位均铺上花岗岩石条，石缝严密，砌筑坚固。\n\n\n\n5、红海湾\n\n红海湾（Red Bay，旧称汕尾湾）是位于我国南海的北部的一个半封闭的海湾。位于广东省东部大亚湾与碣石湾之间、汕尾市东南面，有中国最美海湾的美誉。\n\n红海湾是第16届亚洲运动会-广州亚运会的帆船帆板项目比赛场地，产生了14块金牌。\n\n湖泊、岛屿、港湾交错，沙滩蜿蜒连绵，沿岸礁岩多姿，有57公里的漫长海岸线，滨海风光秀丽，人文古迹众多，具有独特的亚热带海滨风光，成为每年海边休闲游的大热之地。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 13:25:33","updateTime":"2021-04-26 13:25:33","isExist":null},{"id":961,"question":"潮州好玩地方","simplecontent":null,"content":"有南澳岛、广济桥、潮州古城、崎碌炮台、红海湾等，这些景点都值得一去。\n\n1、南澳岛\n\n南澳岛是南海当中的一个绿洲，生长着茂密的热带植物，还有优质的港湾，是一个美丽的旅游岛，古往今来，南澳岛是东南沿海通商的中转站，附近可开发渔场达5万平方公里。\n\n南澳岛上生长着1400种热带和亚热带植物，并且很多野生动物栖息在此。主岛附近有一个鸟岛，是候鸟自然保护区。\n\n南澳岛有得天独厚的旅游资源、港口资源和水产资源，文物古迹50多处，寺庙30多处，大小港湾66处。\n\n南澳岛出土的距今约8000年前“象山文化”是目前粤东考古发现最早的新石器时代文化遗存。南宋皇帝、南明监国鲁王、航海家郑和、民族英雄戚继光、郑成功、刘永福都来过南澳，留下了古宋井、招兵树、雄镇关等许多历史遗迹。\n\n\n\n2、广济桥\n\n广济桥，即潮州广济桥，古称康济桥、丁侯桥、济川桥，俗称湘子桥，又称潮州湘子桥，位于广东省潮州市古城东门外，横跨韩江，联结东西两岸。\n\n集梁桥、浮桥、拱桥于一体，为古代广东通向闽浙交通要津，是潮州八景之一，是潮汕地区著名文物旅游胜地，中国四大古桥之一，全国重点文物保护单位，国家AAAA级景区，被桥梁专家茅以升誉为“世界上最早的启闭式桥梁”。\n\n广济桥为浮梁结合结构，由东西二段石梁桥和中间一段浮桥组合而成，梁桥由桥墩、石梁和桥亭三部分组成。广济桥全长518米，东边梁桥长283.35米，有桥墩12个和桥台一座，桥孔12个；\n\n西边梁桥长137.3米，有桥墩8个，桥孔7个，石梁宽5米。中间浮桥长97.3米，由十八只木船连接而成。\n\n\n\n3、潮州古城\n\n潮州古城位于广东省潮州市内，是国家历史文化名城。著名景点有：湘桥春涨、韩祠橡木、金山古松、凤凰时雨、龙湫宝塔、鳄渡秋风、西湖鱼筏等。\n\n潮州古城除了美丽的风景外最吸引人的当然是潮州美食。\n\n4、崎碌炮台\n\n崎碌炮台俗称为石炮台。位于广东省汕头市金平区崎碌街道。崎碌是汕头市的古地名，是我国保存较为完好、独立体面积最大的炮台，1989年，被定为第三批省级重点文物保护单位。2013年，被定为“国家重点文物保护单位”。\n\n崎碌炮台于清朝同治13年（1874年）动工，光绪5年（1879年）完工，耗资8万余银元。崎碌炮台兴建至今100多年，整座建筑物尚未发现裂缝和崩塌现象，是清末粤东海防设施的代表作。1991年10月18日对石炮台进行全面修缮，并辟为汕头市石炮台公园","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 13:22:59","updateTime":"2021-04-26 13:22:59","isExist":null},{"id":960,"question":"潮州有什么好玩的","simplecontent":null,"content":"1/18分步阅读\n牌坊街：牌坊街是必打卡的旅游景点，很多建筑标志性景点都在周围，同时也是美食一条街，街上有很多咖啡馆、小吃店。牌坊街为主街，左右两边都是具有历史味道的小巷子，很多古建筑景点都藏在其中，需要各位慢慢去探索小巷文化。牌坊街有很多有味道的文艺手工店比如刺绣、木雕、紫砂壶等，也可以算是潮州的一条古玩购物街！\n\n\n2/18\n广济桥：晚上的广济桥灯光秀是必打卡景点！强烈推荐！强烈推荐晚上的广济桥灯会！两岸灯光照相辉映，灯光随着音乐节奏变化，让人不禁感叹这般美景。节假日人很多，不推荐自驾游过去，道路会限行还有停车真的很困难，所以建议步行到广济桥观看，要靠近广济桥才能听到音乐。\n\n\n查看剩余1张图\n3/18\n青龙庙：青龙古庙在潮州韩江大桥西端南堤上，庙门东向，先前称安济圣王庙。庙中有正厅，仙师殿和官厅。庙中（正厅）主祀安济圣王 大夫人 二夫人，（正厅）两旁祀舍人爷、 福德老爷、 花公花妈，仙师殿祀三仙师公 挽娘娘，官厅前有潮州人谢少沧牌位。安济圣王庙直走有一个小戏台，供潮剧票友们唱潮剧，再望眼过去就是潮州的网红桥，桥上的灯光倒映江面上，波光粼粼甚是美丽\n\n\n深圳欢乐谷玛雅水公园5月1日飙爽开放!\n广告\n4/18\n韩文公祠：韩文公祠是中国现存最早纪念唐代文学家韩愈的祠庙。韩祠主体建筑分前后二进，古朴典雅，肃穆端庄。祠内梁间遍挂名家题写匾额，沿壁则环列历代碑刻40面，其中不乏书法珍品和研究专访文史的珍贵资料。2006年05月25日，韩文公祠作为明至清时期古建筑，被国务院批准列入第六批全国重点文物保护单位名单。\n\n\n西湖旅游的分享，路线景点住宿全都有\n广告\n5/18\n开元寺：公元738年，崇信佛教的唐玄宗下诏以当时的年号\"开元\"为名，在全国十大州郡各建一座寺庙。潮州开元寺是全国仅存的四大开元寺之一，这座千年古寺占地面积约20000平方米，整座寺院既保留了唐代的布局，又凝结了宋、元、明、清各朝各代的建筑艺术。\n\n\n查看剩余1张图\n6/18\n猷 巷：猷、灶二巷是开元寺的斋堂所属地，猷巷，乾隆《潮州古城地形图》作“柚巷”，但无论是“猷”还是“柚”，皆系“油”的讹音，昔日为开元寺的香油的储存地；灶巷则是寺厨房所在地。均曾属开元寺范围所在。这里是一篇老旧城区，如果你习惯了城市的繁杂，可以去完开元寺之后来这里走走，都是老味道！\n\n\n「火爆」潮州小食有哪些，200+热门项目，随到随学，","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 13:20:45","updateTime":"2021-04-26 13:20:45","isExist":null},{"id":959,"question":"孕妇可以打新冠状疫苗吗","simplecontent":null,"content":"你好，根据你说的情况，正常如果是知道怀孕了，是禁止打新冠疫苗的，所以不能打的，另外就是哺乳期也不能打的，所以如果可能怀孕了，怕对怀孕有影响，一定是不能打疫苗的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 12:49:50","updateTime":"2021-04-26 12:49:50","isExist":null},{"id":958,"question":"新冠状疫苗有效吗","simplecontent":null,"content":"新型冠状病毒疫苗，注射以后肯定是有一定免疫力的，但是目前持续的时间不太明确。我们目前国家的新冠肺炎疫苗经过临床三期试验，在六个月以后抗体仍然保持一定的效度，所以这是符合世界卫生组织要求的。 新冠病毒肺炎主要是发热、干咳、乏力为主要表现，部分患者可能有嗅觉、味觉减退及丧失等为首发症状，少数患者可能伴有鼻塞、流涕、结膜炎、肌痛、腹泻、荨麻疹为首发症状。重症的患者多在发病一周后，可能会出现呼吸困难和低氧血症，严重者可以快速进展为急性呼吸窘迫综合症。为了避免这些情况的发生，也就是说为了避免感染新冠肺炎，我们尽量都去注射新冠肺炎疫苗。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 12:48:14","updateTime":"2021-04-26 12:48:14","isExist":null},{"id":957,"question":"打新冠疫苗有什么副作用","simplecontent":null,"content":"恶心、呕吐、腹痛、腹泻等。\n注射新冠疫苗应该跟其他疫苗一样，也会出现有局部的红肿、硬结，伴有轻微的疼痛，还有全身的发热反应。\n\n一般在接种后8到24小时会出现体温升高，温度一般在37度1到38度5之间，可以持续1到2天。部分可能会有头晕、头痛、乏力，个别患者还可能出现轻微的恶心、呕吐、腹痛、腹泻等症状。还有一些人会出现过敏反应，比如皮肤出现皮疹，伴有瘙痒，严重的会出现过敏性休克。\n\n如果症状不严重，可予以临床观察，如果症状严重应及时就医，以免延误病情。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 12:41:35","updateTime":"2021-04-26 12:41:35","isExist":null},{"id":956,"question":"新冠状疫苗免费吗","simplecontent":null,"content":"18岁-59岁市民接种新冠疫苗\n\n符合年龄的中国内地居民不限户籍\n\n均可免费接种\n\n市民可通过“社康通”小程序\n\n“深圳疾控”微信公众号进行线上预约\n\n和携带本人身份证现场预约等多种方式\n\n预约接种新冠疫苗","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 12:40:41","updateTime":"2021-04-26 12:40:41","isExist":null},{"id":922,"question":"台积电如何","simplecontent":"","content":"7月28日，台积电在台北股市一度上涨高达9.9％，延续惊艳涨势，使其成为全球第十大公司。这家芯片制造商的美股市值高出了4100亿美元，逾越了美国巨头强生和Visa公司。台湾股票市场的日内股价涨跌幅上限为10％。\n\n　　作为全球最大晶圆代工场和苹果公司主要供给商，台积电股价已从3月的年内低位拉升逾70%。今朝在海峡两岸上市公司中，台积电的市值排名第三，仅次于阿里巴巴和腾讯，融易新媒体，逾越贵州茅台和工商银行。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 03:26:23","updateTime":"2021-04-26 03:26:24","isExist":null},{"id":946,"question":"乌龟会被淹死吗","simplecontent":"","content":"作为水陆两栖的动物，巴西龟是会游泳的，但是由于巴西龟是用肺呼吸的，所以它不可以像鱼类一样一直保持潜水的状态而是需要时刻呼吸空气。所以让巴西龟游泳就和让人游泳锻炼身体一样，适当的游一下好处多多，但是一直游最终的结果只能是体力耗尽……所以高水位养巴西龟其实是不太合适的，如果大家实在喜欢看巴西龟游水的话可以在深水位的缸内放置一块浮出水面的大石头或者直接安装一个浮台让巴西龟游累了的时候可以休息一下。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-26 03:23:59","updateTime":"2021-04-26 03:23:58","isExist":null},{"id":947,"question":"养乌龟的水位是多少","simplecontent":"","content":"　　一般来说，缸内水位刚刚没过巴西龟的背壳最佳，另外，在这样的低水位下也最好在水中放置爬台或者石头让巴西龟有一个可以保持干燥的位置。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 23:12:22","updateTime":"2021-04-25 23:12:22","isExist":null},{"id":945,"question":"安全期和危险期区别","simplecontent":"","content":"“安全期”、“危险期”，是指在月经周期内，属于卵子遇上精子能成为受精卵而受孕的时间间隔称之为“危险期”，反之就成为“安全期”了。由于卵子排出后的两三天内都可能受精，精子排出后可存活三四天都可以进入卵子，因此若以排卵日（一般是月经前14天）为基数，其前5天和后4天都是危险期，其余就是安全期了。\n\n安全期就是，所说的‘前七后八’","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 23:08:32","updateTime":"2021-04-25 23:08:32","isExist":null},{"id":944,"question":"安全期日期","simplecontent":"","content":"月经的前七天和后七天为安全，排卵的前7和后7为危险","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 23:03:14","updateTime":"2021-04-25 23:03:14","isExist":null},{"id":943,"question":"月经和排卵区别","simplecontent":"","content":"排卵期和月经是有一定区别的，排卵期发生在两次月经之间，大概在经前14天左右。在排卵期卵泡破裂排卵后，激素水平会急剧下降，不能维持子宫内膜正常生长，便会导致一些阴道出血现象，出血量比较少，持续时间短，一般不存在身体不适症状。月经期出血量较多，持续时间3-7天，而且大部分女性会存在一些经期综合征，比如胸部胀痛、腰酸、腹痛、厌食、身体乏力等。排卵期有卵子排出，受孕率很高，而月经期前后都属于安全期，此时同房不容易受孕。不管是排卵期还是月经期都要注意个人卫生，选择具有透气性的棉质内裤，并每天进行更换清洗，可有效减少妇科疾病。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 23:02:18","updateTime":"2021-04-25 23:02:18","isExist":null},{"id":942,"question":"月经和排卵区别","simplecontent":"","content":"月经开始算，14-16后为排卵","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 23:00:05","updateTime":"2021-04-25 23:00:05","isExist":null},{"id":941,"question":"女生什么时候不会怀孕？分月经和排卵，排卵附近会怀孕，月经附近不能同房，月经过可以同房","simplecontent":"","content":"女性排卵期是从下次月经第一天开始算，倒数14-16天为排卵日，排卵日的前5天和后4天加一起共10天为排卵期。卵子自卵巢排出后在输卵管内能生存1～2天，以等待受精；男子的精子在女子的生殖道内可维持2～3天受精能力，故在卵子排出的前后几天里性交容易受孕。如果正常来月经了，就不会怀孕的，放心好了","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:59:31","updateTime":"2021-04-25 22:59:31","isExist":null},{"id":940,"question":"月经后同房会避孕吗","simplecontent":"","content":"月经干净以后没有经血了就可以同房，这个时间是安全期避孕的时间，因为离排卵还有几天时间，这时候同房是比较安全的，如果要避孕是可以的。\n\n如果血老是滴不干净，尽量不要同房，因为阴道里是血液最好的细菌培养基，容易使细菌繁殖增长，会引起炎症，引起阴道炎、宫颈炎、子宫内膜炎，甚至盆腔炎。所以经期血还没干净就尽量不要同房，同房能破坏阴道的自洁作用，这样使得感染的机会增加，所以一定要注意这一点。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:56:47","updateTime":"2021-04-25 22:56:47","isExist":null},{"id":939,"question":"大姨妈不可以同房原因","simplecontent":"","content":"一般情况下，经期是不建议同房的。经期性生活会导致感染，有可能会引起子宫内膜异位症，这个对将来的怀孕生育会有不利的影响。一般经期是五天到七天，或者三天到七天左右，月经干净就可以同房，但是有部分女性五天一般月经就会干净，但过一两天还会出现在出血的情况，这种情况需要暂时避免同房。如果月经没有完全干净，同房会造成感染和炎症的情况。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:55:12","updateTime":"2021-04-25 22:55:12","isExist":null},{"id":938,"question":"大姨妈是月经吗","simplecontent":"","content":"您好，月经就是俗话说的大姨妈，月经期间避免同房，以免引起妇科炎症。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:54:10","updateTime":"2021-04-25 22:54:10","isExist":null},{"id":937,"question":"避孕时间","simplecontent":"","content":"如月经周期一直准确，排卵可能在月经来潮后的第14天，卵细胞排出后，大约能存活2-5天，精子进入女性生殖道可存活1-3天，因此，在排卵期前3-4天和排卵期后5-7天性交可避免怀孕。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:51:46","updateTime":"2021-04-25 22:51:46","isExist":null},{"id":936,"question":"女生一个月排卵多少次","simplecontent":"","content":"通常来讲女性一个月经周期内只排一次卵，并且卵子有一定的存活时间（相关阅读：卵子存活时间），安全期就是避开了这段时间，所以才相对安全，但是偶尔也会有提前或推后排卵的情况，甚至会出现一个月经周期内排两次卵的情况，这就很可能导致意外怀孕。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:51:08","updateTime":"2021-04-25 22:51:08","isExist":null},{"id":935,"question":"女性安全期","simplecontent":"","content":"安全期是女性月经的前5天和后4天。排卵日前后的十天称为排卵期。因为在排卵期内性交容易受孕，所以排卵期又称为易受孕期或危险期。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:50:39","updateTime":"2021-04-25 22:50:39","isExist":null},{"id":934,"question":"记月经的软件哪个好用","simplecontent":"","content":"　　现在市场上出现了很多关于女性生理期记录的软件,什么美柚、大姨吗、优谈大姨妈等等都是经期助手软件。“偶姨妈”板块是帮助记录生理期的,还有体重、体温、心情等各方面的记录,可以根据生理周期进行提醒各方面的宜忌等。大姨妈设有交流社区“资女帮”,可以发布资讯或者是和其他用户进行交流。“资女帮”内容比较全面、丰富,覆盖面较广,有用的信息很多。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:49:30","updateTime":"2021-04-25 22:49:30","isExist":null},{"id":933,"question":"公立医院和私立医院有什么区别？","simplecontent":"","content":"病情分析：公立医院与私立医院的区别为私立医院费用较高，私立医院为民营医院，是具有一定财力的人建立的，服务较好，而公立医院是有编制的医院，是由财政拨款建造的，比较稳定，二者医疗技术没有区别，并且都各有优点。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:47:20","updateTime":"2021-04-25 22:47:20","isExist":null},{"id":932,"question":"医院最容易纠纷的科室","simplecontent":"","content":"由于现在我们国家的医疗环境特别的差，急诊又是最容易出现纠纷的地方，患者都极重，很多人并不会正确的对待这个事情，认为患者到了医院就必须要救活，所以出现了大量的纠纷，而这么多的纠纷也导致了从事急诊医学的医生越来越少了。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:46:28","updateTime":"2021-04-25 22:46:28","isExist":null},{"id":931,"question":"急诊治疗哪些","simplecontent":"","content":"一般面对的往往是那些重急症患者，一般都是120急救车拉过来例如，醉酒、夜间刀伤、打架等等。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:45:18","updateTime":"2021-04-25 22:45:18","isExist":null},{"id":930,"question":"女人有两大天敌","simplecontent":"","content":"一个叫没钱买\n\n一个叫又胖了","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:43:48","updateTime":"2021-04-25 22:43:48","isExist":null},{"id":929,"question":"全科医生啥病都能看？","simplecontent":"","content":"全科医生主要针对常见病多发病诊断和治疗，危重急症识别和转诊，而不是疑难杂症。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:43:24","updateTime":"2021-04-25 22:43:24","isExist":null},{"id":928,"question":"急诊和全科医生区别","simplecontent":"","content":"你好。全科医生和急诊医生区别还是很大。急诊医生不等于是全科医生。诚如您所见，急诊接待各种患者，但是急诊是一个综合科室 会从不同的专业科室找医生过来轮转，不同的病种由不同科室的专业医师接诊。并且急诊医生负责归类以及筛选病人，将需要住院以及进一步诊治的患者，送往相应的科室。如有任何疑惑请补充问题，谢谢！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:41:23","updateTime":"2021-04-25 22:41:23","isExist":null},{"id":927,"question":"五一厦门价格如何","simplecontent":"","content":"第一天（5.3）：抵达厦门，接机，入住酒店。抵达时间早，可以自由逛逛厦门市区周边，体验当地特色美食\n住：厦门\n\n第二天（5.4）：南普陀寺--厦大外观--厦门网红桥--5A景点鼓浪屿（万国建筑、毓园、港仔后沙滩、龙头路商业街）\n餐：早中\n住：厦门市区\n\n[玫瑰]第三天（5.5）：七彩环岛路环游--最文艺小渔村曾厝垵（美食小吃一条街）--滩涂赶海活动（赶海收获海鲜，可免费加工成美食）--集美学村--（赠送老院子民俗风情园或厦门玲灵动物王国）\n餐：早中餐\n结束愉快的行程，安排送站，返回温馨的家\n\n\n小雨拼的是服务，赚的是口碑：  \n包含准四住宿： 1150元/位\n不含住宿： 590元/位\n[爱心]费用包含：景点门票+鼓浪屿船票；\n[爱心]住宿：2晚住宿；\n[爱心]用车：根据人数安排用车，保证每人一正座；\n[爱心]用餐：2早餐，2正餐（不含住宿不含早餐）；\n[爱心]导游：持国证，幽默专业贴心导游服务；\n[爱心]保险：旅行社责任险；\n[爱心]接送：24小时接站/机服务。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:36:11","updateTime":"2021-04-25 22:36:11","isExist":null},{"id":926,"question":"乳腺癌如何防止","simplecontent":"","content":"乳腺外科专家介绍，预防记住 “3个1”，即1年1次专科检查，1月1次自我检查，1天1次乳房清洁。\n\n1年1次专科检查：每年要到医院由专科医生，根据身体情况进行超声或是X线检查，有条件者还可进行核磁共振检查。其中，超声和X线检查相结合可使乳腺癌诊断的准确率达到98%，可以说是黄金组合。\n\n1月1次自我检查：每个月都要对乳房进行自我检查，最好固定在月经后3~7天，如果自查时摸到乳房内有孤立、无痛，很硬的肿块，应尽早到医院排查是否患有乳腺癌。\n\n1天1次乳房清洁：每天临睡前最好对乳房进行清洁和保养，但要避免使用含有激素的丰胸产品。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:32:56","updateTime":"2021-04-25 22:32:56","isExist":null},{"id":924,"question":"十大肿瘤排名","simplecontent":"","content":"合并统计后，我国目前肿瘤发病居前10位的癌症依次为：肺癌、胃癌、肝癌、食管癌、结直肠癌、胰腺癌、乳腺癌、脑癌、白血病（血癌）、淋巴癌。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:30:32","updateTime":"2021-04-25 22:30:32","isExist":null},{"id":923,"question":"台积电技术如何","simplecontent":"","content":"台积电掌握着世界上最先进的芯片制造技术。台积电的技术储备十分充足，现在已经在代工生产5nm的芯片了，可以说，台积电的技术就代表着目前手机芯片最先进的技术，在全世界范围内也只有三星半导体可以和台积电硬碰硬。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:28:25","updateTime":"2021-04-25 22:28:25","isExist":null},{"id":921,"question":"台湾什么水果出名","simplecontent":"","content":"台湾盛产莲雾、释迦、凤梨、芒果、葡萄、香蕉、西瓜、草莓等水果。\n\n台湾盛产的部分水果介绍具体如下：\n\n1、莲雾\n\n莲雾是桃金娘科（Myrtaceae）赤楠属的热带常绿果树，原产马来半岛及安达曼群岛，目前仅东南亚地区有经济栽培。莲雾又名辈雾、琏雾、爪哇蒲桃。台湾莲雾的品质最佳，果实具有特殊的芳香，清脆可口，模样雅观。\n\n\n\n2、凤梨\n\n凤梨是菠萝的原名，原产巴西,南洋称凤梨.菠萝是一种原产于中、南美洲的热带果树。目前，菠萝已广泛分布在南北回归线之间，成为世界重要的果树之一。\n\n菠萝果实营养丰富，果肉中除含有还原糖、蔗糖、蛋白质、粗纤维和有机酸外，还含有人体必需的维生素C、胡萝卜素、硫胺素、尼克酸等维生素，以及易为人体吸收的钙、铁、镁等微量元素。\n\n\n\n3、释迦\n\n台湾释迦（番荔枝）由荷兰人引入栽培，是世界五大热带名果之一。因其果形奇特，幼果外观像荔枝，又自“番邦”引入，故得其名；而其果实外表鳞目状似佛祖头饰，故又常称“释迦”果。鲜食的方法是在果实软化后为好。\n\n\n\n4、芒果\n\n别名：庵罗果。品种：芒果果实呈肾脏形，它的果实含有糖、蛋白质、粗纤维，芒果所含有的维生素A成分特别高，是所有水果中少见的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:25:13","updateTime":"2021-04-25 22:25:13","isExist":null},{"id":920,"question":"经济大省","simplecontent":"","content":"仅次于广东省、江苏省、山东省、浙江省和河南省","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:20:27","updateTime":"2021-04-25 22:20:27","isExist":null},{"id":919,"question":"台湾经济如何","simplecontent":"","content":"2017年台湾省的GDP换算成人民币是38702亿元人民币，在全国排名第六位，仅次于广东省、江苏省、山东省、浙江省和河南省这五个省份，但这五个省份的面积和人口都远超台湾省，因此，台湾省的人均GDP达到了16万元人民币左右的水平，超过了大陆31个省、直辖市和自治区，在全国仅稍逊于香港特区和澳门特区。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:19:03","updateTime":"2021-04-25 22:19:03","isExist":null},{"id":918,"question":"亚洲四小龙","simplecontent":"","content":"台湾省是我国经济发展水平最高的省份之一，它与韩国、新加坡和香港地区并称为“亚洲四小龙”。早在上世纪九十年代，台湾省就已经发展成为亚洲地区最富裕和最发达的经济体之一。2017年台湾省的经济总量达到5793亿美元，位居世界第22位，人均GDP也达到了2.46万美元。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:17:56","updateTime":"2021-04-25 22:17:56","isExist":null},{"id":917,"question":"台湾特色产业","simplecontent":"","content":"   第二，台湾专注于能源行业的创新，台湾岛内进口能源约98%，能源进口占国内生产总值的14%，主要依赖中国大陆和中东贸易，以及东南亚马来西亚的天然气合作等。台湾积极创新太阳能新能源，扩大风能与其他替代能源创新，专注于替代能源与多元化能源使用，并增加新能源投资，促进经济增长。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:17:11","updateTime":"2021-04-25 22:17:11","isExist":null},{"id":916,"question":"外国队中国投资","simplecontent":"","content":"截止2015年前对大陆投资最多的国家和地区。第一名，香港，占比50%强，第2名，英属维京群岛，大约12%，第3名，日本，大约10%，第四名，新加坡，9%，第五名，美国，接近5%，第六名，韩国，4.5%，台湾排在第七名，3.82%。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 22:11:03","updateTime":"2021-04-25 22:11:03","isExist":null},{"id":915,"question":"五一厦门酒店多少钱","simplecontent":"","content":"基本都订满了，费用是平常的5到10倍，大概在600到1200左右，平常是150","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 19:25:31","updateTime":"2021-04-25 19:25:31","isExist":null},{"id":914,"question":"北斗导航和gps区别","simplecontent":"","content":"就目前而言，GPS能为全球用户提供定位、导航、授时服务，定位精度达到6米以下。我国的北斗导航系统目前只有10颗卫星在运行，还不能全球覆盖，只能暂时为亚洲地区提供定位、导航、授时、通信服务。而且定位精度也只有25米左右。但我们的北斗导航系统有二项功能是GPS不具备的：通信和目标定位。要是装备了北斗系统终端接收器，双方或者多方之间就可以使用短信通信、聊天。GPS目前只能告诉使用者“我”在哪里，但北斗系统不但能告诉使用者“我”在哪里，还能告诉使用者“我的朋友”在哪里。等过一两年，我国的北斗系统全部30颗卫星组网完毕，那么，它也能全球通用，定位精度也能达到6米以下。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 17:00:09","updateTime":"2021-04-25 17:00:09","isExist":null},{"id":913,"question":"张柏芝的第三胎父亲是谁","simplecontent":"","content":"众所周知，张柏芝与前夫谢霆锋生有两个儿子。那张柏芝的这第三个儿子的父亲又是谁呢？早前网上曾有传言称离异后的张柏芝有跟一位新加坡富商在交往。这位新加坡富商是从事餐饮业的，年龄比张柏芝大许多。也曾有媒体称这位餐饮业富商疑似是张柏芝孩子的父亲。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 16:36:10","updateTime":"2021-04-25 16:36:10","isExist":null},{"id":912,"question":"厦门比较好玩景点","simplecontent":"","content":"厦门比较著名的景点有： 1、鼓浪屿。被誉为“海上花园”，这里四季如春，鸟语花香，据说是文艺青年心中最推崇的旅行地之一。 2、厦门大学。位于思明区思明南路422号，依山傍海，正大门与南普陀寺景区大门紧邻，另一边是美丽的海滨沙滩与胡里山炮台，被誉为“中国最美丽的校园之一”。校园中有芙蓉湖和情人谷等景点，静谧而浪漫。 3、南普陀寺。在厦门岛南部五老峰下，与厦门大学正大门紧邻，所以可以安排在同一天游览。南普陀寺的格局为三殿七堂，坐北朝南，依山面海，建筑风格具有独特的闽南特色。寺后崖壁“佛”字石刻，高一丈四尺，宽一丈，蔚为壮观。这里香火很旺盛，据说是一个很灵验的寺庙，游人络绎不绝。 4、环岛路和白城沙滩。全程31公里，路宽44-60米，环岛路上有很多租自行车的地方，单人、双人、多人带篷车都有，一般单人自行车10元1小时，建议租辆自行车，绕着环岛路骑行，聆听海浪，轻拂海风，是一种很美的享受。 白城沙滩位于厦门大学南部白城脚下，是演武大桥与胡里山炮台之间的一片美丽沙滩。不仅是厦大学生，更多的厦门市民和游客都喜欢来这里漫步、游戏、游泳和观赏夕阳，这里是天然的休闲公园。 5、曾厝垵。位于厦门岛东南，已有八百多年历史，原为临海渔村，三面环山，一面临海，是厦门现存最完善的也是唯一的原生态渔村，这里有很多家庭旅馆、青年客栈、富有情调的咖啡厅、餐吧、个性小店在此云集，和鼓浪屿相比，多的是一份安静从容。 还有一些公园：忠仑公园、铁路文化公园、海湾公园，白鹭洲公园等。还有园博苑、集美学村、钟鼓索道。有些景点需要门票 可以在小程序友艇上预定。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 14:13:39","updateTime":"2021-04-25 14:13:39","isExist":null},{"id":911,"question":"厦门5天游行程？","simplecontent":"","content":"第一天：抵达厦门，可逛市内周边，品尝特色美食\n\n第二天：南普陀寺--鼓浪屿--万国建筑--港仔后沙滩  \n\n第三天：集美学村--陈嘉庚故居--厦门大学（外观）--曾厝垵---七彩环岛路   \n\n第四天：南靖土楼-云水谣-和贵楼-怀远楼，“爸爸去哪儿拍摄地”-千年榕树群      \n\n第五天：帆船出海或者是滩涂赶海（二选一），结束愉快的行程\n\n5天下来不算我们从沈阳往返厦门的机票，人均费用才一千多，安排的酒店很赞哦~\n\n个人觉得这个5天行程确实不错，全程游玩很轻松，也没有任何强制性消费， 小雨不但做事认真负责，而且总是很有耐心的解答我提出的各种问题，只要你去厦门旅游，不论玩3天还是5天， 小雨都可以根据你的时间和兴趣景点安排一份适合你游玩的行程路线去厦门旅游找她绝不会错！表扬一下  小雨，帆船出海紫外线强，还会提醒你做好防晒，真的很细心！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 14:12:26","updateTime":"2021-04-25 14:12:26","isExist":null},{"id":910,"question":"厦门好玩的景点？","simplecontent":"","content":"【旅游】：曾厝垵、集美学村、南普陀寺、环岛路、中山路、厦门八市、厦门大学\n【鼓浪屿】：海滨浴场、转角遇到爱、万国建筑博览馆、日光岩\n【漳州】：南靖土楼群（为什么必去南靖？因为有著名的四菜一汤，还有云水谣）、火山岛、东山岛","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 14:10:26","updateTime":"2021-04-25 14:10:26","isExist":null},{"id":909,"question":"2020最火的歌手？华晨宇，周深，毛不易，张艺兴，蔡徐坤，肖战","simplecontent":"","content":"音乐是每个人日常中都离不开的一份精神食粮，虽然这几年华语音乐圈没有出现像周杰伦、林俊杰等这样级别的歌手，但还是有不少优秀的音乐人一直努力在路上。今年的乐坛，除了老人狂刷存在感外，还涌现出了不少新生代的歌手，他们的作品传唱度也非常高。今天，我们就来盘点2020年最当红的十大男歌手，看看你最喜欢谁？\n\n\n1、华晨宇\n\n华晨宇是这几年乐坛上不可忽视的一位男歌手，他独具一派的音乐风格越来越受到认可。唱功和实力更是毋庸置疑，加上他在综艺上的表现，让他成为商业价值较高的男歌手之一，火爆程度很不一般。\n\n\n2、周杰伦\n\n周杰伦作为国民级的男歌手，他的作品流传度非常高。今年虽然没有发专辑，但他还是发了一首《mojto》，朗朗上口的旋律让人听完，忍不住跟着哼唱。\n\n\n3、蔡徐坤\n\n蔡徐坤通过综艺节目选秀出道，出道时更是拿到了C位，是一个唱跳类歌手。今年因为一首《情人》出圈，音乐才华得到了肯定。更是凭借《青春有你2》圈了一大票路人粉，口碑也实现了大的逆袭。\n\n\n4、周深\n\n周深自出道以来，声音的辨识度非常高，但一直缺少一个机会。今天通过在《歌手》上的表现，让他的音乐受到了不少关注，他也成为今年上升趋势最明显的男歌手之一。\n\n\n5、肖战\n\n肖战今年的音乐成绩有点让人感觉到意外，因为227粉丝事件，他的口碑和人气都受到了不少冲击。但今年他发表了一首歌曲，这首歌曲在排行榜上的销量排行第一，超过了周杰伦。\n\n\n6、鹿晗\n\n鹿晗虽然今年在努力的转型做演员，音乐上也没落下。还和老队友黄子韬、吴亦凡进行了合作曲目，赚足了话题度和点击率。\n\n\n7、毛不易\n\n毛不易虽然出道的时间比较短，但因为几首代表作让毛不易的音乐能力受到肯定。他也成了国内很多电视剧主题曲插曲的第一人选，综艺上的频繁曝光对他的知名度和人气都有很大的提升。\n\n\n8、易烊千玺\n\n易烊千玺因为出演《少年的你》成功转型演员，他在音乐上也没停下来。前段时间上线了一张翻唱专辑《后座剧场》，他极具辨识度的声线，让人听完忍不住单曲循环，唱功也比之前有了一定的提升。\n\n\n9、张艺兴\n\n张艺兴这几年的人气值一直处于飙升的状态，凭借着出色的业务能力在内地娱乐圈站稳了脚跟。今年他在音乐上的成绩也非常亮眼，尤其是他在《我是唱作人》中的几首原创，让人看到了他音乐上的潜力。\n\n\n10、王源\n\n王源现在的标签是一名原创音乐人，曾去国外进修过一段时间的他，现在把事业的","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 14:05:22","updateTime":"2021-04-25 14:05:22","isExist":null},{"id":908,"question":"莆田有真鞋吗，假鞋多为什么很多人也会买？","simplecontent":"","content":"adidas，李宁，安踏，匹克，361°，中国乔丹等等，很多品牌的产品都是在莆田工厂完工并发往各个地区的，所以莆田出品的鞋，并不一定就是假鞋。这点相信各位不难理解，不存在说一个大规模工厂，其存在的目的只是为了造假这一说法，毕竟正品货单量大，收款快，流程成熟，真要论赚钱的话，工厂接单基本都是与大品牌合作为主。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:49:27","updateTime":"2021-04-25 13:49:27","isExist":null},{"id":907,"question":"莆田鞋子为什么这么假","simplecontent":"","content":"莆田之所以发展如此之好，是因为他们曾经为这些大牌代工，拥有丰富的经验。现在莆田拥有强大的产业链，要破坏其中的任一环节并不是特别容易。\n最初，莆田以假鞋闻名世界。现在，莆田已经克服了许多体育品牌问题。例如，Boost大底、Pimeknit的鞋身莆田鞋都能做到，再加上深深的缝线，真的很难区分真假，这种精湛的技术无疑吸引了许多假鞋经销商的目光。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:46:40","updateTime":"2021-04-25 13:46:40","isExist":null},{"id":906,"question":"福建和浙江如何显示","simplecontent":"","content":"广东，福建，浙江，上海","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:43:34","updateTime":"2021-04-25 13:43:34","isExist":null},{"id":905,"question":"广东附近省是","simplecontent":"","content":"福建厦门","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:42:41","updateTime":"2021-04-25 13:42:41","isExist":null},{"id":904,"question":"福建好玩地方","simplecontent":"","content":"福建比较为人所知的地方大概有三个：福州，泉州和厦门。最好玩的应该是厦门，比如说鼓浪屿，海景很不错","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:39:22","updateTime":"2021-04-25 13:39:22","isExist":null},{"id":903,"question":"离台湾最近的地方","simplecontent":"","content":"福建省平潭县海坛岛。\n\n海坛岛，亦称平潭岛，是中国第六大岛、福建省第一大岛，地处中国东南沿海，位于福建省平潭县境内，是平潭县主岛，距福州128公里，东面与台湾省新竹港相距仅68海里，是中国大陆距台湾最近处。\n\n海坛岛地处中国东南沿海，位于福建省平潭县境内，东临台湾海峡，西隔海坛海峡，与长乐市、福清市、莆田市为邻，南近莆田市南日岛，北望白犬列岛。距福州128公里，东面与台湾省新竹港相距仅68海里，是中国大陆距台湾最近处，成为中国东南海疆对台经贸和人文交往的重要窗口。海坛岛海岸蜿蜒曲折，岸线长达408公里","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:37:44","updateTime":"2021-04-25 13:37:44","isExist":null},{"id":902,"question":"福建省会是","simplecontent":"","content":"福州","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:36:11","updateTime":"2021-04-25 13:36:11","isExist":null},{"id":901,"question":"福建排名靠前城市","simplecontent":"","content":"泉州、福州、厦门、漳州、龙岩、莆田等排列靠前","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:35:35","updateTime":"2021-04-25 13:35:35","isExist":null},{"id":900,"question":"厦门市有几个区","simplecontent":"","content":"截至2020年10月，厦门市有6个市辖区，包括思明区、海沧区、湖里区、集美区、同安区、翔安区。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:34:12","updateTime":"2021-04-25 13:34:12","isExist":null},{"id":899,"question":"鼓浪屿在哪个城市","simplecontent":"","content":"厦门市思明区安海路","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:33:14","updateTime":"2021-04-25 13:33:14","isExist":null},{"id":898,"question":"为什么毛泽东不打台湾","simplecontent":"","content":"当时国民党还有200万，不熟悉海军，美国支援国民党海军\n西藏和南方还有这没有收复\n朝鲜战争开始了\n美国的自由言论阻碍","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 13:22:46","updateTime":"2021-04-25 13:22:46","isExist":null},{"id":895,"question":"定金和订金区别?","simplecontent":"","content":"<p>一般原则是订金可以退,定金不能退,但定金满足一定条件的可以返还,给付定金不履行合同义务的,无权请求返还定金,收取定金方不履行合同义务的,双倍返还定金。</p>","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-25 12:54:49","updateTime":"2021-04-25 12:54:50","isExist":null},{"id":897,"question":"姐弟恋，你们能接受几岁差距？想法不一致","simplecontent":"","content":"姐弟恋，差几岁都没有问题。\n\n但是什么时候结婚，什么时候生孩子是一个问题\n\n真正的年龄问题，不是你心里能接受比你大多少，还是比你小多少的。\n\n而是相爱但因为年龄无法统一的人生规划\n\n我想结婚，你想奋斗\n\n我想让你奶娃，你却觉得你还能再玩几年\n\n这才是问题的根本","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-20 17:04:25","updateTime":"2021-04-20 17:04:25","isExist":null},{"id":896,"question":"什么时候开始意识到自己老了？","simplecontent":"","content":"当你发现身边比你年轻的人开始增多时。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-20 17:00:25","updateTime":"2021-04-20 17:00:25","isExist":null},{"id":894,"question":"房贷不下来，房子订金会退吗?","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-19 17:21:09","updateTime":"2021-04-19 17:21:09","isExist":null},{"id":893,"question":"牛杂有哪些？","simplecontent":"","content":"牛肚、牛百叶、牛筋、猪耳","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-19 12:05:21","updateTime":"2021-04-19 12:05:21","isExist":null},{"id":892,"question":"脚尾指为什么会是瓣状？","simplecontent":"","content":"瓣状甲是一种常染色体单基因显性遗传性状。也就是说，如果你的小脚趾指甲是瓣状甲，那么你的父母中至少有一人长有瓣状甲。\n\n据了解，瓣状甲这种性状，绝大多数在5岁之后开始外显，形成肉眼可见的“两瓣”“三瓣”的指甲。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-19 09:22:27","updateTime":"2021-04-19 09:22:27","isExist":null},{"id":891,"question":"水泥可以用吹风筒吹干吗?不太好","simplecontent":"","content":"水泥需要水分增长强度，如果时间太短急于干燥，会影响水泥强度的。\n如果确实要急于干燥，可用白灰粉铺到潮湿的地面上，白灰粉有很强的吸湿作用。（注意，要用生石灰粉）","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-18 17:22:22","updateTime":"2021-04-18 17:22:22","isExist":null},{"id":890,"question":"长痘如何去掉?辛辣，甜，油腻，睡眠","simplecontent":"","content":"吃辣脸上长痘，首先，要停用辛辣刺激性食物，包括生葱、生蒜、浓茶、咖啡、辣椒、芥末，也需要避免饮用酒精类饮料。同时需要避免甜食以及油腻性饮食，要保持大便的通畅，保持心情愉悦，以及良好的休息和睡眠。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-18 01:00:43","updateTime":"2021-04-18 01:00:43","isExist":null},{"id":889,"question":"蛋糕会导致哪个位置长痘?","simplecontent":"","content":"病情分析：吃油炸食品、方便面、酥皮面包都会引发痘痘，以上这些食物如果吃多了的话经常会让你在第二天早上起床后发现脸上油光光的，如果连续一个礼拜都吃这类食物的话，你就等着痔疮来来敲你家大门吧。还有一些含有反式脂肪酸的食物，比如奶油蛋糕、酥皮面包和点心等这些食物如果经常食用也会让你长出恼人的痘痘，所以平时要少吃这些东西。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-18 01:00:16","updateTime":"2021-04-18 01:00:16","isExist":null},{"id":888,"question":"深圳公积金可以在哪里买房？东莞，中山","simplecontent":"","content":"根据东莞市住房公积金管理全面推行异地贷款、中山市住房公积金管理发布《关于增加深圳住房公积金缴存职工作为我市公积金异地贷款的对象的通知》，深圳缴存公积金的职工不分户籍，都可以向东莞、中山两市住房公积金管理申请贷款购房，深圳市住房公积金管理将协助职工办理深圳公积金缴存证明。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 23:51:31","updateTime":"2021-04-17 23:51:31","isExist":null},{"id":886,"question":"老年人容易得什么病？脑，神经，心，呼吸，肾，内分泌","simplecontent":"","content":"老年人易患疾病如下：1、如脑血管疾病，即中风、脑梗塞、脑出血，还有就是脑腔梗；2、神经系统疾病，如老年性痴呆；3、心血管疾病，包括冠心病、心绞痛、高血压、心力衰竭、心律失常；4、呼吸系统，包括老慢支、支气管哮喘，终末期的就是呼吸衰竭；5、肾脏疾病，如慢性肾炎还有肾功能衰竭、尿毒症；6、内分泌疾病，即糖尿病，血脂异常。7、血液系统的疾病还是比较多见的，贫血也很常见；8、消化系统疾病，就是功能性消化不良或者其他疾病；9、肿瘤，随着年龄增长，肿瘤的发病率越来越高。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 16:39:26","updateTime":"2021-04-17 16:39:26","isExist":null},{"id":885,"question":"橘子吃多了 真的容易“上火”吗？会","simplecontent":"","content":"病情分析：吃橘子确实容易上火。主要是因为橘子属于一种热性的食物，吃了之后有可能会导致体内的火热堆积，出现胃热口臭、大便干燥等诸多上火现象；橘子是日常生活中常见的水果，味道酸甜可口，可以增进食欲，促进身体新陈代谢。里面含有的维生素c可以起到很好的抗氧化作用，能够美白皮肤、消肿淡斑。含有的果糖、果胶能够缓中止痛，增强人体的免疫力。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 14:45:19","updateTime":"2021-04-17 14:45:19","isExist":null},{"id":883,"question":"胃癌的经常吃什么？麻辣，酸菜","simplecontent":"","content":"她特别喜欢吃麻辣烫、凉皮、各种辣爆类的重口味食物，更喜欢吃腌制的各种酸菜、咸菜，这些食物基本每天都出现在她的餐桌上，十数年如一日。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:40:04","updateTime":"2021-04-17 09:40:04","isExist":null},{"id":882,"question":"外省哪个地方比较好玩？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:36:40","updateTime":"2021-04-17 09:36:40","isExist":null},{"id":879,"question":"五一出行，成都、重庆哪个更好？重庆，景点多，解放碑和洪崖洞和钓鱼城和南山","simplecontent":"","content":"重庆好玩一些，比如解放碑，洪崖洞，钓鱼城，南山，远一点三峡，武隆等","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:28:23","updateTime":"2021-04-17 09:28:23","isExist":null},{"id":878,"question":"怎样让女朋友自主的愿意去主动学习?","simplecontent":"","content":"兄弟啊，你要能研究出让一个不爱学习的人主动学习的办法，全世界的教师都得拜你为师，中学毕业班的班主任能排着队给你磕头。\n\n别劝人读书，除了自己碰一鼻子灰，没其他结果。我那口子一看书就犯困，我已经习惯了。\n\n还是别吧，女人一旦学习得多，见到优秀的人，事多，就会看不上身边的，转而去寻找更优秀的人了，别说我说得难听，这是事实，人都是有慕强心理的。\nlz你要自己女朋友学习，就是在变向得把她推给别人，除非她有绝对离不开你的理由，比如你们共同的孩子","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:26:04","updateTime":"2021-04-17 09:26:04","isExist":null},{"id":877,"question":"多座容易抢到票吗?难","simplecontent":"","content":"一次性抢四张票当然难度大，相对来说，自然是一张一张地抢要容易一些。只不过一张一张地抢有可能导致你们4个人被分到不同的火车上。有些线路是一开售就秒没的，什么抢票软件都抢不到，通过携程抢票，一旦出现有退票的情况，抢到的成功率会很高，肯定比自己眼睛盯着要好的，祝你好运！","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:24:12","updateTime":"2021-04-17 09:24:12","isExist":null},{"id":876,"question":"最受女生欢迎的男生身高排名，你是排第几呢？180,178,183,175","simplecontent":"","content":"180,178,183,175","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:21:39","updateTime":"2021-04-17 09:21:39","isExist":null},{"id":875,"question":"应届毕业生女生一个人去深圳危不危险，会不会不小心进传销?安全，但看公司是否靠谱","simplecontent":"","content":"如果步入社会之前很少接触过社会，建议还是找个人一起为好，你这样子很大概率处处碰壁。以前在深圳喜欢看午夜场的电影，凌晨三点多还有学生走在街头，隔一段路就有治安亭和一个小哥在站岗看视频。人身安全是没问题，但人心险恶，职场上也有很多危险的，这个哪都一样","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:20:32","updateTime":"2021-04-17 09:20:32","isExist":null},{"id":874,"question":"牛肉和羊肉哪个更湿热？羊肉","simplecontent":"","content":"说实话，这两样吃多了都比较上火。担比较而言的话，羊肉更易上火，羊肉具有温补作用，最宜在冬天食用。但羊肉性温热，常吃容易上火。因此，吃羊肉时要搭配凉性和甘平性的蔬菜，能起到清凉、解毒、去火的作用。凉性蔬菜一般有冬瓜、丝瓜、油菜、菠菜、白菜、金针菇、蘑菇、莲藕、茭白、笋、菜心等;而红薯、土豆、香菇等是甘平性的蔬菜。\n吃羊肉时最好搭配豆腐，它不仅能补充多种微量元素，其中的石膏还能起到清热泻火、除烦、止渴的作用。而羊肉和萝卜做成一道菜，则能充分发挥萝卜性凉，可消积滞、化痰热的作用。\n做羊肉的时候，调料的搭配作用也不可忽视。最好放点不去皮的生姜，因为姜皮辛凉，有散火除热、止痛祛风湿的作用，与羊肉同食还能去掉膻味。烹调羊肉时应少用辣椒、胡椒、生姜、丁香、小茴香等温辛燥热的调味品;可以放点莲子心，它有清心泻火的作用。\n另外，也可能对不同体质的人有不同影响。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:19:18","updateTime":"2021-04-17 09:19:18","isExist":null},{"id":873,"question":"现在越来越觉得男人还是单身好了？赚钱，受气","simplecontent":"","content":"现在真觉得跟女人结婚一堆屁事，赚钱给女人花还得受女人气，不憋屈吗，单身一个人赚钱一个人花，累了休息不累了就努力赚钱，为自己活，他不好吗","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 09:15:25","updateTime":"2021-04-17 09:15:25","isExist":null},{"id":871,"question":"xdm，考研如果抱一个清华大学没人报考的专业，会捡漏吗？宁缺毋滥","simplecontent":"","content":"你过不了线的，即使侥幸过了，复试照样刷。这种级别的大学对于研究生是宁缺毋滥","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 01:33:58","updateTime":"2021-04-17 01:33:58","isExist":null},{"id":870,"question":"男朋友每天打游戏不理我，害得我无事可做?","simplecontent":"","content":"容易吵架","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 01:32:45","updateTime":"2021-04-17 01:32:45","isExist":null},{"id":868,"question":"香港哪所大学最厉害？港大，港大中文，港大科技","simplecontent":"","content":"香港大学，香港中文大学，香港科技大学","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 01:26:19","updateTime":"2021-04-17 01:26:19","isExist":null},{"id":867,"question":"退裤子没有吊牌能退吗?不能","simplecontent":"","content":"江苏女子退换裤子被店家拒绝，店主：裤子上挂着内衣吊牌还有异味\n\n","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 01:24:08","updateTime":"2021-04-17 01:24:08","isExist":null},{"id":866,"question":"聊天要不要加表情?","simplecontent":"","content":"聊天不要动不动加表情，加表情加多了就是卑微想活跃气氛更主动。还有别动不动一个长句，不长不短不说废话最好，聊不下去的时候就不聊，不要硬找话题发些没营养，这样只会让对方觉得无趣。\n\n她这隔了这么久来了给你还没简单说两句，你这又是表情又是一大段，既然她主动找你，她又完全不知道你近况，肯定会主动问一些，你这么主动就会立马让对方觉得尽在掌握，随时都可以和你好，会失掉兴趣吊着你，骑驴找马的。","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-17 01:20:59","updateTime":"2021-04-17 01:20:59","isExist":null},{"id":865,"question":"饭菜放了多久不能吃吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:29:42","updateTime":"2021-04-13 12:29:42","isExist":null},{"id":864,"question":"碰到欠钱不还的，我该怎么办？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:18:07","updateTime":"2021-04-13 12:18:07","isExist":null},{"id":862,"question":"举办part需要邀请哪些人？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:17:29","updateTime":"2021-04-13 12:17:29","isExist":null},{"id":861,"question":"光控的灯如何？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:15:57","updateTime":"2021-04-13 12:15:57","isExist":null},{"id":859,"question":"练完手脚酸痛？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:14:24","updateTime":"2021-04-13 12:14:24","isExist":null},{"id":858,"question":"莲藕粉好吃吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:14:11","updateTime":"2021-04-13 12:14:11","isExist":null},{"id":856,"question":"五天游去哪里好？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:13:14","updateTime":"2021-04-13 12:13:14","isExist":null},{"id":855,"question":"去哪里的旅游最让你印象深刻？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:12:50","updateTime":"2021-04-13 12:12:50","isExist":null},{"id":854,"question":"对象比我大 家里条件比我好，这样好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:11:54","updateTime":"2021-04-13 12:11:54","isExist":null},{"id":852,"question":"深圳哪里单身女孩多？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:10:13","updateTime":"2021-04-13 12:10:13","isExist":null},{"id":851,"question":"开心果不开心？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:09:40","updateTime":"2021-04-13 12:09:40","isExist":null},{"id":850,"question":"如何拒绝让我去接人？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:09:18","updateTime":"2021-04-13 12:09:18","isExist":null},{"id":849,"question":"女人为什么会变心？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:08:24","updateTime":"2021-04-13 12:08:24","isExist":null},{"id":848,"question":"男生多大结婚好？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:07:44","updateTime":"2021-04-13 12:07:44","isExist":null},{"id":847,"question":"第一次住宿舍，怎么才能让他们四个怕我？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:07:18","updateTime":"2021-04-13 12:07:18","isExist":null},{"id":844,"question":"理性讨论，你愿意娶一个有过8段恋爱经验的女生，还是有一段8年恋爱经验的女生？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:04:08","updateTime":"2021-04-13 12:04:08","isExist":null},{"id":841,"question":"有些人天生就是主角，即使在角落里，他依旧光芒四射","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:01:04","updateTime":"2021-04-13 12:01:04","isExist":null},{"id":840,"question":"做梦梦到了高中时候暗恋的姑娘","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 12:00:20","updateTime":"2021-04-13 12:00:20","isExist":null},{"id":836,"question":"打完球最想做的事情是啥？\n喝水","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:55:34","updateTime":"2021-04-13 11:55:34","isExist":null},{"id":835,"question":"预约告诉我没号了，其实我根本没起床","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:54:20","updateTime":"2021-04-13 11:54:20","isExist":null},{"id":834,"question":"想问下结婚了的老哥们 当初都有求婚吗？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:53:48","updateTime":"2021-04-13 11:53:48","isExist":null},{"id":833,"question":"父母不愿意带孩子怎么办？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:52:25","updateTime":"2021-04-13 11:52:25","isExist":null},{"id":832,"question":"宝宝出生两个多月了，我妈就来看过一次，现在又非要来带孩子怎么办？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:52:17","updateTime":"2021-04-13 11:52:17","isExist":null},{"id":831,"question":"御姐为什么被叫阿姨？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:51:29","updateTime":"2021-04-13 11:51:29","isExist":null},{"id":830,"question":"御姐是如何？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:51:16","updateTime":"2021-04-13 11:51:16","isExist":null},{"id":827,"question":"兄弟们，被淘宝商家威胁了怎么办？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:47:55","updateTime":"2021-04-13 11:47:55","isExist":null},{"id":825,"question":"穿上女儿的校服、背上女儿的书包、像不像个中学生？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-13 11:45:21","updateTime":"2021-04-13 11:45:21","isExist":null},{"id":819,"question":"买房要在工作稳定后再买吗？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 16:18:06","updateTime":"2021-04-12 16:18:06","isExist":null},{"id":814,"question":"感情就像天平的两端，需要双方共同的付出，找到平衡点，感情才能长久；如何偏向一端，不想付出，只有一方喜欢另一方，这段关系不会幸福不会长久","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 15:55:17","updateTime":"2021-04-12 15:55:17","isExist":null},{"id":811,"question":"其实我是觉得没必要的 以后你和这个室友不是没有什么交集了吗，也不会见面， 不要为了一点面子情委屈自己","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 15:36:00","updateTime":"2021-04-12 15:36:00","isExist":null},{"id":810,"question":"关系不好的大学室友结婚，邀请我去，去还是不去？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 15:35:43","updateTime":"2021-04-12 15:35:43","isExist":null},{"id":808,"question":"深圳有什么乐队？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 15:33:41","updateTime":"2021-04-12 15:33:41","isExist":null},{"id":807,"question":"老鼠钻洞很厉害，我新弄的老鼠洞被挖开了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 15:12:09","updateTime":"2021-04-12 15:12:09","isExist":null},{"id":805,"question":"我上个月开始跳绳，从开始500下都觉得坚持不下来到现在可以跳6000下，差不多1小时多点，主要是老是绊脚又得开始，一个月现在体重剪了8斤左右，那时候我身高160，体重118斤，现在体重就在109和110，好几天了没掉了，前几天每天早上去称都有惊喜！现在还是坚持在继续跳！","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 15:07:57","updateTime":"2021-04-12 15:07:57","isExist":null},{"id":801,"question":"拖沓如何快速学习？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:54:06","updateTime":"2021-04-12 14:54:06","isExist":null},{"id":800,"question":"女生的发型重要吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:53:52","updateTime":"2021-04-12 14:53:52","isExist":null},{"id":799,"question":"男朋友不开心，作为女朋友应该怎么哄呀","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:50:40","updateTime":"2021-04-12 14:50:40","isExist":null},{"id":798,"question":"怀孕俩月了，给孩子起个名字，必须有两个人姓都带上可以吗？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:50:12","updateTime":"2021-04-12 14:50:12","isExist":null},{"id":797,"question":"男生扮演女生的撒娇动作？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:47:11","updateTime":"2021-04-12 14:47:11","isExist":null},{"id":796,"question":"讨论一个话题太久如何控场，下一个话题？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:43:51","updateTime":"2021-04-12 14:43:51","isExist":null},{"id":795,"question":"丘比特是什么？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:43:34","updateTime":"2021-04-12 14:43:34","isExist":null},{"id":792,"question":"跨省买房有必要吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:38:23","updateTime":"2021-04-12 14:38:23","isExist":null},{"id":791,"question":"男朋友第一次谈恋爱有些用力过猛，我该怎么提醒他？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 14:37:53","updateTime":"2021-04-12 14:37:53","isExist":null},{"id":787,"question":"北方不管去哪商店超市 家 不是有暖气就有空调 出门只需要冷一小会儿就行 南方是持续伤害 外面和里面一样冷 我南方这边有冰雕馆 我穿着短袖进去玩一圈也不会觉得特别冷","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 11:35:19","updateTime":"2021-04-12 11:35:19","isExist":null},{"id":786,"question":"南方有点冷，还能承受，北方有暖气，舒服，我们中部地区最苦逼，又冷还没有暖气","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-12 11:34:19","updateTime":"2021-04-12 11:34:19","isExist":null},{"id":785,"question":"佛山的特长就是锁车","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-07 00:06:45","updateTime":"2021-04-07 00:06:45","isExist":null},{"id":783,"question":"可以缓解腹泻的食物有白粥，面食，苹果，酸石榴，豆制品等。对于腹泻的患者平时饮食方面要以清淡易消化为主，白粥是不错的选择，患者还可以在白粥里面加入少许的食盐，可以补充因腹泻而流失的钠元素。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:38:22","updateTime":"2021-04-06 22:38:22","isExist":null},{"id":782,"question":"肚子痛吃什么好？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:31:44","updateTime":"2021-04-06 22:31:44","isExist":null},{"id":781,"question":"肚子痛怎么办？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:31:38","updateTime":"2021-04-06 22:31:38","isExist":null},{"id":780,"question":"老是放屁是什么原因？\n人体肛门排气一部分是咽下的气体，另一部分是由于食物在分解过程中产生的气体所导致的。如果放屁的次数频度明显增加，则是由于胃肠道的消化功能下降或者由于某些特殊的疾病导致的，比如肿瘤。患者需要经过正规的检查判断是否存在恶性的病变，没有恶性的病变可以服用助消化的药物。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:31:27","updateTime":"2021-04-06 22:31:27","isExist":null},{"id":779,"question":"如何让家里温馨一点","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:30:37","updateTime":"2021-04-06 22:30:37","isExist":null},{"id":777,"question":"吃之前要用盐水泡半小时左右，因为菠萝的果肉中含有一种“菠萝酶”，这种酶能够分解蛋白质。如果不用盐水先泡就吃，这种酶对于口腔粘膜和嘴唇的幼嫩表皮有刺激作用，会使我们感一种麻刺痛的感觉。\n\n而食盐水能破坏这种酶，如果浸泡时间不够，菠萝酶没有完全失去活性，依然可能造成过敏。不过如果浸泡时间太长也不行，不但会造成菠萝的营养过多流失，还因为菠萝含糖丰富，一直泡在水里，容易滋生细菌。\n\n菠萝最佳的食用时间是用盐水泡半个小时左右，可以避免以上所有问题，还能让菠萝更加香甜。\n\n\n\n扩展资料：\n\n菠萝的好处\n\n1、生津止渴\n\n菠萝是一种含水量十分高的水果，每100克菠萝就含有87.1克的水分，因而可以很好的帮助人体补充水分，既达到解渴的效果同时也有利尿的作用。\n\n2、开胃消食\n\n吃菠萝对于肠胃有很好的促消化作用，因而肠胃消化不良的时候，吃些菠萝可以改善，此外，其中含有的纤维素可以促进肠道蠕动，起到排便的作用，进而能预防便秘。\n\n3、养颜美容\n\n前面我们提到，菠萝当中含有丰富的维生素，其中维生素B可帮助滋养肌肤，维生素C可以起到抗氧化作用和增强免疫力作用。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:29:43","updateTime":"2021-04-06 22:29:43","isExist":null},{"id":776,"question":"凤梨泡盐水需要多久？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:27:44","updateTime":"2021-04-06 22:27:44","isExist":null},{"id":775,"question":"足疗赚钱吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:26:39","updateTime":"2021-04-06 22:26:39","isExist":null},{"id":774,"question":"如何摘草莓","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:26:26","updateTime":"2021-04-06 22:26:26","isExist":null},{"id":773,"question":"如何做蛋糕","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:26:17","updateTime":"2021-04-06 22:26:17","isExist":null},{"id":772,"question":"广州幼儿园费用是多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:26:12","updateTime":"2021-04-06 22:26:12","isExist":null},{"id":771,"question":"上海的生育率很低，幼儿园一个8000了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:26:01","updateTime":"2021-04-06 22:26:01","isExist":null},{"id":770,"question":"商场捉娃娃太难了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:25:34","updateTime":"2021-04-06 22:25:34","isExist":null},{"id":769,"question":"天天合代码，改动不少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:25:22","updateTime":"2021-04-06 22:25:22","isExist":null},{"id":768,"question":"微信表情加到999好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:25:09","updateTime":"2021-04-06 22:25:09","isExist":null},{"id":767,"question":"胡椒粉真的好吃吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:24:52","updateTime":"2021-04-06 22:24:52","isExist":null},{"id":766,"question":"行贿的商人会被处罚吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:24:42","updateTime":"2021-04-06 22:24:42","isExist":null},{"id":765,"question":"口罩能用多少天","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:24:28","updateTime":"2021-04-06 22:24:28","isExist":null},{"id":764,"question":"举报会减刑吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:24:14","updateTime":"2021-04-06 22:24:14","isExist":null},{"id":763,"question":"拍照用什么光线，软件好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:23:46","updateTime":"2021-04-06 22:23:46","isExist":null},{"id":762,"question":"孩子迷上手机怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:23:30","updateTime":"2021-04-06 22:23:30","isExist":null},{"id":761,"question":"3d打印是什么","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:23:19","updateTime":"2021-04-06 22:23:19","isExist":null},{"id":760,"question":"披萨好吃吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:22:58","updateTime":"2021-04-06 22:22:58","isExist":null},{"id":759,"question":"速度和菜味道那个更重要","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:22:50","updateTime":"2021-04-06 22:22:50","isExist":null},{"id":758,"question":"英镑和港币区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:22:35","updateTime":"2021-04-06 22:22:35","isExist":null},{"id":757,"question":"寸和米区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:22:21","updateTime":"2021-04-06 22:22:21","isExist":null},{"id":756,"question":"亩有多大","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:22:12","updateTime":"2021-04-06 22:22:12","isExist":null},{"id":755,"question":"充电宝赚钱，也啥单车升价被人吐槽","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:22:04","updateTime":"2021-04-06 22:22:04","isExist":null},{"id":754,"question":"旁边有人抽烟好恶心","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:21:45","updateTime":"2021-04-06 22:21:45","isExist":null},{"id":753,"question":"你们公司有季度考核吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:21:33","updateTime":"2021-04-06 22:21:33","isExist":null},{"id":752,"question":"清明加班吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:21:21","updateTime":"2021-04-06 22:21:21","isExist":null},{"id":751,"question":"拍照场景，不同姿势","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:21:13","updateTime":"2021-04-06 22:21:13","isExist":null},{"id":750,"question":"深圳价格优惠好看的服装品牌","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:20:58","updateTime":"2021-04-06 22:20:58","isExist":null},{"id":747,"question":"你有几个妹子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:17:56","updateTime":"2021-04-06 22:17:56","isExist":null},{"id":746,"question":"深圳学车多少钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:17:46","updateTime":"2021-04-06 22:17:46","isExist":null},{"id":745,"question":"小学有哪些科目","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:17:38","updateTime":"2021-04-06 22:17:38","isExist":null},{"id":744,"question":"小学内容大人不想做","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:17:30","updateTime":"2021-04-06 22:17:30","isExist":null},{"id":743,"question":"广东gdp和苏州如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:17:15","updateTime":"2021-04-06 22:17:15","isExist":null},{"id":742,"question":"苏州发展如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:17:04","updateTime":"2021-04-06 22:17:04","isExist":null},{"id":741,"question":"家里孩子没人看好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:16:57","updateTime":"2021-04-06 22:16:57","isExist":null},{"id":740,"question":"中秋和国庆是几号","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:16:45","updateTime":"2021-04-06 22:16:45","isExist":null},{"id":739,"question":"年龄下降是否起作用呢","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:16:28","updateTime":"2021-04-06 22:16:28","isExist":null},{"id":738,"question":"安卓很多广告啊","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:16:13","updateTime":"2021-04-06 22:16:13","isExist":null},{"id":737,"question":"足球谁最出名","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:15:55","updateTime":"2021-04-06 22:15:55","isExist":null},{"id":736,"question":"父母的生日是几号","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:15:43","updateTime":"2021-04-06 22:15:43","isExist":null},{"id":735,"question":"父母的偶像","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:15:35","updateTime":"2021-04-06 22:15:35","isExist":null},{"id":734,"question":"基金一定稳定吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:15:24","updateTime":"2021-04-06 22:15:24","isExist":null},{"id":733,"question":"河南话是如何的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:15:11","updateTime":"2021-04-06 22:15:11","isExist":null},{"id":732,"question":"老板拖欠工资吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:15:04","updateTime":"2021-04-06 22:15:04","isExist":null},{"id":731,"question":"你们几号发工资","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:14:56","updateTime":"2021-04-06 22:14:56","isExist":null},{"id":730,"question":"吴孟达有多少部戏","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:14:49","updateTime":"2021-04-06 22:14:49","isExist":null},{"id":729,"question":"学校乱安排工作到工厂如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:14:36","updateTime":"2021-04-06 22:14:36","isExist":null},{"id":728,"question":"我们有导师吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:14:18","updateTime":"2021-04-06 22:14:18","isExist":null},{"id":727,"question":"猪肉准备降价了吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:14:09","updateTime":"2021-04-06 22:14:09","isExist":null},{"id":726,"question":"回南天什么意思","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:14:00","updateTime":"2021-04-06 22:14:00","isExist":null},{"id":725,"question":"中国人寿被罚51万如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:13:47","updateTime":"2021-04-06 22:13:47","isExist":null},{"id":724,"question":"有好吃的回来的慢还有的吃吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:13:30","updateTime":"2021-04-06 22:13:30","isExist":null},{"id":723,"question":"尴尬的场景有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:11:55","updateTime":"2021-04-06 22:11:55","isExist":null},{"id":722,"question":"澳门值得去的地方有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:11:45","updateTime":"2021-04-06 22:11:45","isExist":null},{"id":721,"question":"为什么内陆明星那么多粉丝","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:11:28","updateTime":"2021-04-06 22:11:28","isExist":null},{"id":720,"question":"香港明星和内陆比如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:11:18","updateTime":"2021-04-06 22:11:18","isExist":null},{"id":719,"question":"培训机构多少钱，值得去那","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:10:52","updateTime":"2021-04-06 22:10:52","isExist":null},{"id":718,"question":"香港没落原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:10:42","updateTime":"2021-04-06 22:10:42","isExist":null},{"id":717,"question":"二手房和新房差价多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:10:31","updateTime":"2021-04-06 22:10:31","isExist":null},{"id":716,"question":"一套房多少钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:10:22","updateTime":"2021-04-06 22:10:22","isExist":null},{"id":715,"question":"明天计划有吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:10:03","updateTime":"2021-04-06 22:10:03","isExist":null},{"id":714,"question":"领导力是什么","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:09:55","updateTime":"2021-04-06 22:09:55","isExist":null},{"id":713,"question":"苹果多少钱一箱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:09:39","updateTime":"2021-04-06 22:09:39","isExist":null},{"id":712,"question":"身高多少现在人","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:09:29","updateTime":"2021-04-06 22:09:29","isExist":null},{"id":711,"question":"越南币值多少钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:09:20","updateTime":"2021-04-06 22:09:20","isExist":null},{"id":710,"question":"泰国水产品如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:09:08","updateTime":"2021-04-06 22:09:08","isExist":null},{"id":709,"question":"泰国和韩国资源有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:08:57","updateTime":"2021-04-06 22:08:57","isExist":null},{"id":708,"question":"俄国资源有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:08:24","updateTime":"2021-04-06 22:08:24","isExist":null},{"id":707,"question":"人口最多的国家","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:08:12","updateTime":"2021-04-06 22:08:12","isExist":null},{"id":706,"question":"哪个国家土地最大","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:08:04","updateTime":"2021-04-06 22:08:04","isExist":null},{"id":705,"question":"广东哪里下雪","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:07:51","updateTime":"2021-04-06 22:07:51","isExist":null},{"id":704,"question":"惠州好处，景点有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:07:42","updateTime":"2021-04-06 22:07:42","isExist":null},{"id":703,"question":"惠州买房条件","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:07:25","updateTime":"2021-04-06 22:07:25","isExist":null},{"id":702,"question":"惠州的房价如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:07:11","updateTime":"2021-04-06 22:07:11","isExist":null},{"id":701,"question":"东莞有啥好吃","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:06:56","updateTime":"2021-04-06 22:06:56","isExist":null},{"id":700,"question":"工作还有哪些考试","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:06:46","updateTime":"2021-04-06 22:06:46","isExist":null},{"id":699,"question":"华为编程多少年有效","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 22:06:34","updateTime":"2021-04-06 22:06:34","isExist":null},{"id":698,"question":"没用的，任何陷阱老鼠只会中计一次，之后不管用了，活着的老鼠不会再中计","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-06 21:28:11","updateTime":"2021-04-06 21:28:11","isExist":null},{"id":697,"question":"路边拍照的姿势？","simplecontent":null,"content":"<p><img class=\"loadingclass\" id=\"loading_kn0iqr9i\" src=\"http://154.91.145.146:8085/UEditor/themes/default/images/spacer.gif\" title=\"正在上传...\"/><img class=\"loadingclass\" id=\"loading_kn0ircs8\" src=\"http://154.91.145.146:8085/UEditor/themes/default/images/spacer.gif\" title=\"正在上传...\"/><img class=\"loadingclass\" id=\"loading_kn0irgm0\" src=\"http://154.91.145.146:8085/UEditor/themes/default/images/spacer.gif\" title=\"正在上传...\"/><img class=\"loadingclass\" id=\"loading_kn0irkbn\" src=\"http://154.91.145.146:8085/UEditor/themes/default/images/spacer.gif\" title=\"正在上传...\"/><img class=\"loadingclass\" id=\"loading_kn0iro52\" src=\"http://154.91.145.146:8085/UEditor/themes/default/images/spacer.gif\" title=\"正在上传...\"/></p>","filterContent":null,"type":"拍照","status":0,"createTime":"2021-04-03 00:27:39","updateTime":"2021-04-03 00:27:39","isExist":null},{"id":696,"question":"黑丝和网袜哪个更有诱惑？","simplecontent":null,"content":"","filterContent":null,"type":"衣服","status":0,"createTime":"2021-04-03 00:21:53","updateTime":"2021-04-03 00:21:53","isExist":null},{"id":695,"question":"丝袜和蕾丝的区别？","simplecontent":null,"content":"","filterContent":null,"type":"衣服","status":0,"createTime":"2021-04-03 00:21:30","updateTime":"2021-04-03 00:21:30","isExist":null},{"id":694,"question":"颜值和升高哪个更重要？身高，颜值没有安全感","simplecontent":null,"content":"","filterContent":null,"type":"恋爱","status":0,"createTime":"2021-04-03 00:20:00","updateTime":"2021-04-03 00:20:00","isExist":null},{"id":693,"question":"鸡尾酒在哪里有的买？","simplecontent":null,"content":"","filterContent":null,"type":"酒","status":0,"createTime":"2021-04-03 00:15:30","updateTime":"2021-04-03 00:15:30","isExist":null},{"id":691,"question":"鸡尾酒好喝吗？","simplecontent":null,"content":"","filterContent":null,"type":"酒","status":0,"createTime":"2021-04-03 00:15:09","updateTime":"2021-04-03 00:15:09","isExist":null},{"id":679,"question":"喝江小白的经历？","simplecontent":"","content":"<p>以前请客叫了韩国的真露，都听说过没喝过，客人喝了一口皱眉头，我为了打圆场，我说我喝吧，结果我喝了一口也无论如何喝不下去了。</p><p>江小白比真露还难喝。</p><p><br/></p>","filterContent":null,"type":"酒","status":0,"createTime":"2021-04-03 00:14:53","updateTime":"2021-04-03 00:14:54","isExist":null},{"id":688,"question":"复读有什么好处？","simplecontent":"","content":"<p>心里压力很大，如果是意外考差可以复读，其实复读换一个更好的学校对你的学习影响不大<br/></p>","filterContent":null,"type":"读书","status":0,"createTime":"2021-04-03 00:14:04","updateTime":"2021-04-03 00:14:04","isExist":null},{"id":690,"question":"验证父子一起的DNA需要多少费用？","simplecontent":null,"content":"<p>父子做亲子鉴定一般费用是3000元左右，需要到专业的鉴定机构</p>","filterContent":null,"type":"生活","status":0,"createTime":"2021-04-03 00:10:27","updateTime":"2021-04-03 00:10:27","isExist":null},{"id":687,"question":"如何判断孩子是不是别人的？","simplecontent":"","content":"<p>验证DNA就可以了，使用头发</p>","filterContent":null,"type":"生活","status":0,"createTime":"2021-04-03 00:09:18","updateTime":"2021-04-03 00:09:19","isExist":null},{"id":678,"question":"江小白为什么那么难喝？","simplecontent":"","content":"<p>有这闲工夫做品牌还真的不如去研究一下产品&nbsp; 江小白真心难喝&nbsp; 我就买了一瓶 还是98一瓶500毫升的&nbsp; 喝了一口就不喝了&nbsp; 那个入口真正不如15块的牛栏山&nbsp; 而且搞个度数25度的白酒你兑凉白开呀&nbsp; 还有实在研究不出你找有技术的代工贴牌也好啊&nbsp; &nbsp;不要浪费了这个品牌</p>","filterContent":null,"type":"酒","status":0,"createTime":"2021-04-03 00:08:23","updateTime":"2021-04-03 00:08:24","isExist":null},{"id":667,"question":"手机摔了会坏成什么样子？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-03 00:05:02","updateTime":"2021-04-03 00:05:02","isExist":null},{"id":686,"question":"navicat注册特别麻烦？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-02 01:15:57","updateTime":"2021-04-02 01:15:57","isExist":null},{"id":670,"question":"拍照场景有哪些","simplecontent":"","content":"","filterContent":null,"type":"拍照","status":0,"createTime":"2021-04-02 01:13:20","updateTime":"2021-04-02 01:13:20","isExist":null},{"id":671,"question":"电脑的传输速度有多快","simplecontent":"","content":"","filterContent":null,"type":"电子","status":0,"createTime":"2021-04-02 01:13:02","updateTime":"2021-04-02 01:13:02","isExist":null},{"id":684,"question":"深圳确实需要反自己，不能再走房价暴长的老路，应该大力发展科技","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-01 23:02:05","updateTime":"2021-04-01 23:02:05","isExist":null},{"id":681,"question":"网络小说真的是骗人的，开头说免费，加入会员后看小说基本上是字字分分，没上千元一篇总归是看不到完的，还是买书看比较实惠。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-01 18:06:54","updateTime":"2021-04-01 18:06:54","isExist":null},{"id":680,"question":"华莱士确实有问题，我每次吃都拉稀。有一次我便秘，我都想买来华莱士当泻药[左捂脸]","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-04-01 09:51:56","updateTime":"2021-04-01 09:51:56","isExist":null},{"id":677,"question":"相亲墙要求180以上","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-31 10:38:43","updateTime":"2021-03-31 10:38:43","isExist":null},{"id":676,"question":"高大的男人比矮小的男人更显沉稳、伟岸、可靠。过低会显得无力、滑稽、弱小，过高则显得笨重、突兀、距离感太大。\n\n\n\n作为170的男性，要把重点转向发展男性的人格以及社会地位。\n\n如果你能够在穿着上得体帅气，性格上自信阳光，事业有成，谈笑风生，那么会吸引很多的女孩子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-31 10:38:27","updateTime":"2021-03-31 10:38:27","isExist":null},{"id":675,"question":"这房东肯定难说话，不能踫。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-30 23:15:27","updateTime":"2021-03-30 23:15:27","isExist":null},{"id":674,"question":"深圳中考，非深户想上公办高中，稳在班上前五、六名的学生才有希望。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-30 14:10:05","updateTime":"2021-03-30 14:10:05","isExist":null},{"id":673,"question":"数据上说深圳中考整体录取率45％左右，但是非深户只有18％","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-30 14:08:45","updateTime":"2021-03-30 14:08:45","isExist":null},{"id":672,"question":"如何去掉一些坏习惯","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-30 04:10:18","updateTime":"2021-03-30 04:10:18","isExist":null},{"id":669,"question":"拍照买什么衣服比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-30 04:09:49","updateTime":"2021-03-30 04:09:49","isExist":null},{"id":668,"question":"拍照什么姿势比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-30 04:09:40","updateTime":"2021-03-30 04:09:40","isExist":null},{"id":665,"question":"什么周大福、周生生、周福生、周金生、周六福之类的。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 21:37:02","updateTime":"2021-03-29 21:37:02","isExist":null},{"id":664,"question":"大部分品牌都有专柜专供和电商专供，专柜款必须得在实体店卖，网上旗舰店是没有的。不过也有实体店的老板偷偷拿到网上卖，价格比实体店稍微便宜一点。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 14:59:03","updateTime":"2021-03-29 14:59:03","isExist":null},{"id":663,"question":"你可以记住货号，然后淘宝输入牌子加货号。\n如果没有记住货号，例如你看上fiveplus一款羽绒服，你可以输入：fiveplus 羽绒服 代购。我最近商场看上的衣服这样都搜出来了，不过正品的代购基本打65折左右，太便宜的基本是高仿，还不如等打折季店里都是5折的。。也可以找原单，拉夏我买到一款原单的大衣，原价699，买到159，质量不好，比对了是正品，可是拉夏的质量不敢恭维，退掉了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 14:58:46","updateTime":"2021-03-29 14:58:46","isExist":null},{"id":662,"question":"因为公司保护实体，所以网上的商品都不是最新的，或者说，更新很慢","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 14:58:27","updateTime":"2021-03-29 14:58:27","isExist":null},{"id":658,"question":"穷男生有什么特点？\n首先，我不喜欢吃拉面和沙县小吃。第二我衣服也没什么logo。第三头我发两边长，中间没头发。第四我不喜欢洗头，不只是早上，啥时候都不喜欢洗。第五我不喜欢和饮料，我喜欢喝白开。第六我手机上没淘宝。第七不穿篮球鞋，我都是布鞋。\n然后钱呢？我得钱呢？让你们这些女的给我偷走了吗？？？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 05:25:29","updateTime":"2021-03-29 05:25:29","isExist":null},{"id":656,"question":"女生的阴毛需要刮吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 05:21:32","updateTime":"2021-03-29 05:21:32","isExist":null},{"id":655,"question":"中东的石油比扩泉水便宜","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 05:21:05","updateTime":"2021-03-29 05:21:05","isExist":null},{"id":654,"question":"基金经理都是嘴炮？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:59:01","updateTime":"2021-03-29 04:59:01","isExist":null},{"id":653,"question":"喝完酒给人家送感冒药，能活着都算幸运的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:58:02","updateTime":"2021-03-29 04:58:02","isExist":null},{"id":652,"question":"要不要接别人的烟？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:56:26","updateTime":"2021-03-29 04:56:26","isExist":null},{"id":651,"question":"我就想知道为什么道士大多是瘦子，和尚多有肥头大耳的？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:56:09","updateTime":"2021-03-29 04:56:09","isExist":null},{"id":650,"question":"我现在谈的女朋友也比我小12岁   我感觉压力好大","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:54:08","updateTime":"2021-03-29 04:54:08","isExist":null},{"id":649,"question":"找个年龄多大的女朋友比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:53:55","updateTime":"2021-03-29 04:53:55","isExist":null},{"id":648,"question":"lv理论不低于5000元，低于5000就是假的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:53:10","updateTime":"2021-03-29 04:53:10","isExist":null},{"id":647,"question":"深圳生三胎可以不交罚款吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:46:30","updateTime":"2021-03-29 04:46:30","isExist":null},{"id":646,"question":"深圳生三胎会被罚款多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:46:20","updateTime":"2021-03-29 04:46:20","isExist":null},{"id":645,"question":"没有验出dna 说是因为肥皂擦过 那为什么能验出唇膏 推断跟人接吻（凶手是情人女的）","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:45:18","updateTime":"2021-03-29 04:45:18","isExist":null},{"id":644,"question":"学费能让班主任代收吗？\n我女儿学费也是班主任代收的。一班学生都是。60多人。我当时就害怕出这种事。果然还真有。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:41:28","updateTime":"2021-03-29 04:41:28","isExist":null},{"id":642,"question":"10后的重名率很好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:35:50","updateTime":"2021-03-29 04:35:50","isExist":null},{"id":641,"question":"亚洲女人跟欧美比了胸部差别很大","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:33:09","updateTime":"2021-03-29 04:33:09","isExist":null},{"id":640,"question":"现在存储什么好用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:24:25","updateTime":"2021-03-29 04:24:25","isExist":null},{"id":639,"question":"不同医院给出的诊断结果是不一样，说明了什么？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:23:35","updateTime":"2021-03-29 04:23:35","isExist":null},{"id":636,"question":"话又说回来，你微信不是比支付宝更赚钱？支付宝提现不要手续费，放余额宝还会有利息，放你微信里提现要手续费，利息也没有，这何止是空手套白狼","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:21:26","updateTime":"2021-03-29 04:21:26","isExist":null},{"id":635,"question":"他乡容不下灵魂！故乡安置不了肉身！","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:19:39","updateTime":"2021-03-29 04:19:39","isExist":null},{"id":634,"question":"绿水鬼手表如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:18:45","updateTime":"2021-03-29 04:18:45","isExist":null},{"id":633,"question":"槟榔有啥危害","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 04:17:26","updateTime":"2021-03-29 04:17:26","isExist":null},{"id":632,"question":"能不能这样，我说功能需求，然后直接生成代码","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:51:24","updateTime":"2021-03-29 03:51:24","isExist":null},{"id":631,"question":"清明的冥币看起来也比较真","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:44:31","updateTime":"2021-03-29 03:44:31","isExist":null},{"id":629,"question":"现在男生很难考得过女生，不管是理科还是文科，英语和语文难度比物理化数难度高，而且物理化数偏向于女生，几乎都是记忆力的题目，没有太多逻辑学习了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:32:06","updateTime":"2021-03-29 03:32:06","isExist":null},{"id":628,"question":"坐标上海:我表哥比我大4个月，我们2009年大学本科毕业，我表哥继续考研 硕士博士读下去。 我本科毕业直接进了外企，然后就贷款买房了，12年过去了！  我表哥博士了，某研究所工作工资12000 房子买不起 无趣老光棍一个！  我09年150万贷款买的房子已经涨到900多万了，我已经是公司中层管理了 年薪60W。   这就是男人高学历的下场！！！","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:28:56","updateTime":"2021-03-29 03:28:56","isExist":null},{"id":627,"question":"职场潜规则，在同等条件下，男生往往比女生更有竞争力。甚至男生的学历没有女生高，很多老板都会选择男生。一方面男生抗压能力强，可以接受更高强度的工作。同时没有产假，不会因为有了孩子分散太多注意力，会把更多精力投入到工作中。而且男生还可以从事很多体力工作，就业面和就业范围都比女生多。所以就算男生没有高学历，依然可以在社会上找一份合适的工作。但女生在职场上的就业和上升渠道就窄很多，只能通过学历来为自己镀金，让自己在职场选择上更有优势。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:28:02","updateTime":"2021-03-29 03:28:02","isExist":null},{"id":625,"question":"不得不承认，在中国现有的考试制度下，男生确实不占优势。男生的自控能力和记忆性明显不如女生，在死记硬背方面跟不上女生，努力程度也比不上女生。从初中开始，男生的辍学率就远远高于女生。等到考研的时候，光英语这一门就卡掉了很多男生，很多考研男生就败在了女生的手里，女生考研的成功率也高于男生。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:27:08","updateTime":"2021-03-29 03:27:08","isExist":null},{"id":624,"question":"我已经好几年没招到男研究生了，现在名下指导的清一色女生，我们这个专业每年考进来的男生很少，男生考不过女生也是既定事实，即使有个把男生也会把大佬抢走了，作为一名男导师，我还是觉得带男生比较方便。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:26:16","updateTime":"2021-03-29 03:26:16","isExist":null},{"id":623,"question":"为啥现在现在男研究生不好招","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:24:56","updateTime":"2021-03-29 03:24:56","isExist":null},{"id":622,"question":"套路贷是如何行成的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:24:19","updateTime":"2021-03-29 03:24:19","isExist":null},{"id":621,"question":"张宇春和周笔畅有啥区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 03:24:01","updateTime":"2021-03-29 03:24:01","isExist":null},{"id":620,"question":"怀孕能会胖多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 02:40:22","updateTime":"2021-03-29 02:40:22","isExist":null},{"id":619,"question":"最好吃的永远是自己附近的烧烤店哈哈","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 00:04:40","updateTime":"2021-03-29 00:04:40","isExist":null},{"id":618,"question":"店铺名字用的再好，也不如顾客的口碑相传，产品不行就是一次性消费","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-29 00:04:32","updateTime":"2021-03-29 00:04:32","isExist":null},{"id":617,"question":"简直是作死，你就不会装不知道吗？势不可去尽，话不可说尽，聪明不可用尽。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-28 20:52:18","updateTime":"2021-03-28 20:52:18","isExist":null},{"id":616,"question":"没有人有四五个就夸张了 毕竟隐形富豪啊 明星啊这类群体那么多 没那么好买是真的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-28 19:44:44","updateTime":"2021-03-28 19:44:44","isExist":null},{"id":615,"question":"现在的奶茶千万不要去做，绝大多数都是用的虚假宣传资料，包括带你去看的门店都是人家已经准备好的演员，如果你真的想去调查就建议你多去走访几个同品牌的店，千万不要听他们的安排带你去的地方，因为现在他们挣的就是加盟费，加盟费？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-28 16:22:56","updateTime":"2021-03-28 16:22:56","isExist":null},{"id":614,"question":"暂时无法清腾的房子谁会买？这也是乱搞，你拍卖的，至少把人清走了，没人住的空房子才行，还有人住里面，我买来，人家不搬，我又得打官司找法院，法院强制执行下来大半年了，还得花钱，这房子买来不是找麻烦","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-27 17:06:12","updateTime":"2021-03-27 17:06:12","isExist":null},{"id":613,"question":"相亲表白的话","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:32:23","updateTime":"2021-03-26 20:32:23","isExist":null},{"id":612,"question":"如何做一个有趣的自我介绍","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:30:18","updateTime":"2021-03-26 20:30:18","isExist":null},{"id":611,"question":"如何设置一个活动","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:30:04","updateTime":"2021-03-26 20:30:04","isExist":null},{"id":610,"question":"活动的流程是怎么样的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:29:58","updateTime":"2021-03-26 20:29:58","isExist":null},{"id":609,"question":"相亲的成功率如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:26:50","updateTime":"2021-03-26 20:26:50","isExist":null},{"id":608,"question":"共享衣服在深圳有吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:25:06","updateTime":"2021-03-26 20:25:06","isExist":null},{"id":607,"question":"深圳哪里找拍照的模特","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:24:38","updateTime":"2021-03-26 20:24:38","isExist":null},{"id":606,"question":"深圳入户真的好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:24:17","updateTime":"2021-03-26 20:24:17","isExist":null},{"id":605,"question":"深圳的住房补贴是怎么样的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:24:10","updateTime":"2021-03-26 20:24:10","isExist":null},{"id":604,"question":"新疆棉花存在劳动压榨是真实的吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:23:59","updateTime":"2021-03-26 20:23:59","isExist":null},{"id":603,"question":"hm是哪个国家的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:23:37","updateTime":"2021-03-26 20:23:37","isExist":null},{"id":602,"question":"m95是怎么样的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:23:05","updateTime":"2021-03-26 20:23:05","isExist":null},{"id":601,"question":"相亲能找到对象吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:22:47","updateTime":"2021-03-26 20:22:47","isExist":null},{"id":600,"question":"红米电池为啥不耐用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:21:36","updateTime":"2021-03-26 20:21:36","isExist":null},{"id":599,"question":"好看和学历高哪个更重要","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:21:21","updateTime":"2021-03-26 20:21:21","isExist":null},{"id":598,"question":"深圳好看妹子去哪里了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:21:09","updateTime":"2021-03-26 20:21:09","isExist":null},{"id":597,"question":"早上很困怎么眯眼","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:20:44","updateTime":"2021-03-26 20:20:44","isExist":null},{"id":596,"question":"客家话和粤语的区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:20:21","updateTime":"2021-03-26 20:20:21","isExist":null},{"id":595,"question":"广东的方言有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:20:01","updateTime":"2021-03-26 20:20:01","isExist":null},{"id":594,"question":"深圳有哪些是广东的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:19:52","updateTime":"2021-03-26 20:19:52","isExist":null},{"id":593,"question":"广东彩礼多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:19:31","updateTime":"2021-03-26 20:19:31","isExist":null},{"id":592,"question":"白酒是多少度","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 20:19:22","updateTime":"2021-03-26 20:19:22","isExist":null},{"id":591,"question":"香港的地铁线路基本都运营到晚上十二点半以后","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 19:46:58","updateTime":"2021-03-26 19:46:58","isExist":null},{"id":590,"question":"香港不分初中和高中，分为中一和中六六个年级，也就没有了中考这一环节","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 19:46:41","updateTime":"2021-03-26 19:46:41","isExist":null},{"id":589,"question":"香港的ATM机是先取卡后取钱，这是为了用户的用卡安全，防止有些人取出钱来一高兴就忘记拔卡了；","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 19:46:24","updateTime":"2021-03-26 19:46:24","isExist":null},{"id":588,"question":"香港赚钱深圳花","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 19:46:11","updateTime":"2021-03-26 19:46:11","isExist":null},{"id":587,"question":"香港的私立医院很贵，公立医院排队看病的人又太多了，所以很多人选择到深圳看病","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 19:45:58","updateTime":"2021-03-26 19:45:58","isExist":null},{"id":586,"question":"香港洗碗工月收入也可以过万，但是房价平均18万，买房子是按尺计算，千尺以上可以称之为豪宅","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-26 19:45:43","updateTime":"2021-03-26 19:45:43","isExist":null},{"id":585,"question":"机加这个东西，虽然我干十多年了，还是看不太懂，因为产品类型不一样，我的飞机发动机，材料都是高温合金钛合金的难加工，所以用的参数、走刀路线都是很注意的，看到网上一些加工零件，感觉为啥用的参数那么大，下刀很随意，也不用切削液","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-25 00:59:06","updateTime":"2021-03-25 00:59:06","isExist":null},{"id":583,"question":"为什么小孩打架，大人都不管","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-25 00:54:46","updateTime":"2021-03-25 00:54:46","isExist":null},{"id":582,"question":"给别人送练习题，哈哈","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-25 00:52:03","updateTime":"2021-03-25 00:52:03","isExist":null},{"id":580,"question":"比特币最大的价值就是割韭菜，请问以比特币交易的货物够一百个批萨了没？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 06:24:23","updateTime":"2021-03-24 06:24:23","isExist":null},{"id":579,"question":"房子捡漏靠谱吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 00:14:35","updateTime":"2021-03-24 00:14:35","isExist":null},{"id":578,"question":"上分吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 00:14:18","updateTime":"2021-03-24 00:14:18","isExist":null},{"id":577,"question":"被惦记的不是汤吧","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 00:11:58","updateTime":"2021-03-24 00:11:58","isExist":null},{"id":576,"question":"买东西真的能使人快乐吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 00:10:32","updateTime":"2021-03-24 00:10:32","isExist":null},{"id":575,"question":"工作发际线如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 00:09:09","updateTime":"2021-03-24 00:09:09","isExist":null},{"id":574,"question":"神话破灭！快递小哥月入过万仅有1.3%，半数月入不足5000","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-24 00:03:18","updateTime":"2021-03-24 00:03:18","isExist":null},{"id":573,"question":"，王者荣耀为了所有人都会玩，简化了moba游戏\n但是这种简化，吸粉快，人去得也快。\n因为我发现打上星耀之后就没什么好玩的了。\n回归正题。lol只不过是没有以前那么火\n请看清楚我的话，没有以前那么火。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:34:36","updateTime":"2021-03-23 23:34:36","isExist":null},{"id":572,"question":"王者荣耀和英雄联盟哪个会先凉？为什么？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:34:03","updateTime":"2021-03-23 23:34:03","isExist":null},{"id":571,"question":" 跳绳是最轻松的高效燃脂运动，运动前要做2-3分钟热身！","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:33:15","updateTime":"2021-03-23 23:33:15","isExist":null},{"id":570,"question":"深圳的老师工资多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:31:05","updateTime":"2021-03-23 23:31:05","isExist":null},{"id":569,"question":"毛泽东是湖南人吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:30:30","updateTime":"2021-03-23 23:30:30","isExist":null},{"id":568,"question":"说句扎心的话，假如这个星球上没有西方，那么我们肯定依然生活在大清朝，即便不是大清朝，也无非是另一个封建王朝而已，我们晚上还是点蜡烛，出门靠走路，只有达官贵人才能坐轿，我们不会有电力电脑手机网络汽车飞机等等。中国自身的文明根本无法完成进化和破壁，我们将会永远在无尽的王朝循环之中。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:23:06","updateTime":"2021-03-23 23:23:06","isExist":null},{"id":567,"question":"是什么阻碍了中国的文化发展？\n老祖宗厉害”这种思想真的害了很多人，特别是文化程度不高的朋友。正是因为文化水平不高，许多事情都掰扯不明白，解释不通，最后只能说“老祖宗厉害”。认真观察一下，只要是涉及到历史的问题，评论里总有“我们3000年前就有了”，“领先西方2000年”，“中国在古代是世界第一”，“我们在古代能吊打全世界”“中国有五千年文明”等等数不胜数，越是受教育程度低的人，越热衷于发这种评论。鲁迅很早就说过这种现象，其实就是阿Q精神，精神胜利法，当下被人欺负了，就自己安慰自己，“我祖上阔过”，但可惜的是你祖上从来没有阔过！","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:22:49","updateTime":"2021-03-23 23:22:49","isExist":null},{"id":566,"question":"如何提高记忆力","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:21:01","updateTime":"2021-03-23 23:21:01","isExist":null},{"id":565,"question":"如果先喝了可乐，然后再吞一颗曼妥思糖，胃会爆炸吗？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:19:23","updateTime":"2021-03-23 23:19:23","isExist":null},{"id":564,"question":"长高一定要打篮球吗\n没必要说必须打篮球，我没打篮球不也190cm嘛，你可以跑步 游泳 有氧运动","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 23:18:57","updateTime":"2021-03-23 23:18:57","isExist":null},{"id":562,"question":"火车上的屎怎么消失的？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:47:19","updateTime":"2021-03-23 22:47:19","isExist":null},{"id":561,"question":"为什么中国比在外国团结","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:46:23","updateTime":"2021-03-23 22:46:23","isExist":null},{"id":560,"question":"小米的100块钱的洗牙器如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:45:48","updateTime":"2021-03-23 22:45:48","isExist":null},{"id":559,"question":"为什么戴上口罩后颜值变好了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:45:01","updateTime":"2021-03-23 22:45:01","isExist":null},{"id":558,"question":"吃什么改善记忆力","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:44:25","updateTime":"2021-03-23 22:44:25","isExist":null},{"id":557,"question":"记忆力越来越差了吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:44:13","updateTime":"2021-03-23 22:44:13","isExist":null},{"id":556,"question":"有哪些好习惯","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:43:19","updateTime":"2021-03-23 22:43:19","isExist":null},{"id":554,"question":"合租难受吗，","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:42:16","updateTime":"2021-03-23 22:42:16","isExist":null},{"id":553,"question":"在日常中敢穿的太漂亮吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:40:32","updateTime":"2021-03-23 22:40:32","isExist":null},{"id":552,"question":"买手机应该买128G还是256G","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:40:01","updateTime":"2021-03-23 22:40:01","isExist":null},{"id":551,"question":"有些地方清明拜山的\n\n有些重阳节拜山的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:27:21","updateTime":"2021-03-23 22:27:21","isExist":null},{"id":550,"question":"家里的女人不能去参加拜山的，外嫁女更加不能参加自己的娘家人拜山。一个说法是坟地的阴气重，女人参加了对女人身体健康不好，一个说法是，外嫁女拜了娘家山，会发出娘女，而不发娘家的人","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:26:41","updateTime":"2021-03-23 22:26:41","isExist":null},{"id":549,"question":"茂名人拜山都是男人的主要工作，也是肩负着的家族承传的主要责任，不少的兄弟之间，平时由于某些问题导致关系有隔阂的，但是到了清明拜山的时候，大家都是互相来往","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 22:26:09","updateTime":"2021-03-23 22:26:09","isExist":null},{"id":548,"question":"破产先偿还哪里的工资","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 06:38:17","updateTime":"2021-03-23 06:38:17","isExist":null},{"id":547,"question":"提交为什么检查不出癌症","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 06:35:43","updateTime":"2021-03-23 06:35:43","isExist":null},{"id":546,"question":"“今天来的人真不少！”“这儿您从前来过吗？”“您和主人是在哪儿同过学？”“盆花养得真不错","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 06:00:24","updateTime":"2021-03-23 06:00:24","isExist":null},{"id":545,"question":"游戏容易做吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:26:22","updateTime":"2021-03-23 04:26:22","isExist":null},{"id":544,"question":"自己写个游戏插件多赚钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:26:11","updateTime":"2021-03-23 04:26:11","isExist":null},{"id":543,"question":"为什么肋骨那么容易断","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:24:53","updateTime":"2021-03-23 04:24:53","isExist":null},{"id":542,"question":"郭美美多高啊","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:24:37","updateTime":"2021-03-23 04:24:37","isExist":null},{"id":541,"question":"新学的舞蹈展示一下","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:23:10","updateTime":"2021-03-23 04:23:10","isExist":null},{"id":540,"question":"大厂实习骗局","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:21:26","updateTime":"2021-03-23 04:21:26","isExist":null},{"id":539,"question":"张柏芝怀孕3胎了，是不是准备怀孕第四胎","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 04:09:26","updateTime":"2021-03-23 04:09:26","isExist":null},{"id":538,"question":"过几天是不是更冷了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:12:49","updateTime":"2021-03-23 03:12:49","isExist":null},{"id":537,"question":"九阳是什么牌子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:12:29","updateTime":"2021-03-23 03:12:29","isExist":null},{"id":536,"question":"什么事前列腺","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:12:10","updateTime":"2021-03-23 03:12:10","isExist":null},{"id":535,"question":"女生问你送什么礼物给我，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:11:45","updateTime":"2021-03-23 03:11:45","isExist":null},{"id":534,"question":"面相靠谱吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:11:13","updateTime":"2021-03-23 03:11:13","isExist":null},{"id":533,"question":"面相如何看的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:11:01","updateTime":"2021-03-23 03:11:01","isExist":null},{"id":532,"question":"染头发好不好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:10:22","updateTime":"2021-03-23 03:10:22","isExist":null},{"id":531,"question":"染头发危害","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:10:09","updateTime":"2021-03-23 03:10:09","isExist":null},{"id":530,"question":"为什么用手势，不能说出来吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:09:44","updateTime":"2021-03-23 03:09:44","isExist":null},{"id":529,"question":"到处长痘\n屁股上长了个硬疙瘩，这种情况最常见考虑是毛囊炎。如果经常久坐，出汗比较多，熬夜，吃一些火锅，还有一些方便面，煎炒油炸类的食物，都很容易导致这种现象出现。出现了屁股长硬疙瘩的情况，注意不要用手抓挠，以免感染现象出现。可以服用中药清热解毒消炎，可以局部涂抹抹一些消炎的药膏，使用红霉素软膏，或者氧氟沙星凝胶，还可以使用中成药，冰黄软膏治疗。如果红肿疼痛明显，还要服用抗生素口服治疗。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:08:37","updateTime":"2021-03-23 03:08:37","isExist":null},{"id":528,"question":"在线教育琼泰有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:07:32","updateTime":"2021-03-23 03:07:32","isExist":null},{"id":527,"question":"为什么你这么晚","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:06:42","updateTime":"2021-03-23 03:06:42","isExist":null},{"id":526,"question":"家里附近有什么中草药","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:05:56","updateTime":"2021-03-23 03:05:56","isExist":null},{"id":525,"question":"为什么女生皱纹会这么多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:05:31","updateTime":"2021-03-23 03:05:31","isExist":null},{"id":524,"question":"大专和本科工作差别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:05:12","updateTime":"2021-03-23 03:05:12","isExist":null},{"id":523,"question":"男生盯着女生是啥","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:04:03","updateTime":"2021-03-23 03:04:03","isExist":null},{"id":522,"question":"瘦的好看还是胖的好看","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:03:32","updateTime":"2021-03-23 03:03:32","isExist":null},{"id":521,"question":"小时候梦到异性怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:02:51","updateTime":"2021-03-23 03:02:51","isExist":null},{"id":520,"question":"女生凉粗口怎么鬼","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:02:23","updateTime":"2021-03-23 03:02:23","isExist":null},{"id":519,"question":"玩密室逃脱时，女生一直牵着我的手","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:01:25","updateTime":"2021-03-23 03:01:25","isExist":null},{"id":518,"question":"拉稀咋么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:00:30","updateTime":"2021-03-23 03:00:30","isExist":null},{"id":517,"question":"微信交易提示存在风险怎么回事","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 03:00:18","updateTime":"2021-03-23 03:00:18","isExist":null},{"id":516,"question":"猫和狗哪个更喜欢养","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:59:00","updateTime":"2021-03-23 02:59:00","isExist":null},{"id":515,"question":"家里养哪些猫","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:58:46","updateTime":"2021-03-23 02:58:46","isExist":null},{"id":514,"question":"你有多少存款，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:58:31","updateTime":"2021-03-23 02:58:31","isExist":null},{"id":513,"question":"如何存款","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:58:19","updateTime":"2021-03-23 02:58:19","isExist":null},{"id":512,"question":"专8英语是干啥的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:58:05","updateTime":"2021-03-23 02:58:05","isExist":null},{"id":511,"question":"多大的洗衣机可以洗被子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:57:38","updateTime":"2021-03-23 02:57:38","isExist":null},{"id":510,"question":"女生第一次去男生家需要给红包吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:56:06","updateTime":"2021-03-23 02:56:06","isExist":null},{"id":509,"question":"超市的人如何辨别米的价格","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:55:28","updateTime":"2021-03-23 02:55:28","isExist":null},{"id":508,"question":"超市米的种类有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:55:15","updateTime":"2021-03-23 02:55:15","isExist":null},{"id":507,"question":"入党我什么用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:54:45","updateTime":"2021-03-23 02:54:45","isExist":null},{"id":506,"question":"玉石中哪种比较贵","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:53:50","updateTime":"2021-03-23 02:53:50","isExist":null},{"id":505,"question":"一般信用卡额度有多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:52:52","updateTime":"2021-03-23 02:52:52","isExist":null},{"id":504,"question":"爱猫云的2c2g一共是18元","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:44:34","updateTime":"2021-03-23 02:44:34","isExist":null},{"id":503,"question":"aimaoyun.com","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:44:08","updateTime":"2021-03-23 02:44:08","isExist":null},{"id":502,"question":"女生如何瘦脸","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:23:48","updateTime":"2021-03-23 02:23:48","isExist":null},{"id":501,"question":"中国， 国土面积963万平方公里，总人口14亿0531万人(2017年)；\n\n俄罗斯，国土面积1709万平方公里，人口1.441亿(2017年)；\n\n美国，国土面积937万平方公里，人口3.276亿(2017年)；\n\n加拿大，国土面积: 998万平方公里 人口0.3628亿（2016年）；\n\n印度，国土面积320万平方公里 人口13.042亿(2017年)。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:23:16","updateTime":"2021-03-23 02:23:16","isExist":null},{"id":500,"question":"国家规定彩礼不能超过3万是真的吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:21:48","updateTime":"2021-03-23 02:21:48","isExist":null},{"id":499,"question":"指甲油如何卸载","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:21:16","updateTime":"2021-03-23 02:21:16","isExist":null},{"id":498,"question":"10万存银行一年利息有多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:20:43","updateTime":"2021-03-23 02:20:43","isExist":null},{"id":497,"question":"日本人是中国的后裔吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:11:35","updateTime":"2021-03-23 02:11:35","isExist":null},{"id":496,"question":"淘宝里的问大家可信吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:11:14","updateTime":"2021-03-23 02:11:14","isExist":null},{"id":495,"question":"丑照做成微信表情包","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:10:50","updateTime":"2021-03-23 02:10:50","isExist":null},{"id":494,"question":"肉饼如何做的好吃","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:10:18","updateTime":"2021-03-23 02:10:18","isExist":null},{"id":493,"question":"冬天睡觉喉咙干","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 02:10:07","updateTime":"2021-03-23 02:10:07","isExist":null},{"id":492,"question":"云南有什么好玩的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:41:45","updateTime":"2021-03-23 00:41:45","isExist":null},{"id":491,"question":"草莓为什么那么可贵","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:41:01","updateTime":"2021-03-23 00:41:01","isExist":null},{"id":490,"question":"车厘子为什么那么贵","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:40:53","updateTime":"2021-03-23 00:40:53","isExist":null},{"id":489,"question":"快速优递如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:40:19","updateTime":"2021-03-23 00:40:19","isExist":null},{"id":488,"question":"物流哪个便宜","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:39:59","updateTime":"2021-03-23 00:39:59","isExist":null},{"id":487,"question":"一巴掌会导致鼓膜穿孔吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:39:35","updateTime":"2021-03-23 00:39:35","isExist":null},{"id":486,"question":"中国不同地区时间差别大吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:36:12","updateTime":"2021-03-23 00:36:12","isExist":null},{"id":485,"question":"手机丢失后说被刷机怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:35:41","updateTime":"2021-03-23 00:35:41","isExist":null},{"id":484,"question":"贷款逾期会怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:34:57","updateTime":"2021-03-23 00:34:57","isExist":null},{"id":483,"question":"哪些手机铃声好听","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:34:40","updateTime":"2021-03-23 00:34:40","isExist":null},{"id":482,"question":"纯净水是软水吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:34:24","updateTime":"2021-03-23 00:34:24","isExist":null},{"id":481,"question":"狗需要养几个月","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:34:08","updateTime":"2021-03-23 00:34:08","isExist":null},{"id":480,"question":"面部识别有什么危害","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:33:52","updateTime":"2021-03-23 00:33:52","isExist":null},{"id":479,"question":"苹果手机坏了去哪里修","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:33:29","updateTime":"2021-03-23 00:33:29","isExist":null},{"id":478,"question":"肥皂有杀菌作用吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:33:08","updateTime":"2021-03-23 00:33:08","isExist":null},{"id":477,"question":"为什么有些瓜子变黑发苦","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:32:51","updateTime":"2021-03-23 00:32:51","isExist":null},{"id":476,"question":"为什么手机一会连上wifi一会断开","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:32:29","updateTime":"2021-03-23 00:32:29","isExist":null},{"id":475,"question":"手机快充是什么意思","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:32:03","updateTime":"2021-03-23 00:32:03","isExist":null},{"id":474,"question":"银行卡如何注销","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:31:50","updateTime":"2021-03-23 00:31:50","isExist":null},{"id":473,"question":"如何劝说女朋友少喝酒","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:31:37","updateTime":"2021-03-23 00:31:37","isExist":null},{"id":472,"question":"私刻公章没有影响会触犯法律吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:31:22","updateTime":"2021-03-23 00:31:22","isExist":null},{"id":471,"question":"公司有哪些公章","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:30:57","updateTime":"2021-03-23 00:30:57","isExist":null},{"id":470,"question":"离婚需要什么条件法院才会判","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:30:31","updateTime":"2021-03-23 00:30:31","isExist":null},{"id":469,"question":"后补票是什么意思","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:30:05","updateTime":"2021-03-23 00:30:05","isExist":null},{"id":468,"question":"汤圆应该早上还是晚上吃","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:29:41","updateTime":"2021-03-23 00:29:41","isExist":null},{"id":467,"question":"手机怎么刷步数","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:29:26","updateTime":"2021-03-23 00:29:26","isExist":null},{"id":466,"question":"为什么医生不建议涂防晒霜","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:29:15","updateTime":"2021-03-23 00:29:15","isExist":null},{"id":465,"question":"父母的财力，情商会给后代带来多大的影响","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:28:44","updateTime":"2021-03-23 00:28:44","isExist":null},{"id":464,"question":"机器人研究了那么久，感觉没什么进展","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:28:18","updateTime":"2021-03-23 00:28:18","isExist":null},{"id":463,"question":"北方人来广东能吃的习惯这边食物吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:27:51","updateTime":"2021-03-23 00:27:51","isExist":null},{"id":462,"question":"南北方的食物差异那么大","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:27:33","updateTime":"2021-03-23 00:27:33","isExist":null},{"id":461,"question":"你的品味怎么这么重","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:27:11","updateTime":"2021-03-23 00:27:11","isExist":null},{"id":460,"question":"对于催婚的长辈，如何回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:26:44","updateTime":"2021-03-23 00:26:44","isExist":null},{"id":459,"question":"怀孕生产孩子之前需要多少医药费","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:26:25","updateTime":"2021-03-23 00:26:25","isExist":null},{"id":458,"question":"排位是一个区服的人打吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:25:58","updateTime":"2021-03-23 00:25:58","isExist":null},{"id":457,"question":"为什么游戏不共享区服","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:25:41","updateTime":"2021-03-23 00:25:41","isExist":null},{"id":456,"question":"你平常喜欢玩游戏吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-23 00:25:11","updateTime":"2021-03-23 00:25:11","isExist":null},{"id":455,"question":"如何快速涨工资","simplecontent":null,"content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:18:48","updateTime":"2021-03-22 12:18:48","isExist":null},{"id":454,"question":"紫苏作用","simplecontent":"","content":"<p>哈哈</p>","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:18:05","updateTime":"2021-03-22 12:18:06","isExist":null},{"id":453,"question":"打火锅吃什么菜好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:16:15","updateTime":"2021-03-22 12:16:15","isExist":null},{"id":452,"question":"肥牛是如何的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:16:06","updateTime":"2021-03-22 12:16:06","isExist":null},{"id":451,"question":"老夫老妻为什么老是吵架","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:15:50","updateTime":"2021-03-22 12:15:50","isExist":null},{"id":450,"question":"大姨妈喝红糖水好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:15:16","updateTime":"2021-03-22 12:15:16","isExist":null},{"id":449,"question":"电动车在网上还是线下买好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:14:55","updateTime":"2021-03-22 12:14:55","isExist":null},{"id":448,"question":"国标电动车配置","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:14:31","updateTime":"2021-03-22 12:14:31","isExist":null},{"id":447,"question":"肝脏能吃吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:14:14","updateTime":"2021-03-22 12:14:14","isExist":null},{"id":446,"question":"瘦的女生喜欢什么样男生","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:13:32","updateTime":"2021-03-22 12:13:32","isExist":null},{"id":445,"question":"瘦的男生喜欢什么样女生","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:13:21","updateTime":"2021-03-22 12:13:21","isExist":null},{"id":443,"question":"牛会咬人吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:12:36","updateTime":"2021-03-22 12:12:36","isExist":null},{"id":442,"question":"为什么动物很多蚊子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:12:27","updateTime":"2021-03-22 12:12:27","isExist":null},{"id":441,"question":"ktv是什么歌曲软件","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:12:13","updateTime":"2021-03-22 12:12:13","isExist":null},{"id":440,"question":"什么打印机比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:11:42","updateTime":"2021-03-22 12:11:42","isExist":null},{"id":439,"question":"这首是什么歌曲i hope you look me now","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:11:26","updateTime":"2021-03-22 12:11:26","isExist":null},{"id":438,"question":"女生为什么把男生当小孩","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:09:56","updateTime":"2021-03-22 12:09:56","isExist":null},{"id":437,"question":"汤很咸怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:09:20","updateTime":"2021-03-22 12:09:20","isExist":null},{"id":436,"question":"手机耗电快如何解决","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:09:01","updateTime":"2021-03-22 12:09:01","isExist":null},{"id":435,"question":"一天喝多少牛奶好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:08:14","updateTime":"2021-03-22 12:08:14","isExist":null},{"id":433,"question":"你有英文名字吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:07:48","updateTime":"2021-03-22 12:07:48","isExist":null},{"id":432,"question":"限高令是什么","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:07:13","updateTime":"2021-03-22 12:07:13","isExist":null},{"id":430,"question":"洗衣机换专用的水龙头","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:06:21","updateTime":"2021-03-22 12:06:21","isExist":null},{"id":429,"question":"洗衣机的水龙头很难弄紧","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:06:06","updateTime":"2021-03-22 12:06:06","isExist":null},{"id":428,"question":"内向的人\n一个性格内向的人，与人交往的过程中，通常都比较被动，很容易受到他人的影响。\n这样一个“随波逐流”的人，是很难在社交活动中掌握主动，赢得他人的认可的。其结果，不是导致自己格格不入，成为另类的一份子，就是害怕社交，宁愿过着独来独往的生活。\n而心理学的研究表明，构建人际影响力的核心，只有两个：喜爱和尊敬。\n“让人喜爱”的特质包括：有爱心、思路清晰、平易近人、有创造力、富有同情心等等。\n“让人尊敬”的特质包括：自信、坚定、以身作则、可以信赖、有原则等等。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:05:04","updateTime":"2021-03-22 12:05:04","isExist":null},{"id":427,"question":"改游戏名字","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:03:23","updateTime":"2021-03-22 12:03:23","isExist":null},{"id":426,"question":"冷战多久了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:02:57","updateTime":"2021-03-22 12:02:57","isExist":null},{"id":425,"question":"落户深圳容易吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:02:29","updateTime":"2021-03-22 12:02:29","isExist":null},{"id":424,"question":"虫草花是什么做成的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:01:02","updateTime":"2021-03-22 12:01:02","isExist":null},{"id":423,"question":"脾虚者的症状","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 12:00:32","updateTime":"2021-03-22 12:00:32","isExist":null},{"id":421,"question":"电梯是不是超出一定重量就不会停了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:55:27","updateTime":"2021-03-22 11:55:27","isExist":null},{"id":420,"question":"出国留学要考什么科目","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:53:02","updateTime":"2021-03-22 11:53:02","isExist":null},{"id":419,"question":"早睡和早起哪个更舒服\n早睡早起一天两天是感觉不到好处的，必须是长期坚持才可以有明显的效果，具体身体上会有7种变化。所以希望大家看完后可以更加的了解早睡早起的好处。\n1、长期的早睡早起，身体的新陈代谢就会越来越顺畅，所以自身的皮肤也会越变越好，其次黑眼圈也会变淡。\n2、早起的人时间充裕，不会觉得赶时间，各种来不及。这样一来心情也会觉得舒畅，同时也能避免因为赶时间而带来的焦虑情绪，从而减少患上抑郁症的风险。\n3、身体不容易长胖，因为熬夜的人会使身体发胖，所以早睡早起就没有这个问题。\n4、精神会变好，早起会让人变得更加积极，乐观。反之睡得多的人精神不一定好。\n5、注意力更集中，效率也会变得更高。\n6、早起会让身体状态变得越来越好，不容易生病，免疫力也会相应提高。因为睡眠不足会引发很多疾病。\n7、早睡早起会使人变得更和善，人际关系也会更好。通常睡眠时间过长，会使人暴躁，容易生气。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:52:42","updateTime":"2021-03-22 11:52:42","isExist":null},{"id":418,"question":"青菜一般什么时候播种","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:51:54","updateTime":"2021-03-22 11:51:54","isExist":null},{"id":415,"question":"没入住的毛胚房需要交物业费吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:43:55","updateTime":"2021-03-22 11:43:55","isExist":null},{"id":414,"question":"为什么女孩跟父母情感比男孩好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:43:01","updateTime":"2021-03-22 11:43:01","isExist":null},{"id":413,"question":"父子之间的情感也会反目成仇","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:42:44","updateTime":"2021-03-22 11:42:44","isExist":null},{"id":411,"question":"冒充软件太多了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:07:40","updateTime":"2021-03-22 11:07:40","isExist":null},{"id":410,"question":"项目的性能如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:04:30","updateTime":"2021-03-22 11:04:30","isExist":null},{"id":409,"question":"上次跟我们面试官沟通后，对我们的感觉如何？","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:04:13","updateTime":"2021-03-22 11:04:13","isExist":null},{"id":408,"question":"整容失败怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 11:03:52","updateTime":"2021-03-22 11:03:52","isExist":null},{"id":407,"question":"以前有个同学请假好久裸考都很高懂球","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:49:26","updateTime":"2021-03-22 10:49:26","isExist":null},{"id":406,"question":"没有手机还能生活吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:48:59","updateTime":"2021-03-22 10:48:59","isExist":null},{"id":405,"question":"实心球能碰多远","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:48:41","updateTime":"2021-03-22 10:48:41","isExist":null},{"id":404,"question":"1000米跑步合格分数是多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:48:24","updateTime":"2021-03-22 10:48:24","isExist":null},{"id":403,"question":"上体育最坑爹就是跑步了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:48:06","updateTime":"2021-03-22 10:48:06","isExist":null},{"id":402,"question":"女生腿软的肯定是读书没跑步的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:47:29","updateTime":"2021-03-22 10:47:29","isExist":null},{"id":401,"question":"1000米跑步听到就腿软了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:47:13","updateTime":"2021-03-22 10:47:13","isExist":null},{"id":400,"question":"最害怕体育项目是跑步","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:46:58","updateTime":"2021-03-22 10:46:58","isExist":null},{"id":399,"question":"文科班就是女儿国，四五十人就5个男的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:46:15","updateTime":"2021-03-22 10:46:15","isExist":null},{"id":398,"question":"文科班很多女生","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:45:51","updateTime":"2021-03-22 10:45:51","isExist":null},{"id":397,"question":"马云的天使投资人","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:45:25","updateTime":"2021-03-22 10:45:25","isExist":null},{"id":396,"question":"这名称有多奇葩","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:45:07","updateTime":"2021-03-22 10:45:07","isExist":null},{"id":395,"question":"啥事没干能通过转正答辩吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:44:41","updateTime":"2021-03-22 10:44:41","isExist":null},{"id":394,"question":"青菜只吃新鲜的，嫩的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:43:25","updateTime":"2021-03-22 10:43:25","isExist":null},{"id":393,"question":"黄花菜有一股中药味道","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:42:52","updateTime":"2021-03-22 10:42:52","isExist":null},{"id":392,"question":"为什么不吃肥肉","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:42:30","updateTime":"2021-03-22 10:42:30","isExist":null},{"id":391,"question":"拒绝肥肉也是很挑吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:42:24","updateTime":"2021-03-22 10:42:24","isExist":null},{"id":390,"question":"你看起来很斯文，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:42:10","updateTime":"2021-03-22 10:42:10","isExist":null},{"id":389,"question":"北方一人一口锅，南方人吃饭就是斯文","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:42:01","updateTime":"2021-03-22 10:42:01","isExist":null},{"id":388,"question":"培训班多少钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:41:03","updateTime":"2021-03-22 10:41:03","isExist":null},{"id":387,"question":"有哪些培训班","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:40:57","updateTime":"2021-03-22 10:40:57","isExist":null},{"id":386,"question":"单纯的女孩子如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:40:12","updateTime":"2021-03-22 10:40:12","isExist":null},{"id":385,"question":"错题本作用有那么大吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:39:47","updateTime":"2021-03-22 10:39:47","isExist":null},{"id":384,"question":"这世界上，你不会是独一无二的那颗星，一定有人跟你相似的。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:35:15","updateTime":"2021-03-22 10:35:15","isExist":null},{"id":383,"question":"用心的礼物才是礼物，不用心的礼物都是任务。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:34:33","updateTime":"2021-03-22 10:34:33","isExist":null},{"id":382,"question":"那曾经使我悲伤过的一切，也是我最热爱过的一切。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:33:59","updateTime":"2021-03-22 10:33:59","isExist":null},{"id":381,"question":"一个文明的社会是要解决苦难，而不是制造出更多超人。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:33:20","updateTime":"2021-03-22 10:33:20","isExist":null},{"id":380,"question":" 社会要鼓励人做好事，从来不是靠告诉每个人，做每件好事都会有物质回报，而是恰恰告诉每个人，人间的回报不是只有物质，有的东西也许没有价格，但却依然有价值","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:32:48","updateTime":"2021-03-22 10:32:48","isExist":null},{"id":379,"question":"手指的螺作用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:30:43","updateTime":"2021-03-22 10:30:43","isExist":null},{"id":378,"question":"头上的旋儿表示头发往那边邪","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:30:18","updateTime":"2021-03-22 10:30:18","isExist":null},{"id":377,"question":"眼皮乱跳表示什么","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:29:23","updateTime":"2021-03-22 10:29:23","isExist":null},{"id":376,"question":"如何保持欲望","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:28:34","updateTime":"2021-03-22 10:28:34","isExist":null},{"id":375,"question":"洗澡，吃水果最佳时间","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:28:21","updateTime":"2021-03-22 10:28:21","isExist":null},{"id":373,"question":"经常熬夜的人会如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:27:28","updateTime":"2021-03-22 10:27:28","isExist":null},{"id":372,"question":"如何科学用眼","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 10:27:21","updateTime":"2021-03-22 10:27:21","isExist":null},{"id":368,"question":"中国哪些导弹特别厉害","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:29:32","updateTime":"2021-03-22 09:29:32","isExist":null},{"id":367,"question":"版本上线需要注意什么问题","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:28:37","updateTime":"2021-03-22 09:28:37","isExist":null},{"id":366,"question":"什么时候加班特别严重","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:28:28","updateTime":"2021-03-22 09:28:28","isExist":null},{"id":365,"question":"希望男孩子养我。回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:27:57","updateTime":"2021-03-22 09:27:57","isExist":null},{"id":364,"question":"等感情稳定再一起工作，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:27:46","updateTime":"2021-03-22 09:27:46","isExist":null},{"id":363,"question":"如何说服女孩子过来异地一起工作","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:27:32","updateTime":"2021-03-22 09:27:32","isExist":null},{"id":362,"question":"工作时设置上课的时间为注意时间好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:26:48","updateTime":"2021-03-22 09:26:48","isExist":null},{"id":361,"question":"网站网速不稳定，下午和晚上特别卡，早上很快","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:26:08","updateTime":"2021-03-22 09:26:08","isExist":null},{"id":359,"question":"热水器扁桶占用空间少吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:25:19","updateTime":"2021-03-22 09:25:19","isExist":null},{"id":358,"question":"过来再加微信，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:24:45","updateTime":"2021-03-22 09:24:45","isExist":null},{"id":357,"question":"别看着我，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:24:33","updateTime":"2021-03-22 09:24:33","isExist":null},{"id":356,"question":"你为什么笑，回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:24:23","updateTime":"2021-03-22 09:24:23","isExist":null},{"id":355,"question":"知识点一般多久忘记","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:23:59","updateTime":"2021-03-22 09:23:59","isExist":null},{"id":354,"question":"中软网站应该是白名单，不是黑名单","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:23:07","updateTime":"2021-03-22 09:23:07","isExist":null},{"id":352,"question":"座椅和桌子多少高度比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:21:02","updateTime":"2021-03-22 09:21:02","isExist":null},{"id":351,"question":"每个月几乎20g流量这么多吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:20:20","updateTime":"2021-03-22 09:20:20","isExist":null},{"id":350,"question":"羽毛球场多少钱一小时","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:19:02","updateTime":"2021-03-22 09:19:02","isExist":null},{"id":349,"question":"附近哪里有羽毛球场","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:18:50","updateTime":"2021-03-22 09:18:50","isExist":null},{"id":348,"question":"篮球需要几个人打全场","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:18:42","updateTime":"2021-03-22 09:18:42","isExist":null},{"id":347,"question":"二b笔有什么好处","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:18:18","updateTime":"2021-03-22 09:18:18","isExist":null},{"id":346,"question":"被单如何洗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:17:40","updateTime":"2021-03-22 09:17:40","isExist":null},{"id":345,"question":"有什么可以解决床不干净问题","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:17:31","updateTime":"2021-03-22 09:17:31","isExist":null},{"id":344,"question":"附近哪里找共享单车","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:17:13","updateTime":"2021-03-22 09:17:13","isExist":null},{"id":343,"question":"相亲一般多久时间谈话","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-22 09:16:55","updateTime":"2021-03-22 09:16:55","isExist":null},{"id":342,"question":"为什么大家喜欢说预算这个词","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:54:53","updateTime":"2021-03-21 21:54:53","isExist":null},{"id":341,"question":"预算如何设置","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:54:41","updateTime":"2021-03-21 21:54:41","isExist":null},{"id":340,"question":"禽类，服装类，电子类哪个好做","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:53:16","updateTime":"2021-03-21 21:53:16","isExist":null},{"id":339,"question":"有什么网站可以学习创业资料","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:52:51","updateTime":"2021-03-21 21:52:51","isExist":null},{"id":338,"question":"投资小和投资大的项目分别列出来","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:52:49","updateTime":"2021-03-21 21:52:49","isExist":null},{"id":337,"question":"有什么网站可以学习创业资料","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:52:38","updateTime":"2021-03-21 21:52:38","isExist":null},{"id":336,"question":"腿部的肌肉是做什么运动多的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:52:08","updateTime":"2021-03-21 21:52:08","isExist":null},{"id":335,"question":"走路多是不是腿很粗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:51:54","updateTime":"2021-03-21 21:51:54","isExist":null},{"id":334,"question":"走路多久会很累","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:51:42","updateTime":"2021-03-21 21:51:42","isExist":null},{"id":333,"question":"今晚先搬什么东西","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:51:32","updateTime":"2021-03-21 21:51:32","isExist":null},{"id":332,"question":"东莞有啥好玩的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:51:19","updateTime":"2021-03-21 21:51:19","isExist":null},{"id":331,"question":"汉堡为什么不好吃","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:51:00","updateTime":"2021-03-21 21:51:00","isExist":null},{"id":330,"question":"可乐和百事可乐区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:50:46","updateTime":"2021-03-21 21:50:46","isExist":null},{"id":329,"question":"可乐喝多了会怎样","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:50:33","updateTime":"2021-03-21 21:50:33","isExist":null},{"id":328,"question":"为什么女生喜欢拿自己的痛苦来讲","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:50:23","updateTime":"2021-03-21 21:50:23","isExist":null},{"id":327,"question":"塑料杯有什么危害","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:50:05","updateTime":"2021-03-21 21:50:05","isExist":null},{"id":326,"question":"检测水质量是如何操作的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:49:55","updateTime":"2021-03-21 21:49:55","isExist":null},{"id":325,"question":"平常吃的东西列出湿热的属性","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:49:37","updateTime":"2021-03-21 21:49:37","isExist":null},{"id":324,"question":"湿热的原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:49:24","updateTime":"2021-03-21 21:49:24","isExist":null},{"id":323,"question":"如何自学医药","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:49:12","updateTime":"2021-03-21 21:49:12","isExist":null},{"id":322,"question":"工厂流水线造假药扩大生产","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:48:53","updateTime":"2021-03-21 21:48:53","isExist":null},{"id":321,"question":"药的副作用如何规避","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:48:30","updateTime":"2021-03-21 21:48:30","isExist":null},{"id":320,"question":"医生的药好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:48:13","updateTime":"2021-03-21 21:48:13","isExist":null},{"id":319,"question":"怎么判断医生是否有用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:48:03","updateTime":"2021-03-21 21:48:03","isExist":null},{"id":318,"question":"全科医生有效果吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:47:43","updateTime":"2021-03-21 21:47:43","isExist":null},{"id":317,"question":"医院有哪些科室","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:47:29","updateTime":"2021-03-21 21:47:29","isExist":null},{"id":316,"question":"医院有哪些科室","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:47:20","updateTime":"2021-03-21 21:47:20","isExist":null},{"id":315,"question":"云桌面和云服务器区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:46:54","updateTime":"2021-03-21 21:46:54","isExist":null},{"id":314,"question":"云桌面的价格是多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:46:37","updateTime":"2021-03-21 21:46:37","isExist":null},{"id":313,"question":"埋点是什么意思","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:46:21","updateTime":"2021-03-21 21:46:21","isExist":null},{"id":312,"question":"自来水和桶装水哪个好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:46:13","updateTime":"2021-03-21 21:46:13","isExist":null},{"id":311,"question":"桶装水比纯净水好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:45:56","updateTime":"2021-03-21 21:45:56","isExist":null},{"id":310,"question":"表面上很好，实际心里却是举报","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:45:34","updateTime":"2021-03-21 21:45:34","isExist":null},{"id":309,"question":"晚上去哪里逛街好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:45:20","updateTime":"2021-03-21 21:45:20","isExist":null},{"id":308,"question":"外包打卡非常严格","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:45:10","updateTime":"2021-03-21 21:45:10","isExist":null},{"id":307,"question":"扁鹊他哥战队好搞笑","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:44:56","updateTime":"2021-03-21 21:44:56","isExist":null},{"id":306,"question":"如何获取资金投资","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:44:41","updateTime":"2021-03-21 21:44:41","isExist":null},{"id":305,"question":"相克的食物有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:44:27","updateTime":"2021-03-21 21:44:27","isExist":null},{"id":304,"question":"青菜有哪些","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:44:17","updateTime":"2021-03-21 21:44:17","isExist":null},{"id":303,"question":"贝壳有哪些类型","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:43:53","updateTime":"2021-03-21 21:43:53","isExist":null},{"id":302,"question":"珍珠是从什么贝壳生产的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:43:45","updateTime":"2021-03-21 21:43:45","isExist":null},{"id":301,"question":"微软是做什么的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:43:28","updateTime":"2021-03-21 21:43:28","isExist":null},{"id":300,"question":"以后无代码，靠什么？模板，自动化","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:43:06","updateTime":"2021-03-21 21:43:06","isExist":null},{"id":299,"question":"屈臣氏是做什么的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:42:50","updateTime":"2021-03-21 21:42:50","isExist":null},{"id":298,"question":"九江彩礼贷款反应了什么问题","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:42:41","updateTime":"2021-03-21 21:42:41","isExist":null},{"id":297,"question":"苹果和橘子哪个好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:41:54","updateTime":"2021-03-21 21:41:54","isExist":null},{"id":296,"question":"苹果和橘子哪个好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:41:03","updateTime":"2021-03-21 21:41:03","isExist":null},{"id":295,"question":"没空啥时再约时间","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:40:45","updateTime":"2021-03-21 21:40:45","isExist":null},{"id":294,"question":"如何除去房间的螨虫","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:40:14","updateTime":"2021-03-21 21:40:14","isExist":null},{"id":293,"question":"如何除去房间的螨虫","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:39:11","updateTime":"2021-03-21 21:39:11","isExist":null},{"id":292,"question":"过敏房间原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:39:01","updateTime":"2021-03-21 21:39:01","isExist":null},{"id":291,"question":"打电话比打字快多少","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:38:54","updateTime":"2021-03-21 21:38:54","isExist":null},{"id":290,"question":"拉屎多久比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:38:40","updateTime":"2021-03-21 21:38:40","isExist":null},{"id":289,"question":"拉屎腿为什么那么酸\n","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:38:31","updateTime":"2021-03-21 21:38:31","isExist":null},{"id":288,"question":"现在接需求了吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:38:03","updateTime":"2021-03-21 21:38:03","isExist":null},{"id":287,"question":"公司热水很热","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:37:37","updateTime":"2021-03-21 21:37:37","isExist":null},{"id":286,"question":"异地恋为什么很难长久","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:37:14","updateTime":"2021-03-21 21:37:14","isExist":null},{"id":285,"question":"平常穿什么衣服多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:36:58","updateTime":"2021-03-21 21:36:58","isExist":null},{"id":284,"question":"上班穿什么衬衫好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:36:44","updateTime":"2021-03-21 21:36:44","isExist":null},{"id":283,"question":"","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:36:34","updateTime":"2021-03-21 21:36:34","isExist":null},{"id":282,"question":"手机报废原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:36:33","updateTime":"2021-03-21 21:36:33","isExist":null},{"id":281,"question":"故意设计报废手机","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:36:18","updateTime":"2021-03-21 21:36:18","isExist":null},{"id":280,"question":"为什么数据线经常坏掉","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:36:06","updateTime":"2021-03-21 21:36:06","isExist":null},{"id":279,"question":"几点钟店铺关门","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:52","updateTime":"2021-03-21 21:35:52","isExist":null},{"id":278,"question":"键盘不好用如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:43","updateTime":"2021-03-21 21:35:43","isExist":null},{"id":277,"question":"水果吃","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:42","updateTime":"2021-03-21 21:35:42","isExist":null},{"id":276,"question":"键盘不好用如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:34","updateTime":"2021-03-21 21:35:34","isExist":null},{"id":275,"question":"一天不喝水如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:19","updateTime":"2021-03-21 21:35:19","isExist":null},{"id":274,"question":"一天不喝水如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:08","updateTime":"2021-03-21 21:35:08","isExist":null},{"id":273,"question":"质量要求和代码规范","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:35:01","updateTime":"2021-03-21 21:35:01","isExist":null},{"id":272,"question":"什么时候发工资","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:34:48","updateTime":"2021-03-21 21:34:48","isExist":null},{"id":271,"question":"扩泉水一般是多少ml","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:34:34","updateTime":"2021-03-21 21:34:34","isExist":null},{"id":269,"question":"1000ml的杯子大吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:34:20","updateTime":"2021-03-21 21:34:20","isExist":null},{"id":270,"question":"1000ml的杯子大吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:34:20","updateTime":"2021-03-21 21:34:20","isExist":null},{"id":268,"question":"转租需要多少费用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:33:54","updateTime":"2021-03-21 21:33:54","isExist":null},{"id":267,"question":"投资是否就是赔钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:33:44","updateTime":"2021-03-21 21:33:44","isExist":null},{"id":266,"question":"如何设置一天的规划","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:33:33","updateTime":"2021-03-21 21:33:33","isExist":null},{"id":265,"question":"傻瓜队友坑爹","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:33:18","updateTime":"2021-03-21 21:33:18","isExist":null},{"id":264,"question":"胡子一般多久刮","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:33:06","updateTime":"2021-03-21 21:33:06","isExist":null},{"id":263,"question":"胡子一般多久刮","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:33:05","updateTime":"2021-03-21 21:33:05","isExist":null},{"id":262,"question":"衣服多久能洗的干净","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:32:51","updateTime":"2021-03-21 21:32:51","isExist":null},{"id":261,"question":"买柜子多大的好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:32:37","updateTime":"2021-03-21 21:32:37","isExist":null},{"id":260,"question":"柜子一般的木材比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:32:23","updateTime":"2021-03-21 21:32:23","isExist":null},{"id":259,"question":"买的柜子有虫子的吃\n","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:32:14","updateTime":"2021-03-21 21:32:14","isExist":null},{"id":258,"question":"技术成长如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:31:54","updateTime":"2021-03-21 21:31:54","isExist":null},{"id":257,"question":"晚上加班这么久你吃饭了吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:31:46","updateTime":"2021-03-21 21:31:46","isExist":null},{"id":256,"question":"晚上加班多久","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:31:35","updateTime":"2021-03-21 21:31:35","isExist":null},{"id":255,"question":"甲方和乙方的区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:31:27","updateTime":"2021-03-21 21:31:27","isExist":null},{"id":254,"question":"公司的项目的技术是否主流","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:31:19","updateTime":"2021-03-21 21:31:19","isExist":null},{"id":253,"question":"3月份和4月份有招聘会吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-21 21:30:48","updateTime":"2021-03-21 21:30:48","isExist":null},{"id":252,"question":"代驾不给钱，举报你","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 18:33:17","updateTime":"2021-03-20 18:33:17","isExist":null},{"id":251,"question":"应出台法律对夫妻债务的必须有夫妻双方的签字，如没有夫妻双方签字的债务，债权人对没签字一方的起诉应定性为诈骗除追究债权人刑事责任外按其追债款赔偿被追债人。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 17:29:46","updateTime":"2021-03-20 17:29:46","isExist":null},{"id":250,"question":"什么时候实现钱自由","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:51:32","updateTime":"2021-03-20 16:51:32","isExist":null},{"id":249,"question":"女生喜欢住酒店","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:51:12","updateTime":"2021-03-20 16:51:12","isExist":null},{"id":248,"question":"跳伞感觉如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:50:55","updateTime":"2021-03-20 16:50:55","isExist":null},{"id":247,"question":"旅游是一半是工作，一半时间是生活","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:50:30","updateTime":"2021-03-20 16:50:30","isExist":null},{"id":246,"question":"丽江的水很清澈","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:50:10","updateTime":"2021-03-20 16:50:10","isExist":null},{"id":245,"question":"间接邀请的饭局不要去","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:34:40","updateTime":"2021-03-20 16:34:40","isExist":null},{"id":244,"question":"厕所老是看到阿姨在里面","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:21:00","updateTime":"2021-03-20 16:21:00","isExist":null},{"id":243,"question":"厕所好臭啊","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:20:46","updateTime":"2021-03-20 16:20:46","isExist":null},{"id":242,"question":"还以为是充电头坏了，不是，是充电线坏了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:20:38","updateTime":"2021-03-20 16:20:38","isExist":null},{"id":241,"question":"手机老是掉线是什么原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:08:30","updateTime":"2021-03-20 16:08:30","isExist":null},{"id":240,"question":"苹果手机不通款式型号","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:06:06","updateTime":"2021-03-20 16:06:06","isExist":null},{"id":239,"question":"不同的苹果手机款式如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:05:48","updateTime":"2021-03-20 16:05:48","isExist":null},{"id":238,"question":"女生很少用小米，一般用苹果","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:02:34","updateTime":"2021-03-20 16:02:34","isExist":null},{"id":237,"question":"番薯长牙会有危害吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:01:42","updateTime":"2021-03-20 16:01:42","isExist":null},{"id":236,"question":"高州生产什么番薯","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:01:28","updateTime":"2021-03-20 16:01:28","isExist":null},{"id":235,"question":"紫薯为什么那么贵","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 16:01:16","updateTime":"2021-03-20 16:01:16","isExist":null},{"id":234,"question":"哪些女生喜欢剪短发","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:31:13","updateTime":"2021-03-20 15:31:13","isExist":null},{"id":233,"question":"别人剪短好看","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:31:05","updateTime":"2021-03-20 15:31:05","isExist":null},{"id":232,"question":"女生剪短发如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:30:57","updateTime":"2021-03-20 15:30:57","isExist":null},{"id":231,"question":"家里方便晾衣服吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:15:44","updateTime":"2021-03-20 15:15:44","isExist":null},{"id":230,"question":"讨论下家里的房子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:15:32","updateTime":"2021-03-20 15:15:32","isExist":null},{"id":229,"question":"人体酸的是什么原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:15:23","updateTime":"2021-03-20 15:15:23","isExist":null},{"id":228,"question":"学车要多久","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:09:20","updateTime":"2021-03-20 15:09:20","isExist":null},{"id":227,"question":"深圳西乡那边如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:08:13","updateTime":"2021-03-20 15:08:13","isExist":null},{"id":226,"question":"家具拆给别人","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:07:04","updateTime":"2021-03-20 15:07:04","isExist":null},{"id":225,"question":"空调挺贵的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:06:54","updateTime":"2021-03-20 15:06:54","isExist":null},{"id":224,"question":"安装空调要加价","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 15:06:36","updateTime":"2021-03-20 15:06:36","isExist":null},{"id":223,"question":"手机老是闪退什么情况","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:39:42","updateTime":"2021-03-20 14:39:42","isExist":null},{"id":222,"question":"大学专业学什么课程多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:38:34","updateTime":"2021-03-20 14:38:34","isExist":null},{"id":221,"question":"最近有学什么课程吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:38:18","updateTime":"2021-03-20 14:38:18","isExist":null},{"id":220,"question":"男女混寝如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:37:52","updateTime":"2021-03-20 14:37:52","isExist":null},{"id":219,"question":"什么原因导致雄性激素过多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:31:48","updateTime":"2021-03-20 14:31:48","isExist":null},{"id":218,"question":"什么运动比较消耗体力","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:30:09","updateTime":"2021-03-20 14:30:09","isExist":null},{"id":217,"question":"做爱做多久比较累","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:30:01","updateTime":"2021-03-20 14:30:01","isExist":null},{"id":216,"question":"爬山最好爬几个小时","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:29:50","updateTime":"2021-03-20 14:29:50","isExist":null},{"id":215,"question":"一天跳绳几次好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:29:42","updateTime":"2021-03-20 14:29:42","isExist":null},{"id":214,"question":"TOP3. 美丽说可以买很多衣服，鞋子，包","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:12:57","updateTime":"2021-03-20 14:12:57","isExist":null},{"id":213,"question":"TOP2. 美颜相机也很多女生使用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:12:36","updateTime":"2021-03-20 14:12:36","isExist":null},{"id":212,"question":" 美柚女生助手是女生大姨妈软件","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:12:16","updateTime":"2021-03-20 14:12:16","isExist":null},{"id":211,"question":"手机如何保护流量","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:11:27","updateTime":"2021-03-20 14:11:27","isExist":null},{"id":210,"question":"知聊这款软件如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:11:07","updateTime":"2021-03-20 14:11:07","isExist":null},{"id":209,"question":"用什么软件可以找妹子","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:09:26","updateTime":"2021-03-20 14:09:26","isExist":null},{"id":208,"question":"什么样辞职好看","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:09:15","updateTime":"2021-03-20 14:09:15","isExist":null},{"id":207,"question":"电动车租多少钱","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:08:47","updateTime":"2021-03-20 14:08:47","isExist":null},{"id":206,"question":"哪里有电动车租","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:08:40","updateTime":"2021-03-20 14:08:40","isExist":null},{"id":205,"question":"黑头和闭口的区别","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:08:03","updateTime":"2021-03-20 14:08:03","isExist":null},{"id":204,"question":"平常吃什么会导致闭口","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:07:56","updateTime":"2021-03-20 14:07:56","isExist":null},{"id":203,"question":"什么药膏可以去掉闭口","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:07:48","updateTime":"2021-03-20 14:07:48","isExist":null},{"id":202,"question":"脸上有很多闭口是什么原因导致的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:07:36","updateTime":"2021-03-20 14:07:36","isExist":null},{"id":201,"question":"公司的水有一股味道的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:07:06","updateTime":"2021-03-20 14:07:06","isExist":null},{"id":200,"question":"周末要加班么","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:06:52","updateTime":"2021-03-20 14:06:52","isExist":null},{"id":199,"question":"下午困死了","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:06:42","updateTime":"2021-03-20 14:06:42","isExist":null},{"id":198,"question":"除了辣椒，还有别的调料也会长痘","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:06:33","updateTime":"2021-03-20 14:06:33","isExist":null},{"id":197,"question":"平常吃快餐店的不吃辣椒都会长痘","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:06:09","updateTime":"2021-03-20 14:06:09","isExist":null},{"id":196,"question":"很多软件都是死人吗没有回复的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 14:00:17","updateTime":"2021-03-20 14:00:17","isExist":null},{"id":195,"question":"如何定时保存数据","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:58:44","updateTime":"2021-03-20 13:58:44","isExist":null},{"id":194,"question":"科技园附近住哪里好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:53:28","updateTime":"2021-03-20 13:53:28","isExist":null},{"id":193,"question":"广东哪里是轻轨哪里是高铁","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:53:17","updateTime":"2021-03-20 13:53:17","isExist":null},{"id":192,"question":"深圳地铁有多快速度","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:53:02","updateTime":"2021-03-20 13:53:02","isExist":null},{"id":191,"question":"地铁比火车为什么快","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:52:54","updateTime":"2021-03-20 13:52:54","isExist":null},{"id":190,"question":"为什么中午睡不着","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:52:38","updateTime":"2021-03-20 13:52:38","isExist":null},{"id":189,"question":"非主流的女生做什么工作多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:27:07","updateTime":"2021-03-20 13:27:07","isExist":null},{"id":188,"question":"现在什么工作女生比较喜欢的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:26:51","updateTime":"2021-03-20 13:26:51","isExist":null},{"id":187,"question":"洗面奶有用吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:26:38","updateTime":"2021-03-20 13:26:38","isExist":null},{"id":186,"question":"如何治疗脂溢性皮炎","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:26:31","updateTime":"2021-03-20 13:26:31","isExist":null},{"id":185,"question":"秃头的原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:26:23","updateTime":"2021-03-20 13:26:23","isExist":null},{"id":184,"question":"内部人员不检查有什么好处","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:25:40","updateTime":"2021-03-20 13:25:40","isExist":null},{"id":183,"question":"jalor6这个框架好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:25:22","updateTime":"2021-03-20 13:25:22","isExist":null},{"id":182,"question":"华为框架如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:25:11","updateTime":"2021-03-20 13:25:11","isExist":null},{"id":181,"question":"男孩子有必要上那么多培训课程吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:25:00","updateTime":"2021-03-20 13:25:00","isExist":null},{"id":180,"question":"学生培训有哪些课程","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:24:47","updateTime":"2021-03-20 13:24:47","isExist":null},{"id":179,"question":"如何设置数据库在外部","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:24:02","updateTime":"2021-03-20 13:24:02","isExist":null},{"id":178,"question":"哪里还有招聘会的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:22:42","updateTime":"2021-03-20 13:22:42","isExist":null},{"id":177,"question":"周末培训占用别人时间","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:22:31","updateTime":"2021-03-20 13:22:31","isExist":null},{"id":176,"question":"如何防止数据库不丢失","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 13:22:06","updateTime":"2021-03-20 13:22:06","isExist":null},{"id":175,"question":"吃到发霉的东西如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:07:11","updateTime":"2021-03-20 01:07:11","isExist":null},{"id":174,"question":"腰部如何做不会疼","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:06:49","updateTime":"2021-03-20 01:06:49","isExist":null},{"id":173,"question":"公司如何制造很勤奋的样子给领导看","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:05:43","updateTime":"2021-03-20 01:05:43","isExist":null},{"id":172,"question":"如何符合公司的要求，不被辞退","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:05:26","updateTime":"2021-03-20 01:05:26","isExist":null},{"id":171,"question":"芝麻糊如何买到合适的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:05:10","updateTime":"2021-03-20 01:05:10","isExist":null},{"id":170,"question":"芝麻糊能放多久","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:04:58","updateTime":"2021-03-20 01:04:58","isExist":null},{"id":169,"question":"开盖子的放在冰箱里放多久好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:04:46","updateTime":"2021-03-20 01:04:46","isExist":null},{"id":168,"question":"开盖子的时候吃多久好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 01:04:29","updateTime":"2021-03-20 01:04:29","isExist":null},{"id":167,"question":"快餐店的汤能喝吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:41:04","updateTime":"2021-03-20 00:41:04","isExist":null},{"id":166,"question":"快餐店的汤会上火吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:40:56","updateTime":"2021-03-20 00:40:56","isExist":null},{"id":165,"question":"泡沫有毒吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:40:40","updateTime":"2021-03-20 00:40:40","isExist":null},{"id":164,"question":"晚上吃东西会上火吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:40:30","updateTime":"2021-03-20 00:40:30","isExist":null},{"id":163,"question":"胡子为什么会痒","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:40:14","updateTime":"2021-03-20 00:40:14","isExist":null},{"id":162,"question":"夜店有哪些毒品","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:39:53","updateTime":"2021-03-20 00:39:53","isExist":null},{"id":161,"question":"为什么游戏容易上瘾","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:39:44","updateTime":"2021-03-20 00:39:44","isExist":null},{"id":160,"question":"女生抱怨工作如何回复他","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:39:26","updateTime":"2021-03-20 00:39:26","isExist":null},{"id":159,"question":"如何聊女生的工作","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:39:16","updateTime":"2021-03-20 00:39:16","isExist":null},{"id":158,"question":"爱美女生一般不吃什么东西","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:39:08","updateTime":"2021-03-20 00:39:08","isExist":null},{"id":157,"question":"减肥女生一般不吃什么东西","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:38:51","updateTime":"2021-03-20 00:38:51","isExist":null},{"id":156,"question":"为什么男生喜欢吃花生","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:38:34","updateTime":"2021-03-20 00:38:34","isExist":null},{"id":155,"question":"水果哪些很甜","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:38:26","updateTime":"2021-03-20 00:38:26","isExist":null},{"id":154,"question":"戴眼镜会度数更高吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:38:06","updateTime":"2021-03-20 00:38:06","isExist":null},{"id":153,"question":"","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:37:18","updateTime":"2021-03-20 00:37:18","isExist":null},{"id":151,"question":"游戏花的流量多不多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:36:48","updateTime":"2021-03-20 00:36:48","isExist":null},{"id":150,"question":"网络为什么老是卡顿","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:36:38","updateTime":"2021-03-20 00:36:38","isExist":null},{"id":149,"question":"女生的什么鞋子最有诱惑力","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:36:23","updateTime":"2021-03-20 00:36:23","isExist":null},{"id":148,"question":"植物如何长得茂盛","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:36:12","updateTime":"2021-03-20 00:36:12","isExist":null},{"id":147,"question":"手机是不是存在故意设计的缺陷","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:35:50","updateTime":"2021-03-20 00:35:50","isExist":null},{"id":146,"question":"酒精可以杀哪些读","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:35:32","updateTime":"2021-03-20 00:35:32","isExist":null},{"id":145,"question":"什么时候想结婚","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:35:07","updateTime":"2021-03-20 00:35:07","isExist":null},{"id":144,"question":"999效果如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:34:58","updateTime":"2021-03-20 00:34:58","isExist":null},{"id":143,"question":"对抠门的男生评价","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:32:19","updateTime":"2021-03-20 00:32:19","isExist":null},{"id":142,"question":"九江的彩礼贷款如何评价","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:30:37","updateTime":"2021-03-20 00:30:37","isExist":null},{"id":141,"question":"","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:29:24","updateTime":"2021-03-20 00:29:24","isExist":null},{"id":140,"question":"国外的茅台也是好几千的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:29:19","updateTime":"2021-03-20 00:29:19","isExist":null},{"id":139,"question":"结婚是门当户对的好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:28:20","updateTime":"2021-03-20 00:28:20","isExist":null},{"id":138,"question":"导致流产的物品\n1、用塑料容器包装的物品\n\n2、罐头食品\n\n3、化妆品\n\n4、女性卫生用品\n\n5、热敏打印机收据\n\n6、CD和DVD\n\n7、家用电子产品\n\n8、眼镜镜片\n\n9、运动器材\n\n10、牙科填充密封物","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:27:54","updateTime":"2021-03-20 00:27:54","isExist":null},{"id":137,"question":"负离子去除污染物的机制是通过正负电荷吸引及沉降而发生的。一般来说，空气中的PM2.5等颗粒物带正电，负氧离子带负电，二者相遇发生电中和反应。与负氧离子结合的污染物颗粒带上负电荷，与带正电荷的污染物颗粒继续结合，形成更大的颗粒物而沉降，从而被去除。另外，负氧离子可以杀死空气中的病毒、细菌等微生物。\n\n除此之外，负离子也有一定的健康疗养作用。负离子对呼吸系统的作用最明显，因为负氧离子通过呼吸道进入人体，它可以提高人的肺活量，能有效加强器官黏膜上皮的纤毛运动，通过影响上皮绒毛内呼吸酶的活性，从而改善肺泡的分泌及通气换气功能，以及缓解支气管痉挛等。","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:27:00","updateTime":"2021-03-20 00:27:00","isExist":null},{"id":136,"question":"独生子女的好处和坏处","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:20:14","updateTime":"2021-03-20 00:20:14","isExist":null},{"id":135,"question":"父母愿意来大城市带孩子吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:20:03","updateTime":"2021-03-20 00:20:03","isExist":null},{"id":134,"question":"别人问为什么不回去拜山如何回复","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:19:44","updateTime":"2021-03-20 00:19:44","isExist":null},{"id":133,"question":"如何去掉房间的异味","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:19:14","updateTime":"2021-03-20 00:19:14","isExist":null},{"id":132,"question":"兴趣爱好是撩妹，靠谱吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:16:20","updateTime":"2021-03-20 00:16:20","isExist":null},{"id":131,"question":"密室逃脱适合带女友去玩吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:15:59","updateTime":"2021-03-20 00:15:59","isExist":null},{"id":130,"question":"密室逃脱好玩吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:15:47","updateTime":"2021-03-20 00:15:47","isExist":null},{"id":129,"question":"超市有什么好吃的，晚上可以买","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:15:34","updateTime":"2021-03-20 00:15:34","isExist":null},{"id":128,"question":"一楼下水道真的那么臭吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:15:20","updateTime":"2021-03-20 00:15:20","isExist":null},{"id":127,"question":"为什么租客喜欢破坏门","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:15:08","updateTime":"2021-03-20 00:15:08","isExist":null},{"id":126,"question":"还有什么植物除甲醛","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:14:53","updateTime":"2021-03-20 00:14:53","isExist":null},{"id":125,"question":"蚊子咬后是不是以后会留下疤痕","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:14:35","updateTime":"2021-03-20 00:14:35","isExist":null},{"id":124,"question":"什么牌子电动车不容易起火","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:14:09","updateTime":"2021-03-20 00:14:09","isExist":null},{"id":123,"question":"每天要用洗面奶吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:13:21","updateTime":"2021-03-20 00:13:21","isExist":null},{"id":122,"question":"晚上可以吃什么不长痘","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:13:12","updateTime":"2021-03-20 00:13:12","isExist":null},{"id":121,"question":"买什么袋子装衣服好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:13:01","updateTime":"2021-03-20 00:13:01","isExist":null},{"id":120,"question":"如何跟女舍友保持关系","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:12:49","updateTime":"2021-03-20 00:12:49","isExist":null},{"id":119,"question":"手机如何保证内存不会被清空","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:12:26","updateTime":"2021-03-20 00:12:26","isExist":null},{"id":118,"question":"如何防止舍友也是小偷","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:12:14","updateTime":"2021-03-20 00:12:14","isExist":null},{"id":117,"question":"如何防止小偷偷东西","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:12:05","updateTime":"2021-03-20 00:12:05","isExist":null},{"id":116,"question":"什么锁小偷能开","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:11:53","updateTime":"2021-03-20 00:11:53","isExist":null},{"id":115,"question":"如何防止蜘蛛和壁虎","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:07:41","updateTime":"2021-03-20 00:07:41","isExist":null},{"id":114,"question":"为什么衣架老是不够用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:06:44","updateTime":"2021-03-20 00:06:44","isExist":null},{"id":113,"question":"工业风扇好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:06:33","updateTime":"2021-03-20 00:06:33","isExist":null},{"id":112,"question":"书包什么类型成熟","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:06:05","updateTime":"2021-03-20 00:06:05","isExist":null},{"id":111,"question":"晚上喝菊花茶好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:05:53","updateTime":"2021-03-20 00:05:53","isExist":null},{"id":110,"question":"音乐不同版本听起来如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-20 00:03:15","updateTime":"2021-03-20 00:03:15","isExist":null},{"id":109,"question":"绿萝真的会除甲醛吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:48:11","updateTime":"2021-03-19 23:48:11","isExist":null},{"id":108,"question":"有纺纱窗还是有蚊子怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:47:52","updateTime":"2021-03-19 23:47:52","isExist":null},{"id":107,"question":"晚上好多蚊子怎么办","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:47:32","updateTime":"2021-03-19 23:47:32","isExist":null},{"id":106,"question":"qq音乐好不好用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:47:17","updateTime":"2021-03-19 23:47:17","isExist":null},{"id":105,"question":"最近歌曲，李圣杰这首歌好听吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:46:50","updateTime":"2021-03-19 23:46:50","isExist":null},{"id":104,"question":"货拉拉送货车挺大的","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:40:32","updateTime":"2021-03-19 23:40:32","isExist":null},{"id":103,"question":"跟女友买房好吗，房子我出钱的多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:40:07","updateTime":"2021-03-19 23:40:07","isExist":null},{"id":101,"question":"周六加班要考虑什么东西","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:39:28","updateTime":"2021-03-19 23:39:28","isExist":null},{"id":100,"question":"一楼租房有什么坏处","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:39:12","updateTime":"2021-03-19 23:39:12","isExist":null},{"id":99,"question":"使用纸皮箱装东西好用吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:38:42","updateTime":"2021-03-19 23:38:42","isExist":null},{"id":98,"question":"搬家如何整理比较好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:38:18","updateTime":"2021-03-19 23:38:18","isExist":null},{"id":97,"question":"参加很累","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:28:18","updateTime":"2021-03-19 23:28:18","isExist":null},{"id":96,"question":"444","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:25:22","updateTime":"2021-03-19 23:25:22","isExist":null},{"id":95,"question":"123","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-19 23:25:18","updateTime":"2021-03-19 23:25:18","isExist":null},{"id":94,"question":"为什么深圳这么多民房","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:57:36","updateTime":"2021-03-18 13:57:36","isExist":null},{"id":93,"question":"租房签合同，如果升价很高，违约退房，装修费是不是亏很多","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:57:19","updateTime":"2021-03-18 13:57:19","isExist":null},{"id":92,"question":"附近很吵是什么感受","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:56:37","updateTime":"2021-03-18 13:56:37","isExist":null},{"id":91,"question":"培养一名员工需要多久","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:56:25","updateTime":"2021-03-18 13:56:25","isExist":null},{"id":90,"question":"如何找到更好的工作","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:56:11","updateTime":"2021-03-18 13:56:11","isExist":null},{"id":89,"question":"没房就不能结婚吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:55:58","updateTime":"2021-03-18 13:55:58","isExist":null},{"id":88,"question":"恋爱中最反感就是骗人吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:54:47","updateTime":"2021-03-18 13:54:47","isExist":null},{"id":87,"question":"为什么其它颜色头发最终变成黄色","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:54:31","updateTime":"2021-03-18 13:54:31","isExist":null},{"id":86,"question":"很多发型师不会染其它颜色的吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:54:18","updateTime":"2021-03-18 13:54:18","isExist":null},{"id":85,"question":"染头发除了黄色，其它颜色值的染吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:53:59","updateTime":"2021-03-18 13:53:59","isExist":null},{"id":84,"question":"什么情况不退押金","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:53:29","updateTime":"2021-03-18 13:53:29","isExist":null},{"id":83,"question":"中介为什么那么坑，对于租房","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:53:20","updateTime":"2021-03-18 13:53:20","isExist":null},{"id":82,"question":"民房租好吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:53:11","updateTime":"2021-03-18 13:53:11","isExist":null},{"id":81,"question":"什么橘子好吃","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:52:27","updateTime":"2021-03-18 13:52:27","isExist":null},{"id":80,"question":"沃柑为什么那么甜","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:52:18","updateTime":"2021-03-18 13:52:18","isExist":null},{"id":78,"question":"沃柑两月不烂","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:52:03","updateTime":"2021-03-18 13:52:03","isExist":null},{"id":77,"question":"不得向大学生发放互联网消费贷","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:51:25","updateTime":"2021-03-18 13:51:25","isExist":null},{"id":76,"question":"预计清明假期或有1亿人次出游","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:51:16","updateTime":"2021-03-18 13:51:16","isExist":null},{"id":75,"question":"如果我有小三，那么她一定会很伤心","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:51:03","updateTime":"2021-03-18 13:51:03","isExist":null},{"id":74,"question":"有哪些纪念日","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:50:03","updateTime":"2021-03-18 13:50:03","isExist":null},{"id":73,"question":"不承担责任不代表没有责任","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:49:14","updateTime":"2021-03-18 13:49:14","isExist":null},{"id":72,"question":"新官三任三把火","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:48:41","updateTime":"2021-03-18 13:48:41","isExist":null},{"id":70,"question":"广东最出名的菜是白切鸡吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:46:13","updateTime":"2021-03-18 13:46:13","isExist":null},{"id":69,"question":"胖的女生看起来如何","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:45:54","updateTime":"2021-03-18 13:45:54","isExist":null},{"id":68,"question":"你会什么方言，讲下你好","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:45:41","updateTime":"2021-03-18 13:45:41","isExist":null},{"id":67,"question":"印度的看起来像什么地方","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:45:30","updateTime":"2021-03-18 13:45:30","isExist":null},{"id":66,"question":"如何祛痘不同脸的位置","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:45:01","updateTime":"2021-03-18 13:45:01","isExist":null},{"id":65,"question":"搜狗输入法和百度输入法哪个好用","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:44:44","updateTime":"2021-03-18 13:44:44","isExist":null},{"id":64,"question":"艾滋病能通过口传染吗","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:44:31","updateTime":"2021-03-18 13:44:31","isExist":null},{"id":63,"question":"你会唱什么歌曲","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:43:40","updateTime":"2021-03-18 13:43:40","isExist":null},{"id":62,"question":"晚上加班太久感觉很饿啊","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:42:45","updateTime":"2021-03-18 13:42:45","isExist":null},{"id":59,"question":"手部老是起肿什么原因","simplecontent":"","content":"","filterContent":null,"type":"语言","status":0,"createTime":"2021-03-18 13:41:28","updateTime":"2021-03-18 13:41:28","isExist":null}],"msg":null}